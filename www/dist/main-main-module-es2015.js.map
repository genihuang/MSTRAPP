{"version":3,"sources":["./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-action.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-config.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-datefield.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-menu.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-sidebar.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-tabs.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-tree.js","./node_modules/@angular/cdk/esm2015/tree.js","./src/app/main/content/content.component.html","./src/app/main/main.component.html","./src/app/main/menu/menu.component.html","./src/app/main/content/content.component.css","./src/app/main/content/content.component.ts","./src/app/main/main-routing.module.ts","./src/app/main/main.component.css","./src/app/main/main.component.ts","./src/app/main/main.module.ts","./src/app/main/menu/menu.component.css","./src/app/main/menu/menu.component.ts","./src/app/service/menu.service.ts"],"names":[],"mappings":"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pN;;AAExD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB,oDAAoD;AACxE,yBAAyB,kCAAkC;AAC3D,wBAAwB,iDAAiD;AACzE,6BAA6B,iCAAiC;AAC9D;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAAO;AACzC;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,4BAA4B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,2BAA2B,6DAAc;;AAEzC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE;AACpG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,gCAAgC;AAC9F;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,kCAAkC;AAChG;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,kCAAkC;AAChG;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,mCAAmC;AACjG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA;AACA,yCAAyC,KAAK;AAC9C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,yCAAyC,KAAK,0BAA0B,MAAM;AAC9E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB,kBAAkB;AAChF,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,uDAAQ,EAAE,GAAG,OAAO,qDAAM,2BAA2B,GAAG;AACjG,KAAK,OAAO,8DAAQ;AACpB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,4BAA4B,6DAAc;;AAE1C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,iCAAiC,uCAAuC,wDAAS;AACjF;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB,0BAA0B,oEAAc;AACxC;AACA,qBAAqB,wDAAwD;AAC7E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,6BAA6B,2CAA2C;AACxE,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wDAAwD,SAAS;AACjE;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wDAAwD,SAAS;AACjE;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2DAAY;AACnD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,sDAAsD,2DAAI;AAC1D,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,mJAAmJ,yoBAAyoB,qBAAqB,+EAA+E,mqBAAmqB,mBAAmB,oUAAoU,qBAAqB,6YAA6Y,qBAAqB;AACjzE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iCAAiC,sEAAuB;AACxD,4EAA4E,kBAAkB,SAAS,cAAc,kBAAkB,UAAU,2BAA2B,uBAAuB,eAAe,2BAA2B,eAAe,+BAA+B,aAAa,mBAAmB,uBAAuB,sBAAsB,WAAW,YAAY,cAAc,eAAe,gBAAgB,cAAc,kBAAkB,cAAc,iCAAiC,yDAAyD,yBAAyB,WAAW,0FAA0F,cAAc,gBAAgB,8NAA8N,yBAAyB,cAAc,qGAAqG,4CAA4C,+HAA+H,cAAc,qIAAqI,sBAAsB,mCAAmC,aAAa,mBAAmB,uBAAuB,sBAAsB,WAAW,YAAY,cAAc,eAAe,gBAAgB,cAAc,kBAAkB,cAAc;AAChnD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,qDAAM;AAClB;AACA;AACA,aAAa,OAAO,oDAAK,EAAE;AAC3B,YAAY,OAAO,oDAAK,EAAE;AAC1B,kBAAkB,OAAO,oDAAK,EAAE;AAChC,qBAAqB,OAAO,oDAAK,EAAE;AACnC,eAAe,OAAO,oDAAK,EAAE;AAC7B,8BAA8B,OAAO,oDAAK,EAAE;AAC5C,kBAAkB,OAAO,oDAAK,EAAE;AAChC,qBAAqB,OAAO,oDAAK,EAAE;AACnC,sBAAsB,OAAO,oDAAK,EAAE;AACpC,2BAA2B,OAAO,qDAAM,EAAE;AAC1C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA;AACA,oCAAoC,2DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,kEAAW;AAC5B;AACA;AACA,iBAAiB,+DAAQ;AACzB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA;AACA,iBAAiB,8DAAO;AACxB;AACA;AACA;AACA;AACA,iBAAiB,gEAAS;AAC1B;AACA;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,6BAA6B,qBAAqB;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,+PAA+P,YAAY;AAC3Q;AACA,iCAAiC,sEAAuB;AACxD,6CAA6C,iBAAiB,yBAAyB,WAAW,0BAA0B,kBAAkB,cAAc,eAAe,iBAAiB,YAAY,gBAAgB;AACxN,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,uDAAQ,EAAE,GAAG,OAAO,qDAAM,4BAA4B,GAAG;AACrG,KAAK,oCAAoC,OAAO,uDAAQ,EAAE,GAAG;AAC7D,KAAK,OAAO,iEAAc,gBAAgB,OAAO,uDAAQ,EAAE;AAC3D;AACA;AACA,kBAAkB,OAAO,oDAAK,EAAE;AAChC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,eAAe,OAAO,oDAAK,EAAE;AAC7B,eAAe,OAAO,oDAAK,EAAE;AAC7B,kBAAkB,OAAO,oDAAK,EAAE;AAChC,sBAAsB,OAAO,qDAAM,EAAE;AACrC,sBAAsB,OAAO,qDAAM,EAAE;AACrC,wBAAwB,OAAO,qDAAM,EAAE;AACvC,uBAAuB,OAAO,wDAAS,oCAAoC;AAC3E;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA,oCAAoC,2DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,kEAAW;AAC5B;AACA;AACA,iBAAiB,+DAAQ;AACzB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA,iBAAiB,8DAAO;AACxB;AACA;AACA;AACA,iBAAiB,gEAAS;AAC1B;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oCAAoC,0CAA0C;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD,6CAA6C,iBAAiB,yBAAyB,WAAW,iEAAiE,wBAAwB,uGAAuG,gBAAgB,sGAAsG,iBAAiB;AACza,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,oCAAoC,OAAO,uDAAQ,EAAE,GAAG;AAC7D,KAAK,OAAO,iEAAc,gBAAgB,OAAO,uDAAQ,EAAE;AAC3D;AACA;AACA,kBAAkB,OAAO,oDAAK,EAAE;AAChC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,eAAe,OAAO,oDAAK,EAAE;AAC7B,eAAe,OAAO,oDAAK,EAAE;AAC7B,kBAAkB,OAAO,oDAAK,EAAE;AAChC,sBAAsB,OAAO,qDAAM,EAAE;AACrC,oBAAoB,OAAO,qDAAM,EAAE;AACnC,wBAAwB,OAAO,qDAAM,EAAE;AACvC,uBAAuB,OAAO,wDAAS,oCAAoC;AAC3E;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA;AACA;AACA,oCAAoC,2DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,kEAAW;AAC5B;AACA;AACA,iBAAiB,+DAAQ;AACzB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA,iBAAiB,8DAAO;AACxB;AACA;AACA;AACA,iBAAiB,gEAAS;AAC1B;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qCAAqC,4CAA4C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD,6CAA6C,iBAAiB,yBAAyB,WAAW,iEAAiE,kBAAkB,uGAAuG,gBAAgB,sGAAsG,iBAAiB;AACna,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,uDAAQ,EAAE,GAAG,OAAO,qDAAM,4BAA4B,GAAG;AACrG,KAAK,oCAAoC,OAAO,uDAAQ,EAAE,GAAG;AAC7D,KAAK,OAAO,iEAAc,gBAAgB,OAAO,uDAAQ,EAAE;AAC3D;AACA;AACA,kBAAkB,OAAO,oDAAK,EAAE;AAChC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,eAAe,OAAO,oDAAK,EAAE;AAC7B,eAAe,OAAO,oDAAK,EAAE;AAC7B,kBAAkB,OAAO,oDAAK,EAAE;AAChC,sBAAsB,OAAO,qDAAM,EAAE;AACrC,qBAAqB,OAAO,qDAAM,EAAE;AACpC,wBAAwB,OAAO,qDAAM,EAAE;AACvC,uBAAuB,OAAO,wDAAS,oCAAoC;AAC3E;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,gCAAgC;AACvD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,kBAAkB,gBAAgB,UAAU,eAAe;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAg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;AACxB,KAAK,OAAO,qDAAM;AAClB;AACA;AACA,iBAAiB,OAAO,wDAAS,gCAAgC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAY;AAC/C;AACA;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kDAAY;AAC9C;AACA;AACA;AACA,mCAAmC,6CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,4BAA4B;AAChD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,mEAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2DAAI;AAC1D,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,kEAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,mDAAK,mGAAmG,6DAAM;AACtH,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mCAAmC,6DAAM;AACzC,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6EAA6E,sCAAsC,GAAG,qCAAqC;AAC3J,mCAAmC,mCAAmC,GAAG,wCAAwC;AACjH,mCAAmC,oCAAoC,GAAG,mCAAmC;AAC7G,mCAAmC,iCAAiC,GAAG,sCAAsC;AAC7G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,qDAAM,EAAE;AACpB,KAAK,OAAO,+DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,qDAAM,0CAA0C,GAAG;AAC/F,KAAK,oCAAoC,OAAO,uDAAQ,EAAE,GAAG;AAC7D,KAAK,OAAO,iEAAc,gBAAgB,OAAO,uDAAQ,EAAE,GAAG;AAC9D,KAAK,gCAAgC,OAAO,uDAAQ,EAAE,GAAG,OAAO,qDAAM,SAAS,wDAAQ,IAAI;AAC3F;AACA;AACA,eAAe,OAAO,oDAAK,EAAE;AAC7B,iBAAiB,OAAO,oDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,oBAAoB,OAAO,qDAAM,EAAE;AACnC,qBAAqB,OAAO,qDAAM,EAAE;AACpC,kBAAkB,OAAO,oDAAK,EAAE;AAChC,oBAAoB,OAAO,qDAAM,qBAAqB;AACtD,oBAAoB,OAAO,qDAAM,qBAAqB;AACtD,cAAc,OAAO,oDAAK,EAAE;AAC5B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,iEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,4DAAa;AAC1B,iBAAiB,iEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C;AACA;AACA;AACA,6BAA6B,2DAAY;AACzC;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA,mCAAmC,2DAAY;AAC/C;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB,uCAAuC,kDAAY;AACnD,mCAAmC,kDAAY;AAC/C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB,sBAAsB,+CAA+C;AAC7F,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wBAAwB,oBAAoB,0CAA0C;AACtF,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wBAAwB,oBAAoB,0CAA0C;AACtF,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA;AACA,0BAA0B,yDAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,kBAAkB;AACjC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,kBAAkB;AACjC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,oFAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,4BAA4B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,yBAAyB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8CAA8C,iEAAU;AACxD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA,wBAAwB,oEAAoE;AAC5F,qBAAqB,UAAU,+EAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB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AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEktB;;AAEltB,sD;;;;;;;;;;;;AC36GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACO;AAC4D;AACpD;;AAE9D;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,mFAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA,iBAAiB;AACjB,0CAA0C,cAAc,kBAAkB,eAAe,SAAS,OAAO,QAAQ,SAAS,UAAU,cAAc,gBAAgB,yBAAyB,cAAc,eAAe,eAAe,iBAAiB,UAAU,wCAAwC,eAAe,yDAAyD,4CAA4C,kBAAkB,UAAU,4FAA4F,aAAa,gCAAgC,8CAA8C,kBAAkB;AACnoB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,yBAAyB;AACjD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,gCAAgC,aAAa,mBAAmB,sBAAsB,cAAc,wBAAwB,qBAAqB,gBAAgB,UAAU,gBAAgB,YAAY,SAAS,eAAe,iBAAiB,gBAAgB,eAAe,WAAW,qBAAqB,aAAa,YAAY,yBAAyB,kBAAkB,gBAAgB,yBAAyB,qBAAqB,WAAW,+CAA+C,kCAAkC,0BAA0B,6BAA6B,yBAAyB,yCAAyC,yBAAyB,qBAAqB,cAAc,wBAAwB,SAAS,+CAA+C,wDAAwD,kBAAkB,YAAY,6BAA6B,aAAa,uBAAuB,eAAe,6BAA6B,qBAAqB,WAAW,YAAY,iBAAiB,cAAc,eAAe,uBAAuB,gBAAgB,mBAAmB,uBAAuB,cAAc,gBAAgB,cAAc,cAAc,gCAAgC,kBAAkB,YAAY,gBAAgB,cAAc;AACtxC,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,mEAAY;AACpD;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEqI;;AAErI,iD;;;;;;;;;;;;ACzQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACP;AACqG;AAC7E;AACa;;AAEpF;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,kFAAoB;AAC7C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4BAA4B,2DAAK;AACjC;AACA;AACA;AACA,iCAAiC,gEAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iEAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,kBAAkB,YAAY,sBAAsB,aAAa,cAAc,YAAY,kBAAkB,gBAAgB,yBAAyB,MAAM,WAAW,kBAAkB,gBAAgB,0BAA0B,cAAc,2CAA2C,kCAAkC,0BAA0B,oBAAoB,aAAa,eAAe,yBAAyB,cAAc,uDAAuD,WAAW,cAAc,cAAc,oBAAoB,kBAAkB,YAAY,MAAM,SAAS,aAAa,cAAc,uBAAuB,mBAAmB,wBAAwB,qBAAqB,gBAAgB,YAAY,gBAAgB,eAAe,SAAS,kBAAkB,cAAc,UAAU,UAAU,4BAA4B,aAAa,eAAe,oBAAoB,gBAAgB,cAAc,sCAAsC,SAAS,2BAA2B,wBAAwB,qBAAqB,gBAAgB,YAAY,gBAAgB,eAAe,SAAS,UAAU,eAAe,cAAc,UAAU,mBAAmB,eAAe,iCAAiC,WAAW,kCAAkC,cAAc,0EAA0E,6BAA6B,kBAAkB,8CAA8C,kBAAkB,6CAA6C,SAAS,iBAAiB,YAAY,cAAc,aAAa,gBAAgB,sBAAsB,yBAAyB,6CAA6C,4BAA4B,iDAAiD,2BAA2B,4BAA4B,gBAAgB,iBAAiB,mCAAmC,qBAAqB,cAAc,gBAAgB,gBAAgB,iBAAiB;AAC39D,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,mBAAmB,OAAO,oDAAM,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,6BAA6B,OAAO,mDAAK,EAAE;AAC3C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,mEAAY;AACpD;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE4G;;AAE5G,oD;;;;;;;;;;;;AC5WA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACqC;AAChC;AAC6D;AAC7D;AACY;AAC6M;AACzL;;AAEpF;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kCAAkC,kEAAc;AAChD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,qCAAqC,OAAO,oDAAM,2BAA2B,GAAG,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE;AACtH;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,wBAAwB,OAAO,uDAAS,SAAS,yDAAW,IAAI;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,mFAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD,gCAAgC,cAAc;AAC9C,aAAa;AACb;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,cAAc,OAAO,mDAAK,EAAE;AAC5B,oBAAoB,OAAO,uDAAS,SAAS,mEAAe,IAAI;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,2BAA2B;AAC1D;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD,gCAAgC,0DAAY;AAC5C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iBAAiB,0DAAI;AACrB;AACA;AACA;AACA,iBAAiB,yDAAG;AACpB;AACA;AACA;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAK,sBAAsB,2DAAK;AACnE;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD,gCAAgC,cAAc,eAAe,aAAa,qBAAqB,uBAAuB,eAAe;AACrI,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,cAAc,OAAO,6DAAe,gCAAgC;AACpE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,iCAAiC,iDAAY;AAC7C;AACA;AACA;AACA,qCAAqC,iDAAY;AACjD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,kFAAoB;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,mFAAqB;AACrD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qCAAqC,kDAAK;AAC1C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;A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ACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,gEAAY;AAChC,oBAAoB,6EAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE8M;;AAE9M,iD;;;;;;;;;;;;ACh1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACI;AACU;AACmH;AACjJ;AACuB;AACC;AACD;AACsE;;AAE5H;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,8BAA8B,yDAAO;AACrC;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,6BAA6B,UAAU,yDAAO,gCAAgC;AAC9E,wCAAwC,cAAc,eAAe,cAAc,gBAAgB;AACnG,aAAa;AACb;AACA;AACA,mBAAmB,OAAO,uDAAS,sCAAsC;AACzE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,kCAAkC,6DAAW;AAC7C;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,UAAU,6DAAW,oCAAoC;AACtF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qCAAqC,gEAAc;AACnD;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,6BAA6B,UAAU,gEAAc,uCAAuC;AAC5F,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,yBAAyB;AACjD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gEAAS;AAC3C,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sBAAsB,kFAAoB;AAC1C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,kFAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,kFAAoB;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,oCAAoC,EAAE,iBAAiB;AACjF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,6DAAW,EAAE;AACzB,KAAK,OAAO,yDAAO,EAAE;AACrB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,aAAa,OAAO,mDAAK,gCAAgC;AACzD,cAAc,OAAO,mDAAK,sCAAsC;AAChE,cAAc,OAAO,mDAAK,sCAAsC;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,wCAAwC,mEAAiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,UAAU,mEAAiB,0CAA0C;AAClG,aAAa;AACb;AACA;AACA,iBAAiB,OAAO,mDAAK,wCAAwC;AACrE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,+DAAa,EAAE,4DAAY;AACrD;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,WAAW,gBAAgB,oDAAM;AAChD,2BAA2B,EAAE,qBAAqB,SAAS,oEAAoE;AAC/H;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAI;AACvC,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,8DAA8D;AAC9D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mEAAU;AAC7C;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA,kCAAkC,oDAAe;AACjD,iCAAiC,oDAAe;AAChD,yBAAyB,oDAAe;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,yBAAyB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK,kBAAkB,0DAAG;AACzC,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iEAAe;AAC/C;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE+O;;AAE/O,iD;;;;;;;;;;;;AC3jBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACwE;AACR;AACP;AAC+N;AACrO;AACiC;AACnC;AACF;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uEAAc;AAChD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yFAAyF;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,0CAA0C,+CAAU;AACpD;AACA;AACA,+BAA+B,2DAAI,KAAK,6DAAM,aAAa,EAAE;AAC7D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,sCAAsC,4DAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,sCAAsC,GAAG,OAAO,sDAAQ,EAAE;AAC5G;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAe,EAAE,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE;AACtD,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oDAAoD,EAAE;AACtD,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,6EAAY;AACxB;AACA;AACA,6CAA6C,+CAAU;AACvD;AACA;AACA;AACA,yBAAyB,+CAAE;AAC3B;AACA;AACA,qDAAqD,gEAAS;AAC9D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,iDAAiD,EAAE,kCAAkC,EAAE;AACvF;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2DAA2D,EAAE;AAC7D,+CAA+C,EAAE;AACjD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,6DAAe,EAAE;AAC7B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,mBAAmB,OAAO,uDAAS,6BAA6B,eAAe,IAAI;AACnF,iBAAiB,OAAO,6DAAe,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,sDAAsD,EAAE;AACxD;AACA,8CAA8C,+CAAU;AACxD,mCAAmC,gEAAS;AAC5C;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,aAAa;AAC7C,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iDAAiD,EAAE;AACnD;AACA,0CAA0C,+CAAU;AACpD,+BAA+B,gEAAS;AACxC;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,qCAAqC,gEAAS;AAC9C;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,uDAAuD;AAC5E,qBAAqB;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gBAAgB;AACrB,KAAK,OAAO,6DAAe;AAC3B;AACA;AACA,kBAAkB,OAAO,6DAAe;AACxC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAS;AACtC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kCAAkC,EAAE,KAAK,kFAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,kFAAoB;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8CAA8C,qBAAqB,EAAE,iBAAiB;AACtF;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,oBAAoB;AACzB,KAAK,gBAAgB;AACrB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,aAAa,OAAO,mDAAK,iCAAiC;AAC1D,cAAc,OAAO,mDAAK,uCAAuC;AACjE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,mBAAmB,mFAAqB,QAAQ;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB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","file":"main-main-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Directive, NgModule } from '@angular/core';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxActionComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selected = false;\n        this._expandable = false;\n        this._expanded = false;\n    }\n    /**\n     * Whether this action is selected or not.\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get selected() {\n        return this._selected;\n    }\n    /**\n     * Whether this action is expandable or not. Will add a caret icon.\n     * @param {?} value\n     * @return {?}\n     */\n    set expandable(value) {\n        this._expandable = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get expandable() {\n        return this._expandable;\n    }\n    /**\n     * Whether this action is expanded or not.\n     * Only works in combination with the `expandable` option set to `true`.\n     * @param {?} value\n     * @return {?}\n     */\n    set expanded(value) {\n        this._expanded = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get expanded() {\n        return this._expanded;\n    }\n}\nNxActionComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: '[nxAction]',\n                template: \"<div class=\\\"nx-action__wrapper\\\">\\n  <ng-container *ngIf=\\\"expandable\\\">\\n    <nx-icon class=\\\"nx-action__expand-icon\\\" name=\\\"chevron-right\\\"></nx-icon>\\n  </ng-container>\\n  <ng-content select=\\\"[nxActionIcon]\\\"></ng-content>\\n  <span class=\\\"nx-action__label\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</div>\\n\",\n                host: {\n                    '[class.is-expanded]': 'expanded',\n                    '[class.is-selected]': 'selected',\n                    '[class.is-expandable]': 'expandable',\n                    'class': 'nx-action'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host(.nx-action){display:block;background-color:#f5f5f5;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;box-shadow:none;border:none;margin:0;cursor:pointer;line-height:24px;font-size:16px;font-weight:400;padding:8px 16px 8px 0;width:100%;color:#414141;text-decoration:none}:host(.nx-action):hover{background-color:#ececec}:host(.nx-action).is-expanded{font-weight:700}:host(.nx-action).is-expanded .nx-action__expand-icon{-webkit-transform:rotateZ(90deg);transform:rotateZ(90deg)}:host(.nx-action).is-expandable .nx-action__wrapper::before{flex:0 1 32px;max-width:8px;min-width:4px}:host(.nx-action).is-selected{background-color:#007ab3;color:#fff;font-weight:700}:host(.nx-action)[nxTreeNodePadding] .nx-action__wrapper::before{flex-shrink:0}:host(.nx-action)::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]):focus{box-shadow:inset 0 0 0 4px #009de6;border-radius:8px}:host-context([data-whatinput=keyboard]):focus.is-selected{box-shadow:inset 0 0 0 4px #009de6,inset 0 0 0 6px #fff}.nx-action__expand-icon{display:flex;justify-content:center;transition:.2s;-webkit-transform:rotateZ(0);transform:rotateZ(0);width:16px;height:24px;margin-right:8px;flex:0 0 auto;font-size:22px}.nx-action__wrapper{display:flex;align-items:center;position:relative;overflow:hidden}.nx-action__wrapper::before{content:'';display:block;flex:0 1 32px;min-width:16px;height:1em}::ng-deep .nx-action__icon{margin-right:16px;height:24px;font-weight:400;flex:0 0 auto;position:relative;top:-1px}.nx-action__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 50%;text-align:left;line-height:1;padding:4px 0}\"]\n            }] }\n];\n/** @nocollapse */\nNxActionComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxActionComponent.propDecorators = {\n    selected: [{ type: Input }],\n    expandable: [{ type: Input }],\n    expanded: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxActionIconDirective {\n}\nNxActionIconDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxActionIcon]',\n                host: {\n                    'class': 'nx-action__icon'\n                }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxActionModule {\n}\nNxActionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [NxIconModule, CommonModule],\n                declarations: [NxActionComponent, NxActionIconDirective],\n                exports: [NxActionComponent, NxActionIconDirective]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxActionModule, NxActionComponent, NxActionIconDirective };\n\n//# sourceMappingURL=allianz-ngx-ndbx-action.js.map","import { NgModule } from '@angular/core';\nimport { FORMFIELD_DEFAULT_OPTIONS } from '@allianz/ngx-ndbx/formfield';\nimport { LABEL_DEFAULT_OPTIONS, ERROR_DEFAULT_OPTIONS } from '@allianz/ngx-ndbx/base';\nimport { DATEPICKER_DEFAULT_OPTIONS } from '@allianz/ngx-ndbx/datefield';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// expert presets\n/** @type {?} */\nconst formfieldExpertOptions = {\n    appearance: 'outline',\n    nxFloatLabel: 'always'\n};\n/** @type {?} */\nconst errorExpertOptions = { appearance: 'text' };\n/** @type {?} */\nconst labelExpertOptions = { size: 'small' };\n/** @type {?} */\nconst datepickerExpertOptions = { toggleIconTabindex: -1 };\nconst ɵ0 = formfieldExpertOptions, ɵ1 = labelExpertOptions, ɵ2 = datepickerExpertOptions, ɵ3 = errorExpertOptions;\n// should not be a singleton since different tokens can be used in seperate modules\nclass NxExpertModule {\n}\nNxExpertModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    { provide: FORMFIELD_DEFAULT_OPTIONS, useValue: ɵ0 },\n                    { provide: LABEL_DEFAULT_OPTIONS, useValue: ɵ1 },\n                    { provide: DATEPICKER_DEFAULT_OPTIONS, useValue: ɵ2 },\n                    { provide: ERROR_DEFAULT_OPTIONS, useValue: ɵ3 }\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxExpertModule };\n\n//# sourceMappingURL=allianz-ngx-ndbx-config.js.map","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { NxFormfieldComponent } from '@allianz/ngx-ndbx/formfield';\nimport { NX_INPUT_VALUE_ACCESSOR } from '@allianz/ngx-ndbx/input';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { take, filter } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Inject, Injectable, Optional, NgModule, LOCALE_ID, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, NgZone, ChangeDetectorRef, ViewChild, ViewContainerRef, Directive, forwardRef, ContentChild } from '@angular/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst NX_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @abstract\n * @template D\n */\nclass NxDateAdapter {\n    constructor() {\n        this.locale = 'de-DE';\n        this._localeChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * @param {?} first\n     * @param {?} second\n     * @return {?}\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            const firstValid = this.isValid(first);\n            /** @type {?} */\n            const secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid === secondValid;\n        }\n        return first === second;\n    }\n    /**\n     * @param {?} first\n     * @param {?} second\n     * @return {?}\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next(this.locale);\n    }\n    /**\n     * @return {?}\n     */\n    getLocale() {\n        return this.locale;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst NX_DATE_LOCALE = new InjectionToken('nx-date-locale');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * \\@docs-private\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NxNativeDateAdapter extends NxDateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from it's utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        const result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() !== month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value === 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NxNativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) !== ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                const date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNxNativeDateAdapter.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNxNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NX_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NX_DATE_FORMATS = new InjectionToken('nx-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NX_DATE_LOCALE_PROVIDER = { provide: NX_DATE_LOCALE, useExisting: LOCALE_ID };\nclass NativeDateModule {\n}\nNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: NxDateAdapter, useClass: NxNativeDateAdapter },\n                    NX_DATE_LOCALE_PROVIDER\n                ],\n            },] }\n];\nconst ɵ0$1 = NX_NATIVE_DATE_FORMATS;\nclass NxNativeDateModule {\n}\nNxNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: NX_DATE_FORMATS, useValue: ɵ0$1 }],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction createMissingDateImplError(provider) {\n    return Error(`NxDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: NxNativeDateModule, NxMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass NxDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (visible in UI). */\n        /**\n         * @deprecated Use `switchToMultiYearViewLabel` instead\n         */\n        this.calendarHeader = 'Choose a date';\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n}\nNxDatepickerIntl.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nfunction createMissingDateImplError$1(provider) {\n    return Error(`NxDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: NxNativeDateModule, NxMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass NxCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?=} ariaLabel\n     * @param {?=} enabled\n     */\n    constructor(value, displayValue, ariaLabel, enabled) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass NxCalendarBodyComponent {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * Whether to allow selection of disabled cells.\n         */\n        this.allowDisabledSelection = false;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The items to display in the first row in the offset space.\n         */\n        this.previousItems = [];\n        /**\n         * The items to display in the last row in the offset space.\n         */\n        this.followingItems = [[]];\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (!this.allowDisabledSelection && !cell.enabled) {\n            return;\n        }\n        this.selectedValueChange.emit(cell.value);\n    }\n    /**\n     * The number of blank cells to put at the beginning for the first row.\n     * @return {?}\n     */\n    get _firstRowOffset() {\n        return this.rows && this.rows.length && this.rows[0].length ?\n            this.numCols - this.rows[0].length : 0;\n    }\n    /**\n     * The number of blank cells to put at the end of the last filled row.\n     * @return {?}\n     */\n    get _lastRowOffset() {\n        return this.rows && this.rows.length && this.rows[this.rows.length - 1].length ?\n            this.numCols - this.rows[this.rows.length - 1].length : 0;\n    }\n    /**\n     * The index of the last row.\n     * @return {?}\n     */\n    get _lastRowIndex() {\n        return this.rows && this.rows.length ?\n            this.rows.length - 1 : 0;\n    }\n    /**\n     * The following full rows to display and fill up the calendar.\n     * @return {?}\n     */\n    get _followingRows() {\n        if (this.followingItems && this.followingItems.length) {\n            // if first row is not a full row => display them in offset space\n            if (this.followingItems[0].length < this.numCols) {\n                return this.followingItems.slice(1, this.followingItems.length);\n            }\n            return this.followingItems;\n        }\n        return [];\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber === this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._elementRef.nativeElement.querySelector('.nx-calendar-body-active').focus();\n            }));\n        }));\n    }\n}\nNxCalendarBodyComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: '[nx-calendar-body]',\n                template: \"<!-- Create the first and last row separately so we can include special spacer cells. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <ng-container *ngIf=\\\"rowIndex === 0\\\">\\n    <td *ngFor=\\\"let item of previousItems\\\"\\n        aria-hidden=\\\"true\\\"\\n        class=\\\"nx-calendar-adjacent-cell\\\">\\n      <div aria-hidden=\\\"true\\\"\\n           class=\\\"nx-calendar-adjacent-cell-content\\\">\\n        {{ item.displayValue }}\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"nx-calendar-body-cell\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [class.nx-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.nx-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      (click)=\\\"_cellClicked(item)\\\"\\n      [style.width.%]=\\\"100 / numCols\\\">\\n    <div class=\\\"nx-calendar-body-cell-content\\\"\\n         [class.nx-calendar-body-selected]=\\\"selectedValue === item.value\\\"\\n         [class.nx-calendar-body-today]=\\\"todayValue === item.value\\\">\\n      {{item.displayValue}}\\n    </div>\\n  </td>\\n\\n  <ng-container *ngIf=\\\"rowIndex === _lastRowIndex && _lastRowOffset\\\">\\n    <td *ngFor=\\\"let item of followingItems[0]\\\"\\n        aria-hidden=\\\"true\\\"\\n        class=\\\"nx-calendar-adjacent-cell\\\">\\n      <div aria-hidden=\\\"true\\\"\\n           class=\\\"nx-calendar-adjacent-cell-content\\\">\\n        {{ item.displayValue }}\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n</tr>\\n\\n<!-- \\n  if there are still elements remaining in 'following-elements', then create some extra rows\\n  to fill up the space\\n-->\\n<tr *ngFor=\\\"let row of _followingRows\\\"\\n    aria-hidden=\\\"true\\\">\\n  <td *ngFor=\\\"let item of row\\\"\\n      class=\\\"nx-calendar-adjacent-cell\\\">\\n    <div class=\\\"nx-calendar-adjacent-cell-content\\\">\\n      {{ item.displayValue }}\\n    </div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'nx-calendar-body',\n                    'role': 'grid',\n                    'attr.aria-readonly': 'true'\n                },\n                exportAs: 'nxCalendarBody',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".nx-calendar-adjacent-cell,.nx-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;vertical-align:text-bottom}.nx-calendar-body-cell{cursor:pointer}.nx-calendar-body-disabled{cursor:default}.nx-calendar-body-cell-content{display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:40px;height:40px;margin:0 auto;font-size:16px;font-weight:600;color:#414141;border-radius:50%;line-height:1;box-shadow:0 0 0 6px transparent}.nx-calendar-body-cell-content.nx-calendar-body-selected{background-color:#007ab3;color:#fff}.nx-calendar-body-disabled>.nx-calendar-body-cell-content:not(.nx-calendar-body-selected){color:#c2c2c2;font-weight:400}.nx-calendar-body-active:not(.nx-calendar-body-disabled)>.nx-calendar-body-cell-content:not(.nx-calendar-body-selected),:not(.nx-calendar-body-disabled):hover>.nx-calendar-body-cell-content:not(.nx-calendar-body-selected){background-color:#ececec;color:#414141}:host-context([data-whatinput=keyboard]) .nx-calendar-body-cell:focus .nx-calendar-body-cell-content{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host-context([data-whatinput=keyboard]) .nx-calendar-body-cell:focus.nx-calendar-body-disabled .nx-calendar-body-cell-content{color:#c2c2c2}:host-context([data-whatinput=keyboard]) .nx-calendar-body-cell:focus .nx-calendar-body-cell-content:not(.nx-calendar-body-selected){background-color:#fff}.nx-calendar-adjacent-cell-content{display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:40px;height:40px;margin:0 auto;font-size:16px;font-weight:400;color:#c2c2c2;border-radius:50%;line-height:1}\"]\n            }] }\n];\n/** @nocollapse */\nNxCalendarBodyComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nNxCalendarBodyComponent.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    numCols: [{ type: Input }],\n    allowDisabledSelection: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    previousItems: [{ type: Input }],\n    followingItems: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst DAYS_PER_WEEK = 7;\n/** @type {?} */\nconst TOTAL_DAYS_TO_DISPLAY = 6 * DAYS_PER_WEEK;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass NxMonthViewComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        /**\n         * Number of days that should be displayed in one row.\n         */\n        this._numCols = 7;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError$1('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError$1('MAT_DATE_FORMATS');\n        }\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        const weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n        this._focusActiveCell();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate !== date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -this._numCols);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._numCols);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @private\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._nxCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates NxCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            this._weeks[this._weeks.length - 1]\n                .push(new NxCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) === this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) === this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /**\n     * The last days of the previous month that should be displayed\n     * in the first row of the calendar.\n     * @return {?}\n     */\n    _getLastDaysOfPreviousMonth() {\n        /** @type {?} */\n        const firstDayOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        /** @type {?} */\n        const firstDayOfPreviousItems = this._dateAdapter.addCalendarDays(firstDayOfMonth, -this._firstWeekOffset);\n        return this._getRowOfDays(firstDayOfPreviousItems, this._firstWeekOffset);\n    }\n    /**\n     * The first days of the following month that should be displayed\n     * after the days of the current month. After filling up the last\n     * row of the current month, additional rows are added, so that a\n     * total of 42 days (6 rows/weeks) is displayed.\n     * @return {?}\n     */\n    _getFirstDaysOfFollowingMonth() {\n        /** @type {?} */\n        const followingDays = [];\n        /** @type {?} */\n        const firstDayOfNextMonth = this._dateAdapter.addCalendarMonths(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1), 1);\n        // there should be displayed a total of 7 * 6 items\n        /** @type {?} */\n        const followingDaysCount = TOTAL_DAYS_TO_DISPLAY - this._firstWeekOffset - this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const offsetItems = followingDaysCount % 7;\n        // add a non-full row to following rows.\n        // These items will fill up the last incomplete row of the current month.\n        if (offsetItems > 0) {\n            /** @type {?} */\n            const offsetRow = this._getRowOfDays(firstDayOfNextMonth, offsetItems);\n            followingDays.push(offsetRow);\n        }\n        /** @type {?} */\n        let remainingDays = followingDaysCount - offsetItems;\n        /** @type {?} */\n        let firstDayInRow = this._dateAdapter.addCalendarDays(firstDayOfNextMonth, offsetItems);\n        // fill remaining rows if needed\n        while (remainingDays > 0) {\n            followingDays.push(this._getRowOfDays(firstDayInRow, this._numCols));\n            firstDayInRow = this._dateAdapter.addCalendarDays(firstDayInRow, this._numCols);\n            remainingDays -= this._numCols;\n        }\n        return followingDays;\n    }\n    /**\n     * Returns a row with days, beginning with the date of `firstDayInRow`-parameter.\n     * The returned row contains `daysCount` elements.\n     * @param {?} firstDayInRow\n     * @param {?} daysCount\n     * @return {?}\n     */\n    _getRowOfDays(firstDayInRow, daysCount) {\n        /** @type {?} */\n        const nextRow = [];\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        for (let addDays = 0; addDays < daysCount; addDays++) {\n            /** @type {?} */\n            const day = this._dateAdapter.getDate(this._dateAdapter.addCalendarDays(firstDayInRow, addDays));\n            nextRow.push(new NxCalendarCell(day, dateNames[day - 1]));\n        }\n        return nextRow;\n    }\n}\nNxMonthViewComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-month-view',\n                template: \"<table class=\\\"nx-calendar-table\\\">\\n  <thead class=\\\"nx-calendar-table-head\\\">\\n    <tr>\\n      <th\\n        class=\\\"nx-calendar-table-header\\\"\\n        *ngFor=\\\"let day of _weekdays\\\"\\n        [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr>\\n    <tr>\\n  </thead>\\n  <tbody nx-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [previousItems]=\\\"_getLastDaysOfPreviousMonth()\\\"\\n         [followingItems]=\\\"_getFirstDaysOfFollowingMonth()\\\"\\n         [todayValue]=\\\"_todayDate\\\"\\n         [numCols]=\\\"_numCols\\\"\\n         [selectedValue]=\\\"_selectedDate\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'nxMonthView',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".nx-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.nx-calendar-table-header{text-align:center;color:#c2c2c2;font-size:16px;line-height:24px;height:40px;font-weight:600}\"]\n            }] }\n];\n/** @nocollapse */\nNxMonthViewComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NX_DATE_FORMATS,] }] },\n    { type: NxDateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNxMonthViewComponent.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _nxCalendarBody: [{ type: ViewChild, args: [NxCalendarBodyComponent,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst yearsPerPage = 20;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass NxMultiYearViewComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError$1('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n        this._focusActiveCell();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const activeOffset = activeYear % yearsPerPage;\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        const month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @private\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._nxCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an NxCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        const yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new NxCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) === year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nNxMultiYearViewComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-multi-year-view',\n                template: \"<table class=\\\"nx-calendar-table\\\">\\n  <tbody nx-calendar-body\\n         allowDisabledSelection=\\\"true\\\"\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [selectedValue]=\\\"_selectedYear\\\"\\n         [numCols]=\\\"4\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'nxMultiYearView',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".nx-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}:host ::ng-deep .nx-calendar-body .nx-calendar-body-cell-content{margin:0 17.33333px 8px}:host ::ng-deep .nx-calendar-body tr .nx-calendar-body-cell:first-child .nx-calendar-body-cell-content{margin-left:8px}:host ::ng-deep .nx-calendar-body tr .nx-calendar-body-cell:last-child .nx-calendar-body-cell-content{margin-right:8px}\"]\n            }] }\n];\n/** @nocollapse */\nNxMultiYearViewComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NxDateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNxMultiYearViewComponent.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _nxCalendarBody: [{ type: ViewChild, args: [NxCalendarBodyComponent,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass NxYearViewComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        this._numCols = 3;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError$1('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError$1('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n        this._focusActiveCell();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._numCols);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, this._numCols);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        const monthNames = this._dateAdapter.getMonthNames('short');\n        this._months = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @private\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._nxCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) === this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an NxCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        const ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new NxCalendarCell(month, monthName, ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) === month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nNxYearViewComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-year-view',\n                template: \"<table class=\\\"nx-calendar-table\\\">\\n  <tbody nx-calendar-body\\n         allowDisabledSelection=\\\"true\\\"\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth\\\"\\n         [selectedValue]=\\\"_selectedMonth\\\"\\n         [numCols]=\\\"_numCols\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'nxYearView',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".nx-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}:host ::ng-deep .nx-calendar-body .nx-calendar-body-cell-content{margin:0 36px 8px}:host ::ng-deep .nx-calendar-body tr .nx-calendar-body-cell:first-child .nx-calendar-body-cell-content{margin-left:8px}:host ::ng-deep .nx-calendar-body tr .nx-calendar-body-cell:last-child .nx-calendar-body-cell-content{margin-right:8px}\"]\n            }] }\n];\n/** @nocollapse */\nNxYearViewComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NX_DATE_FORMATS,] }] },\n    { type: NxDateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNxYearViewComponent.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _nxCalendarBody: [{ type: ViewChild, args: [NxCalendarBodyComponent,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst yearsPerPage$1 = 20;\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass NxCalendarComponent {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError$1('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError$1('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get _activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get _periodButtonText() {\n        if (this._currentView === 'month') {\n            return this._dateAdapter.format(this._activeDate, this._dateFormats.display.monthYearLabel);\n        }\n        if (this._currentView === 'year') {\n            return this._dateAdapter.getYearName(this._activeDate);\n        }\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const firstYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear - activeYear % yearsPerPage$1, 0, 1));\n        /** @type {?} */\n        const lastYearInView = this._dateAdapter.getYearName(this._dateAdapter.createDate(activeYear + yearsPerPage$1 - 1 - activeYear % yearsPerPage$1, 0, 1));\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n    /**\n     * @return {?}\n     */\n    get _periodButtonLabel() {\n        return this._currentView === 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the the previous button.\n     * @return {?}\n     */\n    get _prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this._currentView];\n    }\n    /**\n     * The label for the the next button.\n     * @return {?}\n     */\n    get _nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this._currentView];\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._activeDate = this.startAt || this._dateAdapter.today();\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this.monthView || this.yearView || this.multiYearView;\n            if (view) {\n                view._init();\n            }\n        }\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this._activeDate = date;\n        this._currentView = view;\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    _changeViewClicked() {\n        this._currentView = this._currentView === 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    _previousClicked() {\n        this._activeDate = this._currentView === 'month' ?\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this._activeDate, this._currentView === 'year' ? -1 : -yearsPerPage$1);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    _nextClicked() {\n        this._activeDate = this._currentView === 'month' ?\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this._activeDate, this._currentView === 'year' ? 1 : yearsPerPage$1);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    _previousEnabled() {\n        if (!this.minDate) {\n            return true;\n        }\n        return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    _nextEnabled() {\n        return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this._currentView === 'month') {\n            return this._dateAdapter.getYear(date1) === this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) === this._dateAdapter.getMonth(date2);\n        }\n        if (this._currentView === 'year') {\n            return this._dateAdapter.getYear(date1) === this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage$1) ===\n            Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage$1);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nNxCalendarComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-calendar',\n                template: \"<div class=\\\"nx-calendar-header\\\">\\n  <div class=\\\"nx-calendar-controls\\\">\\n\\n    <button class=\\\"nx-calendar-previous-button\\\"\\n            [disabled]=\\\"!_previousEnabled()\\\" (click)=\\\"_previousClicked()\\\"\\n            [attr.aria-label]=\\\"_prevButtonLabel\\\">\\n            <nx-icon name=\\\"chevron-left\\\"></nx-icon>\\n    </button>\\n\\n    <span class=\\\"nx-calendar-period-label\\\">\\n      {{_periodButtonText}}\\n    </span>\\n\\n    <button class=\\\"nx-calendar-next-button\\\"\\n            [disabled]=\\\"!_nextEnabled()\\\" (click)=\\\"_nextClicked()\\\"\\n            [attr.aria-label]=\\\"_nextButtonLabel\\\">\\n            <nx-icon name=\\\"chevron-right\\\"></nx-icon>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"nx-calendar-view-controls\\\">\\n    <button\\n        class=\\\"nx-calendar-change-view-button\\\"\\n        (click)=\\\"_changeViewClicked()\\\" [attr.aria-label]=\\\"_periodButtonLabel\\\">\\n      {{_periodButtonLabel}}\\n    </button>\\n  </div>\\n</div>\\n\\n<div class=\\\"nx-calendar-content\\\" [ngSwitch]=\\\"_currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <nx-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"_activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (selectedChange)=\\\"_dateSelected($event)\\\"\\n      (_userSelection)=\\\"_userSelected()\\\">\\n  </nx-month-view>\\n\\n  <nx-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"_activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </nx-year-view>\\n\\n  <nx-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"_activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </nx-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'nx-calendar',\n                },\n                exportAs: 'nxCalendar',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".nx-calendar-content{width:280px;margin:16px auto 0}.nx-calendar-next-button,.nx-calendar-previous-button{background-color:transparent;border:none;cursor:pointer;padding:0;line-height:24px;font-size:24px;color:#006192}.nx-calendar-next-button:focus,.nx-calendar-previous-button:focus{outline:0}.nx-calendar-controls{display:flex;justify-content:center;height:24px}.nx-calendar-period-label{width:216px;font-size:20px;line-height:24px;font-weight:600;color:#414141;text-align:center;letter-spacing:.2px}.nx-calendar-view-controls{text-align:center;height:24px}.nx-calendar-change-view-button{border:none;background-color:transparent;cursor:pointer;margin:8px 0 0;color:#006192;font-size:16px;line-height:16px;font-weight:700;height:16px}.nx-calendar-change-view-button:focus{outline:0}:host-context([data-whatinput=keyboard]) .nx-calendar-change-view-button:focus,:host-context([data-whatinput=keyboard]) .nx-calendar-next-button:focus,:host-context([data-whatinput=keyboard]) .nx-calendar-previous-button:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}button::-moz-focus-inner{border:0}\"]\n            }] }\n];\n/** @nocollapse */\nNxCalendarComponent.ctorParameters = () => [\n    { type: NxDatepickerIntl },\n    { type: NxDateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NX_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nNxCalendarComponent.propDecorators = {\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [NxMonthViewComponent,] }],\n    yearView: [{ type: ViewChild, args: [NxYearViewComponent,] }],\n    multiYearView: [{ type: ViewChild, args: [NxMultiYearViewComponent,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst NX_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('nx-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER = {\n    provide: NX_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** @type {?} */\nconst DATEPICKER_DEFAULT_OPTIONS = new InjectionToken('DATEPICKER_DEFAULT_OPTIONS');\n/**\n * \\@docs-private\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * NxCalendarComponent directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @template D\n */\nclass NxDatepickerContentComponent {\n    /**\n     * @param {?} _intl\n     * @param {?} elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_intl, elementRef, _ngZone) {\n        this._intl = _intl;\n        this.elementRef = elementRef;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusActiveCell();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @private\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.elementRef.nativeElement.querySelector('.nx-calendar-body-active').focus();\n            }));\n        }));\n    }\n}\nNxDatepickerContentComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-datepicker-content',\n                template: \"<div class=\\\"nx-datepicker-header\\\">\\n    <button (click)=\\\"datepicker.close()\\\" class=\\\"nx-datepicker-close\\\">\\n        <nx-icon name=\\\"close\\\"></nx-icon>\\n    </button>\\n</div>\\n\\n<nx-calendar cdkTrapFocus\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker.minDate\\\"\\n    [maxDate]=\\\"datepicker.maxDate\\\"\\n    [dateFilter]=\\\"datepicker.dateFilter\\\"\\n    [selected]=\\\"datepicker.selected\\\"\\n    (selectedChange)=\\\"datepicker.select($event)\\\"\\n    (yearSelected)=\\\"datepicker.selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker.selectMonth($event)\\\"\\n    (_userSelection)=\\\"datepicker.close()\\\">\\n</nx-calendar>\\n\",\n                host: {\n                    'class': 'nx-datepicker-content'\n                },\n                exportAs: 'nxDatepickerContent',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{background-color:#fff;display:flex;flex-flow:column nowrap;box-shadow:0 8px 24px rgba(65,65,65,.35);border:1px solid #d9d9d9;border-radius:4px}.nx-datepicker-header{padding:calc(16px - 1px) 16px 16px;display:flex;height:55px}.nx-datepicker-close{background-color:transparent;border:none;margin-left:auto;cursor:pointer;padding:0;line-height:24px;font-size:24px;color:#006192;outline:0}nx-calendar{width:calc(7 * 40px + 2 * 32px - 2 * 1px);height:calc(48px + 16px + 7 * 40px + 32px - 1px)}\"]\n            }] }\n];\n/** @nocollapse */\nNxDatepickerContentComponent.ctorParameters = () => [\n    { type: NxDatepickerIntl },\n    { type: ElementRef },\n    { type: NgZone }\n];\nNxDatepickerContentComponent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [NxCalendarComponent,] }]\n};\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"nxDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass NxDatepickerComponent {\n    /**\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} _scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_overlay, _ngZone, _viewContainerRef, _scrollStrategy, _dateAdapter, _dir, _document) {\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._scrollStrategy = _scrollStrategy;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        /**\n         * \\@docs-private\n         */\n        this.selectedChanged = new EventEmitter();\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * \\@docs-private\n         * The id for the datepicker calendar.\n         */\n        this.id = `nx-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError$1('DateAdapter');\n        }\n    }\n    /**\n     * The date to open the calendar initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * \\@docs-private\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) { this._validSelected = value; }\n    /**\n     * \\@docs-private\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * \\@docs-private\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    }\n    /**\n     * \\@docs-private\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.emit(date);\n        }\n    }\n    /**\n     * \\@docs-private\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * \\@docs-private\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * \\@docs-private\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A NxDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this.selected = value));\n    }\n    /**\n     * \\@docs-private\n     * Register an input toggle with this datepicker.\n     * @param {?} toggle\n     * @return {?}\n     */\n    registerToggle(toggle) {\n        if (this._toggleButton) {\n            throw Error('A NxDatepicker can only be associated with a single toggle button.');\n        }\n        this._toggleButton = toggle;\n    }\n    /**\n     * \\@docs-private\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an NxDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * \\@docs-private\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n        // if the datepicker toggle button is not focusable, focus the associated input.\n        if (this._toggleButton.tabindex < 0) {\n            this._datepickerInput._focus();\n        }\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(NxDatepickerContentComponent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._popupRef.updatePosition();\n            }));\n        }\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'nx-overlay-transparent-backdrop',\n            direction: this._dir ? this._dir.value : 'ltr',\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'nx-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.keyCode === ESCAPE)))).subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .connectedTo(this._datepickerInput.getConnectedOverlayOrigin(), { originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n            .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\n            .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' });\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nNxDatepickerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-datepicker',\n                template: '',\n                exportAs: 'nxDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNxDatepickerComponent.ctorParameters = () => [\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [NX_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: NxDateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nNxDatepickerComponent.propDecorators = {\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:member-ordering\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst NX_DATEFIELD_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NxDatefieldDirective)),\n    multi: true\n};\n/** @type {?} */\nconst NX_DATEFIELD_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NxDatefieldDirective)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use NxDatepickerInputEvent instead.\n * @template D\n */\nclass NxDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/**\n * Directive used to provide date processing functionality to an input.\n * @template D\n */\nclass NxDatefieldDirective {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * \\@docs-private\n         */\n        this.currentFormattedDate = null;\n        this._strict = true;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'nxDatefieldParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'nxDatefieldMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'nxDatefieldMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'nxDatefieldFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('NX_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set datepicker(value) {\n        this.registerDatepicker(value);\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    registerDatepicker(value) {\n        if (value) {\n            this._datepicker = value;\n            this._datepicker.registerInput(this);\n        }\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker and invalidate values in the datefield.\n     * @param {?} value\n     * @return {?}\n     */\n    set datefieldFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * Provide or read the current date. It's type <D> depends on the chosen date implementation\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._displayFormat || this._dateFormats.display.dateInput) : '';\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * Sets the minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Sets the maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * If supported by the date implementation enable strict parsing (applies to Moment's parse function here)\n     * @return {?}\n     */\n    get strict() { return this._strict; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strict(value) {\n        this._strict = coerceBooleanProperty(value);\n        // parse given text value again\n        this._onInput(this._elementRef.nativeElement.value);\n    }\n    /**\n     * Override the parse format given with parse.dateInput with the token NX_DATE_FORMATS\n     * @return {?}\n     */\n    get parseFormat() { return this._parseFormat; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set parseFormat(value) {\n        this._parseFormat = value;\n        // parse given text value again\n        this._onInput(this._elementRef.nativeElement.value);\n    }\n    /**\n     * Override the display format given with display.dateInput with the token NX_DATE_FORMATS\n     * @return {?}\n     */\n    get displayFormat() { return this._displayFormat; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set displayFormat(value) {\n        this._displayFormat = value;\n        this.format();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        if (newValue) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            this._elementRef.nativeElement.blur();\n        }\n    }\n    /**\n     * \\@docs-private\n     * This will force the current value to be parse again by the given DateAdapter.\n     * That's a convenience method so you can trigger it manually.\n     * @return {?}\n     */\n    format() {\n        this.value = this.value;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._datepicker) {\n            this._datepickerSubscription =\n                this._datepicker.selectedChanged.subscribe((/**\n                 * @param {?} selected\n                 * @return {?}\n                 */\n                (selected) => {\n                    this.value = selected;\n                    this._cvaOnChange(selected);\n                    this._onTouched();\n                    this.dateInput.emit(new NxDatepickerInputEvent(this, this._elementRef.nativeElement));\n                    this.dateChange.emit(new NxDatepickerInputEvent(this, this._elementRef.nativeElement));\n                }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * \\@docs-private\n     * @deprecated\n     * \\@deletion-target 7.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * \\@docs-private\n     *\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        // formfield not yet accessible as we don't have them in a secondary entry point to import yet.\n        // return this._elementRef;\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (event.altKey && event.keyCode === DOWN_ARROW) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._parseFormat || this._dateFormats.parse.dateInput, this.strict);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        this._value = date;\n        if (date) {\n            this.currentFormattedDate = this._dateAdapter.format(date, this._displayFormat || this._dateFormats.display.dateInput);\n        }\n        else {\n            this.currentFormattedDate = null;\n        }\n        this._cvaOnChange(date);\n        this._valueChange.emit(date);\n        this.dateInput.emit(new NxDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new NxDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nNxDatefieldDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[nxDatefield]',\n                providers: [\n                    NX_DATEFIELD_VALUE_ACCESSOR,\n                    NX_DATEFIELD_VALIDATORS,\n                    // {provide: NX_INPUT_VALUE_ACCESSOR, useExisting: NxDatefieldDirective},\n                    { provide: NX_INPUT_VALUE_ACCESSOR, useExisting: NxDatefieldDirective }\n                ],\n                host: {\n                    '[attr.aria-haspopup]': 'true',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_onKeydown($event)',\n                },\n                exportAs: 'nxDatefield',\n            },] }\n];\n/** @nocollapse */\nNxDatefieldDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NxDateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NX_DATE_FORMATS,] }] },\n    { type: NxFormfieldComponent, decorators: [{ type: Optional }] }\n];\nNxDatefieldDirective.propDecorators = {\n    datepicker: [{ type: Input, args: ['nxDatepicker',] }],\n    datefieldFilter: [{ type: Input, args: ['nxDatefieldFilter',] }],\n    value: [{ type: Input }],\n    min: [{ type: Input, args: ['nxMin',] }],\n    max: [{ type: Input, args: ['nxMax',] }],\n    strict: [{ type: Input, args: ['nxStrict',] }],\n    parseFormat: [{ type: Input, args: ['nxParseFormat',] }],\n    displayFormat: [{ type: Input, args: ['nxDisplayFormat',] }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `nxDatepickerToggle`.\n */\n// tslint:disable-next-line:directive-class-suffix\nclass NxDatepickerToggleIconComponent {\n}\nNxDatepickerToggleIconComponent.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxDatepickerToggleIcon]'\n            },] }\n];\n/**\n * @template D\n */\nclass NxDatepickerToggleComponent {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_intl, _changeDetectorRef, _defaultOptions) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._defaultOptions = _defaultOptions;\n        this._stateChanges = Subscription.EMPTY;\n        this._tabindex = 0;\n        if (this._defaultOptions && this._defaultOptions.toggleIconTabindex) {\n            this._tabindex = this._defaultOptions.toggleIconTabindex;\n        }\n    }\n    /**\n     * Datepicker instance that the button will toggle.\n     * @param {?} value\n     * @return {?}\n     */\n    set datepicker(value) {\n        this.registerDatepicker(value);\n    }\n    /**\n     * @return {?}\n     */\n    get datepicker() {\n        return this._datepicker;\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    registerDatepicker(value) {\n        if (value) {\n            this._datepicker = value;\n            this._datepicker.registerToggle(this);\n        }\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Sets the tabindex for the toggle button. Default: 0.\n     * @param {?} value\n     * @return {?}\n     */\n    set tabindex(value) {\n        if (this._tabindex !== value) {\n            this._tabindex = value;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get tabindex() {\n        return this._tabindex;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.datepicker) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nNxDatepickerToggleComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-datepicker-toggle',\n                template: \"<button class=\\\"nx-datepicker-toggle-button\\\"\\n        [tabindex]=\\\"tabindex\\\"\\n        type=\\\"button\\\"\\n        [attr.aria-label]=\\\"_intl.openCalendarLabel\\\"\\n        [disabled]=\\\"disabled\\\"\\n        (click)=\\\"_open($event)\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M5.2002,17 L5.2002,15 C5.2002,14.45 5.6502,14 6.2002,14 L8.2002,14 C8.7502,14 9.2002,14.45 9.2002,15 L9.2002,17 C9.2002,17.55 8.7502,18 8.2002,\\n            18 L6.2002,18 C5.6502,18 5.2002,17.55 5.2002,17 L5.2002,17 Z M20.3992,20.4 L3.5992,20.4 L3.5992,11.464 L3.5992,9.464 L3.5992,8 L20.3992,8 L20.3992,\\n            20.4 Z M21.0002,3 L20.0002,3 L19.0002,3 L19.0002,2 C19.0002,1.447 18.5532,1 18.0002,1 C17.4472,1 17.0002,1.447 17.0002,2 L17.0002,3 L16.4002,3 L7.5992,\\n            3 L7.0002,3 L7.0002,2 C7.0002,1.447 6.5532,1 6.0002,1 C5.4472,1 5.0002,1.447 5.0002,2 L5.0002,3 L4.0002,3 L3.0002,3 C2.4502,3 2.0002,3.45 2.0002,4 L2.0002,\\n            9.464 L2.0002,11.464 L2.0002,21 C2.0002,21.55 2.4502,22 3.0002,22 L21.0002,22 C21.5502,22 22.0002,21.55 22.0002,21 L22.0002,4 C22.0002,3.45 21.5502,3 21.0002,3 L21.0002,3 Z\\\" id=\\\"path-1\\\"></path>\\n  </svg>\\n\\n  <ng-content select=\\\"[nxDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'nx-datepicker-toggle',\n                    '[class.nx-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.nx-datepicker-toggle--disabled]': 'disabled'\n                },\n                exportAs: 'nxDatepickerToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{position:relative;display:inline-block;height:24px;width:24px}:host:active{outline:0}.nx-datepicker-toggle-button{border:none;background-color:transparent;outline:0;cursor:pointer;padding:0}.nx-datepicker-toggle-button::-moz-focus-inner{border:0}.default-icon{display:block}:host(.nx-datepicker-toggle--disabled) .nx-datepicker-toggle-button{cursor:not-allowed}:host-context([data-whatinput=keyboard]) .nx-datepicker-toggle-button:focus{border-radius:4px;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxDatepickerToggleComponent.ctorParameters = () => [\n    { type: NxDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DATEPICKER_DEFAULT_OPTIONS,] }] }\n];\nNxDatepickerToggleComponent.propDecorators = {\n    _customIcon: [{ type: ContentChild, args: [NxDatepickerToggleIconComponent,] }],\n    datepicker: [{ type: Input, args: ['for',] }],\n    disabled: [{ type: Input }],\n    tabindex: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxDatefieldModule {\n}\nNxDatefieldModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    A11yModule,\n                    NxIconModule\n                ],\n                providers: [\n                    // Provide our NX_DATE_LOCALE to determine the current language\n                    NX_DATE_LOCALE_PROVIDER,\n                    NxDatepickerIntl,\n                    NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER\n                ],\n                declarations: [\n                    NxDatefieldDirective,\n                    NxDatepickerComponent,\n                    NxDatepickerToggleIconComponent,\n                    NxDatepickerToggleComponent,\n                    NxDatepickerContentComponent,\n                    NxCalendarComponent,\n                    NxCalendarBodyComponent,\n                    NxMonthViewComponent,\n                    NxMultiYearViewComponent,\n                    NxYearViewComponent\n                ],\n                exports: [\n                    NxDatefieldDirective,\n                    NxDatepickerComponent,\n                    NxDatepickerToggleIconComponent,\n                    NxDatepickerToggleComponent,\n                    NxCalendarComponent,\n                    NxCalendarBodyComponent,\n                    NxMonthViewComponent,\n                    NxMultiYearViewComponent,\n                    NxYearViewComponent\n                ],\n                entryComponents: [\n                    NxDatepickerContentComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxDatefieldModule, NX_DATEFIELD_VALUE_ACCESSOR, NX_DATEFIELD_VALIDATORS, NxDatepickerInputEvent, NxDatefieldDirective, NX_DATE_LOCALE_PROVIDER, NativeDateModule, NxNativeDateModule, NX_DATE_LOCALE, NxDateAdapter, NX_DATE_FORMATS, NxNativeDateAdapter, NX_NATIVE_DATE_FORMATS, NxDatepickerIntl, NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY, NX_DATEPICKER_SCROLL_STRATEGY, NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER, DATEPICKER_DEFAULT_OPTIONS, NxDatepickerContentComponent, NxDatepickerComponent, NxCalendarComponent as ɵc, NxCalendarBodyComponent as ɵe, NxDatepickerToggleComponent as ɵb, NxDatepickerToggleIconComponent as ɵa, NxMonthViewComponent as ɵd, NxMultiYearViewComponent as ɵg, NxYearViewComponent as ɵf };\n\n//# sourceMappingURL=allianz-ngx-ndbx-datefield.js.map","import { CommonModule } from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Directive, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This components is a collapsible menu for usage on smaller devices.\n * Can contain any content, but usually [nxMenuLink], [nxMenuGroup] and [nxAction].\n */\nclass NxMenuComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._open = false;\n    }\n    /**\n     * Whether the menu is open or closed.\n     * @param {?} value\n     * @return {?}\n     */\n    set open(value) {\n        /** @type {?} */\n        const open = coerceBooleanProperty(value);\n        if (open !== this._open) {\n            this._open = open;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get open() {\n        return this._open;\n    }\n    /* Toggles the open state of the menu. */\n    /**\n     * @return {?}\n     */\n    toggle() {\n        this.open = !this.open;\n    }\n}\nNxMenuComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-menu',\n                template: \"<div class=\\\"nx-menu__wrapper\\\" *ngIf=\\\"open\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[attr.aria-expanded]': 'open'\n                },\n                styles: [\":host(.nx-menu){display:block}.nx-menu__wrapper{position:fixed;top:60px;left:0;right:0;bottom:0;z-index:1;overflow:auto;background:#fff}::ng-deep .nx-menu__link{display:block;padding:12px 0;font-size:18px;line-height:24px;outline:0}::ng-deep .nx-menu__link+.nx-menu__link{margin-top:8px}::ng-deep [data-whatinput=keyboard] .nx-menu__link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px;outline:0}::ng-deep .nx-menu__item.nx-menu__item--large,::ng-deep .nx-menu__item.nx-menu__item--small{padding:24px;border-bottom:1px solid #d9d9d9}::ng-deep .nx-menu__item.nx-menu__item--large{padding-left:64px}\"]\n            }] }\n];\n/** @nocollapse */\nNxMenuComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxMenuComponent.propDecorators = {\n    open: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is a menu link.\n * It adds styling to a link and is usually used within a [nxMenuItem].\n */\nclass NxMenuLinkDirective {\n}\nNxMenuLinkDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'a[nxMenuLink]',\n                host: {\n                    class: 'nx-menu__link'\n                }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is a menu item is used to structure content whithin a menu.\n */\nclass NxMenuItemDirective {\n    constructor() {\n        this._size = 's';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set size(value) {\n        this._size = value === 'l' ? 'l' : 's';\n    }\n    /**\n     * @return {?}\n     */\n    get size() {\n        return this._size;\n    }\n}\nNxMenuItemDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxMenuItem]',\n                host: {\n                    class: 'nx-menu__item',\n                    '[class.nx-menu__item--small]': 'size === \"s\"',\n                    '[class.nx-menu__item--large]': 'size === \"l\"'\n                }\n            },] }\n];\nNxMenuItemDirective.propDecorators = {\n    size: [{ type: Input, args: ['nxMenuItem',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@title MenuButton\n */\nclass NxMenuButtonComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expandable = false;\n        this._expanded = false;\n        this._type = 'root';\n    }\n    /**\n     * Whether this menu button is expandable or not. Will add a caret icon.\n     * @param {?} value\n     * @return {?}\n     */\n    set expandable(value) {\n        this._expandable = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get expandable() {\n        return this._expandable;\n    }\n    /**\n     * Whether this menu button is expanded or not.\n     * Only works in combination with the `expandable` option set to `true`.\n     * @param {?} value\n     * @return {?}\n     */\n    set expanded(value) {\n        this._expanded = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get expanded() {\n        return this._expanded;\n    }\n    /**\n     * The type of this menu button.\n     * Can be `primary` or `secondary`, defaults to `primary`.\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        if (value === 'root' || value === 'nested') {\n            this._type = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get type() {\n        return this._type;\n    }\n}\nNxMenuButtonComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: '[nxMenuButton]',\n                template: \"<ng-content select=\\\"[nxMenuButtonIcon]\\\"></ng-content>\\n<span class=\\\"nx-menu-button__label\\\">\\n  <ng-content></ng-content>\\n</span>\\n<nx-icon *ngIf=\\\"expandable\\\" class=\\\"nx-menu-button__expand-icon\\\" name=\\\"chevron-down\\\"></nx-icon>\\n\",\n                host: {\n                    '[class.is-expanded]': 'expandable && expanded',\n                    '[class.is-expandable]': 'expandable',\n                    '[class.nx-menu-button--nested]': 'type === \"nested\"',\n                    '[class.nx-menu-button--root]': 'type === \"root\"',\n                    'class': 'nx-menu-button'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:flex;align-items:center;background-color:#fff;color:#414141;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;box-shadow:none;border:none;margin:0;cursor:pointer;line-height:24px;font-weight:400;font-size:18px;width:100%;text-decoration:none;padding:24px}:host:hover{background-color:#ececec}:host.is-expanded{font-weight:700;background-color:#007ab3;border-color:#007ab3;color:#fff}:host.is-expanded .nx-menu-button__expand-icon{-webkit-transform:rotateZ(180deg);transform:rotateZ(180deg)}:host.nx-menu-button--nested{background-color:#f5f5f5}:host.nx-menu-button--nested.is-expanded{background-color:#c1ebfb;border-color:#c1ebfb;color:#414141}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]):focus{box-shadow:inset 0 0 0 4px #009de6,inset 0 0 0 6px #fff;border-radius:8px;border:none}.nx-menu-button__expand-icon{display:flex;justify-content:center;transition:.2s;-webkit-transform:rotateZ(0);transform:rotateZ(0);width:16px;height:24px;margin-right:8px;flex:0 0 auto;font-size:24px}.nx-menu-button__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 auto;text-align:left;line-height:1;padding:4px 0}::ng-deep .nx-menu-button__icon{margin-right:16px;height:24px;font-weight:400;flex:0 0 auto}\"]\n            }] }\n];\n/** @nocollapse */\nNxMenuButtonComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxMenuButtonComponent.propDecorators = {\n    expandable: [{ type: Input }],\n    expanded: [{ type: Input }],\n    type: [{ type: Input, args: ['nxType',] }]\n};\n/**\n * Icon that can be added to a [nxButton].\n */\nclass NxMenuButtonIconDirective {\n}\nNxMenuButtonIconDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxMenuButtonIcon]',\n                host: {\n                    class: 'nx-menu-button__icon'\n                }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_MODULES = [\n    NxMenuComponent,\n    NxMenuLinkDirective,\n    NxMenuItemDirective,\n    NxMenuButtonComponent,\n    NxMenuButtonIconDirective,\n];\nclass NxMenuModule {\n}\nNxMenuModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NxIconModule],\n                declarations: EXPORTED_MODULES,\n                exports: EXPORTED_MODULES\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxMenuModule, NxMenuComponent, NxMenuLinkDirective, NxMenuButtonComponent, NxMenuButtonIconDirective, NxMenuItemDirective };\n\n//# sourceMappingURL=allianz-ngx-ndbx-menu.js.map","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { CommonModule } from '@angular/common';\nimport { Input, Component, ChangeDetectorRef, ChangeDetectionStrategy, Renderer2, ElementRef, Output, EventEmitter, NgModule } from '@angular/core';\nimport { SPACE, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAX_WIDTH = 400;\n/** @type {?} */\nconst MIN_WIDTH = 56;\n/** @type {?} */\nconst AUTO_COLLAPSE_WIDTH = 168;\n/** @type {?} */\nconst RESIZE_STEP_SIZE = 20;\nclass NxSidebarComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} renderer\n     * @param {?} _element\n     */\n    constructor(_changeDetectorRef, renderer, _element) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.renderer = renderer;\n        this._element = _element;\n        /**\n         * Emits the new width of the sidebar on resize or on close/open event.\n         */\n        this.widthChange = new EventEmitter();\n        this._resizeable = false;\n        this._minWidth = MIN_WIDTH;\n        this._resizeHandleAriaLabel = '';\n        this._open = true;\n        this._width = 0;\n        this._resizing = false;\n        this._previousWidth = 0;\n        this._isMobile = false;\n        this._resizeWidth = 0;\n        this._unsubscribeListeners = [];\n        this._onResize = this._onResize.bind(this);\n        this._onResizeEnd = this._onResizeEnd.bind(this);\n    }\n    /**\n     * If set to `true` this will enable dynamic resizing of the sidebar.\n     * @param {?} value\n     * @return {?}\n     */\n    set resizeable(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._resizeable) {\n            this._resizeable = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get resizeable() {\n        return this._resizeable;\n    }\n    /**\n     * Sets the minimal width (in pixel) of the sidebar.\n     * @param {?} value\n     * @return {?}\n     */\n    set minWidth(value) {\n        this._minWidth = coerceNumberProperty(value) || MIN_WIDTH;\n    }\n    /**\n     * @return {?}\n     */\n    get minWidth() {\n        return this._minWidth;\n    }\n    /**\n     * This sets the accessibility label for the resize handle of the sidebar.\n     * @param {?} value\n     * @return {?}\n     */\n    set resizeHandleAriaLabel(value) {\n        if (value !== this._resizeHandleAriaLabel) {\n            this._resizeHandleAriaLabel = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get resizeHandleAriaLabel() {\n        return this._resizeHandleAriaLabel;\n    }\n    /**\n     * This reflects the current open state of the sidebar.\n     * It will be `true` if the sidebar is expanded and `false` if the sidebar is closed.\n     * @param {?} value\n     * @return {?}\n     */\n    set open(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._open) {\n            this._open = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get open() {\n        return this._open;\n    }\n    /**\n     * This sets the width of the sidebar.\n     * @param {?} value\n     * @return {?}\n     */\n    set width(value) {\n        /** @type {?} */\n        const newValue = Math.max(value, this.minWidth);\n        if (newValue !== this._width) {\n            this._width = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get width() {\n        return this._width;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.width = this._element.nativeElement.clientWidth;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeDragEventListeners();\n    }\n    /**\n     * This will expand the sidebar to its full width.\n     * @return {?}\n     */\n    expand() {\n        this.open = true;\n    }\n    /**\n     * This will close the sidebar to its minimal width.\n     * @return {?}\n     */\n    close() {\n        this.open = false;\n    }\n    /**\n     * This will close or expand the sidebar depending if its expanded or closed.\n     * @return {?}\n     */\n    toggle() {\n        if (this.open) {\n            this.close();\n        }\n        else {\n            this.expand();\n        }\n        this._emitWidthChange(this._sidebarElementWidth);\n    }\n    /**\n     * @return {?}\n     */\n    get _sidebarElementWidth() {\n        if (this._resizing) {\n            return this._resizeWidth;\n        }\n        return this.open ? this.width : this.minWidth;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onResizeStart(event) {\n        if (event.type.startsWith('touch')) {\n            event = event.changedTouches[0];\n        }\n        this._resizeStartX = event.screenX;\n        this._resizeStartWidth = this.open ? this.width : this.minWidth;\n        this._resizeWidth = this.width;\n        this._attachDragEventListeners();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onResize(event) {\n        this._resizing = true;\n        if (event.type.startsWith('touch')) {\n            event = event.changedTouches[0];\n        }\n        /** @type {?} */\n        const dx = event.screenX - this._resizeStartX;\n        this._resizeWidth = Math.max(this.minWidth, this._resizeStartWidth + dx);\n        this.open = this._resizeWidth > this.minWidth;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onResizeEnd(event) {\n        this._resizing = false;\n        this._removeDragEventListeners();\n        if (this._isMouseDrag(this._resizeStartX, event.screenX)) {\n            if (this._resizeWidth < AUTO_COLLAPSE_WIDTH) {\n                this.open = false;\n                this._emitWidthChange(this._sidebarElementWidth);\n            }\n            else {\n                this.open = true;\n                this.width = Math.min(MAX_WIDTH, this._resizeWidth);\n                this._emitWidthChange(this.width);\n            }\n        }\n        this._resizeWidth = 0;\n    }\n    /**\n     * @return {?}\n     */\n    _onToggleClick() {\n        this.toggle();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onResizeHandleClick(event) {\n        if (this._isMouseDrag(this._resizeStartX, event.screenX)) {\n            return;\n        }\n        this.toggle();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onSidebarKeydown(event) {\n        if (event.which === SPACE) {\n            event.preventDefault();\n            this.toggle();\n        }\n        else if (event.which === LEFT_ARROW) {\n            this.width = this.width - RESIZE_STEP_SIZE;\n            if (this.width <= AUTO_COLLAPSE_WIDTH) {\n                this.open = false;\n                this.width = AUTO_COLLAPSE_WIDTH + 1;\n            }\n            this._emitWidthChange(this.width);\n        }\n        else if (event.which === RIGHT_ARROW) {\n            if (this.open) {\n                this.width = Math.min(MAX_WIDTH, this.width + RESIZE_STEP_SIZE);\n            }\n            else {\n                this.open = true;\n                this.width = Math.max(this.width, AUTO_COLLAPSE_WIDTH);\n            }\n            this._emitWidthChange(this.width);\n        }\n    }\n    /**\n     * @private\n     * @param {?} width\n     * @return {?}\n     */\n    _emitWidthChange(width) {\n        this.widthChange.emit(width);\n    }\n    /**\n     * @private\n     * @param {?} startX\n     * @param {?} endX\n     * @return {?}\n     */\n    _isMouseDrag(startX, endX) {\n        return Math.abs(endX - startX) > 5;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachDragEventListeners() {\n        this._unsubscribeListeners.push(this.renderer.listen('document', 'mousemove', this._onResize));\n        this._unsubscribeListeners.push(this.renderer.listen('document', 'mouseup', this._onResizeEnd));\n        this._unsubscribeListeners.push(this.renderer.listen('document', 'touchmove', this._onResize));\n        this._unsubscribeListeners.push(this.renderer.listen('document', 'touchend', this._onResizeEnd));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _removeDragEventListeners() {\n        this._unsubscribeListeners.forEach((/**\n         * @param {?} unsubscribe\n         * @return {?}\n         */\n        unsubscribe => unsubscribe()));\n    }\n}\nNxSidebarComponent.decorators = [\n    { type: Component, args: [{\n                template: \"<div class=\\\"nx-sidebar__box\\\"\\n  [attr.aria-expanded]=\\\"open\\\">\\n  <div class=\\\"nx-sidebar__content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  <div class=\\\"nx-sidebar__toggle\\\">\\n    <button class=\\\"nx-sidebar__toggle-button\\\"\\n        (click)=\\\"_onToggleClick()\\\"\\n        [attr.aria-label]=\\\"resizeHandleAriaLabel\\\"\\n        type=\\\"button\\\">\\n        <nx-icon name=\\\"chevron-left\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n        <nx-icon name=\\\"chevron-left\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n    </button>\\n  </div>\\n</div>\\n\\n<button class=\\\"nx-sidebar__handle\\\"\\n  *ngIf=\\\"resizeable\\\"\\n  tabindex=\\\"0\\\"\\n  type=\\\"button\\\"\\n  (mousedown)=\\\"_onResizeStart($event)\\\"\\n  (keydown)=\\\"_onSidebarKeydown($event)\\\"\\n  (touchstart)=\\\"_onResizeStart($event)\\\"\\n  (click)=\\\"_onResizeHandleClick($event)\\\"\\n  [attr.aria-label]=\\\"resizeHandleAriaLabel\\\"></button>\\n\",\n                selector: 'nx-sidebar',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.is-resizing]': '_resizing',\n                    '[class.is-closed]': '!open',\n                    '[style.width.px]': `_sidebarElementWidth`\n                },\n                styles: [\":host{position:relative;height:100%;transition:width .15s;display:flex;flex:0 0 auto;width:280px}:host.is-resizing{transition:none}@media (max-width:703px){:host{width:100%;position:absolute;transition:none}:host .nx-sidebar__handle{display:none}}:host.is-closed .nx-sidebar__toggle-button{-webkit-transform:rotateZ(180deg);transform:rotateZ(180deg)}.nx-sidebar__toggle{display:flex;padding:16px 0;justify-content:flex-end;flex-shrink:0}.nx-sidebar__toggle::after,.nx-sidebar__toggle::before{content:'';display:block;flex:0 1 24px}.nx-sidebar__handle{position:absolute;right:-14px;top:0;bottom:0;display:flex;flex:0 0 16px;justify-content:center;align-items:center;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;box-shadow:none;background:0 0;margin:0;cursor:col-resize;color:#c2c2c2;outline:0;z-index:1}.nx-sidebar__handle::before{content:'||';font-size:14px;letter-spacing:-1px;font-weight:600;color:inherit}.nx-sidebar__handle::-moz-focus-inner{border:0}.nx-sidebar__toggle-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;box-shadow:none;background:0 0;margin:0;padding:0;cursor:pointer;color:#414141;outline:0;white-space:nowrap;font-size:22px}.nx-sidebar__toggle-button:hover{color:#999}.nx-sidebar__toggle-button:active{color:#5b5b5b}:host-context([data-whatinput=keyboard]) .nx-sidebar__toggle-button:focus{box-shadow:0 0 0 4px #009de6;border-radius:4px}.nx-sidebar__toggle-button>nx-icon:last-child{margin-left:-16px}.nx-sidebar__toggle-button::-moz-focus-inner{border:0}.nx-sidebar__box{height:100%;flex:1 1 100%;display:flex;overflow:hidden;flex-direction:column;background-color:#f5f5f5}@media screen and (-ms-high-contrast:active){.nx-sidebar__handle::before{box-shadow:0 0 0 6px window,0 0 0 8px windowText}.nx-sidebar__toggle-button{border:1px solid windowText;padding-top:4px}.nx-sidebar__box{border-right:1px solid windowText}}.nx-sidebar__content{flex:1 1 100%;overflow:hidden;overflow-y:auto;padding-top:16px}\"]\n            }] }\n];\n/** @nocollapse */\nNxSidebarComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nNxSidebarComponent.propDecorators = {\n    widthChange: [{ type: Output }],\n    resizeable: [{ type: Input }],\n    minWidth: [{ type: Input }],\n    resizeHandleAriaLabel: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxSidebarModule {\n}\nNxSidebarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, NxIconModule],\n                declarations: [NxSidebarComponent],\n                exports: [NxSidebarComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxSidebarModule, MAX_WIDTH, MIN_WIDTH, AUTO_COLLAPSE_WIDTH, RESIZE_STEP_SIZE, NxSidebarComponent };\n\n//# sourceMappingURL=allianz-ngx-ndbx-sidebar.js.map","import { CommonModule } from '@angular/common';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, Subscription } from 'rxjs';\nimport { NxAccordionDirective, NxExpansionPanelComponent, NxAccordionModule } from '@allianz/ngx-ndbx/accordion';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewChild, ViewContainerRef, Optional, Inject, Host, Directive, ElementRef, ChangeDetectorRef, ContentChildren, EventEmitter, Output, HostListener, ViewChildren, SkipSelf, NgModule } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @abstract\n */\nclass NxTabGroupBase {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTabComponent {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _tabGroup\n     */\n    constructor(_viewContainerRef, _tabGroup) {\n        this._viewContainerRef = _viewContainerRef;\n        this._tabGroup = _tabGroup;\n        /**\n         * The portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n        if (!this._tabGroup) {\n            throw Error(`The nx-tab element has to be wrapped in a nx-tab-group to work.\n      Please provide a nx-tab-group element and place your tabs inside it.`);\n        }\n    }\n    /**\n     * Sets the label of the tab shown in the tablist.\n     * @return {?}\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set label(value) {\n        if (this._label !== value) {\n            this._label = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('label')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nNxTabComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab',\n                exportAs: 'nxTab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNxTabComponent.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: NxTabGroupBase, decorators: [{ type: Inject, args: [NxTabGroupBase,] }, { type: Optional }, { type: Host }] }\n];\nNxTabComponent.propDecorators = {\n    label: [{ type: Input }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxTabBodyComponent {\n    constructor() {\n        this._active = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        this._active = coerceBooleanProperty(value);\n        if (this._active) {\n            this.attach();\n        }\n        else {\n            this.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @return {?}\n     */\n    attach() {\n        if (!this.portalOutlet.hasAttached()) {\n            this.portalOutlet.attach(this.content);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        if (this.portalOutlet.hasAttached()) {\n            this.portalOutlet.detach();\n        }\n    }\n}\nNxTabBodyComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab-body',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:block}\"]\n            }] }\n];\nNxTabBodyComponent.propDecorators = {\n    content: [{ type: Input }],\n    active: [{ type: Input }],\n    portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxTabLabelDirective {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n}\nNxTabLabelDirective.decorators = [\n    { type: Directive, args: [{ selector: '[nxTabLabel]' },] }\n];\n/** @nocollapse */\nNxTabLabelDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxTabHeaderComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selectedIndex = 0;\n        this._autoselect = true;\n        this.selectFocusedIndex = new EventEmitter();\n        this.indexFocused = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._selectedIndex = value;\n        if (this._keyManager) {\n            this._keyManager.updateActiveItemIndex(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * @return {?}\n     */\n    get autoselect() {\n        return this._autoselect;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoselect(value) {\n        this._autoselect = value;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.labels).withHorizontalOrientation('ltr').withWrap();\n        this._keyManager.updateActiveItemIndex(0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} idx\n     * @return {?}\n     */\n    _isValidIndex(idx) {\n        if (!this.labels) {\n            return true;\n        }\n        return !!this.labels.toArray()[idx];\n    }\n    /**\n     * Handles keyboard inputs on the labels\n     * If autoselect is enabled the tab gets changed immediately\n     * If autoselect is disabled only the focus changes but the user still has to select the item\n     * by himself\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeydown(event) {\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n        if (this.autoselect) {\n            this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n        }\n        else if (event.keyCode !== ENTER && event.keyCode !== SPACE) {\n            this.indexFocused.emit(this._keyManager.activeItemIndex);\n        }\n    }\n}\nNxTabHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab-header',\n                template: \"<div class=\\\"nx-tab-header\\\" (keydown)=\\\"handleKeydown($event)\\\" role=\\\"tablist\\\">\\n  <ng-content></ng-content>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:block}.nx-tab-header{display:flex;align-items:flex-end;justify-content:center;padding:60px 0}\"]\n            }] }\n];\n/** @nocollapse */\nNxTabHeaderComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxTabHeaderComponent.propDecorators = {\n    selectedIndex: [{ type: Input }],\n    autoselect: [{ type: Input }],\n    selectFocusedIndex: [{ type: Output }],\n    indexFocused: [{ type: Output }],\n    labels: [{ type: ContentChildren, args: [NxTabLabelDirective,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTabChangeEvent {\n}\n/** @type {?} */\nlet nextId = 0;\n/** @type {?} */\nconst MOBILE_BREAKPOINT = 480;\nclass NxTabGroupComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selectedIndex = null;\n        this._negative = false;\n        this._indexToSelect = 0;\n        this._autoselect = true;\n        this._mobileAccordion = true;\n        this._showAccordion = false;\n        /**\n         * An event emitted when the selected tab has changed.\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * An event emitted when the selected tab has changed.\n         */\n        this.selectedTabChange = new EventEmitter();\n        /**\n         * An event emitted when focus has changed within a tab group.\n         *\n         * **Note:** is not supported in mobile view.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._groupId = nextId++;\n    }\n    /**\n     * Sets the selected tab.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Whether the negative set of styling should be used.\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        if (value !== this._negative) {\n            this._negative = coerceBooleanProperty(value);\n        }\n    }\n    /**\n     * Whether the tab should be immediately selected on focus.\n     * @return {?}\n     */\n    get autoselect() {\n        return this._autoselect;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoselect(value) {\n        this._autoselect = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the tabs should to accordion on mobile viewports.\n     * @return {?}\n     */\n    get mobileAccordion() {\n        return this._mobileAccordion;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mobileAccordion(value) {\n        this._mobileAccordion = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._switchAppearance(window.innerWidth);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this.tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this.tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the NxTab component, whereas the data binding is inside the NxTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this.tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * \\@docs-private\n     * @param {?} index\n     * @return {?}\n     */\n    focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new NxTabChangeEvent;\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} index\n     * @return {?}\n     */\n    handleClick(index) {\n        this.selectedIndex = this.tabHeader.focusIndex = index;\n    }\n    /**\n     * \\@docs-private\n     * Returns the tabindex for a tab label\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    getTabIndex(tab, idx) {\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `nx-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `nx-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onResize(event) {\n        this._switchAppearance(event.target.innerWidth);\n    }\n    /**\n     * @private\n     * @param {?} viewPortWidth\n     * @return {?}\n     */\n    _switchAppearance(viewPortWidth) {\n        if (!this._mobileAccordion) {\n            return;\n        }\n        if (viewPortWidth <= MOBILE_BREAKPOINT && !this._showAccordion) {\n            this._showMobileVersion();\n        }\n        else if (viewPortWidth > MOBILE_BREAKPOINT && this._showAccordion) {\n            this._showDesktopVersion();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _showMobileVersion() {\n        this._showAccordion = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _showDesktopVersion() {\n        this._showAccordion = false;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emulate the tab change event when an accordion panel is opened in\n     * mobile viewports.\n     * @param {?} index\n     * @return {?}\n     */\n    _panelOpened(index) {\n        this.selectedIndex = index;\n    }\n}\nNxTabGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab-group',\n                template: \"\\n  <nx-tab-header *ngIf=\\\"!_showAccordion\\\"\\n      #tabHeader\\n      [selectedIndex]=\\\"selectedIndex\\\"\\n      (selectFocusedIndex)=\\\"selectedIndex = $event\\\"\\n      (indexFocused)=\\\"focusChanged($event)\\\"\\n      [autoselect]=\\\"autoselect\\\">\\n    <button\\n      type=\\\"button\\\"\\n      nxTabLabel\\n      *ngFor=\\\"let tab of tabs; let i = index\\\"\\n      role=\\\"tab\\\"\\n      (click)=\\\"handleClick(i)\\\"\\n      class=\\\"nx-tab-header__item\\\"\\n      [id]=\\\"_getTabLabelId(i)\\\"\\n      [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n      [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n      [attr.tabindex]=\\\"getTabIndex(tab, i)\\\"\\n      [class.nx-tab-header__item--active]=\\\"selectedIndex == i\\\">\\n      {{tab.label}}\\n    </button>\\n  </nx-tab-header>\\n\\n  <div class=\\\"nx-tab-body__container\\\">\\n    <nx-tab-body\\n      *ngFor=\\\"let tab of tabs; let i = index\\\"\\n      [id]=\\\"_getTabContentId(i)\\\"\\n      role=\\\"tabpanel\\\"\\n      [attr.tabindex]=\\\"(!_showAccordion && selectedIndex == i) ? 0 : -1\\\"\\n      class=\\\"nx-tab__body\\\"\\n      [attr.aria-labelledby]=\\\"_getTabContentId(i)\\\"\\n      [class.nx-tab__body--active]=\\\"selectedIndex == i\\\"\\n      [content]=\\\"tab.content\\\"\\n      [active]=\\\"!_showAccordion && selectedIndex == i\\\"\\n    ></nx-tab-body>\\n  </div>\\n\\n  <nx-accordion *ngIf=\\\"_showAccordion\\\" [negative]=\\\"negative\\\">\\n    <nx-expansion-panel *ngFor=\\\"let tab of tabs; let i = index\\\" [expanded]=\\\"selectedIndex === i\\\" (opened)=\\\"_panelOpened(i)\\\">\\n      <nx-expansion-panel-header>\\n        <nx-expansion-panel-title>{{tab.label}}</nx-expansion-panel-title>\\n      </nx-expansion-panel-header>\\n      <ng-template [cdkPortalOutlet]=\\\"tab.content\\\"></ng-template>\\n    </nx-expansion-panel>\\n  </nx-accordion>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.is-negative]': 'negative'\n                },\n                providers: [{ provide: NxTabGroupBase, useExisting: NxTabGroupComponent }],\n                styles: [\":host{display:block}.nx-tab-header__item{text-decoration:none;border:none;background:0 0;color:#006192;border-bottom:2px solid #007ab3;padding:0 16px 6px;font-weight:400;font-size:18px;line-height:24px;outline:0}.nx-tab-header__item::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]) .nx-tab-header__item:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}.nx-tab-header__item--active{border-width:4px;font-weight:700;transition:font-weight .3s;padding-bottom:4px}:host(.is-negative){color:#fff}:host(.is-negative) .nx-tab-header__item{color:#fff;border-bottom-color:#fff}\"]\n            }] }\n];\n/** @nocollapse */\nNxTabGroupComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxTabGroupComponent.propDecorators = {\n    tabs: [{ type: ContentChildren, args: [NxTabComponent,] }],\n    tabBodyChildren: [{ type: ViewChildren, args: [NxTabBodyComponent,] }],\n    tabHeader: [{ type: ViewChild, args: ['tabHeader',] }],\n    panels: [{ type: ViewChildren, args: [NxExpansionPanelComponent,] }],\n    accordion: [{ type: ViewChild, args: [NxAccordionDirective,] }],\n    selectedIndex: [{ type: Input }],\n    negative: [{ type: Input }],\n    autoselect: [{ type: Input }],\n    mobileAccordion: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    selectedTabChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTabNavBarComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._negative = false;\n    }\n    /**\n     * Whether the tab nav bar has negative styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.negative) {\n            this._negative = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n}\nNxTabNavBarComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab-nav-bar',\n                template: \"<ng-content></ng-content>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.is-negative]': 'negative',\n                    'role': 'navigation',\n                },\n                styles: [\":host{display:flex;align-items:flex-end;justify-content:center}:host ::ng-deep a.nx-tab-link{text-decoration:none;border:none;background:0 0;color:#006192;border-bottom:2px solid #007ab3;padding:0 16px 6px;font-weight:400;font-size:18px;line-height:24px}:host ::ng-deep a.nx-tab-link.is-active{border-width:4px;font-weight:700;transition:font-weight .3s;padding-bottom:4px}:host(.is-negative){color:#fff}:host(.is-negative) ::ng-deep a.nx-tab-link{color:#fff;border-bottom-color:#fff}:host-context([data-whatinput=keyboard]) nx-tab-link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}\"]\n            }] }\n];\n/** @nocollapse */\nNxTabNavBarComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxTabNavBarComponent.propDecorators = {\n    negative: [{ type: Input }]\n};\nclass NxTabLinkDirective {\n    /**\n     * @param {?} _tabNavBar\n     */\n    constructor(_tabNavBar) {\n        this._tabNavBar = _tabNavBar;\n        this._active = false;\n        if (!this._tabNavBar) {\n            throw Error(`The nx-tab-link element has to be wrapped in a nx-tab-nav-bar to work.`);\n        }\n    }\n    /**\n     * Whether the tab link is active and has the active styling.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._active) {\n            this._active = value;\n        }\n    }\n}\nNxTabLinkDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxTabLink]',\n                host: {\n                    '[class.nx-tab-link]': 'true',\n                    '[class.is-active]': 'active',\n                    '[attr.aria-current]': 'active',\n                }\n            },] }\n];\n/** @nocollapse */\nNxTabLinkDirective.ctorParameters = () => [\n    { type: NxTabNavBarComponent, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\nNxTabLinkDirective.propDecorators = {\n    active: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTabsModule {\n}\nNxTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    PortalModule,\n                    NxAccordionModule\n                ],\n                exports: [\n                    NxTabComponent,\n                    NxTabGroupComponent,\n                    NxTabLabelDirective,\n                    NxTabHeaderComponent,\n                    NxTabBodyComponent,\n                    NxTabNavBarComponent,\n                    NxTabLinkDirective\n                ],\n                declarations: [\n                    NxTabComponent,\n                    NxTabGroupComponent,\n                    NxTabLabelDirective,\n                    NxTabHeaderComponent,\n                    NxTabBodyComponent,\n                    NxTabNavBarComponent,\n                    NxTabLinkDirective\n                ],\n                providers: [],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxTabsModule, NxTabComponent, NxTabChangeEvent, NxTabGroupComponent, NxTabHeaderComponent, NxTabBodyComponent, NxTabLabelDirective, NxTabNavBarComponent, NxTabLinkDirective, NxTabGroupBase as ɵa };\n\n//# sourceMappingURL=allianz-ngx-ndbx-tabs.js.map","import { CommonModule } from '@angular/common';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directive, ViewContainerRef, ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation, Input, Renderer2, ElementRef, Optional, NgModule } from '@angular/core';\nimport { __rest } from 'tslib';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Subject, BehaviorSubject, merge } from 'rxjs';\nimport { takeUntil, map, take } from 'rxjs/operators';\nimport { CdkTree, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeToggle, CdkTreeModule, FlatTreeControl } from '@angular/cdk/tree';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Outlet for nested CdkNode. Put `[nxTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass NxTreeNodeOutletDirective {\n    /**\n     * @param {?} viewContainer\n     */\n    constructor(viewContainer) {\n        this.viewContainer = viewContainer;\n    }\n}\nNxTreeNodeOutletDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxTreeNodeOutlet]'\n            },] }\n];\n/** @nocollapse */\nNxTreeNodeOutletDirective.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with NDBX design styles.\n * @template T\n */\nclass NxTreeComponent extends CdkTree {\n}\nNxTreeComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tree',\n                exportAs: 'nxTree',\n                template: `<ng-container nxTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'nx-tree',\n                    'role': 'tree',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: CdkTree, useExisting: NxTreeComponent }],\n                styles: [\":host.nx-tree{display:block}.nx-tree__node{display:block;overflow:hidden}\"]\n            }] }\n];\nNxTreeComponent.propDecorators = {\n    _nodeOutlet: [{ type: ViewChild, args: [NxTreeNodeOutletDirective,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree node with NDBX design styles.\n * @template T\n */\nclass NxTreeNodeComponent extends CdkTreeNode {\n}\nNxTreeNodeComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tree-node',\n                exportAs: 'nxTreeNode',\n                inputs: ['disabled', 'tabIndex'],\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'nx-tree__node',\n                    '[class.is-expanded]': 'isExpanded'\n                },\n                providers: [{ provide: CdkTreeNode, useExisting: NxTreeNodeComponent }],\n                template: \"<div class=\\\"nx-tree__node-box\\\">\\n  <ng-content></ng-content>\\n</div>\\n\"\n            }] }\n];\n/**\n * Wrapper for the CdkTree node definition with NDBX design styles.\n * @template T\n */\nclass NxTreeNodeDefDirective extends CdkTreeNodeDef {\n}\nNxTreeNodeDefDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxTreeNodeDef]',\n                inputs: [\n                    'when: nxTreeNodeDefWhen'\n                ],\n                providers: [{ provide: CdkTreeNodeDef, useExisting: NxTreeNodeDefDirective }]\n            },] }\n];\nNxTreeNodeDefDirective.propDecorators = {\n    data: [{ type: Input, args: ['nxTreeNode',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n * @template T\n */\nclass NxTreeNodePaddingDirective {\n    /**\n     * @param {?} _treeNode\n     * @param {?} _tree\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_treeNode, _tree, _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * CSS units used for the indentation value.\n         */\n        this.indentUnits = 'px';\n        this._offset = 0;\n        this._indent = 24;\n        this._setPadding();\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setPadding()));\n        }\n    }\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @return {?}\n     */\n    get level() { return this._level; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set level(value) {\n        this._level = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    /**\n     * The offset is added once on top of each indent. Default number is 0.\n     * @return {?}\n     */\n    get offset() { return this._offset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set offset(value) {\n        this._offset = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 24px from material design menu sub-menu spec.\n     * @return {?}\n     */\n    get indent() { return this._indent; }\n    /**\n     * @param {?} indent\n     * @return {?}\n     */\n    set indent(indent) {\n        /** @type {?} */\n        let value = indent;\n        /** @type {?} */\n        let units = 'px';\n        if (typeof indent === 'string') {\n            /** @type {?} */\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * The padding indent value for the tree node. Returns a string with px numbers if not null.\n     * @return {?}\n     */\n    _paddingIndent() {\n        /** @type {?} */\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        /** @type {?} */\n        const level = this._level || nodeLevel;\n        return level ? `${level * this._indent + this._offset}${this.indentUnits}` : null;\n    }\n    /**\n     * @return {?}\n     */\n    _setPadding() {\n        /** @type {?} */\n        const padding = this._paddingIndent();\n        /** @type {?} */\n        const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n        this._renderer.setStyle(this._element.nativeElement, paddingProp, padding);\n    }\n}\nNxTreeNodePaddingDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxTreeNodePadding]',\n            },] }\n];\n/** @nocollapse */\nNxTreeNodePaddingDirective.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNxTreeNodePaddingDirective.propDecorators = {\n    level: [{ type: Input, args: ['nxTreeNodePadding',] }],\n    offset: [{ type: Input, args: ['nxTreeNodePaddingOffset',] }],\n    indent: [{ type: Input, args: ['nxTreeNodePaddingIndent',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree's toggle with NDBX design styles.\n * @template T\n */\nclass NxTreeNodeToggleDirective extends CdkTreeNodeToggle {\n    constructor() {\n        super(...arguments);\n        this.recursive = false;\n    }\n}\nNxTreeNodeToggleDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxTreeNodeToggle]',\n                host: {\n                    '(click)': '_toggle($event)',\n                },\n                providers: [{ provide: CdkTreeNodeToggle, useExisting: NxTreeNodeToggleDirective }]\n            },] }\n];\nNxTreeNodeToggleDirective.propDecorators = {\n    recursive: [{ type: Input, args: ['nxTreeNodeToggleRecursive',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTreeModule {\n}\nNxTreeModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CdkTreeModule, CommonModule],\n                declarations: [NxTreeComponent, NxTreeNodeComponent, NxTreeNodeDefDirective,\n                    NxTreeNodePaddingDirective, NxTreeNodeToggleDirective, NxTreeNodeOutletDirective],\n                exports: [NxTreeComponent, NxTreeNodeComponent, NxTreeNodeDefDirective,\n                    NxTreeNodePaddingDirective, NxTreeNodeToggleDirective, NxTreeNodeOutletDirective]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T extends NxTreeNode` to flattened nodes of type `F extends NxFlatTreeNode`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F extends NxFlatTreeNode` with additional information.\n * @template T, F\n */\nclass NxTreeFlattener {\n    /**\n     * @param {?} node\n     * @param {?} level\n     * @return {?}\n     */\n    transformFunction(node, level) {\n        const { children } = node, rest = __rest(node, [\"children\"]);\n        return (/** @type {?} */ (Object.assign({}, rest, { level, expandable: Array.isArray(children) && children.length > 0 })));\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    getLevel(node) {\n        return node.level;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    isExpandable(node) {\n        return node.expandable;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    getChildren(node) {\n        return (/** @type {?} */ (node.children));\n    }\n    /**\n     * @param {?} node\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenNode(node, level, resultNodes, parentMap) {\n        /** @type {?} */\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            /** @type {?} */\n            const childrenNodes = this.getChildren(node);\n            if (Array.isArray(childrenNodes)) {\n                this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n            }\n            else {\n                childrenNodes.pipe(take(1)).subscribe((/**\n                 * @param {?} children\n                 * @return {?}\n                 */\n                children => {\n                    this._flattenChildren(children, level, resultNodes, parentMap);\n                }));\n            }\n        }\n        return resultNodes;\n    }\n    /**\n     * @param {?} children\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((/**\n         * @param {?} child\n         * @param {?} index\n         * @return {?}\n         */\n        (child, index) => {\n            /** @type {?} */\n            const childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1); // tslint:disable-line\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        }));\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    flattenNodes(structuredData) {\n        /** @type {?} */\n        const resultNodes = [];\n        structuredData.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => this._flattenNode(node, 0, resultNodes, [])));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     * @param {?} nodes\n     * @param {?} treeControl\n     * @return {?}\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        /** @type {?} */\n        const results = [];\n        /** @type {?} */\n        const currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => {\n            /** @type {?} */\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        }));\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `NxTree`.\n * The nested tree nodes of type `T extends NxTreeNode` are flattened through `NxTreeFlattener`, and converted\n * to type `F extends NxFlatTreeNode` for `NxTree` to consume.\n * @template T, F\n */\nclass NxTreeFlatDataSource extends DataSource {\n    /**\n     * @param {?} treeControl\n     * @param {?=} initialData\n     */\n    constructor(treeControl, initialData = []) {\n        super();\n        this.treeControl = treeControl;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject([]);\n        this._treeFlattener = new NxTreeFlattener();\n        this.data = initialData;\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        /** @type {?} */\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange,\n            this._flattenedData\n        ];\n        return merge(...changes).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n            return this._expandedData.value;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Flat tree control.\n * Able to expand/collapse a subtree recursively for flattened tree.\n * @template F\n */\nclass NxFlatTreeControl extends FlatTreeControl {\n    constructor() {\n        super((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.level), (/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.expandable));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxTreeModule, NxTreeComponent, NxTreeFlatDataSource, NxFlatTreeControl, NxTreeNodeComponent as ɵb, NxTreeNodeDefDirective as ɵc, NxTreeNodeOutletDirective as ɵa, NxTreeNodePaddingDirective as ɵd, NxTreeNodeToggleDirective as ɵe };\n\n//# sourceMappingURL=allianz-ngx-ndbx-tree.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { Observable, BehaviorSubject, of, Subject } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { Directive, Inject, InjectionToken, Optional, ViewContainerRef, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, ElementRef, Input, IterableDiffers, ViewChild, ViewEncapsulation, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n * @abstract\n * @template T\n */\nclass BaseTreeControl {\n    constructor() {\n        /**\n         * A selection model with multi-selection to track expansion status.\n         */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /**\n     * Toggles one single data node's expanded/collapsed state.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggle(dataNode) {\n        this.expansionModel.toggle(dataNode);\n    }\n    /**\n     * Expands one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expand(dataNode) {\n        this.expansionModel.select(dataNode);\n    }\n    /**\n     * Collapses one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapse(dataNode) {\n        this.expansionModel.deselect(dataNode);\n    }\n    /**\n     * Whether a given data node is expanded or not. Returns true if the data node is expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(dataNode);\n    }\n    /**\n     * Toggles a subtree rooted at `node` recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(dataNode)\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /**\n     * Collapse all dataNodes in the tree.\n     * @return {?}\n     */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /**\n     * Expands a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expandDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed);\n    }\n    /**\n     * Collapses a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapseDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n * @template T\n */\nclass FlatTreeControl extends BaseTreeControl {\n    /**\n     * Construct with flat tree data node functions getLevel and isExpandable.\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     */\n    constructor(getLevel, isExpandable) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        /** @type {?} */\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n * @template T\n */\nclass NestedTreeControl extends BaseTreeControl {\n    /**\n     * Construct with nested tree function getChildren.\n     * @param {?} getChildren\n     */\n    constructor(getChildren) {\n        super();\n        this.getChildren = getChildren;\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        /** @type {?} */\n        const allNodes = this.dataNodes.reduce((/**\n         * @param {?} accumulator\n         * @param {?} dataNode\n         * @return {?}\n         */\n        (accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode]), []);\n        this.expansionModel.select(...allNodes);\n    }\n    /**\n     * Gets a list of descendant dataNodes of a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /**\n     * A helper function to get descendants recursively.\n     * @protected\n     * @param {?} descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        /** @type {?} */\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((/**\n             * @param {?} child\n             * @return {?}\n             */\n            (child) => this._getDescendants(descendants, child)));\n        }\n        else if (childrenNodes instanceof Observable) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter((/** @type {?} */ (Boolean))))\n                .subscribe((/**\n             * @param {?} children\n             * @return {?}\n             */\n            children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            }));\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            },] },\n];\n/** @nocollapse */\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Context provided to the tree node component.\n * @template T\n */\nclass CdkTreeNodeOutletContext {\n    /**\n     * @param {?} data\n     */\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n * @template T\n */\nclass CdkTreeNodeDef {\n    /**\n     * \\@docs-private\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ],\n            },] },\n];\n/** @nocollapse */\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an error to be thrown when there is no usable data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n * @template T\n */\nclass CdkTree {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Level of nodes\n         */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     * @return {?}\n     */\n    get dataSource() { return this._dataSource; }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl) {\n            throw getTreeControlMissingError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        /** @type {?} */\n        const defaultNodeDefs = this._nodeDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (defaultNodeDefs.length > 1) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (this._dataSource instanceof Observable) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => this.renderNodeChanges(data)));\n        }\n        else {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /**\n     * Check for changes made in the data and render each change (node added/removed/moved).\n     * @param {?} data\n     * @param {?=} dataDiffer\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        /** @type {?} */\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((/**\n         * @param {?} item\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[(/** @type {?} */ (currentIndex))], (/** @type {?} */ (currentIndex)), viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (adjustedPreviousIndex)));\n                this._levels.delete(item.item);\n            }\n            else {\n                /** @type {?} */\n                const view = viewContainer.get((/** @type {?} */ (adjustedPreviousIndex)));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     * @param {?} data\n     * @param {?} i\n     * @return {?}\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        /** @type {?} */\n        const nodeDef = this._nodeDefs.find((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.when && def.when(i, data))) || this._defaultNodeDef;\n        if (!nodeDef) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     * @param {?} nodeData\n     * @param {?} index\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        /** @type {?} */\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        /** @type {?} */\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = (/** @type {?} */ (this._levels.get(parentData))) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        /** @type {?} */\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.decorators = [\n    { type: Component, args: [{selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree',\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            },] },\n];\n/** @nocollapse */\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef,] }]\n};\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n * @template T\n */\nclass CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     */\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits when the node's data has changed.\n         */\n        this._dataChanges = new Subject();\n        /**\n         * The role of the node should be 'group' if it's an internal node,\n         * and 'treeitem' if it's a leaf node.\n         */\n        this.role = 'treeitem';\n        CdkTreeNode.mostRecentTreeNode = (/** @type {?} */ (this));\n    }\n    /**\n     * The tree node's data.\n     * @return {?}\n     */\n    get data() { return this._data; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    get level() {\n        return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Focuses the menu item. Implements for FocusableOption.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _setRoleFromData() {\n        if (this._tree.treeControl.isExpandable) {\n            this.role = this._tree.treeControl.isExpandable(this._data) ? 'group' : 'treeitem';\n        }\n        else {\n            if (!this._tree.treeControl.getChildren) {\n                throw getTreeControlFunctionsMissingError();\n            }\n            /** @type {?} */\n            const childrenNodes = this._tree.treeControl.getChildren(this._data);\n            if (Array.isArray(childrenNodes)) {\n                this._setRoleFromChildren((/** @type {?} */ (childrenNodes)));\n            }\n            else if (childrenNodes instanceof Observable) {\n                childrenNodes.pipe(takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @param {?} children\n                 * @return {?}\n                 */\n                children => this._setRoleFromChildren(children)));\n            }\n        }\n    }\n    /**\n     * @protected\n     * @param {?} children\n     * @return {?}\n     */\n    _setRoleFromChildren(children) {\n        this.role = children && children.length ? 'group' : 'treeitem';\n    }\n}\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\nCdkTreeNode.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node',\n                },\n            },] },\n];\n/** @nocollapse */\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * For example:\n *   ```html\n *   <cdk-nested-tree-node>\n *     {{node.name}}\n *     <ng-template cdkTreeNodeOutlet></ng-template>\n *   </cdk-nested-tree-node>\n *   ```\n * The children of node will be automatically added to `cdkTreeNodeOutlet`, the result dom will be\n * like this:\n *   ```html\n *   <cdk-nested-tree-node>\n *     {{node.name}}\n *      <cdk-nested-tree-node>{{child1.name}}</cdk-nested-tree-node>\n *      <cdk-nested-tree-node>{{child2.name}}</cdk-nested-tree-node>\n *   </cdk-nested-tree-node>\n *   ```\n * @template T\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     */\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        /** @type {?} */\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes((/** @type {?} */ (childrenNodes)));\n        }\n        else if (childrenNodes instanceof Observable) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} result\n             * @return {?}\n             */\n            result => this.updateChildrenNodes(result)));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateChildrenNodes()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /**\n     * Add children dataNodes to the NodeOutlet\n     * @protected\n     * @param {?=} children\n     * @return {?}\n     */\n    updateChildrenNodes(children) {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            /** @type {?} */\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Clear the children dataNodes.\n     * @protected\n     * @return {?}\n     */\n    _clear() {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Gets the outlet for the current node.\n     * @private\n     * @return {?}\n     */\n    _getNodeOutlet() {\n        /** @type {?} */\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find((/**\n         * @param {?} outlet\n         * @return {?}\n         */\n        outlet => !outlet._node || outlet._node === this));\n    }\n}\nCdkNestedTreeNode.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node cdk-nested-tree-node',\n                },\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            },] },\n];\n/** @nocollapse */\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n * @template T\n */\nclass CdkTreeNodePadding {\n    /**\n     * @param {?} _treeNode\n     * @param {?} _tree\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_treeNode, _tree, _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * CSS units used for the indentation value.\n         */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setPadding(true)));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe((/**\n         * @return {?}\n         */\n        () => this._setPadding()));\n    }\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @return {?}\n     */\n    get level() { return this._level; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set level(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = (/** @type {?} */ (coerceNumberProperty(value, null)));\n        this._setPadding();\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     * @return {?}\n     */\n    get indent() { return this._indent; }\n    /**\n     * @param {?} indent\n     * @return {?}\n     */\n    set indent(indent) {\n        /** @type {?} */\n        let value = indent;\n        /** @type {?} */\n        let units = 'px';\n        if (typeof indent === 'string') {\n            /** @type {?} */\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * The padding indent value for the tree node. Returns a string with px numbers if not null.\n     * @return {?}\n     */\n    _paddingIndent() {\n        /** @type {?} */\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        /** @type {?} */\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    /**\n     * @param {?=} forceChange\n     * @return {?}\n     */\n    _setPadding(forceChange = false) {\n        /** @type {?} */\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            /** @type {?} */\n            const element = this._element.nativeElement;\n            /** @type {?} */\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            /** @type {?} */\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            this._renderer.setStyle(element, paddingProp, padding);\n            this._renderer.setStyle(element, resetProp, null);\n            this._currentPadding = padding;\n        }\n    }\n}\nCdkTreeNodePadding.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTreeNodePadding]',\n            },] },\n];\n/** @nocollapse */\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Node toggle to expand/collapse the node.\n * @template T\n */\nclass CdkTreeNodeToggle {\n    /**\n     * @param {?} _tree\n     * @param {?} _treeNode\n     */\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /**\n     * Whether expand/collapse the node recursively.\n     * @return {?}\n     */\n    get recursive() { return this._recursive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.decorators = [\n    { type: Directive, args: [{ selector: '[cdkTreeNodeToggle]' },] },\n];\n/** @nocollapse */\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                providers: [FocusMonitor, CdkTreeNodeDef]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BaseTreeControl, FlatTreeControl, NestedTreeControl, CdkNestedTreeNode, CdkTreeNodeOutletContext, CdkTreeNodeDef, CdkTreeNodePadding, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodeOutlet, CdkTree, CdkTreeNode, getTreeNoValidDataSourceError, getTreeMultipleDefaultNodeDefsError, getTreeMissingMatchingNodeDefError, getTreeControlMissingError, getTreeControlFunctionsMissingError, CdkTreeModule, CdkTreeNodeToggle };\n//# sourceMappingURL=tree.js.map\n","export default \"<div class=\\\"top\\\">\\n    <div>\\n        <div class=\\\"logo\\\"></div>\\n    </div>\\n    <div class=\\\"pathDefault\\\">\\n        <span *ngIf=\\\"upperPath\\\" class=\\\"prePath\\\">></span>\\n        <span *ngIf=\\\"upperPath\\\" class=\\\"path\\\">{{upperPath}}</span>\\n        <span *ngIf=\\\"path\\\" class=\\\"prePath\\\">></span>\\n        <span *ngIf=\\\"path\\\" class=\\\"path\\\">{{path}}</span>\\n    </div>\\n    <div *ngIf=\\\"!subMenus\\\" class=\\\"home\\\">\\n        <div>安聯ｅ智慧</div>\\n    </div>       \\n    <div *ngIf=\\\"tabMenus\\\" class=\\\"tabDefault\\\" >\\n        <div *ngFor=\\\"let tab of tabMenus; let idx = index;\\\" (click)=\\\"tabChanged(tab)\\\" class=\\\"tab\\\">\\n            <div>\\n            <input type=\\\"radio\\\" id=\\\"{{tab.web_function}}\\\" name=\\\"tab\\\" value=\\\"{{tab.web_function}}\\\"  [checked]=\\\"idx === 0\\\">\\n                <label for=\\\"{{tab.web_function}}\\\">{{tab.web_func_display_text}}</label>             \\n            </div>  \\n        </div>\\n    </div>\\n    <div *ngIf=\\\"subMenus\\\">  \\n        <div class=\\\"line\\\"> </div>  \\n    </div>\\n    <section class=\\\"carousel slide\\\" id=\\\"myCarousel\\\" data-ride=\\\"carousel\\\">\\n    <div class=\\\"carousel-inner\\\">\\n        <div class=\\\"carousel-item {{i==0?'active':''}}\\\" *ngFor=\\\"let chunkProducts of subMenusSplic;let i =index;\\\">\\n            <div class=\\\"divBlock\\\">\\n                <div  *ngFor=\\\"let slider of chunkProducts;\\\" (click)=\\\"RestApi(slider,'_blank')\\\">\\n                        <img class=\\\"img-content\\\" [src]=\\\"slider['web_obj_display_image']\\\" alt=\\\"Carousel 1\\\">\\n                        <div class=\\\"txt-content\\\">{{slider.web_obj_display_text}}</div>\\n                </div>\\n            </div>              \\n        </div>\\n\\n    </div>\\n    <div style=\\\"display: inline-block\\\" *ngIf=\\\"showIndicators==true\\\">\\n        <ol class=\\\"carousel-indicators\\\"> \\n            <li data-target=\\\"#myCarousel\\\" *ngFor=\\\"let li of subMenusSplic; let i = index;\\\" [attr.data-slide-to]=\\\"i\\\" [ngClass]=\\\"{'active' : i == 0}\\\" ></li>    \\n        </ol>\\n    </div>\\n</section>\\n    <div *ngIf=\\\"selMenuBK !=null && subMenus\\\"  class=\\\"menuBk\\\">\\n        <img src='assets/images/content/{{selMenuBK}}.png' >\\n    </div>        \\n</div>\\n\"","export default \"<div class=\\\"flexBlock\\\">\\n    <div class=\\\"fb MenuBlock\\\">\\n        <app-menu></app-menu>\\n    </div>\\n    <div class=\\\"fb ContentBlock\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n\"","export default \"\\n<div class=\\\"main\\\">\\n  <div class=\\\"home\\\" (click)=\\\"home();\\\">\\n    <div>\\n      <img src='assets/images/icon-home.png' >\\n    </div>\\n  </div>\\n  <div class=\\\"logout\\\" (click)=\\\"logout();\\\">\\n    <div>\\n      <img src='assets/images/icon-Logout.png' >\\n    </div>  \\n    <div class=\\\"font\\\" >登出</div>\\n  </div>\\n\\n</div>\\n<cdk-virtual-scroll-viewport itemSize=\\\"90\\\" class=\\\"v-scroll\\\">\\n  <div class=\\\"menu\\\">\\n    <div *cdkVirtualFor=\\\"let item of menuData\\\" >\\n      <div class=\\\"menuItem\\\" \\n        (click)=\\\"menuItemClick(item)\\\"\\n      >\\n      <img src='assets/images/object-icon/{{item.web_menu_display_icon}}.png' *ngIf=\\\"item.web_menu_display_icon\\\"><br>\\n      {{item.web_func_display_text}}\\n      </div>\\n      <div *ngIf=\\\"item.children && item.expanded\\\" style=\\\"background-color: #fff;\\\">\\n        <div *ngFor=\\\"let child of item.children;let idx=index;\\\"  (click)=\\\"childItemClick(item,child)\\\" class=\\\"childitem\\\">\\n          <div>\\n          <input type=\\\"radio\\\" id=\\\"{{child.web_function}}\\\" name=\\\"menu\\\" value=\\\"{{child.web_function}}\\\" [checked]=\\\"idx === 0\\\">\\n          <label for=\\\"{{child.web_function}}\\\">{{child.web_function_short_name}}</label>\\n          </div> \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</cdk-virtual-scroll-viewport>\\n<div class=\\\"forgetPassword\\\" (click)=\\\"modifyPwd();\\\">\\n  <div>\\n    <img src=\\\"assets/images/forget-password.png\\\">修改密碼\\n  </div>\\n  \\n</div>\"","export default \"\\n.top{\\n    position: relative;\\n}\\n.tabDefault{\\n    margin-top: 0%;\\n    display:flex;\\n    flex-direction: row; \\n}\\n.tab{\\n    text-align: center;\\n    width: 30%;\\n    margin-left: -5%;\\n    z-index: 1;\\n}\\n.tab:first-of-type{\\n    width: 25%;\\n    margin-left: 0%;\\n    z-index: 99;\\n}\\n.tab>div input[type=\\\"radio\\\"]{\\n    opacity: 0;\\n    display: none;\\n    width: 0;\\n}\\n.tab>div label{   \\n    border-radius: 0px 42px 0px 0px;\\n    border: 2px solid #009CC8;\\n    background-color: #fff;\\n    border-left: 0px;\\n    display: block;\\n    padding: 10px 20px;\\n    z-index: 1;\\n    font-size: 15px;\\n  }\\n.tab>div>input[type=\\\"radio\\\"]:checked+label{\\n    background: transparent linear-gradient(180deg,#0CC1F1 0%, #0A7A9A 100%) 0% 0% no-repeat padding-box;\\n    /* background: transparent linear-gradient(180deg, #0CC1F1 0%, #0A7A9A 100%) 0% 0% no-repeat padding-box; */\\n    /* border: 2px solid #009CC8;\\n    border-radius: 0px 42px 0px 0px; */\\n    color: #FFFFFF;\\n    z-index: -1;\\n    font-size: 15px;\\n  }\\n/* .tab:first-of-type>div>input[type=\\\"radio\\\"]:checked+label{\\n    background: transparent linear-gradient(180deg, #0CC1F1 0%, #0A7A9A 100%) 0% 0% no-repeat padding-box;\\n    color: #FFFFFF;\\n    z-index: 99;\\n  } */\\n.divBlock{\\n    margin-top: 3%;\\n    margin-left: 5%;\\n    margin-right: 5%;\\n    width:90%;\\n    height:90%;\\n    display:inline-block;\\n    /* text-align: center; */\\n    position: relative;\\n    z-index: 2;\\n}\\n.divBlock>div{\\n    width:25%;\\n    height: 50%;\\n    display: inline-block;\\n    z-index: 3;\\n    text-align: center;\\n    margin-bottom: 5%;\\n    vertical-align: top;\\n}\\n.home{\\n    background-image: url('homepage.png');\\n    background-repeat: no-repeat;\\n    background-attachment: fixed;\\n    background-position: 80% 80%;\\n    position: fixed;\\n    top: 0;\\n    bottom: 0;\\n    left: 0%;\\n    width: 100%;\\n    background-size: 60%;\\n    z-index: -99;\\n    opacity: 1;\\n}\\n.home>div{\\n  color: #00428B;\\n  position: fixed;\\n  letter-spacing: NaNpx;\\n  opacity: 1;\\n  font-size: 40px;\\n  top: 38%;\\n  left: 40%;\\n  font-weight: 900;\\n}\\n.logo{\\n    width: 100%;\\n    height: 100%;\\n    background-image: url('Allianz_logo.png');\\n    background-repeat: no-repeat;\\n    background-attachment: fixed;\\n    background-position: 95% 5%;\\n    position: fixed;\\n    top: 0;\\n    bottom: 0;\\n    left: 0%;\\n    width: 100%;\\n    background-size: 15%;\\n    z-index: -99;\\n    opacity: 1;\\n    /* border-bottom: chocolate 1px solid; */\\n}\\n.prePath\\n{    \\n    color: #0098C8;\\n    font-weight: 900;\\n    font-size: 25px;\\n    opacity: 1;\\n}\\n.path{\\n    margin-left: 1%;\\n    margin-right: 1%;\\n    text-align: center;\\n    font-size: 25px;\\n    font-weight: 900;\\n    letter-spacing: 1.8px;\\n    color:#00428B;\\n}\\n.pathDefault{\\n    font-family: sans-serif;\\n    margin-top: 8%;\\n    margin-bottom: 2%;\\n    margin-left: 5%;\\n}\\n.line{\\n    width: 100%;\\n    height: 8px;\\n    background: #009CC8 0% 0% no-repeat padding-box;\\n}\\n.menuBk{\\n    position: fixed;\\n    top: 62%;\\n    bottom: 0;\\n    left: 65%;\\n    z-index: 1;  \\n}\\n.menuBk>img{\\n  width: 88%;\\n}\\n.img-content\\n{\\n  width: 50%;\\n  height: auto;\\n}\\n.txt-content\\n{\\n  width: 100%;\\n  height: auto;\\n  margin-top: 1%;\\n  font-size: 15px;\\n}\\nlabel{\\n  margin-bottom: 0;\\n}\\n.carousel {\\n  position: relative;\\n}\\n.carousel.pointer-event {\\n  touch-action: pan-y;\\n}\\n.carousel-inner {\\n  position: relative;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n.carousel-inner::after {\\n  display: block;\\n  clear: both;\\n  content: \\\"\\\";\\n}\\n.carousel-item {\\n  position: relative;\\n  display: none;\\n  float: left;\\n  width: 100%;\\n  margin-right: -100%;\\n  -webkit-backface-visibility: hidden;\\n  backface-visibility: hidden;\\n  transition: transform 0.6s ease-in-out;\\n}\\n@media screen and (prefers-reduced-motion: reduce) {\\n  .carousel-item {\\n    transition: none;\\n  }\\n}\\n.carousel-item.active,\\n.carousel-item-next,\\n.carousel-item-prev {\\n  display: block;\\n}\\n.carousel-item-next:not(.carousel-item-left),\\n.active.carousel-item-right {\\n  transform: translateX(100%);\\n}\\n.carousel-item-prev:not(.carousel-item-right),\\n.active.carousel-item-left {\\n  transform: translateX(-100%);\\n}\\n.carousel-fade .carousel-item {\\n  opacity: 0;\\n  transition-property: opacity;\\n  transform: none;\\n}\\n.carousel-fade .carousel-item.active,\\n.carousel-fade .carousel-item-next.carousel-item-left,\\n.carousel-fade .carousel-item-prev.carousel-item-right {\\n  z-index: 1;\\n  opacity: 1;\\n}\\n.carousel-fade .active.carousel-item-left,\\n.carousel-fade .active.carousel-item-right {\\n  z-index: 0;\\n  opacity: 0;\\n  transition: 0s 0.6s opacity;\\n}\\n@media screen and (prefers-reduced-motion: reduce) {\\n  .carousel-fade .active.carousel-item-left,\\n  .carousel-fade .active.carousel-item-right {\\n    transition: none;\\n  }\\n}\\n.carousel-control-prev,\\n.carousel-control-next {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 15%;\\n  color: #fff;\\n  text-align: center;\\n  opacity: 0.5;\\n  transition: opacity 0.15s ease;\\n}\\n@media screen and (prefers-reduced-motion: reduce) {\\n  .carousel-control-prev,\\n  .carousel-control-next {\\n    transition: none;\\n  }\\n}\\n.carousel-control-prev:hover, .carousel-control-prev:focus,\\n.carousel-control-next:hover,\\n.carousel-control-next:focus {\\n  color: #fff;\\n  text-decoration: none;\\n  outline: 0;\\n  opacity: 0.9;\\n}\\n.carousel-control-prev {\\n  left: 0;\\n}\\n.carousel-control-next {\\n  right: 0;\\n}\\n.carousel-control-prev-icon,\\n.carousel-control-next-icon {\\n  display: inline-block;\\n  width: 20px;\\n  height: 20px;\\n  background: transparent no-repeat center center;\\n  background-size: 100% 100%;\\n}\\n.carousel-control-prev-icon {\\n  background-image: url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/svg%3e\\\");\\n}\\n.carousel-control-next-icon {\\n  background-image: url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/svg%3e\\\");\\n}\\n.carousel-indicators {\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: 15;\\n  display: flex;\\n  justify-content: center;\\n  padding-left: 0;\\n  list-style: none;\\n  margin-left: 0;\\n  margin-right: 0;\\n}\\n.carousel-indicators li {\\n  box-sizing: content-box;\\n  flex: 0 1 auto;\\n  width: 10px;\\n  height: 10px;\\n  /* margin-right: 3px;\\n  margin-left: 3px; */\\n  text-indent: -999px;\\n  cursor: pointer;\\n  /* background-color: #fff; */\\n  background: #4890D9 0% 0% no-repeat padding-box;\\n  background-clip: padding-box;\\n  border: 5px solid transparent;\\n  opacity: .5;\\n  transition: opacity 0.6s ease;\\n  border-radius: 50%;\\n  margin: 0;\\n  padding: 0;\\n}\\n@media screen and (prefers-reduced-motion: reduce) {\\n  .carousel-indicators li {\\n    transition: none;\\n  }\\n}\\n.carousel-indicators .active {\\n  opacity: 1;\\n}\\n.carousel-indicators ol {\\n  width: 100%;\\n  height: 10%;\\n  margin: 0;\\n}\\n.carousel-caption {\\n  position: absolute;\\n  right: 15%;\\n  bottom: 20px;\\n  left: 15%;\\n  z-index: 10;\\n  /* padding-top: 20px;\\n  padding-bottom: 20px; */\\n  color: #fff;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Location, JsonPipe } from '@angular/common';\nimport { HttpParameterCodec } from '@angular/common/http';\nimport { ActivatedRoute, Params,Router } from '@angular/router';\n//import {safariviewcontroller} from 'cordova-plugin-safariviewcontroller';\n\n\nimport { MenuNode, ObjectNode } from '../../class/menu';\nimport { MstrSessionDetail } from '../../class/mstr-session';\nimport { IApiConfig } from '../../class/environment';\nimport { MenuService } from '../../service/menu.service';\nimport { MstrLoginService } from '../../service/mstr-login.service';\nimport { ModalService } from '../../shared/modal/modal.service';\nimport { LoadingService } from '../../shared/loading/loading.service';\nimport { Observable } from 'rxjs';\nimport { ModalOptions, ModalType } from '../../class/modal';\nimport { CommonUtilityModule } from '../../shared/common-utility/common-utility.module';\nimport {ApiCommonModule} from '../../service/api-common/api-common.module';\nimport { envData } from 'src/app/environment/environment';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { url } from 'inspector';\ndeclare const cordova;\ndeclare const window;\ndeclare const document;\n\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n  //@Input() menu:MenuNode;\n  code: string;\n  upperPath: string;\n  path: string;\n  inAppBrowserRef;\n  subMenus: ObjectNode[];\n  tabItem: MenuNode;\n  tabMenus: MenuNode[];\n  itemCount: number;\n  selTab: string;\n  selMenuBK: string;\n  subMenusSplic: any;\n  showIndicators: boolean = false;\n  subMenuCnt: number = 0;\n  iconPath: string = \"assets/images/object-icon/\"\n  \n\n  constructor(\n    private route: ActivatedRoute,\n    private router:Router,\n    private menuService: MenuService,\n    //private mstrLoginService: MstrLoginService,\n    protected apiCommon:ApiCommonModule,\n    private commonUtility: CommonUtilityModule,\n    //private modalService: ModalService,\n    //private loadingService: LoadingService,\n    //private location: Location,\n  ) {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.code = params[\"code\"];\n        // this.selMenuBK= commonUtility.tranNull(this.commonUtility.getSessionValue(\"selMenuBK\"));\n        this.selMenuBK = this.commonUtility.getSessionValue(\"selMenuBK\");\n        if (this.selMenuBK == 'null') {\n          this.selMenuBK = 'pic-Default';\n        }\n        if (this.code != null) {\n          console.warn(\"content_A\" + this.code);\n          this.getTabMenu(this.code);\n        }\n        else {\n          console.warn(\"content_B\" + this.code);\n          //this.subMenus = JSON.parse(sessionStorage.getItem(\"object\"));\n        }\n        // this.menuService.getSubMenus(this.code)\n        // .subscribe(subMenus=>this.subMenus= subMenus);\n      }\n    );\n    // this.itemCount = this.subMenus.length;\n  }\n\n  ngOnInit() {\n    //let code = this.route.snapshot.paramMap.get('code');\n    console.log(\"content_init_\" + this.code);\n    // this.selMenuBK= commonUtility.tranNull(this.commonUtility.getSessionValue(\"selMenuBK\"));\n    this.selMenuBK = this.commonUtility.getSessionValue(\"selMenuBK\");\n    if (this.selMenuBK == 'null') {\n      this.selMenuBK = 'pic-Default';\n    }\n    console.log(\"content_init_BK_\" + this.selMenuBK);\n    if (this.code != null) {\n      this.getTabMenu(this.code)\n    }\n  }\n  getTabMenu(code: string): void {\n    this.tabItem = JSON.parse(this.commonUtility.getSessionValue(\"currentMenu\"));\n    this.upperPath = this.tabItem.web_func_display_text;\n    this.path = \"\";\n    if (this.tabItem.children != null) {\n      this.tabMenus = this.tabItem.children;\n      this.tabMenus.sort((a, b) => a.upper_display_order - b.upper_display_order);\n      this.tabChanged(this.tabMenus[0]);\n      // this.getSubMenu(this.tabMenus[0].web_function);\n    }\n    else {\n      this.tabMenus = null;\n      this.getSubMenu(code);\n    }\n  }\n\n  tabChanged(code: MenuNode) {\n    this.selTab = code.web_function;\n    this.path = code.web_func_display_text;\n    this.getSubMenu(code.web_function);\n    // this.getSubMenu(${$event.tab})\n    // this.messages.push(`Selected Index: ${$event.index} Label: ${$event.tab.label}`);\n    // this.logMessage = this.messages.join('\\n');\n  }\n\n  getSubMenu(code: string): void {\n\n    //const code = +this.route.snapshot.paramMap.get('code');\n    console.log(this.route.snapshot.paramMap);\n    console.warn(code + '_content');\n    this.menuService.getSubMenus(code)\n      .subscribe(subMenus => this.subMenus = subMenus);\n\n    this.subMenus.sort((a, b) => a.display_order - b.display_order);\n    this.subMenuCnt = 0;\n    this.subMenus.forEach(obj => {\n      this.subMenuCnt++;\n      if (obj.web_obj_display_image != 'null' && obj.web_obj_display_image.toUpperCase() != 'X') {\n        obj.web_obj_display_image = `${this.iconPath}${obj.web_obj_display_image}.png`;\n      }\n      else {\n        obj.web_obj_display_image = `${this.iconPath}icon-default.png`;\n      }\n\n    });\n    this.subMenusSplic = this.chunks();\n    if (this.subMenuCnt > this.commonUtility.contentSize) {\n      this.showIndicators = true;\n    }\n    else {\n      this.showIndicators = false;\n    }\n    // menus=>this.menus=menus\n    console.log(\"submenu_\" + this.subMenuCnt + \"_\" + this.showIndicators);\n  }\n/*   checkMstrNeedLogin(dashboardUseMode: string): boolean {\n    var mstrSession: MstrSessionDetail;\n    var dateNow: string;\n    var needLogin: boolean = true;\n    dateNow = this.commonUtility.Date + this.commonUtility.TimeStamp\n    mstrSession = this.getMstrSession(dashboardUseMode);\n    if (mstrSession != null) {\n      if (mstrSession.sessionExpiredTime >= dateNow) {\n        needLogin = false;\n      }\n    }\n    return needLogin;\n  } */\n/*   getMstrSession(dashboardUseMode: string): MstrSessionDetail {\n    var mstrSession: MstrSessionDetail = null;\n    switch (dashboardUseMode.toUpperCase()) {\n      case \"CURRENT USER_N\":\n      case \"CURRENT USER\":\n        if (sessionStorage.getItem(\"CurrentSession\") != null) {\n          mstrSession = JSON.parse(this.commonUtility.getSessionValue(\"CurrentSession\"));\n        }\n        break;\n      default:\n        if (sessionStorage.getItem(\"SingleSession\") != null) {\n          mstrSession = JSON.parse(this.commonUtility.getSessionValue(\"SingleSession\"));\n        }\n        break;\n    }\n    return mstrSession;\n  } */\n  \n  /* mstrLogin(menu: ObjectNode, target:string) {\n    var mstrSession: MstrSessionDetail;\n    var bolIsNeedLogin: boolean;\n    var dashboardUseMode: string = menu.dashboard_use_mode;\n    var msg: ModalOptions;\n    var result: boolean = true;\n    var now = new Date();\n    now.setMinutes(now.getMinutes() + 8); // timestamp\n    now = new Date(now); // Date object\n\n    var urlLink: string = menu.web_obj_link_url;      //報表連結\n    var arrUrlParm: string[] = urlLink.split(\"&\");    //參數array\n\n    var mstrProject: string;\n    var mstrPort: string;\n\n    var url:string= \"\";\n    console.log(target);\n    bolIsNeedLogin = this.checkMstrNeedLogin(dashboardUseMode);\n    arrUrlParm.forEach(parm => {\n      var parmVal: string[] = parm.split(\"=\")\n      switch (parmVal[0].toUpperCase()) {\n        case \"PROJECT\":\n          mstrProject = parmVal[1];\n          break;\n        case \"PORT\":\n          mstrPort = parmVal[1];\n          break;\n        default:\n          break;\n      };\n    });\n    if (bolIsNeedLogin) {\n      this.mstrLoginService.mstrLogin(mstrProject, this.commonUtility.getSessionValue(\"loginUser\"), dashboardUseMode)\n        .subscribe(\n          res => {\n            this.loadingService.hide();\n            switch (res.ResponseDetails.responseCode) {\n              case \"000\":\n                let mstrSession:MstrSessionDetail={\n                  dashboardUseMode : dashboardUseMode,\n                  sessionInfo:res.sessionInfo,\n                  sessionState:res.sessionState,\n                  sessionExpiredTime:this.commonUtility.formatDate(now)+this.commonUtility.formatTime(now),\n                  iServer:res.iServer,\n                  iisServer:res.iisServer\n                };\n                switch(dashboardUseMode.toUpperCase())\n                {\n                  case \"CURRENT USER_N\":\n                    case \"CURRENT USER\":\n                      this.commonUtility.setSessionValue(\"CurrentSession\",JSON.stringify(mstrSession));\n                      break;\n                    default:\n                      this.commonUtility.setSessionValue(\"SingleSession\",JSON.stringify(mstrSession));\n                      break;\n                }                \n                console.log(\"login\");\n                console.log(mstrSession);\n                this.exexDoc(arrUrlParm,mstrSession,menu.web_obj_attribute,target);\n                result=true;\n                break;\n              case \"008\":\n                msg = {\n                  headText: 'MSTR登入失敗',\n                  txtContent: res.ReasonCode.map(\n                    item =>\n                      `${item.reasonMsg}(錯誤碼：${item.reasonCode})`\n                  )\n                    .join(' '),\n                  type: ModalType.Confirm\n                };\n                this.modalService.open(msg,'sm');\n                result = false;\n                break;\n              default:\n                msg = {\n                  headText: 'MSTR登入失敗',\n                  txtContent: '資料異常，請聯絡系統管理員。',\n                  type: ModalType.Confirm\n                };\n                this.modalService.open(msg,'sm');\n                result = false;\n                break;\n            };\n          },        \n          ()=>{\n            console.log('mstrlogin_oncomplete');\n            if (result)\n            {\n              console.log(mstrSession);\n            }\n          }\n        )\n    }\n    else {\n      console.log(\"no login\");\n      mstrSession = this.getMstrSession(dashboardUseMode);\n      this.exexDoc(arrUrlParm,mstrSession,menu.web_obj_attribute,target);\n    }\n  }\n */\n/*   exexDoc(arrUrlParm:string[], mstrSession:MstrSessionDetail, objAttribute:string, target:string ){\n    var urlPrefix: string = this.commonUtility.getUrlPrefix();\n    var rptUrl: string = \"/microstrategy/asp/Main.aspx?\";\n    var dashboardUseMode= mstrSession.dashboardUseMode;\n    var UrlParm: string = \"\";\n    var domain:string = mstrSession.iisServer;\n    var iServer:string=mstrSession.iServer;\n    var mstrLoginSession =\"\";\n    var msg: ModalOptions;\n    var url:string= \"\";\n    console.log(\"execDoc\");\n    // switch (envData.env) {\n    //   case \"10\":\n    //     domain = \"113.196.86.112\";\n    //     break;\n    // }\n    switch (dashboardUseMode.toUpperCase()) {\n      case \"CURRENT USER_N\":\n        mstrLoginSession = mstrSession.sessionInfo;\n        break;\n      default:\n        mstrLoginSession = mstrSession.sessionState;\n        UrlParm = \"Server=\" + iServer + \"&\";\n        break;\n    }\n    arrUrlParm.forEach(parm => {\n      var parmVal: string[] = parm.split(\"=\")\n      switch (dashboardUseMode.toUpperCase()) {\n        case \"CURRENT USER_N\":\n          switch (parmVal[0].toUpperCase()) {\n            case \"CURRENTVIEWMEDIA\":\n            case \"VISMODE\":\n              switch (objAttribute.toUpperCase()) {\n                case \"DASHBOARD\":\n                  //UrlParm += \"&share=1\";\n                  break;\n                default:\n                  UrlParm += parm + \"&\";\n                  break;\n              }\n              break;\n            case \"PROJECT\":\n            case \"SERVER\":\n            case \"PORT\":\n              break;\n            default:\n              UrlParm += parm + \"&\";\n              break;\n          }\n          break;\n        case \"CURRENT USER\":\n        case \"SINGLE USER\":\n          switch (parmVal[0].toUpperCase()) {\n            case \"CURRENTVIEWMEDIA\":\n            case \"VISMODE\":\n              switch (objAttribute.toUpperCase()) {\n                case \"DASHBOARD\":\n                  //UrlParm += \"&share=1\";\n                  break;\n                default:\n                  UrlParm += parm + \"&\";\n                  break;\n              }\n              break;\n            default:\n              UrlParm += parm + \"&\";\n              break;\n          }\n          break;\n      }\n\n    });\n    switch (objAttribute.toUpperCase()) {\n      case \"DASHBOARD\":\n        UrlParm += \"share=1&\";\n        break;\n    }\n    UrlParm += \"hiddensections=header,path,dockTop,dockLeft,footer&\";\n    UrlParm += \"mstrSmgr=\" + mstrLoginSession;\n    // this.modalService.open(msg,'lg');\n    // console.log(urlPrefix + domain + rptUrl + UrlParm);\n    //this.commonUtility.openUrl('', '_blank');\n    url = urlPrefix + domain + rptUrl + UrlParm\n    sessionStorage.setItem(\"objUrl\",urlPrefix + domain + rptUrl + UrlParm );\n    console.log(urlPrefix + domain + rptUrl + UrlParm);\n    // this.commonUtility.openRouteUrl(url,'_blank');\n    //this.openDoc();\n    this.commonUtility.openUrl(urlPrefix + domain + rptUrl + UrlParm, target);\n  } */\n  RestApi(menu: ObjectNode, target:string)\n  {\n    var apiId:string = \"mstrRestApiPage\";\n    var ApiConfig:IApiConfig = this.apiCommon.getApiConfigByApiID(apiId);\n    var parm:string =\"\";\n\n    const apiUrl = `${ApiConfig.domain}${ApiConfig.path}`;\n\n    parm = \"?SystemCode=\" +this.commonUtility.systemId;\n    parm += \"&Token=\"+this.commonUtility.getSessionValue('authenticationToken');\n    parm += \"&ObjectId=\"+menu.web_object;\n    parm += \"&accType=\"+this.commonUtility.accType;\n    console.log(apiUrl);\n    this.commonUtility.openUrl(apiUrl+parm, target);\n  }\n\n  chunks() {\n    let results = [];\n    results = [];\n    console.log(this.subMenus.length);\n    while (this.subMenus.length) {\n      results.push(this.subMenus.splice(0, this.commonUtility.contentSize));\n    }\n    console.log(results);\n    return results;\n  }\n  test(parm: string) {\n    console.log(parm);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {MainComponent} from './main.component';\nimport {ContentComponent} from './content/content.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:MainComponent,\n    children:[\n      {\n        path:':code',\n        component:ContentComponent\n      },\n      {\n        path:'',\n        component:ContentComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","export default \"\\nbody{\\n    overflow-y: hidden; /* Hide vertical scrollbar */\\n    overflow-x: hidden; /* Hide horizontal scrollbar */\\n  }\\n.flexBlock{\\n    width: 100%;\\n    font-family: DFHei Std W14;\\n    position: absolute;\\n    top:0;\\n    bottom: 0;\\n    left: 0;\\n\\n    display: flex;\\n    flex-direction: row;   \\n}\\n.flexBlock>.fb{\\n    flex:11 auto;\\n    width:30px;\\n}\\n.flexBlock>.MenuBlock{\\n    background: #007AB3;\\n    width:20%;\\n}\\n.flexBlock>.ContentBlock{\\n    background-image: url('BG-curve.png');\\n    background-repeat: no-repeat;\\n    background-position: 100% 100%;\\n    background-size: contain;\\n    width: 80%;\\n    padding: 0px;\\n}\\n.logo{\\n    position: absolute; \\n    right: 5%; \\n    top: 5%;  \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksa0JBQWtCLEVBQUUsNEJBQTRCO0lBQ2hELGtCQUFrQixFQUFFLDhCQUE4QjtFQUNwRDtBQUNGO0lBQ0ksV0FBVztJQUNYLDBCQUEwQjtJQUMxQixrQkFBa0I7SUFDbEIsS0FBSztJQUNMLFNBQVM7SUFDVCxPQUFPOztJQUVQLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLFlBQVk7SUFDWixVQUFVO0FBQ2Q7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixTQUFTO0FBQ2I7QUFDQTtJQUNJLHFDQUFpRTtJQUNqRSw0QkFBNEI7SUFDNUIsOEJBQThCO0lBQzlCLHdCQUF3QjtJQUN4QixVQUFVO0lBQ1YsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxPQUFPO0FBQ1giLCJmaWxlIjoic3JjL2FwcC9tYWluL21haW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuYm9keXtcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47IC8qIEhpZGUgdmVydGljYWwgc2Nyb2xsYmFyICovXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuOyAvKiBIaWRlIGhvcml6b250YWwgc2Nyb2xsYmFyICovXG4gIH1cbi5mbGV4QmxvY2t7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1mYW1pbHk6IERGSGVpIFN0ZCBXMTQ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDowO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93OyAgIFxufVxuLmZsZXhCbG9jaz4uZmJ7XG4gICAgZmxleDoxMSBhdXRvO1xuICAgIHdpZHRoOjMwcHg7XG59XG4uZmxleEJsb2NrPi5NZW51QmxvY2t7XG4gICAgYmFja2dyb3VuZDogIzAwN0FCMztcbiAgICB3aWR0aDoyMCU7XG59XG4uZmxleEJsb2NrPi5Db250ZW50QmxvY2t7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaW1hZ2VzL2NvbnRlbnQvQkctY3VydmUucG5nJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDEwMCU7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgIHdpZHRoOiA4MCU7XG4gICAgcGFkZGluZzogMHB4O1xufVxuLmxvZ297XG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcbiAgICByaWdodDogNSU7IFxuICAgIHRvcDogNSU7ICBcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport {MenuService} from '../service/menu.service';\nimport { ReturnStatement } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  bodyText: string;\n  constructor(\n    private menuService:MenuService\n  ) { \n  }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n//allianz\nimport * as path from '@allianz/ngx-ndbx';\nimport{NxGridModule} from '@allianz/ngx-ndbx/grid';\nimport {NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NxMenuModule} from '@allianz/ngx-ndbx/menu';\nimport {NxSidebarModule} from '@allianz/ngx-ndbx/sidebar';\nimport {NxActionModule} from '@allianz/ngx-ndbx/action';\nimport {NxTreeModule} from '@allianz/ngx-ndbx/tree';\nimport {NxTabsModule} from '@allianz/ngx-ndbx/tabs';\nimport { NxExpertModule } from '@allianz/ngx-ndbx/config';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { MenuComponent } from './menu/menu.component';\nimport { ContentComponent } from './content/content.component';\nimport { MainComponent } from './main.component';\n\n\n@NgModule({\n  declarations: [MenuComponent, ContentComponent, MainComponent],\n  imports: [\n    CommonModule,\n    path.NxButtonModule,\n    ScrollingModule,\n    NxGridModule,\n    NxIconModule,\n    NxMenuModule,\n    NxTreeModule,\n    NxTabsModule,\n    NxSidebarModule,\n    NxActionModule,\n    NxExpertModule,\n    MainRoutingModule\n  ]\n})\nexport class MainModule { }\n","export default \"\\n.menuItem{\\n  background: #007AB3;\\n  color: #FFFFFF;\\n  text-align: center;\\n  display: block;\\n  font-size: 16px;\\n  letter-spacing: 2px;\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n}\\n.menuItem>img{\\n  width: 24%;\\n}\\n.menuItem:hover{\\n  background: #007AB3;\\n  color: #FFFFFF;  \\n}\\n.childitem\\n{\\n  width: 100%; \\n  background-color: #FFFFFF;\\n  font-size: 15px;\\n}\\n.childitem>div\\n{\\n  text-align: center;\\n}\\n.childitem>div input[type=\\\"radio\\\"]{\\n  opacity: 0;\\n  display: none;\\n  width: 0;\\n}\\n.childitem>div label{\\n  display: block;\\n  padding:10px 20px;\\n  background-color: #FFFFFF;\\n  border-bottom: 1px solid #007AB3;\\n}\\n.childitem>div input[type=\\\"radio\\\"]:checked+label{\\n  display: block;\\n  padding:10px 20px;\\n  background-color: #D4CDCD;\\n  color: #007AB3;\\n}\\n.top {\\n  background: #007AB3;\\n}\\n.menu{\\n  margin-top: 0%;\\n  padding-top: 0%;\\n}\\n.main{\\n  display: flex;\\n  flex-direction: row; \\n}\\n.home{\\n  margin-top: 7%;\\n  margin-left: 5%;\\n  /* top: 20%;\\n  left: 10%;\\n  width: 34px;\\n  height: 30px; */\\n  /* position: relative; */\\n  /* UI Properties */\\n}\\n.home>div>img{\\n  width: 85%;\\n}\\n.logout{\\n  margin-top: 7%;\\n  margin-left: 38%;\\n  display: flex;\\n  width:50%;\\n  /* top: 20%;\\n  left: 50%;\\n  width: 37px;\\n  height: 35px;\\n  opacity: 1; */\\n}\\n.logout>div{\\n  text-align: center;\\n}\\n.logout>div>img{\\n  width: 70%;\\n}\\n.font{\\n  /* margin-top: 10%;\\n  margin-left: 2%; */\\n  /* margin-top: 5%; */\\n  top: 10%;\\n  left: 85%;\\n  /* UI Properties */\\n  font: 16px DFHei Std;\\n  letter-spacing: 0;\\n  color: #FFFFFF;\\n  opacity: 1;\\n  margin-left: 1%;\\n}\\nlabel{\\n  margin-bottom: 0;\\n}\\n.v-scroll{\\n  height: 80%;\\n  margin-top: 10%;\\n  padding-top: 10%;\\n}\\n.forgetPassword{\\n  position: relative;\\n  display: flex;\\n  margin-top: 15%;\\n  width:100%;\\n  text-align: left;\\n}\\n.forgetPassword>div>img{\\n  padding-right: 3%;\\n  width:24px;\\n  margin-top: -3%;\\n}\\n.forgetPassword>div{\\n  color: #fff;\\n  font-size: 15px;\\n  padding-top: 3%;\\n  /* padding-left: 1%; */\\n  width: 100%;\\n  text-align: center;\\n}\\n.forgetPassword>div>span{\\n  padding-top: 3%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tZW51L21lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsb0JBQW9CO0FBQ3RCO0FBQ0E7RUFDRSxVQUFVO0FBQ1o7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQixjQUFjO0FBQ2hCO0FBQ0E7O0VBRUUsV0FBVztFQUNYLHlCQUF5QjtFQUN6QixlQUFlO0FBQ2pCO0FBQ0E7O0VBRUUsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLFFBQVE7QUFDVjtBQUNBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQix5QkFBeUI7RUFDekIsZ0NBQWdDO0FBQ2xDO0FBQ0E7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCO0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmOzs7aUJBR2U7RUFDZix3QkFBd0I7RUFDeEIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxVQUFVO0FBQ1o7QUFDQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLFNBQVM7RUFDVDs7OztlQUlhO0FBQ2Y7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsVUFBVTtBQUNaO0FBQ0E7RUFDRTtvQkFDa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLFFBQVE7RUFDUixTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixpQkFBaUI7RUFDakIsY0FBYztFQUNkLFVBQVU7RUFDVixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCO0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLGVBQWU7RUFDZixVQUFVO0VBQ1YsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsVUFBVTtFQUNWLGVBQWU7QUFDakI7QUFDQTtFQUNFLFdBQVc7RUFDWCxlQUFlO0VBQ2YsZUFBZTtFQUNmLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9tZW51L21lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1lbnVJdGVte1xuICBiYWNrZ3JvdW5kOiAjMDA3QUIzO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICBwYWRkaW5nLXRvcDogMTBweDtcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59XG4ubWVudUl0ZW0+aW1ne1xuICB3aWR0aDogMjQlO1xufVxuLm1lbnVJdGVtOmhvdmVye1xuICBiYWNrZ3JvdW5kOiAjMDA3QUIzO1xuICBjb2xvcjogI0ZGRkZGRjsgIFxufVxuLmNoaWxkaXRlbVxue1xuICB3aWR0aDogMTAwJTsgXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gIGZvbnQtc2l6ZTogMTVweDtcbn1cbi5jaGlsZGl0ZW0+ZGl2XG57XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5jaGlsZGl0ZW0+ZGl2IGlucHV0W3R5cGU9XCJyYWRpb1wiXXtcbiAgb3BhY2l0eTogMDtcbiAgZGlzcGxheTogbm9uZTtcbiAgd2lkdGg6IDA7XG59XG4uY2hpbGRpdGVtPmRpdiBsYWJlbHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6MTBweCAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwN0FCMztcbn1cbi5jaGlsZGl0ZW0+ZGl2IGlucHV0W3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkK2xhYmVse1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzoxMHB4IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNENENEQ0Q7XG4gIGNvbG9yOiAjMDA3QUIzO1xufVxuXG4udG9wIHtcbiAgYmFja2dyb3VuZDogIzAwN0FCMztcbn1cbi5tZW51e1xuICBtYXJnaW4tdG9wOiAwJTtcbiAgcGFkZGluZy10b3A6IDAlO1xufVxuLm1haW57XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7IFxufVxuLmhvbWV7XG4gIG1hcmdpbi10b3A6IDclO1xuICBtYXJnaW4tbGVmdDogNSU7XG4gIC8qIHRvcDogMjAlO1xuICBsZWZ0OiAxMCU7XG4gIHdpZHRoOiAzNHB4O1xuICBoZWlnaHQ6IDMwcHg7ICovXG4gIC8qIHBvc2l0aW9uOiByZWxhdGl2ZTsgKi9cbiAgLyogVUkgUHJvcGVydGllcyAqL1xufVxuLmhvbWU+ZGl2PmltZ3tcbiAgd2lkdGg6IDg1JTtcbn1cbi5sb2dvdXR7XG4gIG1hcmdpbi10b3A6IDclO1xuICBtYXJnaW4tbGVmdDogMzglO1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDo1MCU7XG4gIC8qIHRvcDogMjAlO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiAzN3B4O1xuICBoZWlnaHQ6IDM1cHg7XG4gIG9wYWNpdHk6IDE7ICovXG59XG4ubG9nb3V0PmRpdntcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmxvZ291dD5kaXY+aW1ne1xuICB3aWR0aDogNzAlO1xufVxuLmZvbnR7XG4gIC8qIG1hcmdpbi10b3A6IDEwJTtcbiAgbWFyZ2luLWxlZnQ6IDIlOyAqL1xuICAvKiBtYXJnaW4tdG9wOiA1JTsgKi9cbiAgdG9wOiAxMCU7XG4gIGxlZnQ6IDg1JTtcbiAgLyogVUkgUHJvcGVydGllcyAqL1xuICBmb250OiAxNnB4IERGSGVpIFN0ZDtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBvcGFjaXR5OiAxO1xuICBtYXJnaW4tbGVmdDogMSU7XG59XG5sYWJlbHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi52LXNjcm9sbHtcbiAgaGVpZ2h0OiA4MCU7XG4gIG1hcmdpbi10b3A6IDEwJTtcbiAgcGFkZGluZy10b3A6IDEwJTtcbn1cblxuLmZvcmdldFBhc3N3b3Jke1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi10b3A6IDE1JTtcbiAgd2lkdGg6MTAwJTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi5mb3JnZXRQYXNzd29yZD5kaXY+aW1ne1xuICBwYWRkaW5nLXJpZ2h0OiAzJTtcbiAgd2lkdGg6MjRweDtcbiAgbWFyZ2luLXRvcDogLTMlO1xufVxuLmZvcmdldFBhc3N3b3JkPmRpdntcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgcGFkZGluZy10b3A6IDMlO1xuICAvKiBwYWRkaW5nLWxlZnQ6IDElOyAqL1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmZvcmdldFBhc3N3b3JkPmRpdj5zcGFue1xuICBwYWRkaW5nLXRvcDogMyU7XG59Il19 */\"","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport { NxTreeFlatDataSource, NxFlatTreeControl, NxTreeNode, NxFlatTreeNode } from '@allianz/ngx-ndbx/tree';\nimport {NxMenuModule} from '@allianz/ngx-ndbx/menu'\nimport { Observable, of } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport {MyFlatTreeNode,MenuNode} from '../../class/menu';\nimport {ModalOptions,ModalType} from '../../class/modal';\nimport {MenuService} from '../../service/menu.service';\nimport {ModalService} from '../../shared/modal/modal.service';\nimport {LoadingService} from '../../shared/loading/loading.service';\nimport {ApiCommonModule} from '../../service/api-common/api-common.module';\nimport {CommonUtilityModule} from '../../shared/common-utility/common-utility.module';\nimport {AppComponent} from '../../app.component'\nimport { Title } from '@angular/platform-browser';\nimport { stringify } from 'querystring';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  _dataSource: NxTreeFlatDataSource<MenuNode, MyFlatTreeNode>;\n\n  _treeControl: NxFlatTreeControl<MyFlatTreeNode>;\n  menuData:MenuNode[];\n  childData:MenuNode[];\n  logMessage: string;\n  messages = [];\n  bodyText: string;\n\n  constructor(\n    private menuService:MenuService,\n    private commonUtility:CommonUtilityModule,\n    private modalService:ModalService,\n    private apiCommon:ApiCommonModule,\n    private routes:Router,\n    private loadingService:LoadingService,\n    private appComponent:AppComponent,\n    //private ngbModalService: NgbModal\n  ) {\n    this._treeControl = new NxFlatTreeControl();\n    this._dataSource = new NxTreeFlatDataSource(this._treeControl, this.menuData);\n    if (sessionStorage.getItem(\"menu\") !=null ||sessionStorage.getItem(\"object\")!=null)\n    {\n      this.menuData = JSON.parse(this.commonUtility.getSessionValue(\"menu\"));\n      console.log(\"constructor\");\n    }\n  }\n\n  _hasChild = (_: number, node: NxFlatTreeNode) => node.expandable;\n\n\n  log(value) {\n    this.messages.push('New width value: ' + value);\n    this.logMessage = this.messages.join('\\n');\n  }\n\n  ngOnInit() {\n    this.getMenus();\n  }\n\n  getMenus():void{\n    if (sessionStorage.getItem(\"menu\") ==null ||sessionStorage.getItem(\"object\")==null)\n    {\n      var msg:ModalOptions;\n      this.menuService.getMenus()\n      .subscribe(\n        res=>{\n          console.log('get Menu OK');\n          console.log(res);\n          this.loadingService.hide();\n          switch (res.ReturnCode) {\n            case 0:\n              sessionStorage.setItem(\"menu\",JSON.stringify(res.ReturnResult.menu) );\n              sessionStorage.setItem(\"object\",JSON.stringify(res.ReturnResult.object) );\n              this._treeControl = new NxFlatTreeControl();\n              this._dataSource = new NxTreeFlatDataSource(this._treeControl, JSON.parse(this.commonUtility.getSessionValue(\"menu\")) );\n              this.menuData = JSON.parse(this.commonUtility.getSessionValue(\"menu\"));\n              // this.menuData.sort();\n              break;\n            default:\n              msg={\n                headText:'選單資訊',\n                txtContent :'取得功能選單發生錯誤。',\n                type:ModalType.Confirm\n              };          \n              this.modalService.open(msg,'sm');\n              break;\n          };\n        }\n      );\n    }\n    else\n    {\n      console.log(\"oninit\");\n      this.menuData = JSON.parse(this.commonUtility.getSessionValue(\"menu\")); \n      this._treeControl = new NxFlatTreeControl();\n      this._dataSource = new NxTreeFlatDataSource(this._treeControl, JSON.parse(this.commonUtility.getSessionValue(\"menu\")) );\n    }\n  }\n  menuItemClick(item:MenuNode) {\n    this.menuData.forEach(allItem => {\n      allItem.expanded=false;\n    });\n    item.expanded=true;\n    sessionStorage.setItem(\"selMenuBK\",item.web_menu_display_background);\n\n    if (item.children)\n    {\n      this.childData = item.children;\n      this.childData.sort((a,b)=>a.upper_display_order-b.upper_display_order);\n      this.childItemClick(item,this.childData[0]);\n    }\n    else\n    {\n      this.func(item);\n    }\n  }\n  childItemClick(item,child)\n  {\n    sessionStorage.setItem(\"currentMenu\",JSON.stringify(child) );\n    console.log(child);\n    this.func(child);\n  }\n  func(item:MenuNode)\n  {\n    console.log(item.web_function);\n    sessionStorage.setItem(\"currentMenu\",JSON.stringify(item) );\n    this.routes.navigate(['/main', item.web_function]);\n  }\n  home()\n  {\n    this.menuData.forEach(allItem => {\n      allItem.expanded=false;\n    });\n    this.routes.navigateByUrl('/main');\n  }\n  logout()\n  {\n    this.appComponent.logout();\n    // sessionStorage.clear();\n    // this.routes.navigateByUrl('/');\n    // this.commonUtility.logout();\n  }\n  modifyPwd(){\n    var Page:string;\n    var account = this.commonUtility.getSessionValue(\"loginUser\");\n    Page = this.apiCommon.getApiUrl(\"modifyPwdPage\");\n    this.commonUtility.modifyPwd(account,Page);\n    // this.logout();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient} from '@angular/common/http';\nimport { Observable , throwError, TimeoutError, of } from 'rxjs';\nimport { map, filter, distinctUntilChanged, catchError, timeout, switchMap,retry } from 'rxjs/operators';\n\nimport {ApiCommonModule} from '../service/api-common/api-common.module';\nimport {CommonUtilityModule} from '../shared/common-utility/common-utility.module';\nimport {LoadingService} from '../shared/loading/loading.service';\n\n//import {MenuNode,ObjectNode, MyFlatTreeNode}from '../class/menu';\nimport * as Menu from '../class/menu';\nimport { IApiConfig } from '../class/environment';\n// import {menuData,ObjectData} from '../mock-data/menu';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  apiId:string = \"mstrMenu\";\n  ApiConfig:IApiConfig;\n  constructor( \n    protected apiCommon:ApiCommonModule,\n    protected commonUtility:CommonUtilityModule,\n    private loadingService:LoadingService,\n    private http: HttpClient\n  ) { }\n  getMenus(): Observable<Menu.resMenu>{\n    console.log(this.apiId);\n    this.ApiConfig = this.apiCommon.getApiConfigByApiID(this.apiId);\n    const apiUrl = `${this.ApiConfig.domain}${this.ApiConfig.path}`;\n    var userId:string=\"\";\n    var accSource:string=\"\";\n    console.log(apiUrl);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':'application/json',\n        'UKEY':this.commonUtility.getSessionValue('authenticationToken'),\n        'KeyId':this.ApiConfig.keyId\n      })\n    };\n    this.loadingService.show();\n    accSource=this.commonUtility.getSessionValue(\"accSource\");\n    switch (accSource) {\n      case \"STAFF\":\n        userId= this.commonUtility.getSessionValue(\"loginUser\");\n        break;\n      default:\n        userId= this.commonUtility.getSessionValue(\"agentId\");\n        break;\n    }\n    const rqbody:Menu.reqMenu={\n      UKEY:this.commonUtility.getSessionValue('authenticationToken'),\n      WEB_SYSTEM_CODE:this.commonUtility.systemCode,\n      USER_TYPE:accSource,\n      USER_ID:userId\n    };\n\n    console.log(rqbody);\n    return this.http.post<Menu.resMenu>(apiUrl, JSON.stringify(rqbody), httpOptions)\n      .pipe(\n        timeout(90 * 1000),\n        catchError( error => {\n          console.log('error:', error);\n\n          this.loadingService.hide();\n\n          if (error instanceof TimeoutError) {\n          }\n          return throwError( error );\n        })\n      );\n  }\n\n  getSubMenus(code:string):Observable<Menu.ObjectNode[]>{\n    let objData:Menu.ObjectNode[] = JSON.parse(sessionStorage.getItem(\"object\"));\n\n    console.log(code+\"_Service\");\n    console.log(code);\n    console.log(objData);\n    console.log(objData.filter(menu=>menu.web_function==code));\n    return of(objData.filter(menu=>menu.web_function==code))\n    //return of (ObjectData.find(menu=>menu.web_function==code));\n    //return of(HEROES.find(hero=>hero.id==id));\n  }\n}\n"],"sourceRoot":"webpack:///"}