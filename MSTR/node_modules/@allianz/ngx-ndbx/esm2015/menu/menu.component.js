/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
/**
 * This components is a collapsible menu for usage on smaller devices.
 * Can contain any content, but usually [nxMenuLink], [nxMenuGroup] and [nxAction].
 */
export class NxMenuComponent {
    /**
     * @param {?} _changeDetectorRef
     */
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._open = false;
    }
    /**
     * Whether the menu is open or closed.
     * @param {?} value
     * @return {?}
     */
    set open(value) {
        /** @type {?} */
        const open = coerceBooleanProperty(value);
        if (open !== this._open) {
            this._open = open;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get open() {
        return this._open;
    }
    /* Toggles the open state of the menu. */
    /**
     * @return {?}
     */
    toggle() {
        this.open = !this.open;
    }
}
NxMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-menu',
                template: "<div class=\"nx-menu__wrapper\" *ngIf=\"open\">\n  <ng-content></ng-content>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[attr.aria-expanded]': 'open'
                },
                styles: [":host(.nx-menu){display:block}.nx-menu__wrapper{position:fixed;top:60px;left:0;right:0;bottom:0;z-index:1;overflow:auto;background:#fff}::ng-deep .nx-menu__link{display:block;padding:12px 0;font-size:18px;line-height:24px;outline:0}::ng-deep .nx-menu__link+.nx-menu__link{margin-top:8px}::ng-deep [data-whatinput=keyboard] .nx-menu__link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px;outline:0}::ng-deep .nx-menu__item.nx-menu__item--large,::ng-deep .nx-menu__item.nx-menu__item--small{padding:24px;border-bottom:1px solid #d9d9d9}::ng-deep .nx-menu__item.nx-menu__item--large{padding-left:64px}"]
            }] }
];
/** @nocollapse */
NxMenuComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
NxMenuComponent.propDecorators = {
    open: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxMenuComponent.prototype._open;
    /**
     * @type {?}
     * @private
     */
    NxMenuComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC9tZW51LyIsInNvdXJjZXMiOlsibWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7OztBQWU5RCxNQUFNLE9BQU8sZUFBZTs7OztJQXNCMUIsWUFBb0Isa0JBQXFDO1FBQXJDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7UUFyQmpELFVBQUssR0FBWSxLQUFLLENBQUM7SUFxQjZCLENBQUM7Ozs7OztJQWxCN0QsSUFDSSxJQUFJLENBQUMsS0FBYzs7Y0FDZixJQUFJLEdBQUcscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBQ3pDLElBQUksSUFBSSxLQUFLLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDdkIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7WUFDbEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3hDO0lBQ0gsQ0FBQzs7OztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDOzs7OztJQUdELE1BQU07UUFDSixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztJQUN6QixDQUFDOzs7WUE3QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxTQUFTO2dCQUNuQixrR0FBd0I7Z0JBRXhCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxJQUFJLEVBQUU7b0JBQ0osc0JBQXNCLEVBQUUsTUFBTTtpQkFDL0I7O2FBQ0Y7Ozs7WUFmNEMsaUJBQWlCOzs7bUJBb0IzRCxLQUFLOzs7Ozs7O0lBSE4sZ0NBQStCOzs7OztJQXFCbkIsNkNBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb2VyY2VCb29sZWFuUHJvcGVydHkgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuXG4vKipcbiAgVGhpcyBjb21wb25lbnRzIGlzIGEgY29sbGFwc2libGUgbWVudSBmb3IgdXNhZ2Ugb24gc21hbGxlciBkZXZpY2VzLlxuICBDYW4gY29udGFpbiBhbnkgY29udGVudCwgYnV0IHVzdWFsbHkgW254TWVudUxpbmtdLCBbbnhNZW51R3JvdXBdIGFuZCBbbnhBY3Rpb25dLlxuKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ254LW1lbnUnLFxuICB0ZW1wbGF0ZVVybDogJ21lbnUuaHRtbCcsXG4gIHN0eWxlVXJsczogWydtZW51LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGhvc3Q6IHtcbiAgICAnW2F0dHIuYXJpYS1leHBhbmRlZF0nOiAnb3BlbidcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOeE1lbnVDb21wb25lbnQge1xuICBwcml2YXRlIF9vcGVuOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqIFdoZXRoZXIgdGhlIG1lbnUgaXMgb3BlbiBvciBjbG9zZWQuICovXG4gIEBJbnB1dCgpXG4gIHNldCBvcGVuKHZhbHVlOiBib29sZWFuKSB7XG4gICAgY29uc3Qgb3BlbiA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgaWYgKG9wZW4gIT09IHRoaXMuX29wZW4pIHtcbiAgICAgIHRoaXMuX29wZW4gPSBvcGVuO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IG9wZW4oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX29wZW47XG4gIH1cblxuICAvKiBUb2dnbGVzIHRoZSBvcGVuIHN0YXRlIG9mIHRoZSBtZW51LiAqL1xuICB0b2dnbGUoKSB7XG4gICAgdGhpcy5vcGVuID0gIXRoaXMub3BlbjtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge31cbn1cblxuIl19