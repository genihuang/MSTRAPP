/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NxIconComponent } from '@allianz/ngx-ndbx/icon';
import { ChangeDetectionStrategy, Component, ContentChild, ElementRef, Renderer2 } from '@angular/core';
import { MappedStyles } from '@allianz/ngx-ndbx/core';
/** @type {?} */
const MAPPING = {
    'black': 'nx-link--black',
    'negative': 'nx-link--negative',
    'text': 'nx-link--text',
    'block': 'nx-link--block',
    'icon-right': 'nx-link--icon-right'
};
/** @type {?} */
const DEFAULT_CLASSES = ['nx-link'];
export class NxLinkComponent extends MappedStyles {
    /**
     * @param {?} _elementRef
     * @param {?} _renderer
     */
    constructor(_elementRef, _renderer) {
        super(MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);
        this._renderer = _renderer;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        // Add a specific link class that the css gets more specific than the nx-icon css
        /** @type {?} */
        const icons = this.elementRef.nativeElement.querySelectorAll('nx-icon');
        for (let i = 0; i < icons.length; i++) {
            this._renderer.addClass(icons[i], 'nx-link__icon');
        }
    }
    /**
     * \@docs-private
     * getter used for the modal component as a quickfix
     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
     * way to reach the elementRef of the component until the modal gets refactored.
     * @return {?}
     */
    get elementRef() {
        return this._elementRef;
    }
}
NxLinkComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-link',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['classNames: nxStyle'],
                styles: [":host{display:inline-block;color:#006192;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;position:relative;text-decoration:none;transition:color .2s,box-shadow .2s;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;line-height:24px}:host:hover{color:#008ed6}:host::ng-deep a:active{color:#003781}:host::ng-deep a{display:flex}:host-context([data-whatinput=keyboard])::ng-deep a:focus{border-radius:4px;outline:0;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-link--negative){color:#fff}:host(.nx-link--negative):hover{color:#c2c2c2}:host(.nx-link--negative)::ng-deep a:active{color:#999}:host(.nx-link--negative)::ng-deep a[aria-disabled],:host(.nx-link--negative)::ng-deep a[disabled]{color:rgba(255,255,255,.4)}:host(.nx-link--black){color:#414141}:host(.nx-link--black):hover{color:#999}:host(.nx-link--black)::ng-deep a:active{color:#5b5b5b}:host(.nx-link--black)::ng-deep a[aria-disabled],:host(.nx-link--black)::ng-deep a[disabled]{color:#c2c2c2}.nx-link--text{font-weight:700;text-transform:none;letter-spacing:normal;border-radius:4px}:host::ng-deep .c-icon,:host::ng-deep nx-icon.nx-link__icon{line-height:24px;font-size:24px;margin:0 8px 0 0}:host::ng-deep .c-icon::before,:host::ng-deep nx-icon.nx-link__icon::before{line-height:inherit;font-size:inherit;width:24px;height:24px}:host(.nx-link--icon-right)::ng-deep .c-icon,:host(.nx-link--icon-right)::ng-deep nx-icon.nx-link__icon{order:2;margin:0 0 0 8px}:host::ng-deep a[aria-disabled],:host::ng-deep a[disabled]{cursor:not-allowed;color:rgba(0,97,146,.4)}:host::ng-deep a[aria-disabled]:active,:host::ng-deep a[disabled]:active{color:#006192}:host::ng-deep a[aria-disabled]:focus,:host::ng-deep a[disabled]:focus{outline:0;box-shadow:none}"]
            }] }
];
/** @nocollapse */
NxLinkComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
NxLinkComponent.propDecorators = {
    icon: [{ type: ContentChild, args: [NxIconComponent,] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxLinkComponent.prototype._styles;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLinkComponent.prototype.icon;
    /**
     * Sets the style of the link, thereby altering the visual appearance.
     *
     * You can use any combination of 'black', 'icon-right', 'negative', 'text' and 'block' (deprecated).
     * @type {?}
     */
    NxLinkComponent.prototype.classNames;
    /**
     * @type {?}
     * @protected
     */
    NxLinkComponent.prototype._renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC8iLCJzb3VyY2VzIjpbImxpbmsvbGluay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN6RCxPQUFPLEVBQW9CLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7O01BR2hELE9BQU8sR0FBRztJQUNkLE9BQU8sRUFBRSxnQkFBZ0I7SUFDekIsVUFBVSxFQUFFLG1CQUFtQjtJQUMvQixNQUFNLEVBQUUsZUFBZTtJQUN2QixPQUFPLEVBQUUsZ0JBQWdCO0lBQ3pCLFlBQVksRUFBRSxxQkFBcUI7Q0FDcEM7O01BRUssZUFBZSxHQUFHLENBQUUsU0FBUyxDQUFFO0FBVXJDLE1BQU0sT0FBTyxlQUFnQixTQUFRLFlBQVk7Ozs7O0lBYS9DLFlBQVksV0FBdUIsRUFBWSxTQUFvQjtRQUNqRSxLQUFLLENBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFEWCxjQUFTLEdBQVQsU0FBUyxDQUFXO0lBRW5FLENBQUM7Ozs7SUFFRCxrQkFBa0I7OztjQUVWLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUM7UUFDdkUsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLGVBQWUsQ0FBQyxDQUFDO1NBQ3BEO0lBQ0gsQ0FBQzs7Ozs7Ozs7O0lBU0QsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7OztZQTFDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFNBQVM7Z0JBRW5CLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxRQUFRLEVBQUUsMkJBQTJCO2dCQUNyQyxNQUFNLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQzs7YUFDaEM7Ozs7WUFyQjRFLFVBQVU7WUFBRSxTQUFTOzs7bUJBMkIvRixZQUFZLFNBQUMsZUFBZTs7Ozs7OztJQUg3QixrQ0FBd0I7Ozs7O0lBR3hCLCtCQUFxRDs7Ozs7OztJQU9yRCxxQ0FBVzs7Ozs7SUFFMEIsb0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTnhJY29uQ29tcG9uZW50IH0gZnJvbSAnQGFsbGlhbnovbmd4LW5kYngvaWNvbic7XG5pbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBDb250ZW50Q2hpbGQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBNYXBwZWRTdHlsZXMgfSBmcm9tICdAYWxsaWFuei9uZ3gtbmRieC9jb3JlJztcblxuXG5jb25zdCBNQVBQSU5HID0ge1xuICAnYmxhY2snOiAnbngtbGluay0tYmxhY2snLFxuICAnbmVnYXRpdmUnOiAnbngtbGluay0tbmVnYXRpdmUnLFxuICAndGV4dCc6ICdueC1saW5rLS10ZXh0JyxcbiAgJ2Jsb2NrJzogJ254LWxpbmstLWJsb2NrJyxcbiAgJ2ljb24tcmlnaHQnOiAnbngtbGluay0taWNvbi1yaWdodCdcbn07XG5cbmNvbnN0IERFRkFVTFRfQ0xBU1NFUyA9IFsgJ254LWxpbmsnIF07XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ254LWxpbmsnLFxuICBzdHlsZVVybHM6IFsgJy4vbGluay5jb21wb25lbnQuc2NzcycgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gIGlucHV0czogWydjbGFzc05hbWVzOiBueFN0eWxlJ11cbn0pXG5cbmV4cG9ydCBjbGFzcyBOeExpbmtDb21wb25lbnQgZXh0ZW5kcyBNYXBwZWRTdHlsZXMgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgcHJpdmF0ZSBfc3R5bGVzOiBzdHJpbmc7XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgQENvbnRlbnRDaGlsZChOeEljb25Db21wb25lbnQpIGljb246IE54SWNvbkNvbXBvbmVudDtcblxuICAvKipcbiAgICogU2V0cyB0aGUgc3R5bGUgb2YgdGhlIGxpbmssIHRoZXJlYnkgYWx0ZXJpbmcgdGhlIHZpc3VhbCBhcHBlYXJhbmNlLlxuICAgKlxuICAgKiBZb3UgY2FuIHVzZSBhbnkgY29tYmluYXRpb24gb2YgJ2JsYWNrJywgJ2ljb24tcmlnaHQnLCAnbmVnYXRpdmUnLCAndGV4dCcgYW5kICdibG9jaycgKGRlcHJlY2F0ZWQpLlxuICAgKi9cbiAgY2xhc3NOYW1lcztcblxuICBjb25zdHJ1Y3RvcihfZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcHJvdGVjdGVkIF9yZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgc3VwZXIoTUFQUElORywgREVGQVVMVF9DTEFTU0VTLCBfZWxlbWVudFJlZiwgX3JlbmRlcmVyKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAvLyBBZGQgYSBzcGVjaWZpYyBsaW5rIGNsYXNzIHRoYXQgdGhlIGNzcyBnZXRzIG1vcmUgc3BlY2lmaWMgdGhhbiB0aGUgbngtaWNvbiBjc3NcbiAgICBjb25zdCBpY29ucyA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ254LWljb24nKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGljb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLl9yZW5kZXJlci5hZGRDbGFzcyhpY29uc1tpXSwgJ254LWxpbmtfX2ljb24nKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQGRvY3MtcHJpdmF0ZVxuICAgKiBnZXR0ZXIgdXNlZCBmb3IgdGhlIG1vZGFsIGNvbXBvbmVudCBhcyBhIHF1aWNrZml4XG4gICAqIHNpbmNlIGJ1dHRvbiBnb3QgY2hhbmdlZCBmcm9tIGRpcmVjdGl2ZSB0byBjb21wb25lbnQgdGhlIHJlZmVyZW5jZSB1c2VkIGJ5IHRoZSBuZ09wZW5Nb2RlbE9uQ2xpY2sgZGlyZWN0aXZlXG4gICAqIGZvciBueEJ1dHRvbnMgaXMgYSByZWZlcmVuY2UgdG8gY29tcG9uZW50IGluc3RhbmNlIGluc3RlYWQgb2YgYW4gZWxlbWVudCByZWZlcmVuY2UuIEFzIGEgd29ya2Fyb3VuZCB3ZSBuZWVkIGFcbiAgICogd2F5IHRvIHJlYWNoIHRoZSBlbGVtZW50UmVmIG9mIHRoZSBjb21wb25lbnQgdW50aWwgdGhlIG1vZGFsIGdldHMgcmVmYWN0b3JlZC5cbiAgICovXG4gIGdldCBlbGVtZW50UmVmKCkge1xuICAgIHJldHVybiB0aGlzLl9lbGVtZW50UmVmO1xuICB9XG59XG4iXX0=