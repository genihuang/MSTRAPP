/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
/** @type {?} */
const DEFAULT_SIZE = 'auto';
export class NxFigureComponent {
    /**
     * Sets the type of the visual appearance of the image.
     * The default value  is 'auto'.
     * @param {?} value
     * @return {?}
     */
    set classNames(value) {
        if (this._classNames === value) {
            return;
        }
        this._classNames = value;
        /** @type {?} */
        const sizeRegex = /^(auto|1by1|1dot8by1|1dot2by1|1by1dot1|2dot6by1)$/;
        const [size = null] = this._classNames.match(sizeRegex) || [DEFAULT_SIZE];
        this.size = (/** @type {?} */ (size));
        this.rounded = !!this._classNames.match(/rounded/);
    }
    /**
     * @return {?}
     */
    get classNames() {
        return this._classNames;
    }
}
NxFigureComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'figure[nxFigure]',
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class.nx-image--auto]': 'size === "auto" && !rounded',
                    '[class.nx-image--1by1]': 'size === "1by1"',
                    '[class.nx-image--1dot8by1]': 'size === "1dot8by1"',
                    '[class.nx-image--1dot2by1]': 'size === "1dot2by1"',
                    '[class.nx-image--1by1dot1]': 'size === "1by1dot1"',
                    '[class.nx-image--2dot6by1]': 'size === "2dot6by1"',
                    '[class.nx-image--rounded]': 'rounded'
                },
                styles: [":host{display:block;position:relative;line-height:0}:host ::ng-deep img{display:block;font-family:\"object-fit: cover;\";-o-object-fit:cover;object-fit:cover;height:100%;width:100%}:host(.nx-image--auto) ::ng-deep img{height:auto}:host(:not(.nx-image--auto)) ::ng-deep img{position:absolute;top:0;left:0}:host(.nx-image--rounded){padding-top:100%}:host(.nx-image--rounded) ::ng-deep img{border-radius:50%;bottom:0;left:0;position:absolute;right:0;top:0}:host(.nx-image--1by1){padding-top:100%}:host(.nx-image--1dot8by1){padding-top:55.55556%}:host(.nx-image--1dot2by1){padding-top:83.33333%}:host(.nx-image--1by1dot1){padding-top:110%}:host(.nx-image--2dot6by1){padding-top:38.46154%}:host(.nx-image--1by1dot4){padding-top:140%}"]
            }] }
];
NxFigureComponent.propDecorators = {
    classNames: [{ type: Input, args: ['nxFigure',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxFigureComponent.prototype._classNames;
    /**
     * \@docs-private
     * @type {?}
     */
    NxFigureComponent.prototype.rounded;
    /**
     * \@docs-private
     * @type {?}
     */
    NxFigureComponent.prototype.size;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlndXJlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsiaW1hZ2UvZmlndXJlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7O01BT3BFLFlBQVksR0FBRyxNQUFNO0FBa0IzQixNQUFNLE9BQU8saUJBQWlCOzs7Ozs7O0lBYTVCLElBQ0ksVUFBVSxDQUFDLEtBQWlCO1FBQzlCLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxLQUFLLEVBQUU7WUFDOUIsT0FBTztTQUNSO1FBRUQsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7O2NBQ25CLFNBQVMsR0FBRyxtREFBbUQ7Y0FDL0QsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDekUsSUFBSSxDQUFDLElBQUksR0FBRyxtQkFBQSxJQUFJLEVBQU8sQ0FBQztRQUV4QixJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNyRCxDQUFDOzs7O0lBRUQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7OztZQTdDRixTQUFTLFNBQUM7O2dCQUVULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUUvQyxJQUFJLEVBQUU7b0JBQ0osd0JBQXdCLEVBQUUsNkJBQTZCO29CQUN2RCx3QkFBd0IsRUFBRSxpQkFBaUI7b0JBQzNDLDRCQUE0QixFQUFFLHFCQUFxQjtvQkFDbkQsNEJBQTRCLEVBQUUscUJBQXFCO29CQUNuRCw0QkFBNEIsRUFBRSxxQkFBcUI7b0JBQ25ELDRCQUE0QixFQUFFLHFCQUFxQjtvQkFDbkQsMkJBQTJCLEVBQUUsU0FBUztpQkFDdkM7O2FBQ0Y7Ozt5QkFjRSxLQUFLLFNBQUMsVUFBVTs7Ozs7OztJQVpqQix3Q0FBZ0M7Ozs7O0lBR2hDLG9DQUFpQjs7Ozs7SUFHakIsaUNBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqIFR5cGVzIG9mIGZpZ3VyZXMuICovXG5leHBvcnQgdHlwZSBGaWd1cmVUeXBlID0gJ2F1dG8nIHwgJzFieTEnIHwgJzFkb3Q4YnkxJyB8ICcxZG90MmJ5MScgfCAnMWJ5MWRvdDEnIHwgJzJkb3Q2YnkxJyB8ICdyb3VuZGVkJztcbi8qKiBAZG9jcy1wcml2YXRlICovXG5leHBvcnQgdHlwZSBmaWd1cmVTaXplcyA9ICdhdXRvJyB8ICcxYnkxJyB8ICcxZG90OGJ5MScgfCAnMWRvdDJieTEnIHwgJzFieTFkb3QxJyB8ICcyZG90NmJ5MSc7XG5cbmNvbnN0IERFRkFVTFRfU0laRSA9ICdhdXRvJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdmaWd1cmVbbnhGaWd1cmVdJyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0eWxlVXJsczogWycuL2ZpZ3VyZS5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5ueC1pbWFnZS0tYXV0b10nOiAnc2l6ZSA9PT0gXCJhdXRvXCIgJiYgIXJvdW5kZWQnLFxuICAgICdbY2xhc3MubngtaW1hZ2UtLTFieTFdJzogJ3NpemUgPT09IFwiMWJ5MVwiJyxcbiAgICAnW2NsYXNzLm54LWltYWdlLS0xZG90OGJ5MV0nOiAnc2l6ZSA9PT0gXCIxZG90OGJ5MVwiJyxcbiAgICAnW2NsYXNzLm54LWltYWdlLS0xZG90MmJ5MV0nOiAnc2l6ZSA9PT0gXCIxZG90MmJ5MVwiJyxcbiAgICAnW2NsYXNzLm54LWltYWdlLS0xYnkxZG90MV0nOiAnc2l6ZSA9PT0gXCIxYnkxZG90MVwiJyxcbiAgICAnW2NsYXNzLm54LWltYWdlLS0yZG90NmJ5MV0nOiAnc2l6ZSA9PT0gXCIyZG90NmJ5MVwiJyxcbiAgICAnW2NsYXNzLm54LWltYWdlLS1yb3VuZGVkXSc6ICdyb3VuZGVkJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE54RmlndXJlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfY2xhc3NOYW1lczogRmlndXJlVHlwZTtcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICByb3VuZGVkOiBib29sZWFuO1xuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHNpemU6IGZpZ3VyZVNpemVzO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSB0eXBlIG9mIHRoZSB2aXN1YWwgYXBwZWFyYW5jZSBvZiB0aGUgaW1hZ2UuXG4gICAqIFRoZSBkZWZhdWx0IHZhbHVlICBpcyAnYXV0bycuXG4gICAqL1xuICBASW5wdXQoJ254RmlndXJlJylcbiAgc2V0IGNsYXNzTmFtZXModmFsdWU6IEZpZ3VyZVR5cGUpIHtcbiAgICBpZiAodGhpcy5fY2xhc3NOYW1lcyA9PT0gdmFsdWUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9jbGFzc05hbWVzID0gdmFsdWU7XG4gICAgY29uc3Qgc2l6ZVJlZ2V4ID0gL14oYXV0b3wxYnkxfDFkb3Q4YnkxfDFkb3QyYnkxfDFieTFkb3QxfDJkb3Q2YnkxKSQvO1xuICAgIGNvbnN0IFtzaXplID0gbnVsbF0gPSB0aGlzLl9jbGFzc05hbWVzLm1hdGNoKHNpemVSZWdleCkgfHwgW0RFRkFVTFRfU0laRV07XG4gICAgdGhpcy5zaXplID0gc2l6ZSBhcyBhbnk7XG5cbiAgICB0aGlzLnJvdW5kZWQgPSAhIXRoaXMuX2NsYXNzTmFtZXMubWF0Y2goL3JvdW5kZWQvKTtcbiAgfVxuXG4gIGdldCBjbGFzc05hbWVzKCk6IEZpZ3VyZVR5cGUge1xuICAgIHJldHVybiB0aGlzLl9jbGFzc05hbWVzO1xuICB9XG59XG4iXX0=