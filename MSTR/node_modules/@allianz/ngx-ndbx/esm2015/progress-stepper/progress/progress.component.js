/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { clamp } from '@allianz/ngx-ndbx/utils';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { NxProgressStepperDirective } from './../progress-stepper.component';
export class NxProgressStepperComponent extends NxProgressStepperDirective {
    constructor() {
        super(...arguments);
        this._progress = 0;
    }
    /**
     * Sets the current value/progress of the progress bar.
     * @return {?}
     */
    get progress() { return this._progress; }
    /**
     * @param {?} value
     * @return {?}
     */
    set progress(value) { this._progress = clamp(value || 0); }
}
NxProgressStepperComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-progress-stepper',
                template: "<span *ngIf=\"title\" class=\"nx-single-step__title\">{{title}}</span>\n\n<div class=\"nx-subprogress__items\">\n  <ng-container *ngFor=\"let step of _steps; let i = index\">\n\n    <div\n      [class.nx-subprogress__item--inactive]=\"selectedIndex !== i && !step.completed\"\n      [attr.aria-disabled]=\"selectedIndex !== i && !step.completed\"\n      [class.nx-subprogress__item--selected]=\"selectedIndex === i\"\n      class=\"nx-subprogress__item\">\n\n      <div class=\"nx-subprogress__counter\">\n      <div class=\"nx-subprogress__number\">\n\n          {{ i + 1 }}\n          </div>\n      </div>\n\n      <label class=\"nx-subprogress__label\">{{step.stepLabel || step.label}}</label>\n\n      <div class=\"nx-subprogress__progress\"  *ngIf=\"selectedIndex === i\">\n        <nx-progressbar\n          [value]=\"progress\"></nx-progressbar>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<div class=\"nx-progress-stepper__current\">\n    {{currentLabel}}\n</div>\n\n\n<div *ngFor=\"let step of _steps; let i = index\"\n      class=\"nx-progress-stepper__content\" role=\"tabpanel\"\n      [id]=\"_getStepContentId(i)\"\n      [attr.aria-label]=\"currentLabel\"\n      [attr.aria-expanded]=\"selectedIndex === i\">\n  <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>",
                providers: [{ provide: NxProgressStepperDirective, useExisting: NxProgressStepperComponent }],
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:block}.nx-progress-stepper__content{overflow:hidden}.nx-progress-stepper__content[aria-expanded=false]{height:0}.nx-progress-stepper__current{display:none}@media (max-width:703px){.nx-progress-stepper__current{display:block;text-align:center}}", ".nx-subprogress__items{display:flex;margin:48px auto}@media (max-width:703px){.nx-subprogress__items{display:none}}.nx-subprogress__item{display:flex;flex:1 0 auto}.nx-subprogress__item:not(:first-child){margin-left:16px}.nx-subprogress__item--selected{display:flex;flex:1 1 100%;align-items:center}.nx-subprogress__progress{flex:1 1 100%;margin-left:8px}.nx-subprogress__item--inactive{color:#d9d9d9}.nx-subprogress__item--inactive .nx-subprogress__counter{max-width:24px;background-color:#fff;border:2px solid #d9d9d9;color:#d9d9d9}.nx-subprogress__item--inactive .nx-subprogress__label{color:#d9d9d9}.nx-subprogress__label{flex:1 1 auto;white-space:nowrap;text-overflow:ellipsis;color:#006192}.nx-subprogress__counter{flex:0 0 24px;display:flex;align-items:center;justify-content:center;background-color:#007ab3;color:#fff;width:24px;height:24px;text-align:center;border-radius:50%;margin-right:8px}"]
            }] }
];
NxProgressStepperComponent.propDecorators = {
    progress: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxProgressStepperComponent.prototype._progress;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvcHJvZ3Jlc3Mtc3RlcHBlci8iLCJzb3VyY2VzIjpbInByb2dyZXNzL3Byb2dyZXNzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2hELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBVTdFLE1BQU0sT0FBTywwQkFBMkIsU0FBUSwwQkFBMEI7SUFSMUU7O1FBY1UsY0FBUyxHQUFXLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7OztJQUpDLElBQ0ksUUFBUSxLQUFhLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Ozs7O0lBQ2pELElBQUksUUFBUSxDQUFDLEtBQWEsSUFBSSxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7WUFicEUsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLDJ5Q0FBc0M7Z0JBRXRDLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLDBCQUEwQixFQUFFLFdBQVcsRUFBRSwwQkFBMEIsRUFBQyxDQUFDO2dCQUMzRixtQkFBbUIsRUFBRSxLQUFLO2dCQUMxQixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7YUFDaEQ7Ozt1QkFJRSxLQUFLOzs7Ozs7O0lBR04sK0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xhbXAgfSBmcm9tICdAYWxsaWFuei9uZ3gtbmRieC91dGlscyc7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOeFByb2dyZXNzU3RlcHBlckRpcmVjdGl2ZSB9IGZyb20gJy4vLi4vcHJvZ3Jlc3Mtc3RlcHBlci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC1wcm9ncmVzcy1zdGVwcGVyJyxcbiAgdGVtcGxhdGVVcmw6ICdwcm9ncmVzcy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuLi9wcm9ncmVzcy1zdGVwcGVyLmNvbXBvbmVudC5zY3NzJywgJy4vcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IE54UHJvZ3Jlc3NTdGVwcGVyRGlyZWN0aXZlLCB1c2VFeGlzdGluZzogTnhQcm9ncmVzc1N0ZXBwZXJDb21wb25lbnR9XSxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOeFByb2dyZXNzU3RlcHBlckNvbXBvbmVudCBleHRlbmRzIE54UHJvZ3Jlc3NTdGVwcGVyRGlyZWN0aXZlIHtcblxuICAvKiogU2V0cyB0aGUgY3VycmVudCB2YWx1ZS9wcm9ncmVzcyBvZiB0aGUgcHJvZ3Jlc3MgYmFyLiAqL1xuICBASW5wdXQoKVxuICBnZXQgcHJvZ3Jlc3MoKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMuX3Byb2dyZXNzOyB9XG4gIHNldCBwcm9ncmVzcyh2YWx1ZTogbnVtYmVyKSB7IHRoaXMuX3Byb2dyZXNzID0gY2xhbXAodmFsdWUgfHwgMCk7IH1cbiAgcHJpdmF0ZSBfcHJvZ3Jlc3M6IG51bWJlciA9IDA7XG59XG4iXX0=