/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NX_NATIVE_DATE_FORMATS } from './native-date-formats';
import { NxNativeDateAdapter } from './native-date-adapter';
import { NX_DATE_FORMATS } from './date-formats';
import { NgModule } from '@angular/core';
import { LOCALE_ID } from '@angular/core';
import { NxDateAdapter } from './date-adapter';
import { NX_DATE_LOCALE } from './date-token';
import { PlatformModule } from '@angular/cdk/platform';
/** @type {?} */
export const NX_DATE_LOCALE_PROVIDER = { provide: NX_DATE_LOCALE, useExisting: LOCALE_ID };
export { NX_DATE_LOCALE } from './date-token';
export { NxDateAdapter } from './date-adapter';
export { NX_DATE_FORMATS } from './date-formats';
export { NxNativeDateAdapter } from './native-date-adapter';
export { NX_NATIVE_DATE_FORMATS } from './native-date-formats';
export class NativeDateModule {
}
NativeDateModule.decorators = [
    { type: NgModule, args: [{
                imports: [PlatformModule],
                providers: [
                    { provide: NxDateAdapter, useClass: NxNativeDateAdapter },
                    NX_DATE_LOCALE_PROVIDER
                ],
            },] }
];
const ɵ0 = NX_NATIVE_DATE_FORMATS;
export class NxNativeDateModule {
}
NxNativeDateModule.decorators = [
    { type: NgModule, args: [{
                imports: [NativeDateModule],
                providers: [{ provide: NX_DATE_FORMATS, useValue: ɵ0 }],
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC9kYXRlZmllbGQvIiwic291cmNlcyI6WyJhZGFwdGVyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDakQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQWlCLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUU5QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7O0FBRXZELE1BQU0sT0FBTyx1QkFBdUIsR0FBRyxFQUFDLE9BQU8sRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBQztBQUV4RiwrQkFBYyxjQUFjLENBQUM7QUFDN0IsOEJBQWMsZ0JBQWdCLENBQUM7QUFDL0IsZ0NBQWMsZ0JBQWdCLENBQUM7QUFFL0Isb0NBQWMsdUJBQXVCLENBQUM7QUFDdEMsdUNBQWMsdUJBQXVCLENBQUM7QUFVdEMsTUFBTSxPQUFPLGdCQUFnQjs7O1lBUDVCLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUUsQ0FBQyxjQUFjLENBQUM7Z0JBQ3pCLFNBQVMsRUFBRTtvQkFDVCxFQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFDO29CQUN2RCx1QkFBdUI7aUJBQ3hCO2FBQ0Y7O1dBTWtELHNCQUFzQjtBQUV6RSxNQUFNLE9BQU8sa0JBQWtCOzs7WUFKOUIsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO2dCQUMzQixTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxJQUF3QixFQUFDLENBQUM7YUFDMUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOWF9OQVRJVkVfREFURV9GT1JNQVRTIH0gZnJvbSAnLi9uYXRpdmUtZGF0ZS1mb3JtYXRzJztcbmltcG9ydCB7IE54TmF0aXZlRGF0ZUFkYXB0ZXIgfSBmcm9tICcuL25hdGl2ZS1kYXRlLWFkYXB0ZXInO1xuaW1wb3J0IHsgTlhfREFURV9GT1JNQVRTIH0gZnJvbSAnLi9kYXRlLWZvcm1hdHMnO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7SW5qZWN0aW9uVG9rZW4sIExPQ0FMRV9JRH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOeERhdGVBZGFwdGVyIH0gZnJvbSAnLi9kYXRlLWFkYXB0ZXInO1xuaW1wb3J0IHsgTlhfREFURV9MT0NBTEUgfSBmcm9tICcuL2RhdGUtdG9rZW4nO1xuXG5pbXBvcnQgeyBQbGF0Zm9ybU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XG5cbmV4cG9ydCBjb25zdCBOWF9EQVRFX0xPQ0FMRV9QUk9WSURFUiA9IHtwcm92aWRlOiBOWF9EQVRFX0xPQ0FMRSwgdXNlRXhpc3Rpbmc6IExPQ0FMRV9JRH07XG5cbmV4cG9ydCAqIGZyb20gJy4vZGF0ZS10b2tlbic7XG5leHBvcnQgKiBmcm9tICcuL2RhdGUtYWRhcHRlcic7XG5leHBvcnQgKiBmcm9tICcuL2RhdGUtZm9ybWF0cyc7XG5cbmV4cG9ydCAqIGZyb20gJy4vbmF0aXZlLWRhdGUtYWRhcHRlcic7XG5leHBvcnQgKiBmcm9tICcuL25hdGl2ZS1kYXRlLWZvcm1hdHMnO1xuXG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtQbGF0Zm9ybU1vZHVsZV0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtwcm92aWRlOiBOeERhdGVBZGFwdGVyLCB1c2VDbGFzczogTnhOYXRpdmVEYXRlQWRhcHRlcn0sXG4gICAgTlhfREFURV9MT0NBTEVfUFJPVklERVJcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgTmF0aXZlRGF0ZU1vZHVsZSB7fVxuXG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtOYXRpdmVEYXRlTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IE5YX0RBVEVfRk9STUFUUywgdXNlVmFsdWU6IE5YX05BVElWRV9EQVRFX0ZPUk1BVFN9XSxcbn0pXG5leHBvcnQgY2xhc3MgTnhOYXRpdmVEYXRlTW9kdWxlIHt9XG5cbiJdfQ==