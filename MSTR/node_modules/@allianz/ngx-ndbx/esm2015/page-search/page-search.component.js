/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';
export class NxPageSearchComponent {
    /**
     * @param {?} _changeDetectorRef
     */
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        /**
         * An event emitted when the user clicks the search button.
         */
        this.buttonClick = new EventEmitter();
        this._buttonLabel = null;
        this._hideSearchButton = false;
        this._buttonLayout = '12,12,12,2';
        this._contentLayout = null;
    }
    /**
     * Sets the text label of the button.
     * @param {?} value
     * @return {?}
     */
    set buttonLabel(value) {
        if (this._buttonLabel !== value) {
            this._buttonLabel = value;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get buttonLabel() {
        return this._buttonLabel;
    }
    /**
     * Whether the search button should be hidden.
     * @param {?} value
     * @return {?}
     */
    set hideSearchButton(value) {
        this._hideSearchButton = coerceBooleanProperty(value);
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get hideSearchButton() {
        return this._hideSearchButton;
    }
    /**
     * Layout of the search button inside of a NxGrid. Default: 12,12,12,2.
     * @param {?} value
     * @return {?}
     */
    set buttonLayout(value) {
        if (this._buttonLayout !== value) {
            this._buttonLayout = value;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get buttonLayout() {
        return this._buttonLayout;
    }
    /**
     * Layout of the content area inside of a NxGrid. Default: 12,12,12,10 | 12 (if search button is hidden).
     * @param {?} value
     * @return {?}
     */
    set contentLayout(value) {
        if (this._contentLayout !== value) {
            this._contentLayout = value;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get contentLayout() {
        if (this._contentLayout) {
            return this._contentLayout;
        }
        return !this.hideSearchButton ? '12,12,12,10' : '12';
    }
    /**
     * \@docs-private
     * @return {?}
     */
    onButtonClick() {
        this.buttonClick.emit();
    }
}
NxPageSearchComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-page-search',
                template: "<div class=\"nx-pagesearch\">\n  <div nxLayout=\"grid\">\n    <div nxRow>\n      <div [nxCol]=\"contentLayout\" class=\"nx-pagesearch--content\">\n        <ng-content></ng-content>\n      </div>\n      <div [nxCol]=\"buttonLayout\" *ngIf=\"!hideSearchButton\" class=\"nx-pagesearch__actions\">\n        <button nxButton=\"primary medium\" (click)=\"onButtonClick()\">{{buttonLabel}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".nx-pagesearch{padding:32px 0;background-color:#fff;box-shadow:0 2px 4px rgba(65,65,65,.5)}.nx-pagesearch ::ng-deep .nx-formfield__wrapper{padding-bottom:0}.nx-pagesearch ::ng-deep .c-input{font-size:30px;font-weight:300;line-height:32px;height:auto}.nx-pagesearch ::ng-deep .nx-formfield__prefix{color:#007ab3}.nx-pagesearch ::ng-deep button{margin:0}.nx-pagesearch ::ng-deep .nx-icon--auto{font-size:24px}.nx-pagesearch .nx-pagesearch__actions{display:flex;align-items:center}"]
            }] }
];
/** @nocollapse */
NxPageSearchComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
NxPageSearchComponent.propDecorators = {
    buttonClick: [{ type: Output, args: ['nxButtonClick',] }],
    buttonLabel: [{ type: Input, args: ['nxButtonLabel',] }],
    hideSearchButton: [{ type: Input, args: ['nxHideSearchButton',] }],
    buttonLayout: [{ type: Input, args: ['nxButtonLayout',] }],
    contentLayout: [{ type: Input, args: ['nxContentLayout',] }]
};
if (false) {
    /**
     * An event emitted when the user clicks the search button.
     * @type {?}
     */
    NxPageSearchComponent.prototype.buttonClick;
    /**
     * @type {?}
     * @private
     */
    NxPageSearchComponent.prototype._buttonLabel;
    /**
     * @type {?}
     * @private
     */
    NxPageSearchComponent.prototype._hideSearchButton;
    /**
     * @type {?}
     * @private
     */
    NxPageSearchComponent.prototype._buttonLayout;
    /**
     * @type {?}
     * @private
     */
    NxPageSearchComponent.prototype._contentLayout;
    /**
     * @type {?}
     * @private
     */
    NxPageSearchComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1zZWFyY2guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvcGFnZS1zZWFyY2gvIiwic291cmNlcyI6WyJwYWdlLXNlYXJjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzlELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFTbkgsTUFBTSxPQUFPLHFCQUFxQjs7OztJQTZEaEMsWUFBb0Isa0JBQXFDO1FBQXJDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7Ozs7UUEzRGhDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUVsRCxpQkFBWSxHQUFXLElBQUksQ0FBQztRQWM1QixzQkFBaUIsR0FBRyxLQUFLLENBQUM7UUFZMUIsa0JBQWEsR0FBRyxZQUFZLENBQUM7UUFjN0IsbUJBQWMsR0FBVyxJQUFJLENBQUM7SUFpQnNCLENBQUM7Ozs7OztJQXREN0QsSUFDSSxXQUFXLENBQUMsS0FBYTtRQUMzQixJQUFJLElBQUksQ0FBQyxZQUFZLEtBQUssS0FBSyxFQUFFO1lBQy9CLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBQzFCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUN4QztJQUNILENBQUM7Ozs7SUFDRCxJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQzs7Ozs7O0lBS0QsSUFDSSxnQkFBZ0IsQ0FBQyxLQUFjO1FBQ2pDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDekMsQ0FBQzs7OztJQUNELElBQUksZ0JBQWdCO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO0lBQ2hDLENBQUM7Ozs7OztJQUtELElBQ0ksWUFBWSxDQUFDLEtBQWE7UUFDNUIsSUFBSSxJQUFJLENBQUMsYUFBYSxLQUFLLEtBQUssRUFBRTtZQUNoQyxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztZQUMzQixJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDeEM7SUFDSCxDQUFDOzs7O0lBQ0QsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7Ozs7OztJQUtELElBQ0ksYUFBYSxDQUFDLEtBQWE7UUFDN0IsSUFBSSxJQUFJLENBQUMsY0FBYyxLQUFLLEtBQUssRUFBRTtZQUNqQyxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztZQUM1QixJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDeEM7SUFDSCxDQUFDOzs7O0lBQ0QsSUFBSSxhQUFhO1FBQ2YsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3ZCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztTQUM1QjtRQUNELE9BQU8sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3ZELENBQUM7Ozs7O0lBS0QsYUFBYTtRQUNYLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7O1lBeEVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixpY0FBeUM7Z0JBQ3pDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOzthQUVoRDs7OztZQVJpQyxpQkFBaUI7OzswQkFXaEQsTUFBTSxTQUFDLGVBQWU7MEJBS3RCLEtBQUssU0FBQyxlQUFlOytCQWNyQixLQUFLLFNBQUMsb0JBQW9COzJCQVkxQixLQUFLLFNBQUMsZ0JBQWdCOzRCQWN0QixLQUFLLFNBQUMsaUJBQWlCOzs7Ozs7O0lBN0N4Qiw0Q0FBMEQ7Ozs7O0lBRTFELDZDQUFvQzs7Ozs7SUFjcEMsa0RBQWtDOzs7OztJQVlsQyw4Q0FBcUM7Ozs7O0lBY3JDLCtDQUFzQzs7Ozs7SUFpQjFCLG1EQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbngtcGFnZS1zZWFyY2gnLFxuICB0ZW1wbGF0ZVVybDogJ3BhZ2Utc2VhcmNoLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0eWxlVXJsczogWyAncGFnZS1zZWFyY2guY29tcG9uZW50LnNjc3MnIF0sXG59KVxuZXhwb3J0IGNsYXNzIE54UGFnZVNlYXJjaENvbXBvbmVudCB7XG4gIC8qKiBBbiBldmVudCBlbWl0dGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIHRoZSBzZWFyY2ggYnV0dG9uLiAqL1xuICBAT3V0cHV0KCdueEJ1dHRvbkNsaWNrJykgYnV0dG9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcHJpdmF0ZSBfYnV0dG9uTGFiZWw6IHN0cmluZyA9IG51bGw7XG5cbiAgLyoqIFNldHMgdGhlIHRleHQgbGFiZWwgb2YgdGhlIGJ1dHRvbi4gKi9cbiAgQElucHV0KCdueEJ1dHRvbkxhYmVsJylcbiAgc2V0IGJ1dHRvbkxhYmVsKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodGhpcy5fYnV0dG9uTGFiZWwgIT09IHZhbHVlKSB7XG4gICAgICB0aGlzLl9idXR0b25MYWJlbCA9IHZhbHVlO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG4gIGdldCBidXR0b25MYWJlbCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9idXR0b25MYWJlbDtcbiAgfVxuXG4gIHByaXZhdGUgX2hpZGVTZWFyY2hCdXR0b24gPSBmYWxzZTtcblxuICAvKiogV2hldGhlciB0aGUgc2VhcmNoIGJ1dHRvbiBzaG91bGQgYmUgaGlkZGVuLiAqL1xuICBASW5wdXQoJ254SGlkZVNlYXJjaEJ1dHRvbicpXG4gIHNldCBoaWRlU2VhcmNoQnV0dG9uKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5faGlkZVNlYXJjaEJ1dHRvbiA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgZ2V0IGhpZGVTZWFyY2hCdXR0b24oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2hpZGVTZWFyY2hCdXR0b247XG4gIH1cblxuICBwcml2YXRlIF9idXR0b25MYXlvdXQgPSAnMTIsMTIsMTIsMic7XG5cbiAgLyoqIExheW91dCBvZiB0aGUgc2VhcmNoIGJ1dHRvbiBpbnNpZGUgb2YgYSBOeEdyaWQuIERlZmF1bHQ6IDEyLDEyLDEyLDIuICovXG4gIEBJbnB1dCgnbnhCdXR0b25MYXlvdXQnKVxuICBzZXQgYnV0dG9uTGF5b3V0KHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodGhpcy5fYnV0dG9uTGF5b3V0ICE9PSB2YWx1ZSkge1xuICAgICAgdGhpcy5fYnV0dG9uTGF5b3V0ID0gdmFsdWU7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gIH1cbiAgZ2V0IGJ1dHRvbkxheW91dCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9idXR0b25MYXlvdXQ7XG4gIH1cblxuICBwcml2YXRlIF9jb250ZW50TGF5b3V0OiBzdHJpbmcgPSBudWxsO1xuXG4gIC8qKiBMYXlvdXQgb2YgdGhlIGNvbnRlbnQgYXJlYSBpbnNpZGUgb2YgYSBOeEdyaWQuIERlZmF1bHQ6IDEyLDEyLDEyLDEwIHwgMTIgKGlmIHNlYXJjaCBidXR0b24gaXMgaGlkZGVuKS4gKi9cbiAgQElucHV0KCdueENvbnRlbnRMYXlvdXQnKVxuICBzZXQgY29udGVudExheW91dCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHRoaXMuX2NvbnRlbnRMYXlvdXQgIT09IHZhbHVlKSB7XG4gICAgICB0aGlzLl9jb250ZW50TGF5b3V0ID0gdmFsdWU7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gIH1cbiAgZ2V0IGNvbnRlbnRMYXlvdXQoKTogc3RyaW5nIHtcbiAgICBpZiAodGhpcy5fY29udGVudExheW91dCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2NvbnRlbnRMYXlvdXQ7XG4gICAgfVxuICAgIHJldHVybiAhdGhpcy5oaWRlU2VhcmNoQnV0dG9uID8gJzEyLDEyLDEyLDEwJyA6ICcxMic7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgb25CdXR0b25DbGljaygpIHtcbiAgICB0aGlzLmJ1dHRvbkNsaWNrLmVtaXQoKTtcbiAgfVxufVxuIl19