/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ENTER, SPACE } from '@angular/cdk/keycodes';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, Host } from '@angular/core';
import { merge, Subscription } from 'rxjs';
import { filter } from 'rxjs/operators';
import { nxAccordionAnimations } from './accordion-animations';
import { NxExpansionPanelComponent } from './expansion-panel';
export class NxExpansionPanelHeaderComponent {
    /**
     * @param {?} panel
     * @param {?} _changeDetectorRef
     */
    constructor(panel, _changeDetectorRef) {
        this.panel = panel;
        this._changeDetectorRef = _changeDetectorRef;
        this._parentChangeSubscription = Subscription.EMPTY;
        this._parentChangeSubscription = merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter((/**
         * @param {?} changes
         * @return {?}
         */
        changes => !!(changes.hideToggle || changes.disabled)))))
            .subscribe((/**
         * @return {?}
         */
        () => this._changeDetectorRef.markForCheck()));
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this._parentChangeSubscription.unsubscribe();
    }
    /**
     * \@docs-private
     * @return {?}
     */
    isExpanded() {
        return this.panel.expanded;
    }
    /**
     * \@docs-private
     * @return {?}
     */
    getOpenState() {
        return this.panel.getOpenState();
    }
    /**
     * @return {?}
     */
    _getPanelId() {
        return this.panel.id;
    }
    /**
     * Toggle the expansion panel.
     * @return {?}
     */
    toggle() {
        this.panel.toggle();
    }
    /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    keydown(event) {
        switch (event.keyCode) {
            case SPACE:
            case ENTER:
                event.preventDefault();
                this.toggle();
                break;
            default:
                return;
        }
    }
}
NxExpansionPanelHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-expansion-panel-header',
                template: "<div class=\"nx-expansion-panel__header-content\">\n  <ng-content select=\"nx-expansion-panel-title\"></ng-content>\n  <ng-content select=\"nx-expansion-panel-description\"></ng-content>\n  <nx-icon\n    [@indicatorRotate]=\"getOpenState()\"\n    class=\"nx-expansion-panel__chevron\"\n    name=\"chevron-down\">\n  </nx-icon>\n</div>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                animations: [nxAccordionAnimations.indicatorRotate],
                host: {
                    '[class.nx-expanded]': 'isExpanded()',
                    'class': 'nx-expansion-panel__header',
                    'role': 'button',
                    '[attr.id]': 'panel._headerId',
                    '[attr.tabindex]': 'panel.disabled ? -1 : 0',
                    '[attr.aria-controls]': '_getPanelId()',
                    '[attr.aria-expanded]': 'isExpanded()',
                    '[attr.aria-disabled]': 'panel.disabled',
                    '(keydown)': 'keydown($event)',
                    '(click)': 'toggle()'
                },
                styles: [":host:focus{outline:0}.nx-expansion-panel__header-content{width:100%;cursor:pointer;align-items:center;color:#414141;display:flex;justify-content:space-between;position:relative;padding:24px 32px;margin-top:16px;background:#f5f5f5;outline:0;border:none}::ng-deep .nx-expansion-panel__header-title{font-size:26px;font-weight:300;line-height:32px;letter-spacing:.3px;text-align:left;margin-right:32px}:host-context(.nx-expansion-panel--negative) .nx-expansion-panel__header-content{background-color:#fff}.nx-expansion-panel__chevron{color:#006192;pointer-events:none;font-size:24px}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{margin-top:0;background:0 0}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{color:#006192;letter-spacing:.2px;font-weight:400;font-size:20px;line-height:28px}@media (max-width:703px){.nx-expansion-panel__header-content{padding:16px;margin-top:0;border-top:1px solid #d9d9d9}::ng-deep .nx-expansion-panel__header-title{font-size:20px;line-height:28px;margin-right:16px;font-weight:400}:host(.nx-expanded) .nx-expansion-panel__header-content{border-bottom:1px solid #d9d9d9}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{line-height:24px;font-size:16px}:host-context(.nx-expansion-panel--light.nx-expanded) .nx-expansion-panel__header-content{border-bottom:none}}:host[aria-disabled=true] .nx-expansion-panel__header-content{cursor:not-allowed}:host[aria-disabled=true] ::ng-deep .nx-expansion-panel__chevron,:host[aria-disabled=true] ::ng-deep .nx-expansion-panel__header-title{color:#c2c2c2}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{border-color:#fff}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-title{color:#fff}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__chevron{color:#fff}:host-context([data-whatinput=keyboard]):focus .nx-expansion-panel__header-content{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-top-color:transparent;z-index:1}"]
            }] }
];
/** @nocollapse */
NxExpansionPanelHeaderComponent.ctorParameters = () => [
    { type: NxExpansionPanelComponent, decorators: [{ type: Host }] },
    { type: ChangeDetectorRef }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxExpansionPanelHeaderComponent.prototype._parentChangeSubscription;
    /**
     * \@docs-private
     * @type {?}
     */
    NxExpansionPanelHeaderComponent.prototype.panel;
    /**
     * @type {?}
     * @private
     */
    NxExpansionPanelHeaderComponent.prototype._changeDetectorRef;
}
/**
 * This directive is to be used inside of the NxExpansionPanelHeader component.
 */
export class NxExpansionPanelDescriptionDirective {
}
NxExpansionPanelDescriptionDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'nx-expansion-panel-description',
                host: {
                    class: 'nx-expansion-panel__header-description'
                }
            },] }
];
/**
 * This directive is to be used inside of the NxExpansionPanelHeader component.
 */
export class NxExpansionPanelTitleDirective {
}
NxExpansionPanelTitleDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'nx-expansion-panel-title',
                host: {
                    class: 'nx-expansion-panel__header-title'
                }
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsiYWNjb3JkaW9uL2V4cGFuc2lvbi1wYW5lbC1oZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDckQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ2xILE9BQU8sRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4QyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQXNCOUQsTUFBTSxPQUFPLCtCQUErQjs7Ozs7SUFHMUMsWUFDc0MsS0FBZ0MsRUFDNUQsa0JBQXFDO1FBRFQsVUFBSyxHQUFMLEtBQUssQ0FBMkI7UUFDNUQsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFtQjtRQUp2Qyw4QkFBeUIsR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDO1FBTXJELElBQUksQ0FBQyx5QkFBeUIsR0FBRyxLQUFLLENBQ3BDLEtBQUssQ0FBQyxNQUFNLEVBQ1osS0FBSyxDQUFDLE1BQU0sRUFDWixLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNOzs7O1FBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBQyxDQUFDLENBQ3hGO2FBQ0EsU0FBUzs7O1FBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxFQUFDLENBQUM7SUFFM0QsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMseUJBQXlCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDL0MsQ0FBQzs7Ozs7SUFHRCxVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztJQUM3QixDQUFDOzs7OztJQUdELFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDbkMsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Ozs7O0lBS0QsTUFBTTtRQUNKLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7Ozs7O0lBR0QsT0FBTyxDQUFDLEtBQW9CO1FBQzFCLFFBQVEsS0FBSyxDQUFDLE9BQU8sRUFBRTtZQUNyQixLQUFLLEtBQUssQ0FBQztZQUNYLEtBQUssS0FBSztnQkFDUixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztnQkFDZCxNQUFNO1lBQ1I7Z0JBQ0UsT0FBTztTQUNWO0lBQ0gsQ0FBQzs7O1lBdkVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMkJBQTJCO2dCQUNyQywwVkFBMEM7Z0JBRTFDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxVQUFVLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLENBQUM7Z0JBQ25ELElBQUksRUFBRTtvQkFDSixxQkFBcUIsRUFBRSxjQUFjO29CQUNyQyxPQUFPLEVBQUUsNEJBQTRCO29CQUNyQyxNQUFNLEVBQUUsUUFBUTtvQkFDaEIsV0FBVyxFQUFFLGlCQUFpQjtvQkFDOUIsaUJBQWlCLEVBQUUseUJBQXlCO29CQUM1QyxzQkFBc0IsRUFBRSxlQUFlO29CQUN2QyxzQkFBc0IsRUFBRSxjQUFjO29CQUN0QyxzQkFBc0IsRUFBRSxnQkFBZ0I7b0JBQ3hDLFdBQVcsRUFBRSxpQkFBaUI7b0JBQzlCLFNBQVMsRUFBRSxVQUFVO2lCQUN0Qjs7YUFDRjs7OztZQXJCUSx5QkFBeUIsdUJBMEJSLElBQUk7WUEvQkksaUJBQWlCOzs7Ozs7O0lBNEJqRCxvRUFBdUQ7Ozs7O0lBR2hDLGdEQUErQzs7Ozs7SUFDcEUsNkRBQTZDOzs7OztBQTZEakQsTUFBTSxPQUFPLG9DQUFvQzs7O1lBUGhELFNBQVMsU0FBQzs7Z0JBRVQsUUFBUSxFQUFFLGdDQUFnQztnQkFDMUMsSUFBSSxFQUFHO29CQUNMLEtBQUssRUFBRSx3Q0FBd0M7aUJBQ2hEO2FBQ0Y7Ozs7O0FBYUQsTUFBTSxPQUFPLDhCQUE4Qjs7O1lBUDFDLFNBQVMsU0FBQzs7Z0JBRVQsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMsSUFBSSxFQUFHO29CQUNMLEtBQUssRUFBRSxrQ0FBa0M7aUJBQzFDO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFTlRFUiwgU1BBQ0UgfSBmcm9tICdAYW5ndWxhci9jZGsva2V5Y29kZXMnO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIERpcmVjdGl2ZSwgSG9zdCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBtZXJnZSwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IG54QWNjb3JkaW9uQW5pbWF0aW9ucyB9IGZyb20gJy4vYWNjb3JkaW9uLWFuaW1hdGlvbnMnO1xuaW1wb3J0IHsgTnhFeHBhbnNpb25QYW5lbENvbXBvbmVudCB9IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsJztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC1leHBhbnNpb24tcGFuZWwtaGVhZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICdleHBhbnNpb24tcGFuZWwtaGVhZGVyLmh0bWwnLFxuICBzdHlsZVVybHM6IFsnZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBhbmltYXRpb25zOiBbbnhBY2NvcmRpb25BbmltYXRpb25zLmluZGljYXRvclJvdGF0ZV0sXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLm54LWV4cGFuZGVkXSc6ICdpc0V4cGFuZGVkKCknLFxuICAgICdjbGFzcyc6ICdueC1leHBhbnNpb24tcGFuZWxfX2hlYWRlcicsXG4gICAgJ3JvbGUnOiAnYnV0dG9uJyxcbiAgICAnW2F0dHIuaWRdJzogJ3BhbmVsLl9oZWFkZXJJZCcsXG4gICAgJ1thdHRyLnRhYmluZGV4XSc6ICdwYW5lbC5kaXNhYmxlZCA/IC0xIDogMCcsXG4gICAgJ1thdHRyLmFyaWEtY29udHJvbHNdJzogJ19nZXRQYW5lbElkKCknLFxuICAgICdbYXR0ci5hcmlhLWV4cGFuZGVkXSc6ICdpc0V4cGFuZGVkKCknLFxuICAgICdbYXR0ci5hcmlhLWRpc2FibGVkXSc6ICdwYW5lbC5kaXNhYmxlZCcsXG4gICAgJyhrZXlkb3duKSc6ICdrZXlkb3duKCRldmVudCknLFxuICAgICcoY2xpY2spJzogJ3RvZ2dsZSgpJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE54RXhwYW5zaW9uUGFuZWxIZWFkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBwcml2YXRlIF9wYXJlbnRDaGFuZ2VTdWJzY3JpcHRpb24gPSBTdWJzY3JpcHRpb24uRU1QVFk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi8gQEhvc3QoKSBwdWJsaWMgcGFuZWw6IE54RXhwYW5zaW9uUGFuZWxDb21wb25lbnQsXG4gICAgcHJpdmF0ZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmXG4gICkge1xuICAgIHRoaXMuX3BhcmVudENoYW5nZVN1YnNjcmlwdGlvbiA9IG1lcmdlKFxuICAgICAgcGFuZWwub3BlbmVkLFxuICAgICAgcGFuZWwuY2xvc2VkLFxuICAgICAgcGFuZWwuX2lucHV0Q2hhbmdlcy5waXBlKGZpbHRlcihjaGFuZ2VzID0+ICEhKGNoYW5nZXMuaGlkZVRvZ2dsZSB8fCBjaGFuZ2VzLmRpc2FibGVkKSkpXG4gICAgKVxuICAgIC5zdWJzY3JpYmUoKCkgPT4gdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCkpO1xuXG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLl9wYXJlbnRDaGFuZ2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIGlzRXhwYW5kZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMucGFuZWwuZXhwYW5kZWQ7XG4gIH1cblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBnZXRPcGVuU3RhdGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5wYW5lbC5nZXRPcGVuU3RhdGUoKTtcbiAgfVxuXG4gIF9nZXRQYW5lbElkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMucGFuZWwuaWQ7XG4gIH1cblxuICAvKipcbiAgICogVG9nZ2xlIHRoZSBleHBhbnNpb24gcGFuZWwuXG4gICAqL1xuICB0b2dnbGUoKSB7XG4gICAgdGhpcy5wYW5lbC50b2dnbGUoKTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIGtleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICBzd2l0Y2ggKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgIGNhc2UgU1BBQ0U6XG4gICAgICBjYXNlIEVOVEVSOlxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLnRvZ2dsZSgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cbn1cblxuXG4vKipcbiAqIFRoaXMgZGlyZWN0aXZlIGlzIHRvIGJlIHVzZWQgaW5zaWRlIG9mIHRoZSBOeEV4cGFuc2lvblBhbmVsSGVhZGVyIGNvbXBvbmVudC5cbiAqL1xuQERpcmVjdGl2ZSh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdueC1leHBhbnNpb24tcGFuZWwtZGVzY3JpcHRpb24nLFxuICBob3N0IDoge1xuICAgIGNsYXNzOiAnbngtZXhwYW5zaW9uLXBhbmVsX19oZWFkZXItZGVzY3JpcHRpb24nXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnhFeHBhbnNpb25QYW5lbERlc2NyaXB0aW9uRGlyZWN0aXZlIHt9XG5cbi8qKlxuICogVGhpcyBkaXJlY3RpdmUgaXMgdG8gYmUgdXNlZCBpbnNpZGUgb2YgdGhlIE54RXhwYW5zaW9uUGFuZWxIZWFkZXIgY29tcG9uZW50LlxuICovXG5ARGlyZWN0aXZlKHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxuICBzZWxlY3RvcjogJ254LWV4cGFuc2lvbi1wYW5lbC10aXRsZScsXG4gIGhvc3QgOiB7XG4gICAgY2xhc3M6ICdueC1leHBhbnNpb24tcGFuZWxfX2hlYWRlci10aXRsZSdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOeEV4cGFuc2lvblBhbmVsVGl0bGVEaXJlY3RpdmUge31cbiJdfQ==