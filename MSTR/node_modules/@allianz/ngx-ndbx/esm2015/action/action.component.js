/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
export class NxActionComponent {
    /**
     * @param {?} _changeDetectorRef
     */
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._selected = false;
        this._expandable = false;
        this._expanded = false;
    }
    /**
     * Whether this action is selected or not.
     * @param {?} value
     * @return {?}
     */
    set selected(value) {
        this._selected = coerceBooleanProperty(value);
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get selected() {
        return this._selected;
    }
    /**
     * Whether this action is expandable or not. Will add a caret icon.
     * @param {?} value
     * @return {?}
     */
    set expandable(value) {
        this._expandable = coerceBooleanProperty(value);
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get expandable() {
        return this._expandable;
    }
    /**
     * Whether this action is expanded or not.
     * Only works in combination with the `expandable` option set to `true`.
     * @param {?} value
     * @return {?}
     */
    set expanded(value) {
        this._expanded = coerceBooleanProperty(value);
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get expanded() {
        return this._expanded;
    }
}
NxActionComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: '[nxAction]',
                template: "<div class=\"nx-action__wrapper\">\n  <ng-container *ngIf=\"expandable\">\n    <nx-icon class=\"nx-action__expand-icon\" name=\"chevron-right\"></nx-icon>\n  </ng-container>\n  <ng-content select=\"[nxActionIcon]\"></ng-content>\n  <span class=\"nx-action__label\">\n    <ng-content></ng-content>\n  </span>\n</div>\n",
                host: {
                    '[class.is-expanded]': 'expanded',
                    '[class.is-selected]': 'selected',
                    '[class.is-expandable]': 'expandable',
                    'class': 'nx-action'
                },
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host(.nx-action){display:block;background-color:#f5f5f5;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;box-shadow:none;border:none;margin:0;cursor:pointer;line-height:24px;font-size:16px;font-weight:400;padding:8px 16px 8px 0;width:100%;color:#414141;text-decoration:none}:host(.nx-action):hover{background-color:#ececec}:host(.nx-action).is-expanded{font-weight:700}:host(.nx-action).is-expanded .nx-action__expand-icon{-webkit-transform:rotateZ(90deg);transform:rotateZ(90deg)}:host(.nx-action).is-expandable .nx-action__wrapper::before{flex:0 1 32px;max-width:8px;min-width:4px}:host(.nx-action).is-selected{background-color:#007ab3;color:#fff;font-weight:700}:host(.nx-action)[nxTreeNodePadding] .nx-action__wrapper::before{flex-shrink:0}:host(.nx-action)::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]):focus{box-shadow:inset 0 0 0 4px #009de6;border-radius:8px}:host-context([data-whatinput=keyboard]):focus.is-selected{box-shadow:inset 0 0 0 4px #009de6,inset 0 0 0 6px #fff}.nx-action__expand-icon{display:flex;justify-content:center;transition:.2s;-webkit-transform:rotateZ(0);transform:rotateZ(0);width:16px;height:24px;margin-right:8px;flex:0 0 auto;font-size:22px}.nx-action__wrapper{display:flex;align-items:center;position:relative;overflow:hidden}.nx-action__wrapper::before{content:'';display:block;flex:0 1 32px;min-width:16px;height:1em}::ng-deep .nx-action__icon{margin-right:16px;height:24px;font-weight:400;flex:0 0 auto;position:relative;top:-1px}.nx-action__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 50%;text-align:left;line-height:1;padding:4px 0}"]
            }] }
];
/** @nocollapse */
NxActionComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
NxActionComponent.propDecorators = {
    selected: [{ type: Input }],
    expandable: [{ type: Input }],
    expanded: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxActionComponent.prototype._selected;
    /**
     * @type {?}
     * @private
     */
    NxActionComponent.prototype._expandable;
    /**
     * @type {?}
     * @private
     */
    NxActionComponent.prototype._expanded;
    /**
     * @type {?}
     * @private
     */
    NxActionComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4L2FjdGlvbi8iLCJzb3VyY2VzIjpbImFjdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBZTlELE1BQU0sT0FBTyxpQkFBaUI7Ozs7SUFvQzVCLFlBQW9CLGtCQUFxQztRQUFyQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW1CO1FBMUJqRCxjQUFTLEdBQVksS0FBSyxDQUFDO1FBVzNCLGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBYTdCLGNBQVMsR0FBWSxLQUFLLENBQUM7SUFFeUIsQ0FBQzs7Ozs7O0lBbEM3RCxJQUNJLFFBQVEsQ0FBQyxLQUFjO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3pDLENBQUM7Ozs7SUFDRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQzs7Ozs7O0lBSUQsSUFDSSxVQUFVLENBQUMsS0FBYztRQUMzQixJQUFJLENBQUMsV0FBVyxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN6QyxDQUFDOzs7O0lBQ0QsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7Ozs7Ozs7SUFNRCxJQUNJLFFBQVEsQ0FBQyxLQUFjO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3pDLENBQUM7Ozs7SUFDRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQzs7O1lBOUNGLFNBQVMsU0FBQzs7Z0JBRVQsUUFBUSxFQUFFLFlBQVk7Z0JBQ3RCLHlVQUFvQztnQkFFcEMsSUFBSSxFQUFFO29CQUNKLHFCQUFxQixFQUFFLFVBQVU7b0JBQ2pDLHFCQUFxQixFQUFFLFVBQVU7b0JBQ2pDLHVCQUF1QixFQUFFLFlBQVk7b0JBQ3JDLE9BQU8sRUFBRSxXQUFXO2lCQUNyQjtnQkFDRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7YUFDaEQ7Ozs7WUFmbUQsaUJBQWlCOzs7dUJBa0JsRSxLQUFLO3lCQVdMLEtBQUs7dUJBYUwsS0FBSzs7Ozs7OztJQWhCTixzQ0FBbUM7Ozs7O0lBV25DLHdDQUFxQzs7Ozs7SUFhckMsc0NBQW1DOzs7OztJQUV2QiwrQ0FBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnW254QWN0aW9uXScsXG4gIHRlbXBsYXRlVXJsOiAnYWN0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJ2FjdGlvbi5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5pcy1leHBhbmRlZF0nOiAnZXhwYW5kZWQnLFxuICAgICdbY2xhc3MuaXMtc2VsZWN0ZWRdJzogJ3NlbGVjdGVkJyxcbiAgICAnW2NsYXNzLmlzLWV4cGFuZGFibGVdJzogJ2V4cGFuZGFibGUnLFxuICAgICdjbGFzcyc6ICdueC1hY3Rpb24nXG4gIH0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOeEFjdGlvbkNvbXBvbmVudCB7XG4gIC8qKiBXaGV0aGVyIHRoaXMgYWN0aW9uIGlzIHNlbGVjdGVkIG9yIG5vdC4gICovXG4gIEBJbnB1dCgpXG4gIHNldCBzZWxlY3RlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX3NlbGVjdGVkID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuICBnZXQgc2VsZWN0ZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NlbGVjdGVkO1xuICB9XG4gIHByaXZhdGUgX3NlbGVjdGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqIFdoZXRoZXIgdGhpcyBhY3Rpb24gaXMgZXhwYW5kYWJsZSBvciBub3QuIFdpbGwgYWRkIGEgY2FyZXQgaWNvbi4gKi9cbiAgQElucHV0KClcbiAgc2V0IGV4cGFuZGFibGUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9leHBhbmRhYmxlID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuICBnZXQgZXhwYW5kYWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fZXhwYW5kYWJsZTtcbiAgfVxuICBwcml2YXRlIF9leHBhbmRhYmxlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqIFdoZXRoZXIgdGhpcyBhY3Rpb24gaXMgZXhwYW5kZWQgb3Igbm90LlxuICAgIE9ubHkgd29ya3MgaW4gY29tYmluYXRpb24gd2l0aCB0aGUgYGV4cGFuZGFibGVgIG9wdGlvbiBzZXQgdG8gYHRydWVgLlxuICAgKi9cbiAgQElucHV0KClcbiAgc2V0IGV4cGFuZGVkKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fZXhwYW5kZWQgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICB9XG4gIGdldCBleHBhbmRlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZXhwYW5kZWQ7XG4gIH1cbiAgcHJpdmF0ZSBfZXhwYW5kZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG59XG4iXX0=