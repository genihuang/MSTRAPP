/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ViewChild, InjectionToken, Inject, Optional } from '@angular/core';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Input, QueryList, ViewEncapsulation, Renderer2 } from '@angular/core';
import { startWith } from 'rxjs/operators';
import { getClassNameList } from '@allianz/ngx-ndbx/utils';
import { NxFormfieldHintDirective } from './hint.directive';
import { NxFormfieldNoteDirective } from './note.directive';
import { NxFormfieldErrorDirective } from './error.directive';
import { NxFormfieldControl } from './formfield-control';
import { NxFormfieldSuffixDirective } from './suffix.directive';
import { NxFormfieldPrefixDirective } from './prefix.directive';
import { NxFormfieldAppendixDirective } from './appendix.directive';
import { NxFormfieldLabelDirective } from './label.directive';
/** @type {?} */
const NX_STYLES = {
    'negative': 'nx-formfield--negative'
};
/**
 * Represents the default options for the form field that can be configured
 * using the `FORMFIELD_DEFAULT_OPTIONS` injection token.
 * @record
 */
export function FormfieldDefaultOptions() { }
if (false) {
    /**
     * Sets the default appearance. (optional)
     * @type {?|undefined}
     */
    FormfieldDefaultOptions.prototype.appearance;
    /**
     * Sets the default float label type. (optional)
     * @type {?|undefined}
     */
    FormfieldDefaultOptions.prototype.nxFloatLabel;
}
/** @type {?} */
export const FORMFIELD_DEFAULT_OPTIONS = new InjectionToken('FORMFIELD_DEFAULT_OPTIONS');
export class NxFormfieldComponent {
    /**
     * @param {?} elementRef
     * @param {?} renderer
     * @param {?} _changeDetectorRef
     * @param {?} _defaultOptions
     */
    constructor(elementRef, renderer, _changeDetectorRef, _defaultOptions) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this._changeDetectorRef = _changeDetectorRef;
        this._defaultOptions = _defaultOptions;
        this._styles = '';
        this._subscriptions = [];
    }
    /**
     * Whether the label should float once the input is focused or filled (auto, default)
     * or force it to always float with a value of always to simulate a more static form.
     * @return {?}
     */
    get floatLabel() {
        return this._floatLabel || (this._defaultOptions && this._defaultOptions.nxFloatLabel) || 'auto';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set floatLabel(value) {
        if (value !== this._floatLabel) {
            this._floatLabel = value || 'auto';
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * Sets the styling of the formfield.
     * If 'negative', a negative set of stylings is used.
     * @param {?} value
     * @return {?}
     */
    set styles(value) {
        if (this._styles === value) {
            return;
        }
        /** @type {?} */
        const classNames = getClassNameList(value, NX_STYLES);
        classNames.forEach((/**
         * @param {?} classStr
         * @return {?}
         */
        classStr => {
            this.renderer.addClass(this.elementRef.nativeElement, classStr);
        }));
        this._styles = value;
    }
    /**
     * **NDBX Expert option**
     *
     * Sets the appearance of the formfield.
     * @param {?} value
     * @return {?}
     */
    set appearance(value) {
        if (this._appearance !== value) {
            this._appearance = value;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get appearance() {
        return this._appearance || (this._defaultOptions && this._defaultOptions.appearance) || 'auto';
    }
    /**
     * @return {?}
     */
    get _shouldAlwaysFloat() {
        return this.floatLabel === 'always';
    }
    /**
     * \@docs-private
     * @return {?}
     */
    get shouldLabelFloat() {
        return (this._control.shouldLabelFloat || this._shouldAlwaysFloat);
    }
    /**
     * \@docs-private
     * @return {?}
     */
    get control() {
        return this._control;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        /** @type {?} */
        let subscription;
        /** @type {?} */
        const subscriptions = [];
        this._validateControlChild();
        // Subscribe to changes in the child control state in order to update the form field UI.
        subscription = this._control.stateChanges.pipe(startWith(null)).subscribe((/**
         * @return {?}
         */
        () => {
            this._syncDescribedByIds();
            this._changeDetectorRef.markForCheck();
        }));
        subscriptions.push(subscription);
        // Re-validate when the number of hints changes.
        subscription = this._hintChildren.changes.pipe(startWith(null)).subscribe((/**
         * @return {?}
         */
        () => {
            this._changeDetectorRef.markForCheck();
        }));
        subscriptions.push(subscription);
        // Update the aria-described by when the number of errors changes.
        subscription = this._errorChildren.changes.pipe(startWith(null)).subscribe((/**
         * @return {?}
         */
        () => {
            this._syncDescribedByIds();
            this._changeDetectorRef.markForCheck();
        }));
        subscriptions.push(subscription);
        this._subscriptions = subscriptions;
    }
    /**
     * @return {?}
     */
    ngAfterContentChecked() {
        this._validateControlChild();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this._subscriptions.forEach((/**
         * @param {?} subscription
         * @return {?}
         */
        (subscription) => subscription.unsubscribe()));
    }
    /**
     * \@docs-private
     * @return {?}
     */
    getDisplayedMessage() {
        if (this._control.errorState && this._errorChildren && this._errorChildren.length > 0) {
            return 'error';
        }
        return 'hint';
    }
    /**
     * @private
     * @return {?}
     */
    _syncDescribedByIds() {
        if (this._control) {
            /** @type {?} */
            let ids = [];
            ids = this._noteChildren.map((/**
             * @param {?} hint
             * @return {?}
             */
            hint => hint.id));
            if (this.getDisplayedMessage() === 'hint') {
                ids = [...this._hintChildren.map((/**
                     * @param {?} hint
                     * @return {?}
                     */
                    hint => hint.id)), ...ids];
            }
            else if (this._errorChildren) {
                ids = [...this._errorChildren.map((/**
                     * @param {?} error
                     * @return {?}
                     */
                    error => error.id)), ...ids];
            }
            this._control.setDescribedByIds(ids);
        }
    }
    // Fail if the required control is missing.
    /**
     * @protected
     * @return {?}
     */
    _validateControlChild() {
        if (!this._control) {
            throw new Error('Formfield must contain a NxFormfieldControl like input[nxInput] or a custom implementation');
        }
    }
    /**
     * \@docs-private
     * @return {?}
     */
    getConnectedOverlayOrigin() {
        return this._connectionContainerRef || this.elementRef;
    }
}
NxFormfieldComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-formfield',
                template: "<!--\nWe are building the following structure.\n\n+-----------------------------+ +-----------+\n| Prefix |   Input   | Suffix | |  Appendix |\n+-----------------------------+ +-----------+\n|-----------------Border--------------------|\n+-------------------------------------------+\n|                 Hints                     |\n+-------------------------------------------+\n|                                           |\n|                Messages                   |\n|                                           |\n+-------------------------------------------+\n\n-->\n\n<div class=\"nx-formfield__wrapper\">\n\n\n  <!-- Give a flex context to properly align suffix, input & postfix -->\n  <div class=\"nx-formfield__row\"  #connectionContainer>\n    <div class=\"nx-formfield__flexfield\">\n      <div class=\"nx-formfield__prefix\" *ngIf=\"_prefixChildren.length\">\n          <ng-content select=\"[nxFormfieldPrefix]\"></ng-content>\n      </div>\n\n      <div class=\"nx-formfield__input\">\n        <ng-content></ng-content>\n\n        <!-- This handles the floating whole behavior -->\n        <span class=\"nx-formfield__label-holder\">\n          <label\n            class=\"nx-formfield__label\"\n            [attr.aria-owns]=\"_control.id\"\n            [attr.for]=\"_control.id\">\n            <ng-container *ngIf=\"!_labelChild\">\n              {{ label }}\n            </ng-container>\n            <ng-content select=\"nx-formfield-label\"></ng-content>\n          </label>\n        </span>\n      </div>\n\n      <div class=\"nx-formfield__suffix\" *ngIf=\"_suffixChildren.length\">\n          <ng-content select=\"[nxFormfieldSuffix]\"></ng-content>\n      </div>\n    </div>\n\n    <!-- Appendix is similar to a suffix but visibly outside of the input  -->\n    <div class=\"nx-formfield__appendix\" *ngIf=\"_appendixChildren.length\">\n      <ng-content select=\"[nxFormfieldAppendix]\"></ng-content>\n    </div>\n  </div>\n\n  <!-- Space to render the hints below the textfield -->\n  <div class=\"nx-formfield__hints\" *ngIf=\"_hintChildren.length\">\n      <ng-content select=\"[nxFormfieldHint]\"></ng-content>\n  </div>\n\n  <!-- In case we got some additional information we render them below the given input -->\n  <div class=\"nx-formfield__messages\" [ngSwitch]=\"getDisplayedMessage()\">\n    <div *ngSwitchCase=\"'error'\">\n      <ng-content select=\"[nxFormfieldError]\"></ng-content>\n    </div>\n\n    <div *ngSwitchCase=\"'hint'\">\n      <ng-content select=\"[nxFormfieldNote]\"></ng-content>\n    </div>\n  </div>\n</div>\n\n\n",
                host: {
                    '[class.nx-formfield]': 'true',
                    '[class.is-disabled]': 'this._control.disabled',
                    '[class.is-readonly]': 'this._control.readonly',
                    '[class.is-filled]': 'this._control.empty === false',
                    '[class.is-focused]': 'this._control.focused',
                    '[class.is-floating]': 'this.shouldLabelFloat',
                    '[class.has-error]': 'this._control.errorState',
                    '[class.has-outline]': 'this.appearance === "outline"'
                },
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                styles: [".nx-formfield{display:block;font-size:20px;color:#414141;text-align:left}.nx-formfield__wrapper{padding-bottom:24px}.nx-formfield__input{position:relative;line-height:28px;letter-spacing:.2px;flex:auto;min-width:0}.nx-formfield__label-holder{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;pointer-events:none;z-index:10;top:-16px;padding-top:16px}.nx-formfield__label{color:inherit;display:block;position:absolute;left:0;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;-webkit-transform-origin:0 0;transform-origin:0 0;transition:transform .15s ease-out,font-size .15s ease-out,-webkit-transform .15s ease-out;font-weight:300;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%;-ms-text-size-adjust:100%;text-size-adjust:100%;letter-spacing:.2px}.nx-formfield__flexfield{display:inline-flex;align-items:flex-end;width:100%;border-bottom:1px solid currentColor;margin-top:16px;padding-bottom:3px}.nx-formfield__row{display:flex;align-items:center;width:100%}.nx-formfield__input textarea[nxInput]{vertical-align:bottom}.nx-formfield__appendix,.nx-formfield__prefix,.nx-formfield__suffix{flex:none;white-space:nowrap;color:#414141;font-weight:600;letter-spacing:.2px}.nx-formfield__appendix nx-icon.nx-icon--auto,.nx-formfield__prefix nx-icon.nx-icon--auto,.nx-formfield__suffix nx-icon.nx-icon--auto{font-size:24px;font-weight:400}.nx-formfield__appendix nx-icon,.nx-formfield__prefix nx-icon,.nx-formfield__suffix nx-icon{display:block;color:#006192;height:24px}.nx-formfield__appendix nx-password-toggle nx-icon,.nx-formfield__prefix nx-password-toggle nx-icon,.nx-formfield__suffix nx-password-toggle nx-icon{color:#414141}.nx-formfield__prefix,.nx-formfield__suffix{line-height:28px;height:28px;display:inline-flex;align-items:center}.nx-formfield__appendix{margin-left:8px;margin-top:16px;display:flex;border-bottom:1px solid transparent;padding-bottom:3px;align-items:center}.nx-formfield__prefix{margin-right:8px}.nx-formfield__suffix{margin-left:8px}.nx-formfield__hints{text-align:right;color:#414141;font-size:12px;line-height:16px;letter-spacing:.5px;padding-top:8px}.nx-formfield__messages{margin-top:4px}.nx-formfield.is-focused .nx-formfield__label{text-overflow:ellipsis;font-weight:600;font-size:12px}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error){color:#006192}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) .nx-formfield__label{color:#414141}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) .nx-formfield__flexfield{border-bottom-color:#007ab3}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error).nx-formfield--negative{color:#fff}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) nx-password-toggle nx-icon{color:#007ab3}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline .nx-formfield__flexfield{border-color:#006192;box-shadow:0 0 0 2px #009de6}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline.has-error .nx-formfield__flexfield{border-color:#dc3149}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline nx-password-toggle nx-icon{color:#007ab3}.nx-formfield.has-outline{font-size:16px;line-height:24px}.nx-formfield.has-outline .nx-formfield__flexfield{border:1px solid #767676;border-radius:4px;margin-top:28px;min-height:40px;align-items:center;padding-bottom:0}.nx-formfield.has-outline .nx-formfield__label{padding-left:7px;padding-right:7px}.nx-formfield.has-outline .nx-formfield__input{margin-top:0;padding-bottom:0;line-height:38px}.nx-formfield.has-outline .nx-formfield__input input[nxInput],.nx-formfield.has-outline .nx-formfield__input textarea[nxInput]{font-weight:400}.nx-formfield.has-outline .nx-formfield__input textarea[nxInput]{min-height:38px;line-height:24px;padding:7px}.nx-formfield.has-outline .nx-formfield__input input[nxInput]{padding-right:7px;padding-left:7px;line-height:normal}.nx-formfield.has-outline nx-dropdown .nx-dropdown__icon{display:flex}.nx-formfield.has-outline nx-dropdown .nx-dropdown__container{padding-left:7px;height:38px}.nx-formfield.has-outline nx-datepicker-toggle .nx-datepicker-toggle-button{padding:0}.nx-formfield.has-outline .nx-formfield__appendix,.nx-formfield.has-outline .nx-formfield__prefix,.nx-formfield.has-outline .nx-formfield__suffix{font-weight:400}.nx-formfield.has-outline .nx-formfield__prefix,.nx-formfield.has-outline .nx-formfield__suffix{height:38px;line-height:38px}.nx-formfield.has-outline .nx-formfield__prefix{margin-left:7px;margin-right:0}.nx-formfield.has-outline .nx-formfield__suffix{margin-right:7px;margin-left:0}.nx-formfield.has-outline .nx-formfield__appendix{margin-left:8px;display:flex;margin-top:28px;border-top:1px solid transparent;border-bottom:1px solid transparent;padding-bottom:0}.nx-formfield.has-outline .nx-formfield__hints{text-align:left;font-size:16px}.nx-formfield.has-outline.is-readonly .nx-formfield__flexfield{border-color:#c2c2c2;background-color:#f5f5f5}.nx-formfield.is-floating .nx-formfield__label{-webkit-transform:translateY(-22px);transform:translateY(-22px);font-size:12px;font-weight:600;letter-spacing:.5px}.nx-formfield.is-floating.has-outline .nx-formfield__label-holder{top:-24px;padding-top:24px}.nx-formfield.is-floating.has-outline .nx-formfield__label{padding-top:0;-webkit-transform:translateX(-8px) translateY(-29px);transform:translateX(-8px) translateY(-29px);font-size:16px;line-height:24px}.nx-formfield.is-floating.has-outline .nx-formfield__prefix~.nx-formfield__input .nx-formfield__label{-webkit-transform:translateY(-29px);transform:translateY(-29px)}.nx-formfield.has-error{color:#dc3149}.nx-formfield.has-error .nx-formfield__label{font-weight:700}.nx-formfield.has-error.is-floating .nx-formfield__label{color:#414141;font-weight:600}.nx-formfield.has-error.has-outline{color:#414141}.nx-formfield.has-error.has-outline .nx-formfield__flexfield{border-color:#dc3149}.nx-formfield.has-error nx-password-toggle nx-icon{color:#dc3149}.nx-formfield.is-disabled{color:#c2c2c2;cursor:not-allowed;-webkit-text-fill-color:#c2c2c2}.nx-formfield.is-disabled .nx-formfield__hints{color:inherit}.nx-formfield.is-disabled .nx-formfield__flexfield{border-bottom-color:#c2c2c2}.nx-formfield.is-disabled.has-outline .nx-formfield__flexfield{border-color:#c2c2c2}.nx-formfield--negative{color:#fff}.nx-formfield--negative .nx-formfield__hints{color:inherit}.nx-formfield--negative.has-outline .nx-formfield__flexfield{border-color:#fff}.nx-formfield--negative nx-password-toggle nx-icon{color:#fff}", ".c-input{text-align:inherit;font-size:inherit;background:0 0;color:inherit;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;line-height:28px;height:28px}.c-input::-ms-clear{display:none}.c-input::-webkit-search-cancel-button,.c-input::-webkit-search-decoration,.c-input::-webkit-search-results-button,.c-input::-webkit-search-results-decoration{display:none;-webkit-appearance:none}textarea.c-input{min-height:28px;height:auto;font-family:inherit}.c-input.is-focused{border:none;outline:0;box-shadow:none}.c-input.is-filled{font-weight:600}.c-input.is-disabled{cursor:not-allowed}textarea.nx-input-element{resize:vertical;overflow:auto}.c-input:invalid,.c-input:required{box-shadow:none}"]
            }] }
];
/** @nocollapse */
NxFormfieldComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ChangeDetectorRef },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FORMFIELD_DEFAULT_OPTIONS,] }] }
];
NxFormfieldComponent.propDecorators = {
    _control: [{ type: ContentChild, args: [NxFormfieldControl,] }],
    label: [{ type: Input, args: ['nxLabel',] }],
    _labelChild: [{ type: ContentChild, args: [NxFormfieldLabelDirective,] }],
    _hintChildren: [{ type: ContentChildren, args: [NxFormfieldHintDirective,] }],
    _noteChildren: [{ type: ContentChildren, args: [NxFormfieldNoteDirective,] }],
    _errorChildren: [{ type: ContentChildren, args: [NxFormfieldErrorDirective,] }],
    _suffixChildren: [{ type: ContentChildren, args: [NxFormfieldSuffixDirective,] }],
    _prefixChildren: [{ type: ContentChildren, args: [NxFormfieldPrefixDirective,] }],
    _appendixChildren: [{ type: ContentChildren, args: [NxFormfieldAppendixDirective,] }],
    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer',] }],
    floatLabel: [{ type: Input, args: ['nxFloatLabel',] }],
    styles: [{ type: Input, args: ['nxStyle',] }],
    appearance: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._styles;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._subscriptions;
    /** @type {?} */
    NxFormfieldComponent.prototype._control;
    /**
     * Sets the label which will act as a floating label.
     * In addition, the component uses input and label to properly support accessibility.
     * @type {?}
     */
    NxFormfieldComponent.prototype.label;
    /** @type {?} */
    NxFormfieldComponent.prototype._labelChild;
    /** @type {?} */
    NxFormfieldComponent.prototype._hintChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._noteChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._errorChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._suffixChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._prefixChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._appendixChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._connectionContainerRef;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._floatLabel;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._appearance;
    /**
     * \@docs-private
     * @type {?}
     */
    NxFormfieldComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._changeDetectorRef;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._defaultOptions;
}
//# sourceMappingURL=data:application/json;base64,