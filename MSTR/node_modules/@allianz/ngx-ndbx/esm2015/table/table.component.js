/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
/**
 * This is a table.
 * The table supports a `zebra` and a `condensed` mode.
 */
export class NxTableComponent {
    /**
     * @param {?} _changeDetectorRef
     */
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
    }
    /**
     * Change the table mode to condensed
     * @param {?} value
     * @return {?}
     */
    set condensed(value) {
        /** @type {?} */
        const newValue = coerceBooleanProperty(value);
        if (value !== this._condensed) {
            this._condensed = newValue;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get condensed() {
        return this._condensed;
    }
    /**
     * Change the table mode to zebra
     * @param {?} value
     * @return {?}
     */
    set zebra(value) {
        /** @type {?} */
        const newValue = coerceBooleanProperty(value);
        if (value !== this._zebra) {
            this._zebra = newValue;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get zebra() {
        return this._zebra;
    }
}
NxTableComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'table[nxTable]',
                template: '<ng-content></ng-content>',
                host: {
                    'class': 'nx-table',
                    '[class.nx-table--condensed]': 'condensed',
                    '[class.nx-table--zebra]': 'zebra'
                },
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{border-spacing:0;border-bottom:2px solid #414141;width:100%}::ng-deep .nx-header-cell{font-weight:600;line-height:24px;border-top:1px solid #d9d9d9;border-bottom:2px solid #414141;text-align:left;white-space:nowrap;padding:16px 16px 14px}::ng-deep .nx-header-cell:first-child{padding-left:8px}::ng-deep .nx-header-cell:last-child{padding-right:8px}::ng-deep .nx-table-cell{line-height:24px;border-top:1px solid #d9d9d9;padding:16px 16px 15px}::ng-deep .nx-table-cell:first-child{padding-left:8px}::ng-deep .nx-table-cell:last-child{padding-right:8px}:host(.nx-table--condensed) ::ng-deep .nx-table-cell{padding-bottom:7px;padding-top:8px}:host(.nx-table--zebra) ::ng-deep .nx-table-cell{border-top:1px solid #f5f5f5}:host(.nx-table--zebra) ::ng-deep .nx-table-cell--expandable{border-top:0}:host(.nx-table--condensed) ::ng-deep .nx-table-cell--expandable{padding-bottom:0;padding-top:0}:host(.nx-table--condensed) ::ng-deep .nx-table-cell--expandable .nx-table-cell__wrapper{padding-bottom:7px;padding-top:8px}::ng-deep .nx-expandable-table-cell__content{overflow:hidden}::ng-deep .nx-expandable-table-cell__wrapper{padding:16px}::ng-deep .nx-expandable-table-cell:first-child .nx-cell__wrapper{padding-left:8px}::ng-deep .nx-expandable-table-cell:last-child .nx-cell__wrapper{padding-right:8px}:host(.nx-table--condensed) ::ng-deep .nx-expandable-table-cell .nx-expandable-table-cell__wrapper{padding-bottom:7px;padding-top:8px}::ng-deep .nx-table-row:first-child .nx-table-cell{border-top:0}:host(.nx-table--zebra) ::ng-deep .nx-table-row:nth-child(2n){background-color:#f5f5f5}:host(.nx-table--zebra) ::ng-deep .nx-expandable-table-row:nth-child(4n){background-color:#f5f5f5}:host(.nx-table--zebra) ::ng-deep .nx-expandable-table-row:nth-child(4n)+.nx-table-row{background-color:#fff}:host(.nx-table--zebra) ::ng-deep .nx-expandable-table-row:nth-child(4n+2){background-color:#fff}:host(.nx-table--zebra) ::ng-deep .nx-expandable-table-row:nth-child(4n+2)+.nx-table-row{background-color:#f5f5f5}::ng-deep .nx-exandable-table-cell nx-checkbox,::ng-deep .nx-header-cell nx-checkbox,::ng-deep .nx-table-cell nx-checkbox{margin:0}::ng-deep .nx-exandable-table-cell nx-checkbox .nx-checkbox__label,::ng-deep .nx-header-cell nx-checkbox .nx-checkbox__label,::ng-deep .nx-table-cell nx-checkbox .nx-checkbox__label{padding:0}::ng-deep .nx-exandable-table-cell nx-taglist,::ng-deep .nx-header-cell nx-taglist,::ng-deep .nx-table-cell nx-taglist{margin:0}::ng-deep .nx-exandable-table-cell nx-taglist .nx-taglist__list-item,::ng-deep .nx-header-cell nx-taglist .nx-taglist__list-item,::ng-deep .nx-table-cell nx-taglist .nx-taglist__list-item{margin-bottom:0}::ng-deep .nx-exandable-table-cell button[nxbutton],::ng-deep .nx-header-cell button[nxbutton],::ng-deep .nx-table-cell button[nxbutton]{margin:0}::ng-deep .nx-exandable-table-cell nx-formfield .nx-formfield__wrapper,::ng-deep .nx-header-cell nx-formfield .nx-formfield__wrapper,::ng-deep .nx-table-cell nx-formfield .nx-formfield__wrapper{padding:0}::ng-deep .nx-exandable-table-cell [nxlist],::ng-deep .nx-header-cell [nxlist],::ng-deep .nx-table-cell [nxlist]{margin:0}::ng-deep .nx-exandable-table-cell [nxlist] li:last-child,::ng-deep .nx-header-cell [nxlist] li:last-child,::ng-deep .nx-table-cell [nxlist] li:last-child{margin-bottom:0}"]
            }] }
];
/** @nocollapse */
NxTableComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
NxTableComponent.propDecorators = {
    condensed: [{ type: Input }],
    zebra: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxTableComponent.prototype._condensed;
    /**
     * @type {?}
     * @private
     */
    NxTableComponent.prototype._zebra;
    /**
     * @type {?}
     * @private
     */
    NxTableComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvdGFibGUvIiwic291cmNlcyI6WyJ0YWJsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUE2QyxNQUFNLGVBQWUsQ0FBQztBQUN4SSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7QUFpQjlELE1BQU0sT0FBTyxnQkFBZ0I7Ozs7SUFNM0IsWUFBb0Isa0JBQXFDO1FBQXJDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7SUFBRyxDQUFDOzs7Ozs7SUFHN0QsSUFBYSxTQUFTLENBQUMsS0FBYzs7Y0FDN0IsUUFBUSxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQztRQUU3QyxJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQzdCLElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO1lBQzNCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUN4QztJQUNILENBQUM7Ozs7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQzs7Ozs7O0lBR0QsSUFBYSxLQUFLLENBQUMsS0FBYzs7Y0FDekIsUUFBUSxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQztRQUM3QyxJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ3pCLElBQUksQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUN4QztJQUNILENBQUM7Ozs7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQzs7O1lBN0NGLFNBQVMsU0FBQzs7Z0JBRVQsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIsUUFBUSxFQUFFLDJCQUEyQjtnQkFFckMsSUFBSSxFQUFFO29CQUNKLE9BQU8sRUFBRSxVQUFVO29CQUNuQiw2QkFBNkIsRUFBRSxXQUFXO29CQUMxQyx5QkFBeUIsRUFBRSxPQUFPO2lCQUNuQztnQkFDRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7YUFDaEQ7Ozs7WUFqQm1ELGlCQUFpQjs7O3dCQTJCbEUsS0FBSztvQkFjTCxLQUFLOzs7Ozs7O0lBckJOLHNDQUE0Qjs7Ozs7SUFFNUIsa0NBQXdCOzs7OztJQUVaLDhDQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29udGVudENoaWxkcmVuLCBRdWVyeUxpc3QsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG4vKipcbiAqIFRoaXMgaXMgYSB0YWJsZS5cbiAqIFRoZSB0YWJsZSBzdXBwb3J0cyBhIGB6ZWJyYWAgYW5kIGEgYGNvbmRlbnNlZGAgbW9kZS5cbiAqL1xuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICd0YWJsZVtueFRhYmxlXScsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gIHN0eWxlVXJsczogWycuL3RhYmxlLmNvbXBvbmVudC5zY3NzJ10sXG4gIGhvc3Q6IHtcbiAgICAnY2xhc3MnOiAnbngtdGFibGUnLFxuICAgICdbY2xhc3MubngtdGFibGUtLWNvbmRlbnNlZF0nOiAnY29uZGVuc2VkJyxcbiAgICAnW2NsYXNzLm54LXRhYmxlLS16ZWJyYV0nOiAnemVicmEnXG4gIH0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOeFRhYmxlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9jb25kZW5zZWQ6IGJvb2xlYW47XG5cbiAgcHJpdmF0ZSBfemVicmE6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gICAvKiogQ2hhbmdlIHRoZSB0YWJsZSBtb2RlIHRvIGNvbmRlbnNlZCAgKi9cbiAgQElucHV0KCkgc2V0IGNvbmRlbnNlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIGNvbnN0IG5ld1ZhbHVlID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcblxuICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5fY29uZGVuc2VkKSB7XG4gICAgICB0aGlzLl9jb25kZW5zZWQgPSBuZXdWYWx1ZTtcbiAgICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBjb25kZW5zZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbmRlbnNlZDtcbiAgfVxuXG4gICAvKiogQ2hhbmdlIHRoZSB0YWJsZSBtb2RlIHRvIHplYnJhICAqL1xuICBASW5wdXQoKSBzZXQgemVicmEodmFsdWU6IGJvb2xlYW4pIHtcbiAgICBjb25zdCBuZXdWYWx1ZSA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgaWYgKHZhbHVlICE9PSB0aGlzLl96ZWJyYSkge1xuICAgICAgdGhpcy5femVicmEgPSBuZXdWYWx1ZTtcbiAgICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuXG4gIGdldCB6ZWJyYSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5femVicmE7XG4gIH1cbn1cbiJdfQ==