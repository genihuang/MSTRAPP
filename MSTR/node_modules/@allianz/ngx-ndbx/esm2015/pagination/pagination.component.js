/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Inject, Input, Optional, Output, } from '@angular/core';
import { DefaultPaginationTexts, NX_PAGINATION_TEXTS } from './pagination-texts';
import { NxPaginationUtils } from './pagination-utils';
/**
 * \@docs-private
 * @record
 */
export function Page() { }
if (false) {
    /** @type {?} */
    Page.prototype.label;
    /** @type {?} */
    Page.prototype.value;
    /** @type {?} */
    Page.prototype.class;
}
export class NxPaginationComponent {
    /**
     * @param {?} paginationTexts
     * @param {?} paginationUtilsService
     * @param {?} _changeDetectorRef
     */
    constructor(paginationTexts, paginationUtilsService, _changeDetectorRef) {
        this.paginationUtilsService = paginationUtilsService;
        this._changeDetectorRef = _changeDetectorRef;
        this._type = 'simple';
        /**
         * \@docs-private
         */
        this.totalNumberPages = 0;
        /**
         * An event emitted when the previous page button is clicked.
         */
        this.nxGoPrev = new EventEmitter();
        /**
         * An event emitted when the next page button is clicked
         */
        this.nxGoNext = new EventEmitter();
        /**
         * An event emitted when a page number is clicked.
         * Provides the number of the page as parameter.
         */
        this.nxGoPage = new EventEmitter();
        this.paginationTexts = paginationTexts || DefaultPaginationTexts;
    }
    /**
     * @return {?}
     */
    get page() { return this._page; }
    /**
     * Sets the current page.
     * @param {?} value
     * @return {?}
     */
    set page(value) {
        this._page = value;
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get count() { return this._count; }
    /**
     * Number of total items over all pages.
     * @param {?} value
     * @return {?}
     */
    set count(value) {
        this._count = value;
        this.totalNumberPages = this.calculateTotalPages();
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get perPage() { return this._perPage; }
    /**
     * Sets the number of items you want to show per page.
     * @param {?} value
     * @return {?}
     */
    set perPage(value) {
        this._perPage = value;
        this.totalNumberPages = this.calculateTotalPages();
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get type() { return this._type; }
    /**
     * Determines the type of pagination.
     *
     * Values: simple |Â advanced, default: simple.
     * @param {?} value
     * @return {?}
     */
    set type(value) {
        this._type = value;
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.totalNumberPages = this.calculateTotalPages();
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        if (this.type === 'advanced' && (!this.paginationTexts.last || !this.paginationTexts.first)) {
            console.warn('Please define aria labels for the last and first arrows.');
        }
    }
    /**
     * Returns the number of the first page.
     * @return {?}
     */
    getMin() {
        return ((this._perPage * this._page) - this._perPage) + 1;
    }
    /**
     * Returns the number of the last page.
     * @return {?}
     */
    getMax() {
        /** @type {?} */
        let max = this._perPage * this._page;
        if (max > this._count) {
            max = this._count;
        }
        return max;
    }
    /**
     * Returns the total number of pages
     * @return {?}
     */
    calculateTotalPages() {
        return Math.ceil(this._count / this._perPage) || 0;
    }
    /**
     * Directs to the page with number n.
     * @param {?} n
     * @return {?}
     */
    onPage(n) {
        this.nxGoPage.emit(n);
    }
    /**
     * Directs to the previous page.
     * @return {?}
     */
    onPrev() {
        if (!this._isPaginationPreviousDisabled()) {
            this.nxGoPrev.emit();
        }
    }
    /**
     * Directs to the next page.
     * @return {?}
     */
    onNext() {
        if (!this._isPaginationNextDisabled()) {
            this.nxGoNext.emit();
        }
    }
    /**
     * Directs to the first page.
     * @return {?}
     */
    onFirst() {
        if (!this._isPaginationPreviousDisabled()) {
            this.onPage(1);
        }
    }
    /**
     * Directs to the last page.
     * @return {?}
     */
    onLast() {
        if (!this._isPaginationNextDisabled()) {
            this.onPage(this.totalNumberPages);
        }
    }
    /**
     * Returns if the current page is the last page.
     * @return {?}
     */
    lastPage() {
        return this._perPage * this._page >= this._count;
    }
    /**
     * \@docs-private
     * @return {?}
     */
    getPages() {
        return this.paginationUtilsService.getPages(this._page, this.totalNumberPages);
    }
    /**
     * \@docs-private
     * @param {?} page
     * @return {?}
     */
    getPaginationItemClasses(page) {
        /** @type {?} */
        const classes = {
            'is-ellipsis': page.label === '...',
            'nx-pagination__item--expanded-view': page.class === 'expanded-view'
        };
        return classes;
    }
    /**
     * \@docs-private
     * @param {?} page
     * @return {?}
     */
    getPaginationNumberClasses(page) {
        /** @type {?} */
        const classes = {
            'is-active': page.value === this.page,
            'nx-pagination__ellipsis': page.label === '...',
            'nx-pagination__link': page.label !== '...'
        };
        return classes;
    }
    /**
     * Returns true, if `nxCount` is greater than 0, else false.
     * @return {?}
     */
    isPaginationVisible() {
        return this.count > 0;
    }
    /**
     * Returns true, if `nxCount` is greater than 0 and the type of pagination is 'simple', else false.
     * @return {?}
     */
    isPaginationCompactVisible() {
        return this.type.includes('simple') && this.count > 0;
    }
    /**
     * \@docs-private
     * @return {?}
     */
    isPaginationContainerVisible() {
        return this.type.includes('advanced');
    }
    /**
     * @return {?}
     */
    _isPaginationPreviousDisabled() {
        return this.page === this.getMin();
    }
    /**
     * @return {?}
     */
    _isPaginationNextDisabled() {
        return this.page === this.totalNumberPages;
    }
}
NxPaginationComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-pagination',
                template: "<nav *ngIf=\"isPaginationVisible()\"  aria-label=\"Page navigation\" class=\"nx-pagination\" >\n  <ul *ngIf=\"isPaginationContainerVisible()\"  [attr.aria-label]=\"paginationTexts.ariaLabel\" class=\"nx-pagination__container\">\n    <li class=\"nx-pagination__item\">\n      <button\n        [attr.aria-label]=\"paginationTexts.first\"\n        [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n        [tabindex]=\"_isPaginationPreviousDisabled() ? -1 : 0\"\n        class=\"nx-pagination__link nx-pagination__link--first\"\n        (click)=\"onFirst()\">\n        <nx-icon class=\"nx-pagination__arrow\" name=\"arrow-first\"></nx-icon>\n      </button>\n    </li>\n    <li class=\"nx-pagination__item nx-pagination__item-previous\">\n      <button\n        [attr.aria-label]=\"paginationTexts.previous\"\n        [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n        [tabindex]=\"_isPaginationPreviousDisabled() ? -1 : 0\"\n        class=\"nx-pagination__link nx-pagination__link--previous\"\n        (click)=\"onPrev()\">\n        <nx-icon class=\"nx-pagination__arrow\" name=\"arrow-left\"></nx-icon>\n      </button>\n    </li>\n    <li *ngFor=\"let pageNum of getPages()\" class=\"nx-pagination__item\" [ngClass]=\"getPaginationItemClasses(pageNum)\">\n      <button class=\"nx-pagination--number\"\n        *ngIf=\"pageNum.label !== '...'\"\n        (click)=\"onPage(pageNum.value)\"\n        [attr.aria-curent]=\"pageNum.value === page\"\n        [ngClass]=\"getPaginationNumberClasses(pageNum)\">\n        {{ pageNum.label }}\n      </button>\n      <span *ngIf=\"pageNum.label === '...'\">\n        {{ pageNum.label }}\n      </span>\n    </li>\n    <li class=\"nx-pagination__item nx-pagination__item-next\">\n      <button\n        [attr.aria-label]=\"paginationTexts.next\"\n        [class.is-disabled]=\"_isPaginationNextDisabled()\"\n        [tabindex]=\"_isPaginationNextDisabled() ? -1 : 0\"\n        class=\"nx-pagination__link nx-pagination__link--next\"\n        (click)=\"onNext()\">\n        <nx-icon class=\"nx-pagination__arrow\" name=\"arrow-right\"></nx-icon>\n      </button>\n    </li>\n    <li class=\"nx-pagination__item\">\n      <button\n        [attr.aria-label]=\"paginationTexts.last\"\n        [class.is-disabled]=\"_isPaginationNextDisabled()\"\n        [tabindex]=\"_isPaginationNextDisabled() ? -1 : 0\"\n        class=\"nx-pagination__link nx-pagination__link--last\"\n        (click)=\"onLast()\">\n        <nx-icon class=\"nx-pagination__arrow\" name=\"arrow-last\"></nx-icon>\n      </button>\n    </li>\n  </ul>\n</nav>\n<nav *ngIf=\"isPaginationCompactVisible()\" [attr.aria-label]=\"paginationTexts.ariaLabel\" class=\"nx-pagination-compact\" >\n  <button [attr.aria-label]=\"paginationTexts.previous\"\n    class=\"nx-pagination-compact__previous\"\n    [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n    [tabindex]=\"_isPaginationPreviousDisabled() ? -1 : 0\"\n\n    (click)=\"onPrev()\">\n    <nx-icon class=\"nx-pagination__arrow\" name=\"arrow-left\"></nx-icon>\n    <span class=\"nx-pagination-compact__direction-label\">\n      {{ paginationTexts.previous }}\n    </span>\n  </button>\n  <div class=\"nx-pagination-compact__display\">\n      <span class=\"nx-pagination-compact__current-page\">{{ page }}</span>\n      <span class=\"nx-pagination-compact__page-separator\"> {{ paginationTexts.ofLabel }} </span>\n      <span class=\"nx-pagination-compact__total-pages\">{{ totalNumberPages }}</span>\n  </div>\n  <button\n    class=\"nx-pagination-compact__next\"\n    [class.is-disabled]=\"_isPaginationNextDisabled()\"\n    [tabindex]=\"_isPaginationNextDisabled() ? -1 : 0\"\n    [attr.aria-label]=\"paginationTexts.next\"\n    (click)=\"onNext()\">\n    <span class=\"nx-pagination-compact__direction-label\"> {{ paginationTexts.next }} </span>\n    <nx-icon class=\"nx-pagination__arrow\" name=\"arrow-right\"></nx-icon>\n  </button>\n</nav>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host button:focus{outline:0}:host button::-moz-focus-inner{border:0}.nx-pagination__container{display:flex;font-size:16px;margin:8px 0;padding:0}@media (min-width:704px){.nx-pagination__container{margin:8px 0 40px}}.nx-pagination__item{margin:0 16px;list-style:none}.nx-pagination__item:first-child,.nx-pagination__item:last-child{margin:0}.nx-pagination__item.is-ellipsis{font-weight:700}.nx-pagination__item--expanded-view{display:block}.nx-pagination__link{color:#006192;font-weight:600;padding:0;text-decoration:none;background-color:#fff;border:0;cursor:pointer}.nx-pagination__link.is-active{color:#414141;font-weight:700;cursor:default}nx-icon.nx-pagination__arrow{font-size:24px}.nx-pagination-compact{display:flex;font-size:16px;margin:16px 0;padding:0}@media (min-width:704px){.nx-pagination-compact{margin:40px 0}}.nx-pagination-compact__display{color:#414141;display:flex;line-height:24px}.nx-pagination-compact__current-page{font-weight:700;margin-right:8px}.nx-pagination-compact__total-pages{margin-left:8px}.nx-pagination-compact__next,.nx-pagination-compact__previous,.nx-pagination__arrow-first,.nx-pagination__arrow-last{color:#006192;font-weight:600;text-decoration:none;text-transform:uppercase;display:flex;align-items:center;padding:0;background-color:#fff;cursor:pointer;border:0}.nx-pagination-compact__previous{margin-right:32px}.nx-pagination-compact__next{margin-left:32px}.nx-pagination-compact__direction-label{display:block;letter-spacing:1px}.nx-pagination-compact__direction-label:first-child{margin-right:8px}.nx-pagination-compact__direction-label:last-child{margin-left:8px}.nx-pagination-compact__next.is-disabled,.nx-pagination-compact__previous.is-disabled,.nx-pagination__link.is-disabled{color:rgba(0,97,146,.4);cursor:not-allowed}:host-context([data-whatinput=keyboard]) .nx-pagination--number:focus,:host-context([data-whatinput=keyboard]) .nx-pagination-compact__next:focus,:host-context([data-whatinput=keyboard]) .nx-pagination-compact__previous:focus,:host-context([data-whatinput=keyboard]) .nx-pagination__link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}.nx-pagination__link--first,.nx-pagination__link--last,.nx-pagination__link--next,.nx-pagination__link--previous{display:flex;align-items:center}.nx-pagination__item-next{margin-right:8px}.nx-pagination__item-previous{margin-left:8px}"]
            }] }
];
/** @nocollapse */
NxPaginationComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NX_PAGINATION_TEXTS,] }] },
    { type: NxPaginationUtils },
    { type: ChangeDetectorRef }
];
NxPaginationComponent.propDecorators = {
    page: [{ type: Input, args: ['nxPage',] }],
    count: [{ type: Input, args: ['nxCount',] }],
    perPage: [{ type: Input, args: ['nxPerPage',] }],
    type: [{ type: Input, args: ['nxType',] }],
    nxGoPrev: [{ type: Output }],
    nxGoNext: [{ type: Output }],
    nxGoPage: [{ type: Output }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxPaginationComponent.prototype._page;
    /**
     * @type {?}
     * @private
     */
    NxPaginationComponent.prototype._count;
    /**
     * @type {?}
     * @private
     */
    NxPaginationComponent.prototype._perPage;
    /**
     * @type {?}
     * @private
     */
    NxPaginationComponent.prototype._type;
    /**
     * \@docs-private
     * @type {?}
     */
    NxPaginationComponent.prototype.paginationTexts;
    /**
     * \@docs-private
     * @type {?}
     */
    NxPaginationComponent.prototype.totalNumberPages;
    /**
     * An event emitted when the previous page button is clicked.
     * @type {?}
     */
    NxPaginationComponent.prototype.nxGoPrev;
    /**
     * An event emitted when the next page button is clicked
     * @type {?}
     */
    NxPaginationComponent.prototype.nxGoNext;
    /**
     * An event emitted when a page number is clicked.
     * Provides the number of the page as parameter.
     * @type {?}
     */
    NxPaginationComponent.prototype.nxGoPage;
    /**
     * @type {?}
     * @private
     */
    NxPaginationComponent.prototype.paginationUtilsService;
    /**
     * @type {?}
     * @private
     */
    NxPaginationComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,