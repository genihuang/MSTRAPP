/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ElementRef, Input, ViewChild } from '@angular/core';
import { removeClasses } from '@allianz/ngx-ndbx/utils';
/** @type {?} */
let nextId = 0;
/**
 * \@docs-private
 */
export class NxRadioToggleButtonBaseComponent {
    /**
     * @param {?} renderer
     */
    constructor(renderer) {
        this.renderer = renderer;
        /**
         * \@docs-private
         */
        this.toggleButtonId = 'nx-radio-toggle-button-' + nextId++;
    }
    /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    triggerInputClick(event) {
        event.stopPropagation();
        this.toggleInput.nativeElement.click();
    }
    /**
     * \@docs-private
     * @return {?}
     */
    setFirstButton() {
        this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--first');
    }
    /**
     * \@docs-private
     * @return {?}
     */
    setLastButton() {
        this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--last');
    }
    /**
     * \@docs-private
     * @return {?}
     */
    resetClasses() {
        removeClasses(this.renderer, this.labelContainer, 'nx-radio-toggle__label-container--first nx-radio-toggle__label-container--last');
    }
}
NxRadioToggleButtonBaseComponent.propDecorators = {
    value: [{ type: Input, args: ['nxValue',] }],
    labelContainer: [{ type: ViewChild, args: ['toggleButtonLabelContainer',] }],
    toggleInput: [{ type: ViewChild, args: ['toggleInput',] }]
};
if (false) {
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioToggleButtonBaseComponent.prototype.toggleButtonId;
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioToggleButtonBaseComponent.prototype.value;
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioToggleButtonBaseComponent.prototype.labelContainer;
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioToggleButtonBaseComponent.prototype.toggleInput;
    /**
     * @type {?}
     * @protected
     */
    NxRadioToggleButtonBaseComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tdG9nZ2xlLWJ1dHRvbi1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsicmFkaW8tdG9nZ2xlL3JhZGlvLXRvZ2dsZS1idXR0b24tYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUUsS0FBSyxFQUFhLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUJBQXlCLENBQUM7O0lBRXBELE1BQU0sR0FBRyxDQUFDOzs7O0FBR2QsTUFBTSxPQUFPLGdDQUFnQzs7OztJQWdCM0MsWUFBc0IsUUFBbUI7UUFBbkIsYUFBUSxHQUFSLFFBQVEsQ0FBVzs7OztRQWR6QyxtQkFBYyxHQUFXLHlCQUF5QixHQUFHLE1BQU0sRUFBRSxDQUFDO0lBZTlELENBQUM7Ozs7OztJQUdELGlCQUFpQixDQUFDLEtBQUs7UUFDckIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3pDLENBQUM7Ozs7O0lBR0QsY0FBYztRQUNaLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLHlDQUF5QyxDQUFDLENBQUM7SUFDdkcsQ0FBQzs7Ozs7SUFHRCxhQUFhO1FBQ1gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsd0NBQXdDLENBQUMsQ0FBQztJQUN0RyxDQUFDOzs7OztJQUdELFlBQVk7UUFDVixhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLGdGQUFnRixDQUFDLENBQUM7SUFDdEksQ0FBQzs7O29CQWpDQSxLQUFLLFNBQUMsU0FBUzs2QkFJZixTQUFTLFNBQUMsNEJBQTRCOzBCQUl0QyxTQUFTLFNBQUMsYUFBYTs7Ozs7OztJQVh4QiwwREFBOEQ7Ozs7O0lBRzlELGlEQUNXOzs7OztJQUdYLDBEQUMyQjs7Ozs7SUFHM0IsdURBQ3dCOzs7OztJQUVaLG9EQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RWxlbWVudFJlZiwgSW5wdXQsIFJlbmRlcmVyMiwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHJlbW92ZUNsYXNzZXMgfSBmcm9tICdAYWxsaWFuei9uZ3gtbmRieC91dGlscyc7XG5cbmxldCBuZXh0SWQgPSAwO1xuXG4vKiogQGRvY3MtcHJpdmF0ZSAqL1xuZXhwb3J0IGNsYXNzIE54UmFkaW9Ub2dnbGVCdXR0b25CYXNlQ29tcG9uZW50IHtcbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgdG9nZ2xlQnV0dG9uSWQ6IHN0cmluZyA9ICdueC1yYWRpby10b2dnbGUtYnV0dG9uLScgKyBuZXh0SWQrKztcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBASW5wdXQoJ254VmFsdWUnKVxuICB2YWx1ZTogYW55O1xuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIEBWaWV3Q2hpbGQoJ3RvZ2dsZUJ1dHRvbkxhYmVsQ29udGFpbmVyJylcbiAgbGFiZWxDb250YWluZXI6IEVsZW1lbnRSZWY7XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgQFZpZXdDaGlsZCgndG9nZ2xlSW5wdXQnKVxuICB0b2dnbGVJbnB1dDogRWxlbWVudFJlZjtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgdHJpZ2dlcklucHV0Q2xpY2soZXZlbnQpIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB0aGlzLnRvZ2dsZUlucHV0Lm5hdGl2ZUVsZW1lbnQuY2xpY2soKTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHNldEZpcnN0QnV0dG9uKCkge1xuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5sYWJlbENvbnRhaW5lci5uYXRpdmVFbGVtZW50LCAnbngtcmFkaW8tdG9nZ2xlX19sYWJlbC1jb250YWluZXItLWZpcnN0Jyk7XG4gIH1cblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBzZXRMYXN0QnV0dG9uKCkge1xuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5sYWJlbENvbnRhaW5lci5uYXRpdmVFbGVtZW50LCAnbngtcmFkaW8tdG9nZ2xlX19sYWJlbC1jb250YWluZXItLWxhc3QnKTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHJlc2V0Q2xhc3NlcygpIHtcbiAgICByZW1vdmVDbGFzc2VzKHRoaXMucmVuZGVyZXIsIHRoaXMubGFiZWxDb250YWluZXIsICdueC1yYWRpby10b2dnbGVfX2xhYmVsLWNvbnRhaW5lci0tZmlyc3QgbngtcmFkaW8tdG9nZ2xlX19sYWJlbC1jb250YWluZXItLWxhc3QnKTtcbiAgfVxufVxuIl19