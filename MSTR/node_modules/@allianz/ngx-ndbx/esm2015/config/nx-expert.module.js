/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { FORMFIELD_DEFAULT_OPTIONS } from '@allianz/ngx-ndbx/formfield';
import { LABEL_DEFAULT_OPTIONS, ERROR_DEFAULT_OPTIONS } from '@allianz/ngx-ndbx/base';
import { DATEPICKER_DEFAULT_OPTIONS } from '@allianz/ngx-ndbx/datefield';
// expert presets
/** @type {?} */
const formfieldExpertOptions = {
    appearance: 'outline',
    nxFloatLabel: 'always'
};
/** @type {?} */
const errorExpertOptions = { appearance: 'text' };
/** @type {?} */
const labelExpertOptions = { size: 'small' };
/** @type {?} */
const datepickerExpertOptions = { toggleIconTabindex: -1 };
const ɵ0 = formfieldExpertOptions, ɵ1 = labelExpertOptions, ɵ2 = datepickerExpertOptions, ɵ3 = errorExpertOptions;
// should not be a singleton since different tokens can be used in seperate modules
export class NxExpertModule {
}
NxExpertModule.decorators = [
    { type: NgModule, args: [{
                providers: [
                    { provide: FORMFIELD_DEFAULT_OPTIONS, useValue: ɵ0 },
                    { provide: LABEL_DEFAULT_OPTIONS, useValue: ɵ1 },
                    { provide: DATEPICKER_DEFAULT_OPTIONS, useValue: ɵ2 },
                    { provide: ERROR_DEFAULT_OPTIONS, useValue: ɵ3 }
                ]
            },] }
];
export { ɵ0, ɵ1, ɵ2, ɵ3 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibngtZXhwZXJ0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4L2NvbmZpZy8iLCJzb3VyY2VzIjpbIm54LWV4cGVydC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHlCQUF5QixFQUEyQixNQUFNLDZCQUE2QixDQUFDO0FBQ2pHLE9BQU8sRUFBRSxxQkFBcUIsRUFBdUIscUJBQXFCLEVBQXVCLE1BQU0sd0JBQXdCLENBQUM7QUFDaEksT0FBTyxFQUE0QiwwQkFBMEIsRUFBRSxNQUFNLDZCQUE2QixDQUFDOzs7TUFHN0Ysc0JBQXNCLEdBQTRCO0lBQ3RELFVBQVUsRUFBRSxTQUFTO0lBQ3JCLFlBQVksRUFBRSxRQUFRO0NBQ3ZCOztNQUVLLGtCQUFrQixHQUF3QixFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUU7O01BQ2hFLGtCQUFrQixHQUF3QixFQUFFLElBQUksRUFBRSxPQUFPLEVBQUU7O01BQzNELHVCQUF1QixHQUE2QixFQUFFLGtCQUFrQixFQUFFLENBQUMsQ0FBQyxFQUFFO1dBSWhDLHNCQUFzQixPQUMxQixrQkFBa0IsT0FDYix1QkFBdUIsT0FDNUIsa0JBQWtCO0FBSWxFLG1GQUFtRjtBQUNuRixNQUFNLE9BQU8sY0FBYzs7O1lBVjFCLFFBQVEsU0FBQztnQkFDUixTQUFTLEVBQUU7b0JBQ1QsRUFBRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsUUFBUSxJQUF3QixFQUFFO29CQUN4RSxFQUFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLElBQW9CLEVBQUU7b0JBQ2hFLEVBQUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLFFBQVEsSUFBeUIsRUFBRTtvQkFDMUUsRUFBRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsUUFBUSxJQUFvQixFQUFFO2lCQUNqRTthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZPUk1GSUVMRF9ERUZBVUxUX09QVElPTlMsIEZvcm1maWVsZERlZmF1bHRPcHRpb25zIH0gZnJvbSAnQGFsbGlhbnovbmd4LW5kYngvZm9ybWZpZWxkJztcbmltcG9ydCB7IExBQkVMX0RFRkFVTFRfT1BUSU9OUywgTGFiZWxEZWZhdWx0T3B0aW9ucywgRVJST1JfREVGQVVMVF9PUFRJT05TLCBFcnJvckRlZmF1bHRPcHRpb25zIH0gZnJvbSAnQGFsbGlhbnovbmd4LW5kYngvYmFzZSc7XG5pbXBvcnQgeyBEYXRlcGlja2VyRGVmYXVsdE9wdGlvbnMsIERBVEVQSUNLRVJfREVGQVVMVF9PUFRJT05TIH0gZnJvbSAnQGFsbGlhbnovbmd4LW5kYngvZGF0ZWZpZWxkJztcblxuLy8gZXhwZXJ0IHByZXNldHNcbmNvbnN0IGZvcm1maWVsZEV4cGVydE9wdGlvbnM6IEZvcm1maWVsZERlZmF1bHRPcHRpb25zID0ge1xuICBhcHBlYXJhbmNlOiAnb3V0bGluZScsXG4gIG54RmxvYXRMYWJlbDogJ2Fsd2F5cydcbn07XG5cbmNvbnN0IGVycm9yRXhwZXJ0T3B0aW9uczogRXJyb3JEZWZhdWx0T3B0aW9ucyA9IHsgYXBwZWFyYW5jZTogJ3RleHQnIH07XG5jb25zdCBsYWJlbEV4cGVydE9wdGlvbnM6IExhYmVsRGVmYXVsdE9wdGlvbnMgPSB7IHNpemU6ICdzbWFsbCcgfTtcbmNvbnN0IGRhdGVwaWNrZXJFeHBlcnRPcHRpb25zOiBEYXRlcGlja2VyRGVmYXVsdE9wdGlvbnMgPSB7IHRvZ2dsZUljb25UYWJpbmRleDogLTEgfTtcblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbXG4gICAgeyBwcm92aWRlOiBGT1JNRklFTERfREVGQVVMVF9PUFRJT05TLCB1c2VWYWx1ZTogZm9ybWZpZWxkRXhwZXJ0T3B0aW9ucyB9LFxuICAgIHsgcHJvdmlkZTogTEFCRUxfREVGQVVMVF9PUFRJT05TLCB1c2VWYWx1ZTogbGFiZWxFeHBlcnRPcHRpb25zIH0sXG4gICAgeyBwcm92aWRlOiBEQVRFUElDS0VSX0RFRkFVTFRfT1BUSU9OUywgdXNlVmFsdWU6IGRhdGVwaWNrZXJFeHBlcnRPcHRpb25zIH0sXG4gICAgeyBwcm92aWRlOiBFUlJPUl9ERUZBVUxUX09QVElPTlMsIHVzZVZhbHVlOiBlcnJvckV4cGVydE9wdGlvbnMgfVxuICBdXG59KVxuXG4vLyBzaG91bGQgbm90IGJlIGEgc2luZ2xldG9uIHNpbmNlIGRpZmZlcmVudCB0b2tlbnMgY2FuIGJlIHVzZWQgaW4gc2VwZXJhdGUgbW9kdWxlc1xuZXhwb3J0IGNsYXNzIE54RXhwZXJ0TW9kdWxlIHsgfVxuIl19