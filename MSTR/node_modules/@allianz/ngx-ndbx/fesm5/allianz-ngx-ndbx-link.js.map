{"version":3,"file":"allianz-ngx-ndbx-link.js.map","sources":["ng://@allianz/ngx-ndbx/link/link.component.ts","ng://@allianz/ngx-ndbx/link/link.module.ts"],"sourcesContent":["import { NxIconComponent } from '@allianz/ngx-ndbx/icon';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, ContentChild, ElementRef, Renderer2 } from '@angular/core';\n\nimport { MappedStyles } from '@allianz/ngx-ndbx/core';\n\n\nconst MAPPING = {\n  'black': 'nx-link--black',\n  'negative': 'nx-link--negative',\n  'text': 'nx-link--text',\n  'block': 'nx-link--block',\n  'icon-right': 'nx-link--icon-right'\n};\n\nconst DEFAULT_CLASSES = [ 'nx-link' ];\n\n@Component({\n  selector: 'nx-link',\n  styleUrls: [ './link.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ['classNames: nxStyle']\n})\n\nexport class NxLinkComponent extends MappedStyles implements AfterContentInit {\n  private _styles: string;\n\n  /** @docs-private */\n  @ContentChild(NxIconComponent) icon: NxIconComponent;\n\n  /**\n   * Sets the style of the link, thereby altering the visual appearance.\n   *\n   * You can use any combination of 'black', 'icon-right', 'negative', 'text' and 'block' (deprecated).\n   */\n  classNames;\n\n  constructor(_elementRef: ElementRef, protected _renderer: Renderer2) {\n    super(MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);\n  }\n\n  ngAfterContentInit() {\n    // Add a specific link class that the css gets more specific than the nx-icon css\n    const icons = this.elementRef.nativeElement.querySelectorAll('nx-icon');\n    for (let i = 0; i < icons.length; i++) {\n      this._renderer.addClass(icons[i], 'nx-link__icon');\n    }\n  }\n\n  /**\n   * @docs-private\n   * getter used for the modal component as a quickfix\n   * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n   * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n   * way to reach the elementRef of the component until the modal gets refactored.\n   */\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxLinkComponent } from './link.component';\n\n@NgModule({\n  declarations: [ NxLinkComponent ],\n  exports: [ NxLinkComponent ]\n})\nexport class NxLinkModule {\n}\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;;IAMM,OAAO,GAAG;IACd,OAAO,EAAE,gBAAgB;IACzB,UAAU,EAAE,mBAAmB;IAC/B,MAAM,EAAE,eAAe;IACvB,OAAO,EAAE,gBAAgB;IACzB,YAAY,EAAE,qBAAqB;CACpC;;IAEK,eAAe,GAAG,CAAE,SAAS,CAAE;AAErC;IAQqCA,mCAAY;IAa/C,yBAAY,WAAuB,EAAY,SAAoB;QAAnE,YACE,kBAAM,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,SAAS,CAAC,SACxD;QAF8C,eAAS,GAAT,SAAS,CAAW;;KAElE;;;;IAED,4CAAkB;;;IAAlB;;;YAEQ,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC;QACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;SACpD;KACF;IASD,sBAAI,uCAAU;;;;;;;;;;;;;;;;QAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;;;OAAA;;gBA1CF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBAEnB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE,2BAA2B;oBACrC,MAAM,EAAE,CAAC,qBAAqB,CAAC;;iBAChC;;;;gBArB4E,UAAU;gBAAE,SAAS;;;uBA2B/F,YAAY,SAAC,eAAe;;IA+B/B,sBAAC;CAAA,CAnCoC,YAAY;;;;;;ACxBjD;IAGA;KAKC;;gBALA,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAE,eAAe,CAAE;oBACjC,OAAO,EAAE,CAAE,eAAe,CAAE;iBAC7B;;IAED,mBAAC;CALD;;;;;;;;;;;;;;"}
