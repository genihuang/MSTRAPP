{"version":3,"file":"allianz-ngx-ndbx-base.js.map","sources":["ng://@allianz/ngx-ndbx/base/error/error.component.ts","ng://@allianz/ngx-ndbx/base/error/error.module.ts","ng://@allianz/ngx-ndbx/base/label/label.component.ts","ng://@allianz/ngx-ndbx/base/label/label.module.ts"],"sourcesContent":["import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, InjectionToken, Inject, Optional} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/* Types of error notification styles */\nexport type ErrorStyleType = 'message' | 'text';\n\n/**\n * Represents the default options for the error notification that can be configured\n * using the `ERROR_DEFAULT_OPTIONS` injection token.\n */\nexport interface ErrorDefaultOptions {\n  /** Defines the style type of the error notification. */\n  appearance?: ErrorStyleType;\n}\n\nexport const ERROR_DEFAULT_OPTIONS = new InjectionToken<ErrorDefaultOptions>('ERROR_DEFAULT_OPTIONS');\n\n@Component({\n  selector: 'nx-error',\n  templateUrl: './error.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./error.component.scss'],\n  host: {\n    '[attr.role]': '\"alert\"'\n  },\n})\nexport class NxErrorComponent {\n  private _showIcon: boolean = true;\n  private _appearance: ErrorStyleType = 'message';\n\n  /** Whether an icon should be displayed. */\n  @Input()\n  set showIcon(value: boolean) {\n    this._showIcon = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showIcon(): boolean {\n    return this._showIcon;\n  }\n\n  /**\n   * Whether the error should have message or text styling.\n   *\n   * Default is 'message'.\n   */\n  @Input()\n  set appearance(value: ErrorStyleType) {\n    if (value !== this.appearance) {\n      this._appearance = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get appearance(): ErrorStyleType {\n    return this._appearance;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(ERROR_DEFAULT_OPTIONS) private _defaultOptions: ErrorDefaultOptions) {\n      if (this._defaultOptions && this._defaultOptions.appearance) {\n        this.appearance = this._defaultOptions.appearance;\n      }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {NxErrorComponent} from './error.component';\nimport {CommonModule} from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxMessageModule } from '@allianz/ngx-ndbx/message';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule,\n    NxMessageModule\n  ],\n  declarations: [\n    NxErrorComponent\n  ],\n  exports: [\n    NxErrorComponent\n  ]\n})\nexport class NxErrorModule {\n\n}\n","import { ChangeDetectionStrategy, Component, Input, Optional, Inject, InjectionToken } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\nlet nextId = 0;\n\nexport interface LabelDefaultOptions {\n  /** Sets the default appearance. (optional) */\n  size?: LABEL_SIZE_TYPE;\n}\n\n/** Options for sizing of the label. */\nexport type LABEL_SIZE_TYPE = 'small' | 'large';\nconst DEFAULT_SIZE = 'large';\n\nexport const LABEL_DEFAULT_OPTIONS =\n  new InjectionToken<LabelDefaultOptions>('LABEL_DEFAULT_OPTIONS');\n@Component({\n  selector: 'nx-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.disabled]': 'disabled',\n    '[attr.aria-labelledby]': 'id || null',\n    '[class.nx-label--negative]': 'negative',\n    '[class.nx-label--large]': 'size === \"large\"',\n    '[class.nx-label--small]': 'size === \"small\"',\n    '[attr.id]': 'id',\n  },\n})\n\n\nexport class NxLabelComponent {\n  readonly _stateChanges = new Subject<void>();\n  private _disabled: boolean = false;\n  private _negative: boolean = false;\n  private _size: LABEL_SIZE_TYPE;\n\n  /** Sets the label to disabled */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._stateChanges.next();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Sets the label to disabled */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._stateChanges.next();\n  }\n\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _id: string = `nx-label-${nextId++}`;\n  /** Sets the Id of the label */\n  @Input()\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * **NDBX Expert option**\n   * Sets the appearance of the label */\n  @Input()\n  set size(value: LABEL_SIZE_TYPE) {\n    this._size = value;\n    this._stateChanges.next();\n  }\n\n  get size(): LABEL_SIZE_TYPE {\n    return this._size;\n  }\n\n  constructor(@Optional() @Inject(LABEL_DEFAULT_OPTIONS) private _defaultOptions: LabelDefaultOptions\n  ) {\n    this._size = (this._defaultOptions && this._defaultOptions.size) ? this._defaultOptions.size : DEFAULT_SIZE;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxLabelComponent} from './label.component';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NxLabelComponent\n  ],\n  exports: [\n    NxLabelComponent\n  ]\n})\nexport class NxLabelModule {\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAeA,IAAa,qBAAqB,GAAG,IAAI,cAAc,CAAsB,uBAAuB,CAAC;AAErG;IAuCE,0BAAoB,kBAAqC,EACJ,eAAoC;QADrE,uBAAkB,GAAlB,kBAAkB,CAAmB;QACJ,oBAAe,GAAf,eAAe,CAAqB;QA9BjF,cAAS,GAAY,IAAI,CAAC;QAC1B,gBAAW,GAAmB,SAAS,CAAC;QA8B5C,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;YAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;SACnD;KACF;IA9BH,sBACI,sCAAQ;;;;QAIZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;;;;;;;QAPD,UACa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SACxC;;;OAAA;IAUD,sBACI,wCAAU;;;;QAMd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;;;;;;;;;;;;;QATD,UACe,KAAqB;YAClC,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;gBAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC;SACF;;;OAAA;;gBAlCF,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,mrBAAqC;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAE/C,IAAI,EAAE;wBACJ,aAAa,EAAE,SAAS;qBACzB;;iBACF;;;;gBAzBgC,iBAAiB;gDAyD7C,QAAQ,YAAI,MAAM,SAAC,qBAAqB;;;2BA1B1C,KAAK;6BAcL,KAAK;;IAiBR,uBAAC;CA7CD;;;;;;ACjBA;IAOA;KAeC;;gBAfA,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,eAAe;qBAChB;oBACD,YAAY,EAAE;wBACZ,gBAAgB;qBACjB;oBACD,OAAO,EAAE;wBACP,gBAAgB;qBACjB;iBACF;;IAGD,oBAAC;CAfD;;;;;;ACPA;IAII,MAAM,GAAG,CAAC;;IASR,YAAY,GAAG,OAAO;;AAE5B,IAAa,qBAAqB,GAChC,IAAI,cAAc,CAAsB,uBAAuB,CAAC;AAClE;IAsEE,0BAA+D,eAAoC;QAApC,oBAAe,GAAf,eAAe,CAAqB;QArD1F,kBAAa,GAAG,IAAI,OAAO,EAAQ,CAAC;QACrC,cAAS,GAAY,KAAK,CAAC;QAC3B,cAAS,GAAY,KAAK,CAAC;QAyB3B,QAAG,GAAW,cAAY,MAAM,EAAI,CAAC;QA4B3C,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,YAAY,CAAC;KAC7G;IAlDD,sBACI,sCAAQ;;;;QAKZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;;;;;;;QARD,UACa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;;;OAAA;IAOD,sBACI,sCAAQ;;;;QAKZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;;;;;;;QARD,UACa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;;;OAAA;IAQD,sBACI,gCAAE;;;;QAMN;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;SACjB;;;;;;;QATD,UACO,KAAa;YAClB,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,EAAE;gBACtB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;aAClB;SACF;;;OAAA;IASD,sBACI,kCAAI;;;;QAKR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;;;;;;;;;;QARD,UACS,KAAsB;YAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;;;OAAA;;gBAhEF,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,wFAAqC;oBAErC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,IAAI,EAAE;wBACJ,iBAAiB,EAAE,UAAU;wBAC7B,wBAAwB,EAAE,YAAY;wBACtC,4BAA4B,EAAE,UAAU;wBACxC,yBAAyB,EAAE,kBAAkB;wBAC7C,yBAAyB,EAAE,kBAAkB;wBAC7C,WAAW,EAAE,IAAI;qBAClB;;iBACF;;;;gDAyDc,QAAQ,YAAI,MAAM,SAAC,qBAAqB;;;2BA/CpD,KAAK;2BAWL,KAAK;qBAYL,KAAK;uBAcL,KAAK;;IAcR,uBAAC;CA1ED;;;;;;ACjBA;IAKA;KAaC;;gBAbA,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,YAAY,EAAE;wBACZ,gBAAgB;qBACjB;oBACD,OAAO,EAAE;wBACP,gBAAgB;qBACjB;iBACF;;IAGD,oBAAC;CAbD;;;;;;;;;;;;;;"}
