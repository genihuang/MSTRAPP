import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NxVideoComponent = /** @class */ (function () {
    function NxVideoComponent(sanitizer, _changeDetectorRef) {
        this.sanitizer = sanitizer;
        this._changeDetectorRef = _changeDetectorRef;
        this._videoId = null;
        this._altText = '';
        this._playButtonAriaLabel = '';
        this._previewImageSrc = null;
        this._showPlayerControls = true;
        this._allowFullScreen = true;
        this._interfaceLanguage = null;
        /**
         * \@docs-private
         */
        this.showPlayer = false;
    }
    Object.defineProperty(NxVideoComponent.prototype, "videoId", {
        get: /**
         * @return {?}
         */
        function () {
            return this._videoId;
        },
        /** Sets the id of the YouTube video. */
        set: /**
         * Sets the id of the YouTube video.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._videoId !== value) {
                this._videoId = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "altText", {
        get: /**
         * @return {?}
         */
        function () {
            return this._altText;
        },
        /** Sets the value of the alt attribute for the preview image. */
        set: /**
         * Sets the value of the alt attribute for the preview image.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._altText !== value) {
                this._altText = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "nxPlayButtonAriaLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return this._playButtonAriaLabel;
        },
        /** Sets the value of the aria-label attribute on the play button (Default: Play Video). */
        set: /**
         * Sets the value of the aria-label attribute on the play button (Default: Play Video).
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._playButtonAriaLabel !== value) {
                this._playButtonAriaLabel = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "previewImageSrc", {
        get: /**
         * @return {?}
         */
        function () {
            return this._previewImageSrc;
        },
        /** Sets the preview image. If this is not provided, an image from YouTube will be used as default. */
        set: /**
         * Sets the preview image. If this is not provided, an image from YouTube will be used as default.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._previewImageSrc !== value) {
                this._previewImageSrc = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "showPlayerControls", {
        get: /**
         * @return {?}
         */
        function () {
            return this._showPlayerControls;
        },
        /** Sets player controls. If set to false, player controls are not available. */
        set: /**
         * Sets player controls. If set to false, player controls are not available.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._showPlayerControls = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "allowFullScreen", {
        get: /**
         * @return {?}
         */
        function () {
            return this._allowFullScreen;
        },
        /** Sets fullscreen option. If set to false, fullscreen option is not available. */
        set: /**
         * Sets fullscreen option. If set to false, fullscreen option is not available.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._allowFullScreen = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "interfaceLanguage", {
        get: /**
         * @return {?}
         */
        function () {
            return this._interfaceLanguage;
        },
        /** Sets interface language. Can be used to override the interface language determined by YouTube. */
        set: /**
         * Sets interface language. Can be used to override the interface language determined by YouTube.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._interfaceLanguage !== value) {
                this._interfaceLanguage = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    /** @docs-private */
    /**
     * \@docs-private
     * @return {?}
     */
    NxVideoComponent.prototype.select = /**
     * \@docs-private
     * @return {?}
     */
    function () {
        this.showPlayer = true;
        this._changeDetectorRef.markForCheck();
    };
    Object.defineProperty(NxVideoComponent.prototype, "videoSrc", {
        /** Returns the safe resource URL of the YouTube video, given video id.  */
        get: /**
         * Returns the safe resource URL of the YouTube video, given video id.
         * @return {?}
         */
        function () {
            /** @type {?} */
            var url = "https://www.youtube.com/embed/" + this.videoId + "?rel=0&showinfo=0&autoplay=1";
            if (!this.showPlayerControls) {
                url += '&controls=0';
            }
            if (!this.allowFullScreen) {
                url += '&fs=0';
            }
            if (this.interfaceLanguage) {
                url += "&hl=" + this.interfaceLanguage;
            }
            return this.sanitizer.bypassSecurityTrustResourceUrl(url);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "imgSrc", {
        /** Returns the preview image source URL, given video id. */
        get: /**
         * Returns the preview image source URL, given video id.
         * @return {?}
         */
        function () {
            return this.previewImageSrc ? this.previewImageSrc : "https://img.youtube.com/vi/" + this.videoId + "/sddefault.jpg";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "playButtonAriaLabel", {
        /** Returns the labels for the control buttons. */
        get: /**
         * Returns the labels for the control buttons.
         * @return {?}
         */
        function () {
            /** @type {?} */
            var defaultLabel = this.altText ? this.altText + " - Play Video" : 'Play Video';
            return this.nxPlayButtonAriaLabel ? this.nxPlayButtonAriaLabel : defaultLabel;
        },
        enumerable: true,
        configurable: true
    });
    NxVideoComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-video',
                    template: "<div class=\"nx-video\">\n  <div class=\"nx-video__iframe\">\n\n    <div *ngIf=\"!showPlayer\">\n\n      <button class=\"nx-video__play-button\"\n              (click)=\"select()\"\n              [attr.aria-label]=\"playButtonAriaLabel\"\n              (keydown.enter)=\"select()\">\n      </button>\n      <img [src]=\"imgSrc\" class=\"nx-video__thumbnail\"\n           [alt]=\"altText\"\n           (click)=\"select()\"\n           (keydown.enter)=\"select()\">\n\n    </div>\n    <div *ngIf=\"videoId && showPlayer\">\n      <iframe title=\"video\" class=\"nx-video__iframe\" [attr.allowfullscreen]=\"allowFullScreen\" [src]=\"videoSrc\"></iframe>\n    </div>\n\n  </div>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".nx-video{position:relative;padding-bottom:56.25%;overflow:hidden;width:100%;height:auto}.nx-video__iframe{position:absolute;top:0;left:0;width:100%;height:100%;border:none}.nx-video__thumbnail{position:absolute;cursor:pointer;width:100%;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);opacity:.7}.nx-video__play-button{border:none;background:url(play-button.svg) center no-repeat;cursor:pointer;position:absolute;width:88px;height:56px;z-index:1}.nx-video__play-button::-moz-focus-inner{border:0}.nx-video__play-button,.nx-video__play-button:before{top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}"]
                }] }
    ];
    /** @nocollapse */
    NxVideoComponent.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: ChangeDetectorRef }
    ]; };
    NxVideoComponent.propDecorators = {
        videoId: [{ type: Input, args: ['nxVideoId',] }],
        altText: [{ type: Input, args: ['nxAltText',] }],
        nxPlayButtonAriaLabel: [{ type: Input, args: ['nxPlayButtonAriaLabel',] }],
        previewImageSrc: [{ type: Input, args: ['nxPreviewImageSrc',] }],
        showPlayerControls: [{ type: Input, args: ['nxShowPlayerControls',] }],
        allowFullScreen: [{ type: Input, args: ['nxAllowFullScreen',] }],
        interfaceLanguage: [{ type: Input, args: ['nxInterfaceLanguage',] }]
    };
    return NxVideoComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NxVideoModule = /** @class */ (function () {
    function NxVideoModule() {
    }
    NxVideoModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [NxVideoComponent],
                    exports: [NxVideoComponent],
                    imports: [CommonModule]
                },] }
    ];
    return NxVideoModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NxVideoModule, NxVideoComponent };

//# sourceMappingURL=allianz-ngx-ndbx-video.js.map