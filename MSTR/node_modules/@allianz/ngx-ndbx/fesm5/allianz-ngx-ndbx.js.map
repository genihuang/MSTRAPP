{"version":3,"file":"allianz-ngx-ndbx.js.map","sources":["ng://@allianz/ngx-ndbx/ndbx.module.ts","ng://@allianz/ngx-ndbx/button/button-base.ts","ng://@allianz/ngx-ndbx/button/button.component.ts","ng://@allianz/ngx-ndbx/button/icon-button.component.ts","ng://@allianz/ngx-ndbx/button/button.module.ts","ng://@allianz/ngx-ndbx/checkbox/checkbox.component.ts","ng://@allianz/ngx-ndbx/checkbox/checkbox.module.ts","ng://@allianz/ngx-ndbx/radio-button/radio-change.ts","ng://@allianz/ngx-ndbx/radio-button/radio-button.ts","ng://@allianz/ngx-ndbx/radio-button/radio-button.module.ts","ng://@allianz/ngx-ndbx/copytext/copytext.component.ts","ng://@allianz/ngx-ndbx/copytext/copytext.module.ts","ng://@allianz/ngx-ndbx/headline/headline.component.ts","ng://@allianz/ngx-ndbx/headline/headline.module.ts","ng://@allianz/ngx-ndbx/link/link.component.ts","ng://@allianz/ngx-ndbx/link/link.module.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle/toggle-button.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle-group/circle-toggle-group.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/mobile-toggle-button/mobile-toggle-button.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle/circle-toggle.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/icon-toggle-button/icon-toggle-button.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle.module.ts","ng://@allianz/ngx-ndbx/list/list.component.ts","ng://@allianz/ngx-ndbx/list/list-icon.component.ts","ng://@allianz/ngx-ndbx/list/list.module.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle-button-base.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle-button.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle.module.ts","ng://@allianz/ngx-ndbx/checkbox-circle/checkbox-circle.component.ts","ng://@allianz/ngx-ndbx/checkbox-circle/checkbox-circle.module.ts","ng://@allianz/ngx-ndbx/spinner/spinner.component.ts","ng://@allianz/ngx-ndbx/spinner/spinner.module.ts","ng://@allianz/ngx-ndbx/modal/modal.service.ts","ng://@allianz/ngx-ndbx/modal/animations.ts","ng://@allianz/ngx-ndbx/modal/modal.component.ts","ng://@allianz/ngx-ndbx/modal/modal-open-on-click.directive.ts","ng://@allianz/ngx-ndbx/modal/modal.module.ts","ng://@allianz/ngx-ndbx/switcher/switcher.component.ts","ng://@allianz/ngx-ndbx/switcher/switcher.module.ts","ng://@allianz/ngx-ndbx/popover/popover-content.ts","ng://@allianz/ngx-ndbx/popover/popover.component.ts","ng://@allianz/ngx-ndbx/popover/popover-trigger.directive.ts","ng://@allianz/ngx-ndbx/popover/popover.module.ts","ng://@allianz/ngx-ndbx/taglist/tag.component.ts","ng://@allianz/ngx-ndbx/taglist/taglist.component.ts","ng://@allianz/ngx-ndbx/taglist/taglist.module.ts","ng://@allianz/ngx-ndbx/image/image.directive.ts","ng://@allianz/ngx-ndbx/image/figure.component.ts","ng://@allianz/ngx-ndbx/image/image.module.ts","ng://@allianz/ngx-ndbx/radio-circle/radio-circle-button.ts","ng://@allianz/ngx-ndbx/radio-circle/radio-circle.component.ts","ng://@allianz/ngx-ndbx/radio-circle/icon-button/radio-circle-icon-button.component.ts","ng://@allianz/ngx-ndbx/radio-circle/svg-button/radio-circle-svg-button.component.ts","ng://@allianz/ngx-ndbx/radio-circle/radio-circle.module.ts","ng://@allianz/ngx-ndbx/video/video.component.ts","ng://@allianz/ngx-ndbx/video/video.module.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown-errors.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.control.ts","ng://@allianz/ngx-ndbx/dropdown/group/dropdown-group.ts","ng://@allianz/ngx-ndbx/dropdown/item/dropdown-item.ts","ng://@allianz/ngx-ndbx/dropdown/closed-label.directive.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.module.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete-option.component.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete.component.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete-trigger.directive.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete.module.ts","ng://@allianz/ngx-ndbx/natural-language-form/word.component.ts","ng://@allianz/ngx-ndbx/natural-language-form/natural-language-form.component.ts","ng://@allianz/ngx-ndbx/natural-language-form/natural-language-form.module.ts","ng://@allianz/ngx-ndbx/message/message.component.ts","ng://@allianz/ngx-ndbx/message/message.module.ts","ng://@allianz/ngx-ndbx/page-search/page-search.component.ts","ng://@allianz/ngx-ndbx/page-search/page-search.module.ts","ng://@allianz/ngx-ndbx/rating/rating.component.ts","ng://@allianz/ngx-ndbx/rating/rating.module.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-intl.ts","ng://@allianz/ngx-ndbx/number-stepper/auto-resize.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper.component.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-prefix.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-suffix.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper.module.ts","ng://@allianz/ngx-ndbx/pagination/pagination-texts.ts","ng://@allianz/ngx-ndbx/pagination/pagination-utils.ts","ng://@allianz/ngx-ndbx/pagination/pagination.component.ts","ng://@allianz/ngx-ndbx/pagination/pagination.module.ts","ng://@allianz/ngx-ndbx/dynamic-table/tabledata-source.ts","ng://@allianz/ngx-ndbx/dynamic-table/dynamic-table.component.ts","ng://@allianz/ngx-ndbx/dynamic-table/dynamic-table.module.ts","ng://@allianz/ngx-ndbx/accordion/accordion.ts","ng://@allianz/ngx-ndbx/accordion/accordion-animations.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel-body.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel-header.ts","ng://@allianz/ngx-ndbx/accordion/accordion.module.ts","ng://@allianz/ngx-ndbx/tabs/tab-group-base.ts","ng://@allianz/ngx-ndbx/tabs/tab.ts","ng://@allianz/ngx-ndbx/tabs/tab-body.ts","ng://@allianz/ngx-ndbx/tabs/tab-label.ts","ng://@allianz/ngx-ndbx/tabs/tab-header.ts","ng://@allianz/ngx-ndbx/tabs/tab-group.ts","ng://@allianz/ngx-ndbx/tabs/tab-nav-bar.ts","ng://@allianz/ngx-ndbx/tabs/tabs.module.ts","ng://@allianz/ngx-ndbx/core/breakpoints.ts","ng://@allianz/ngx-ndbx/core/mapped-styles.ts","ng://@allianz/ngx-ndbx/card/card.component.ts","ng://@allianz/ngx-ndbx/card/card.module.ts"],"sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\n\n@NgModule({\n})\nexport class NdbxModule {\n\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: NdbxModule\n    };\n  }\n}\n","import {\n  ElementRef,\n  ChangeDetectorRef\n} from '@angular/core';\n\n/** Type of a button. */\nexport type NxButtonType = 'primary' |Â 'secondary' | 'tertiary' | 'cta' | 'emphasis';\n\n/** Size of a button. */\nexport type NxButtonSize = 'small' | 'small-medium' | 'medium' | 'large' ;\n\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_TYPE = 'primary';\n\nexport const NX_BUTTON_HOST_BINDINGS = {\n    '[class.nx-button--primary]' : 'type === \"primary\"',\n    '[class.nx-button--secondary]' : 'type === \"secondary\"',\n    '[class.nx-button--tertiary]' : 'type === \"tertiary\"',\n    '[class.nx-button--cta]' : 'type === \"cta\"',\n    '[class.nx-button--emphasis]' : 'type === \"emphasis\"',\n\n    '[class.nx-button--large]' : 'size === \"large\"',\n    '[class.nx-button--medium]' : 'size === \"medium\"',\n    '[class.nx-button--small-medium]' : 'size === \"small-medium\"',\n    '[class.nx-button--small]' : 'size === \"small\"',\n\n    '[class.nx-button--block]' : 'block',\n    '[class.nx-button--negative]' : 'negative',\n  };\n\n/** @docs-private */\nexport class NxButtonBase {\n  private _classNames: string;\n\n  /** @docs-private */\n  type: NxButtonType = DEFAULT_TYPE;\n\n  /** @docs-private */\n  size: NxButtonSize = DEFAULT_SIZE;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /** @docs-private */\n  block: boolean = false;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, private _elementRef: ElementRef) { }\n\n  public set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n\n    const [type = null] = this._classNames.match(/primary|secondary|tertiary|cta|emphasis/) || [DEFAULT_TYPE];\n    this.type = type as NxButtonType;\n\n    const [size = null] = this._classNames.match(/small-medium|small|medium|large/) || [DEFAULT_SIZE];\n    this.size = size as NxButtonSize;\n\n    this.negative = /negative/.test(this._classNames);\n    this.block = /block/.test(this._classNames);\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  public get classNames(): string {\n    return this._classNames;\n  }\n\n  /**\n   * @docs-private\n   * getter used for the modal component as a quickfix\n   * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n   * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n   * way to reach the elementRef of the component until the modal gets refactored.\n   */\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NX_BUTTON_HOST_BINDINGS, NxButtonBase } from './button-base';\n\n@Component({\n  templateUrl: './button.html',\n  styleUrls: ['button.scss'],\n  // tslint:disable-next-line:component-selector\n  selector: 'button[nxButton]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: NX_BUTTON_HOST_BINDINGS,\n  inputs: ['classNames:nxButton']\n})\n\nexport class NxButtonComponent extends NxButtonBase {\n  constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef) {\n    super(changeDetectorRef, elementRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { NxButtonBase, NX_BUTTON_HOST_BINDINGS } from './button-base';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button[nxIconButton]',\n  templateUrl: './button.html',\n  styleUrls: ['button.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: NX_BUTTON_HOST_BINDINGS,\n  inputs: ['classNames:nxIconButton']\n})\nexport class NxIconButtonComponent extends NxButtonBase {\n  constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef) {\n    super(changeDetectorRef, elementRef);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxButtonComponent } from './button.component';\nimport { NxIconButtonComponent } from './icon-button.component';\n\n@NgModule({\n  declarations: [ NxButtonComponent, NxIconButtonComponent ],\n  exports: [ NxButtonComponent, NxIconButtonComponent ]\n})\nexport class NxButtonModule { }\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  ChangeDetectorRef,\n  AfterContentInit,\n  OnDestroy,\n  ContentChildren,\n  QueryList,\n  Optional,\n  Self,\n  OnInit, ContentChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  NgControl,\n} from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { NxLabelComponent } from '@allianz/ngx-ndbx/base';\n\nlet nextId = 0;\n\nexport class NxCheckboxChangeEvent {\n  constructor(\n  /** The checked value of the checkbox. */\n  public checked: boolean,\n  /** The value of the checkbox. */\n  public value: string,\n  /** The component instance of the checkbox which emitted the change event. */\n  public checkbox: NxCheckboxComponent\n  ) {}\n}\n\n/** Size of the label. */\nexport type NxCheckboxLabelSize = 'small' | 'large';\n\n@Component({\n  selector: 'nx-checkbox-group',\n  templateUrl: 'checkbox-group.component.html',\n  styleUrls: ['checkbox-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox-group]': 'true',\n    '[class.nx-checkbox-group--negative]': 'negative',\n    '[attr.id]': 'id',\n    '[attr.required]': 'required',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-labelledby]': 'this._label?.id  || null',\n    '[attr.role]': '\"group\"',\n  }\n})\nexport class NxCheckboxGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(forwardRef(() => NxCheckboxComponent), {descendants: true})\n  _checkboxes: QueryList<NxCheckboxComponent>;\n\n  @ContentChild(forwardRef(() => NxLabelComponent), {})\n   _label: NxLabelComponent;\n\n  readonly _stateChanges = new Subject<void>();\n  @Output() selectionChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  private _id: string = `nx-checkbox-group-${nextId++}`;\n  /** Sets the Id of the checkbox group. */\n  @Input()\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string;\n  /** Sets the name of the checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Disables all checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    if (this._label) {\n      this._label.disabled = this._disabled;\n    }\n    this._stateChanges.next();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Set the negative styles for all the checkboxes inside the nx-checkbox-group */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n    this._stateChanges.next();\n  }\n\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _labelSize: NxCheckboxLabelSize;\n  /** Sets the label size of the checkboxes inside the group */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._stateChanges.next();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return this._labelSize;\n  }\n\n  /** Whether the nx-checkbox-group are required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  private _value: any;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.ngControl) {\n      this._value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._onChange(this._value);\n      });\n    }\n\n    this._updateSelectedCheckboxFromValue();\n    this._checkboxes.changes.subscribe(() => {\n      this._value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n      if (this.ngControl) {\n        this.ngControl.control.setValue(this._value);\n      }\n      this._updateSelectedCheckboxFromValue();\n    });\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  writeValue(value: any): void {\n    if (this._value) {\n      this._value = value;\n    }\n    this._updateSelectedCheckboxFromValue();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  private _onChange: (value: any) => void = () => {};\n\n  private _onTouched: () => any = () => {};\n\n  private _updateSelectedCheckboxFromValue(): void {\n    if (this._checkboxes !== null) {\n      if (this._value) {\n        this._checkboxes.map(checkbox => {\n          if (this._value.indexOf(checkbox.value) !== -1) {\n            checkbox.checked = true;\n          }\n        });\n      }\n    }\n  }\n\n  /** @docs-private */\n  change(value) {\n    value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n    this._onChange(value);\n    if (this._onTouched) {\n      this._onTouched();\n    }\n    this.selectionChange.emit(new NxCheckboxChangeEvent(value.checked, value.value, value));\n  }\n}\n\n@Component({\n  selector: 'nx-checkbox',\n  templateUrl: 'checkbox.component.html',\n  styleUrls: ['checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox]': 'true',\n    '[class.disabled]': 'disabled',\n    '[class.nx-checkbox--label-large]': 'labelSize === \"large\"',\n    '[class.nx-checkbox--negative]': 'negative',\n    '[attr.required]': 'required',\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.aria-invalid]': '_controlInvalid() || null',\n  },\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCheckboxComponent),\n      multi: true\n    }\n  ]\n})\n\nexport class NxCheckboxComponent implements ControlValueAccessor, OnDestroy, OnInit {\n  private _parentChangeSubscription: Subscription;\n  private _id: string = (nextId++).toString();\n  private _disabled: boolean = false;\n  private _negative: boolean = false;\n  private _labelSize: NxCheckboxLabelSize = 'small';\n  private _checked = false;\n  private _name: string = null;\n\n  /**\n   * Id of the checkbox.\n   *\n   * If not set, the checkbox gets an incremented value by default.\n   */\n  @Input()\n  set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id() {\n    return `nx-checkbox-${this._id}`;\n  }\n\n  /** Name of the checkbox. */\n  @Input()\n  set name(name: string) {\n    this._name = name;\n  }\n\n  get name(): string {\n    return (this.checkboxGroup && this.checkboxGroup.name) ? this.checkboxGroup.name : this._name;\n  }\n\n  /** Whether the checkbox is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.disabled) ? this.checkboxGroup.disabled : this._disabled;\n  }\n\n  /**\n   * Sets the label size of the checkbox. Default value: small\n   */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return (this.checkboxGroup && this.checkboxGroup.labelSize) ? this.checkboxGroup.labelSize : this._labelSize;\n  }\n\n  /**\n   * Whether the checkbox has negative styling.\n   */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.negative) ? this.checkboxGroup.negative : this._negative;\n  }\n\n\n  /** Whether the checkbox is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._checked) {\n      if (this._indeterminate) {\n        this._setIndeterminate(false);\n      }\n      this._setChecked(newValue);\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  private _indeterminate = false;\n\n  /** Whether the checkbox is indeterminated. */\n  @Input()\n  set indeterminate(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._indeterminate !== newValue) {\n      if (this._checked) {\n        this._setChecked(false);\n      }\n      this._setIndeterminate(newValue);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  /** Sets the value of the checkbox. Default value is the checked status. */\n  @Input()\n  get value(): string {\n    return this._value ? this._value : this.checked.toString();\n  }\n\n  set value(value: string) {\n    this._value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _value: string;\n\n  /** An event emitted when the indeterminate value has changed */\n  @Output()\n  indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits the boolean checked value of the changed checkbox.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits a NxCheckboxChangeEvent.\n   */\n  @Output()\n  checkboxChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public checkboxGroup: NxCheckboxGroupComponent) {\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n    return !!(this.checkboxGroup && this.checkboxGroup.ngControl && this.checkboxGroup.ngControl.invalid\n      && this.checkboxGroup.ngControl.touched);\n  }\n\n  ngOnInit() {\n    if (this.checkboxGroup) {\n      this.name = this.checkboxGroup.name;\n      // when relevant properties of the parent like name and disabled change\n      // we need to let change detection know that the template needs an update\n      this._parentChangeSubscription = this.checkboxGroup._stateChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n    }\n  }\n\n  private _setIndeterminate(value: boolean) {\n    this._indeterminate = value;\n    this.indeterminateChange.emit(this._indeterminate);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _setChecked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Toggles the checked state of the checkbox. */\n  public toggle() {\n    this.checked = !this.checked;\n    this.onChangeCallback(this.checked);\n    if (this.checkboxGroup !== null) {\n      this.checkboxGroup.change(this);\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  private onChangeCallback = (_: any) => {};\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n\n  /** @docs-private */\n  _onInputClick(event): void {\n    // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n    event.stopPropagation();\n    if (!this.disabled) {\n      this.toggle();\n      this.checkedChange.emit(this._checked);\n      this.checkboxChange.emit(this._createChangeEvent(this._checked));\n    }\n  }\n\n  /**@docs-private */\n  private _createChangeEvent(checkedValue: boolean): NxCheckboxChangeEvent {\n    const event = new NxCheckboxChangeEvent(checkedValue, this.value, this);\n    event.checked = checkedValue;\n    event.value = this.value;\n    event.checkbox = this;\n    return event;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxCheckboxComponent } from './checkbox.component';\nimport { NxCheckboxGroupComponent } from './checkbox.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxLabelModule } from '@allianz/ngx-ndbx/base';\n\n@NgModule({\n  declarations: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent,\n  ],\n  exports: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent,\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule,\n    NxLabelModule\n  ]\n})\nexport class NxCheckboxModule { }\n","// Change event object emitted by NxRadioComponent and NxRadioGroupComponent\nimport { NxRadioComponent } from './radio-button';\n\n/** The change event object emitted by the radio group and radio button. */\nexport class NxRadioChange {\n  source: NxRadioComponent;\n  value: any;\n\n  /** The NxRadioComponent that emits the change event. NxRadioChange object can be instantiated with source radio component and a value. */\n  constructor(source: NxRadioComponent, value: any) {\n    this.source = source;\n    this.value = value;\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, ContentChild,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroupDirective,\n  NG_VALUE_ACCESSOR,\n  NgControl, NgForm,\n} from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { NxRadioChange } from './radio-change';\nimport { NxLabelComponent } from '@allianz/ngx-ndbx/base';\n\n/** Label Size Types */\nexport type LabelSize  = 'small' | 'big';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-radio-group',\n  templateUrl: './radio-group.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'role': 'radiogroup',\n    '[attr.id]': 'id',\n    '[attr.required]': 'required',\n    '[class.nx-radio-group--negative]': 'negative',\n    '[attr.aria-labelledby]': 'this._label?.id  || null'\n  },\n  styleUrls: [ 'radio-button-group.scss' ]\n})\nexport class NxRadioGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n\n  @ContentChild(forwardRef(() => NxLabelComponent), {})\n  _label: NxLabelComponent;\n\n  // emits when the internal state changes on properties which are relevant\n  // for the radio buttons so that they can mark themself for check\n  readonly _stateChanges = new Subject<void>();\n\n  private _id: string = `nx-radio-group-${nextId++}`;\n  /** Sets the Id of the radio group. */\n  @Input('id')\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get id(): string {\n    return this._id;\n  }\n  private _disabled: boolean = false;\n\n  /** Whether every radio button in this group should be disabled. */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    // inform childs about the change where CD should be triggered\n    this._stateChanges.next();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the radio group should have negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _required: boolean = false;\n  /** Sets if at least an option should be selected. */\n  @Input()\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this._stateChanges.next();\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /** An event is dispatched on each group value change. */\n  @Output('nxGroupValueChange') groupValueChange: EventEmitter<NxRadioChange> = new EventEmitter<NxRadioChange>();\n  private _name: string = `nx-radio-group-${nextId++}`;\n  private _value: any = null;\n  // The currently selected radio button; should match _value\n  private _selected: NxRadioComponent | null = null;\n\n  @ContentChildren(forwardRef(() => NxRadioComponent), {descendants: true})\n  _radios: QueryList<NxRadioComponent>;\n\n  private _onChange: (value: any) => void = () => {};\n  private _onTouched: () => any = () => {};\n\n  get name(): string {\n    return this._name;\n  }\n\n  // this is also the name attribute, which is mandatory in conjunction with ngModel, hence no nx prefix\n  /** Sets the name of this radio group, which is mandatory in conjunction with ngModel (Default: null). */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._stateChanges.next();\n  }\n\n  get value(): any { return this._value; }\n\n  /** Sets the value of the selected radion button in this group (Default: null). */\n  @Input('nxValue')\n  set value(newValue: any) {\n    if (this._value !== newValue) {\n      // Set this before proceeding to ensure no circular loop occurs with selection.\n      this._value = newValue;\n\n      this._updateSelectedRadioFromValue();\n      this._checkSelectedRadioButton();\n    }\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl,\n              @Optional() public _parentForm: NgForm,\n              @Optional() public _parentFormGroup: FormGroupDirective) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._updateSelectedRadioFromValue();\n    this._checkSelectedRadioButton();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** @docs-private this is meant to be called by the radio buttons in this group */\n  change(value) {\n    this.value = value;\n    this._onChange(value);\n    this.groupValueChange.emit(new NxRadioChange(this._selected, this._value));\n  }\n\n  /** @docs-private this is meant to be called by the radio buttons in this group. */\n  touch() {\n    if (this._onTouched) {\n      this._onTouched();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _updateSelectedRadioFromValue(): void {\n    // If the value already matches the selected radio, do nothing.\n    const isAlreadySelected = this._selected != null && this._selected.value === this._value;\n\n    if (this._radios != null && !isAlreadySelected) {\n      this._selected = null;\n      this._radios.forEach(radio => {\n        radio.checked = this.value === radio.value;\n        if (radio.checked) {\n          this._selected = radio;\n        }\n      });\n    }\n  }\n\n  private _checkSelectedRadioButton() {\n    if (this._selected && !this._selected.checked) {\n      this._selected.checked = true;\n    }\n  }\n\n}\n\n\n@Component({\n  selector: 'nx-radio',\n  templateUrl: 'radio-button.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ 'radio-button.scss' ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRadioComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[attr.required]': 'required',\n    '[class.nx-radio-button--small-label]': 'labelSize === \"small\"',\n    '[class.nx-radio-button--big-label]': 'labelSize === \"big\"',\n    '[class.nx-radio--negative]': 'negative',\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.aria-invalid]': '_controlInvalid() || null'\n  }\n})\nexport class NxRadioComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n  private _parentChangeSubscription: Subscription;\n\n  private _id: string = `nx-radio-${nextId++}`;\n  /** Sets the id of the radio component. */\n  @Input('id')\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  /** @docs-private */\n  get inputId(): string {\n    return `${this.id}-input`;\n  }\n\n  /** @docs-private */\n  get labelId(): string {\n    return `${this.id}-label`;\n  }\n\n  private _name: string = null;\n  // this is also the name attribute, which is mandatory in conjunction with ngModel, hence no nx prefix\n  /** Sets the name of this radio component, which is mandatory in conjunction with ngModel (Default: null). */\n  @Input('name')\n  set name(value: string) {\n    if (this._name !== value) {\n      this._name = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get name(): string {\n    return (this.radioGroup && this.radioGroup.name) ? this.radioGroup.name : this._name;\n  }\n\n  private _labelSize: LabelSize = 'big';\n  /** Sets the label size of the radio button.\n   * The default value is `big`.\n  */\n  @Input()\n  set labelSize(value: LabelSize) {\n    if (this._labelSize !== value) {\n      this._labelSize = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelSize(): LabelSize {\n    return this._labelSize;\n  }\n\n  private _negative:  boolean = false;\n  /**\n   * Whether the negative set of styles should be used.\n   *\n   * If the radio button is placed in a radio group, the negative value\n   * is overwritten by the group's negative value.\n   */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._negative !== newValue) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this.radioGroup ? this.radioGroup.negative : this._negative;\n  }\n\n  /** An event is dispatched on each value change. */\n  @Output('nxValueChange') valueChange: EventEmitter<NxRadioChange> = new EventEmitter<NxRadioChange>();\n  private _value: any = null;\n  private _checked: boolean = false;\n  private _disabled: boolean = false;\n  private _required: boolean = false;\n\n  get value(): any {\n    return this._value;\n  }\n\n  /** Sets the value of the form control element (Default: null). */\n  @Input('nxValue')\n  set value(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this.onChangeCallback(value);\n    }\n  }\n\n  /** @docs-private */\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  /** Whether the radio component is selected. */\n  @Input('nxChecked')\n  set checked(value: boolean) {\n    if (this._checked !== value) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** @docs-private */\n  get disabled(): boolean {\n    return this._disabled || (this.radioGroup && this.radioGroup.disabled);\n  }\n\n  /** Whether the radio button should be disabled or not. */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  get required(): boolean {\n    return this._required || (this.radioGroup && this.radioGroup.required);\n  }\n\n  /** Sets if at least a radio button should be selected. */\n  @Input()\n  set required(value: boolean) {\n    this._required = value;\n    // needed when the outer component is set to onPush because it is a native property\n    // on the host element\n    this._changeDetectorRef.markForCheck();\n  }\n\n  constructor(@Optional() public radioGroup: NxRadioGroupComponent,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (this.radioGroup) {\n      this.name = this.radioGroup.name;\n      // when relevant properties of the parent like name and disabled change\n      // we need to let change detection know that the template needs an update\n      this._parentChangeSubscription = this.radioGroup._stateChanges.subscribe(()  => {\n        this._changeDetectorRef.markForCheck();\n      });\n\n      if (this.radioGroup.value === this._value) {\n        this._checked = true;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === this._value) {\n      this._checked = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  private onChangeCallback = (_: any) => {};\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n\n    if (this.radioGroup) {\n      this.radioGroup.touch();\n    }\n  }\n\n  _onInputChange(event: Event) {\n    event.stopPropagation();\n    this._checked = true;\n    this.valueChange.emit(new NxRadioChange(this, this._value));\n    this.onChangeCallback(this.value);\n\n    if (this.radioGroup && this.value !== this.radioGroup.value) {\n      this.radioGroup.change(this.value);\n    }\n  }\n\n  _onInputClick(event: Event) {\n    // make sure click event propagation on the visually hidden input\n    // are stopped to prevent multiple events bubbling up.\n    event.stopPropagation();\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n    const form = this.radioGroup && (this.radioGroup._parentFormGroup || this.radioGroup._parentForm);\n    return !!(this.radioGroup && this.radioGroup.ngControl && this.radioGroup.ngControl.invalid\n      && (this.radioGroup.ngControl.touched || (form && form.submitted)));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxRadioComponent } from './radio-button';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxRadioGroupComponent } from './radio-button';\n\n@NgModule({\n  declarations: [ NxRadioComponent, NxRadioGroupComponent ],\n  exports: [ NxRadioComponent, NxRadioGroupComponent ],\n  imports: [\n    NxIconModule\n  ]\n})\nexport class NxRadioModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/** A type that specifies the font size of a copytext. */\nexport type NxCopytextType = 'small' | 'medium' | 'normal' | 'large';\n\nconst DEFAULT_TYPE = 'normal';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'p[nxCopytext]',\n  styleUrls: ['copytext.component.scss'],\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-copy]': 'true',\n    '[class.nx-copy--small]': 'type === \"small\"',\n    '[class.nx-copy--medium]': 'type === \"medium\"',\n    '[class.nx-copy--normal]': 'type === \"normal\"',\n    '[class.nx-copy--large]': 'type === \"large\"',\n    '[class.nx-copy--negative]': 'negative',\n  }\n})\nexport class NxCopytextComponent {\n  private _classNames: string;\n\n  /** @docs-private */\n  type: NxCopytextType = DEFAULT_TYPE;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /**\n   * Sets the type and whether the negative set of styling should be used.\n   *\n   * You can combine the values of type NxCopytextType and 'negative'.\n   *\n   * Default type: 'normal'\n   */\n  @Input('nxCopytext')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n    this._classNames = value;\n    const [type = null] = this._classNames.match(/small|medium|normal|large/) || [DEFAULT_TYPE];\n    this.type = type as NxCopytextType;\n\n    this.negative = !!this._classNames.match(/negative/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { NxCopytextComponent } from './copytext.component';\n\n@NgModule({\n  declarations: [ NxCopytextComponent ],\n  exports: [ NxCopytextComponent ]\n})\nexport class NxCopytextModule { }\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n/** Types of headlines */\nexport type HeadlineType = 'page' | 'page-bold-caps' | 'section' | 'subsection-large'\n                    | 'subsection-medium' | 'subsection-small' | 'subsection-xsmall';\n\nconst DEFAULT_TYPE = 'section';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nxHeadline]',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['headline.component.scss'],\n  host: {\n    '[class.nx-heading--page]': 'type === \"page\"',\n    '[class.nx-heading--page-bold-caps]': 'type === \"page-bold-caps\"',\n    '[class.nx-heading--section]': 'type === \"section\"',\n    '[class.nx-heading--subsection-large]': 'type === \"subsection-large\"',\n    '[class.nx-heading--subsection-medium]': 'type === \"subsection-medium\"',\n    '[class.nx-heading--subsection-small]': 'type === \"subsection-small\"',\n    '[class.nx-heading--subsection-xsmall]': 'type === \"subsection-xsmall\"',\n\n    '[class.nx-heading--negative]': 'negative',\n  }\n})\n\nexport class NxHeadlineComponent {\n  private _classNames: string;\n  /** @docs-private */\n  public type: HeadlineType = DEFAULT_TYPE;\n  /** @docs-private */\n  public negative: boolean = false;\n\n  /** Changes the type of the headline which affects the visual appearance.\n   * You can combine a HeadlineType and 'negative'. */\n  @Input('nxHeadline')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n    const typeRegex = /page-bold-caps|page|section|subsection-large|subsection-medium|subsection-small|subsection-xsmall/;\n    const [type = null] = this._classNames.match(typeRegex) || [DEFAULT_TYPE];\n    this.type = type as any;\n\n    this.negative = !!this._classNames.match(/negative/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxHeadlineComponent } from './headline.component';\n\n@NgModule({\n  declarations: [ NxHeadlineComponent ],\n  exports: [ NxHeadlineComponent ]\n})\nexport class NxHeadlineModule { }\n","import { NxIconComponent } from '@allianz/ngx-ndbx/icon';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, ContentChild, ElementRef, Renderer2 } from '@angular/core';\n\nimport { MappedStyles } from '@allianz/ngx-ndbx/core';\n\n\nconst MAPPING = {\n  'black': 'nx-link--black',\n  'negative': 'nx-link--negative',\n  'text': 'nx-link--text',\n  'block': 'nx-link--block',\n  'icon-right': 'nx-link--icon-right'\n};\n\nconst DEFAULT_CLASSES = [ 'nx-link' ];\n\n@Component({\n  selector: 'nx-link',\n  styleUrls: [ './link.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ['classNames: nxStyle']\n})\n\nexport class NxLinkComponent extends MappedStyles implements AfterContentInit {\n  private _styles: string;\n\n  /** @docs-private */\n  @ContentChild(NxIconComponent) icon: NxIconComponent;\n\n  /**\n   * Sets the style of the link, thereby altering the visual appearance.\n   *\n   * You can use any combination of 'black', 'icon-right', 'negative', 'text' and 'block' (deprecated).\n   */\n  classNames;\n\n  constructor(_elementRef: ElementRef, protected _renderer: Renderer2) {\n    super(MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);\n  }\n\n  ngAfterContentInit() {\n    // Add a specific link class that the css gets more specific than the nx-icon css\n    const icons = this.elementRef.nativeElement.querySelectorAll('nx-icon');\n    for (let i = 0; i < icons.length; i++) {\n      this._renderer.addClass(icons[i], 'nx-link__icon');\n    }\n  }\n\n  /**\n   * @docs-private\n   * getter used for the modal component as a quickfix\n   * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n   * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n   * way to reach the elementRef of the component until the modal gets refactored.\n   */\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxLinkComponent } from './link.component';\n\n@NgModule({\n  declarations: [ NxLinkComponent ],\n  exports: [ NxLinkComponent ]\n})\nexport class NxLinkModule {\n}\n","/** @docs-private */\nexport abstract class ToggleButton {\n  id;\n  value;\n  checked;\n  name;\n  negative;\n  disabled;\n  tabIndex;\n  checkedChange;\n  selectionChange;\n  toggleButton;\n  abstract toggle(event);\n  abstract setGroupSelection();\n\n}\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  QueryList,\n  AfterViewInit,\n  ChangeDetectorRef,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil, tap, startWith, filter } from 'rxjs/operators';\nimport { merge, Subject } from 'rxjs';\n\nimport { ToggleButton } from '../circle-toggle/toggle-button';\nimport { ToggleChangeEvent } from '../circle-toggle/circle-toggle.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-circle-toggle-group',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./circle-toggle-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCircleToggleGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.is-responsive]': 'responsive',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-labelledby]': 'name',\n    '[attr.name]': 'name',\n    '[attr.id]': 'id',\n    '[class.nx-circle-toggle-group]': 'true',\n    'role': 'radiogroup'\n  }\n})\nexport class NxCircleToggleGroupComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n\n  @ContentChildren(ToggleButton) private _buttons: QueryList<ToggleButton>;\n\n  private _id = `nx-circle-toggle-group-${nextId++}`;\n\n  /**\n   * Id of the circle toggle group.\n   *\n   * If not set, the circle toggle group gets an incremented value by default.\n   */\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n  private _destroyed: Subject<void> = new Subject();\n\n  /** An event emitted when the selection changes. Outputs the value of the currently selected button. */\n  @Output()\n  valueChange: EventEmitter<any> = new EventEmitter();\n\n  private _name: string = `toggle-group-${nextId++}`;\n\n  /** Name that is used for accessibility. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this.updateToggleButtonsNames();\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean;\n\n  /** Whether the circle toggle group is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n    if (this.buttons) {\n      this.buttons.forEach(button => button.disabled = value);\n    }\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  _negative: boolean = false;\n  /** Whether the circle toggle group uses the negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.negative !== newValue) {\n      this._negative = newValue;\n    }\n    if (this.buttons) {\n      this.buttons.forEach(button => button.negative = value);\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _value;\n  /** The value of the selected circle toggle in the circle toggle group. */\n  @Input()\n  set value(value: string) {\n    this.writeValue(value);\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  private _responsive: boolean = true;\n  /** Whether the circle toggle group has a responsive behavior. */\n  @Input()\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.responsive) {\n      this._responsive = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get responsive(): boolean {\n    return this._responsive;\n  }\n\n  private onChangeCallback = (value: string) => { };\n  private onTouchedCallback = () => { };\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  writeValue(value: any) {\n    if (this.value !== value) {\n      this._value = value;\n      this.notifySelectedChild(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  ngAfterViewInit() {\n\n    this.subscribeToSelectionChanges();\n\n    // react if a content child is deleted, added etc.\n    this.buttons.changes\n      .pipe(\n        startWith(this.buttons),\n        filter(toggles => toggles.length > 0),\n        tap(toggles =>\n          Promise.resolve().then(() => {\n            toggles.forEach(toggle => toggle.toggleButton.resetClasses());\n            this.buttons.first.toggleButton.setFirstButton();\n            this.buttons.last.toggleButton.setLastButton();\n          })\n        ),\n        takeUntil(this._destroyed))\n      .subscribe(() => this.subscribeToSelectionChanges());\n  }\n\n  /** @docs-private */\n  subscribeToSelectionChanges() {\n    const changedOrDestroyed = merge(this.buttons.changes, this._destroyed);\n\n    merge(...this.buttons.map(button => button.selectionChange))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe((change: ToggleChangeEvent) => {\n        this.onChangeCallback(change.value);\n        this.valueChange.emit(change.value);\n      });\n  }\n\n  /**\n   * @docs-private\n   * inform the selected button if the group selection is set programattically at the beginning\n   */\n  notifySelectedChild(newValue: string) {\n    if (this.buttons) {\n      const selected = this.buttons.find((button) => button.value === newValue);\n      if (selected) {\n        selected.setGroupSelection();\n      }\n    }\n  }\n\n  /** @docs-private */\n  updateToggleButtonsNames(): void {\n    if (this.buttons) {\n      this.buttons.forEach(button => button.name = this.name);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  get selectedButton(): ToggleButton {\n    return this.buttons ? this.buttons.find(button => button.checked) : null;\n  }\n\n  /** @docs-private */\n  get buttons() {\n    return this._buttons;\n  }\n}\n\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-mobile-toggle-button',\n  templateUrl: 'mobile-toggle-button.component.html',\n  styleUrls: ['mobile-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-disabled]': 'disabled',\n    '[class.is-negative]': 'negative',\n    '[class.is-first]': 'isFirst',\n    '[class.is-last]': 'isLast',\n    '[class.is-flipped]': 'checked'\n  }\n})\nexport class NxMobileToggleButtonComponent {\n\n  @Input()\n  checked: boolean = false;\n\n  @Input()\n  negative: boolean = false;\n\n  @Input()\n  disabled: boolean = false;\n\n  @Input()\n  hint: string;\n\n  @Input()\n  label: string;\n\n  /** @docs-private */\n  isFirst: boolean;\n\n  /** @docs-private */\n  isLast: boolean;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  setFirstButton() {\n    this.isFirst = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  setLastButton() {\n    this.isLast = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  resetClasses() {\n    this.isFirst = false;\n    this.isLast = false;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input, Output, ViewChild, Optional, OnInit, OnDestroy, AfterViewInit, HostListener, ChangeDetectorRef, ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\nimport { ToggleButton } from './toggle-button';\nimport { NxCircleToggleGroupComponent } from '../circle-toggle-group/circle-toggle-group.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NxMobileToggleButtonComponent } from '../mobile-toggle-button/mobile-toggle-button.component';\n\nexport class ToggleChangeEvent {\n  /** A toggle button */\n  button: ToggleButton;\n\n  /** The value of the toggle button that is sent with the event. */\n  value: string;\n\n  constructor(button, value) {\n    this.button = button;\n    this.value = value;\n  }\n}\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-circle-toggle',\n  templateUrl: 'circle-toggle.component.html',\n  styleUrls: ['circle-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ToggleButton,\n      useExisting: forwardRef(() => NxCircleToggleComponent)\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCircleToggleComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-toggle-circle]': 'true',\n    '[class.in-group]': 'inGroup',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-responsive]': 'responsive'\n  }\n})\nexport class NxCircleToggleComponent extends ToggleButton implements\nOnInit, OnDestroy, AfterViewInit, ControlValueAccessor {\n\n  private _id: string = `toggle-button-${nextId++}`;\n\n  /** @docs-private */\n  inGroup: boolean = false;\n\n  /**\n   * Id of the circle toggle.\n   *\n   * If not set, the circle toggle gets an incremented value by default.\n   */\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string = null;\n\n  /** Name that is used for accessibility. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * An event that is emitted when the checked state fo the circle toggle changes.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>();\n\n  /**\n   * An event that is emitted when the checked state of the circle toggle changes.\n   * The event object contains the circle toggle itself and its value (see ToggleChangeEvent).\n   */\n  @Output()\n  selectionChange = new EventEmitter<ToggleChangeEvent>();\n\n  _checked: boolean = false;\n  /** Whether the circle toggle is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.checked !== newValue) {\n      this._checked = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _value: string = null;\n\n  /** The value that is used in the model. */\n  @Input()\n  set value(newValue: string) {\n    this._value = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): string {\n    return this._value;\n  }\n\n  private _iconName: string = null;\n  /** Id of the icon that should be displayed. */\n  @Input('icon')\n  set iconName(name: string) {\n    this._iconName = name;\n    this._changeDetectorRef.markForCheck();\n  }\n  get iconName(): string {\n    return this._iconName;\n  }\n\n  private _svg: string = null;\n\n  /** SVG that is displayed if the circle toggle is unchecked. */\n  @Input()\n  set svg(src: string) {\n    this._svg = src;\n    this._changeDetectorRef.markForCheck();\n  }\n  get svg(): string {\n    return this._svg;\n  }\n\n  private _svgChecked: string = null;\n\n  /** SVG that is displayed if the circle toggle is checked. */\n  @Input()\n  set svgChecked(src: string) {\n    this._svgChecked = src;\n    this._changeDetectorRef.markForCheck();\n  }\n  get svgChecked(): string {\n    return this._svgChecked;\n  }\n\n  private _label: string = null;\n\n  /** Label displayed below the circle. */\n  @Input()\n  set label(value: string) {\n    this._label = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get label(): string {\n    return this._label;\n  }\n\n  private _hint: string = null;\n\n  /** Additional hint displayed below the label. */\n  @Input()\n  set hint(value: string) {\n    this._hint = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get hint(): string {\n    return this._hint;\n  }\n\n  private _negative;\n\n  /** Whether the circle toggle uses the negative set of styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.negative !== newValue) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  private _responsive;\n\n  /** Whether the circle toggle has a responsive behavior. */\n  @Input()\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.responsive !== newValue) {\n      this._responsive = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get responsive() {\n    return this._responsive;\n  }\n\n  private _disabled: boolean;\n\n  /** Whether the circle toggle is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.disabled !== newValue) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /** @docs-private */\n  @ViewChild(NxMobileToggleButtonComponent)\n  toggleButton: NxMobileToggleButtonComponent;\n\n  private _hover: boolean = false;\n\n  /** touched is set to true on touch devices. */\n  _touched: boolean = false;\n\n  /** @docs-private */\n  @HostListener('mouseenter') onMouseEnter() {\n    if (!this._touched) {\n      this._hover = true;\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('mouseleave') onMouseLeave() {\n    if (!this._touched) {\n      this._hover = false;\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('touchstart') onTouchStart() {\n    this._touched = true;\n  }\n\n  _removeUniqueSelectionListener: () => void = () => { };\n\n  private onChangeCallback = (checked: boolean) => { };\n  private onTouchedCallback = () => { };\n\n  constructor(/** @docs-private */ @Optional() public toggleGroup: NxCircleToggleGroupComponent,\n    private _checkedDispatcher: UniqueSelectionDispatcher, private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n\n    if (this.toggleGroup) {\n      this.name = this.toggleGroup.name;\n    }\n  }\n\n  ngOnInit() {\n    if (this.toggleGroup) {\n      this.attachListenerForGroup();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.toggleGroup) {\n      Promise.resolve().then(() => {\n        this.inGroup = true;\n        this.negative = this.toggleGroup.negative;\n        this.disabled = this.toggleGroup.disabled;\n        this.responsive = this.toggleGroup.responsive;\n        this.id = this.toggleGroup.id + `-button-${nextId++}`;\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    // function returned by the listener\n    this._removeUniqueSelectionListener();\n  }\n\n  /** @docs-private */\n  attachListenerForGroup() {\n    this._removeUniqueSelectionListener =\n      this._checkedDispatcher.listen((groupId: string, buttonId: string) => {\n        if (this.id !== buttonId && groupId === this.toggleGroup.id) {\n          this.checked = false;\n        }\n      });\n  }\n\n  writeValue(newValue): void {\n    this.checked = newValue;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  toggle(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if ((this.toggleGroup && this.checked) || this.disabled) {\n      return;\n    } else {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this.checkedChange.emit(this.checked);\n      this.selectionChange.emit(new ToggleChangeEvent(this, this.value));\n      if (this.toggleGroup) {\n        this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n      }\n    }\n  }\n\n  /**\n   * @docs-private\n   *\n   * method called by the group if the internal value of the group is changed programatically,\n   * does not trigger change emission\n   */\n  setGroupSelection() {\n    // propagate changes only if the value in the group is different than the button checked value\n    if (!this.checked) {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n    }\n  }\n\n  /** @docs-private */\n  get svgButton(): boolean {\n    return !!this.svg && !!this.svgChecked;\n  }\n\n  /** @docs-private */\n  get svgUrl(): string {\n    let useFilledSvg = this.checked || (!this.disabled && this._hover);\n    if (this.negative) {\n      useFilledSvg = !useFilledSvg;\n    }\n    return useFilledSvg ? this.svgChecked : this.svg;\n  }\n\n  /** @docs-private */\n  get type() {\n    return this.toggleGroup ? 'radio' : 'checkbox';\n  }\n\n  /** @docs-private */\n  handleEnterKey(event) {\n    if (!this.toggleGroup) {\n      this.toggle(event);\n    }\n  }\n}\n","\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-icon-toggle-button',\n  templateUrl: 'icon-toggle-button.component.html',\n  styleUrls: ['icon-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-circle-button]': 'true',\n    '[class.is-flipped]': 'checked',\n    '[class.has-checkmark]': '!inGroup',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-negative]': 'negative',\n    '[class.is-touched]': 'touched'\n  }\n})\nexport class NxIconToggleButtonComponent {\n\n  @Input()\n  inGroup: boolean = true;\n\n  @Input()\n  hint: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  checked: boolean;\n\n  @Input()\n  icon: string;\n\n  @Input('svg')\n  svgUrl: string;\n\n  @Input()\n  disabled: boolean;\n\n  @Input()\n  negative: boolean;\n\n  @Input()\n  touched: boolean;\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { NxCircleToggleGroupComponent } from './circle-toggle-group/circle-toggle-group.component';\nimport { NxCircleToggleComponent } from './circle-toggle/circle-toggle.component';\nimport { NxIconToggleButtonComponent } from './icon-toggle-button/icon-toggle-button.component';\nimport { NxMobileToggleButtonComponent } from './mobile-toggle-button/mobile-toggle-button.component';\n\n@NgModule({\n  declarations: [\n    NxCircleToggleGroupComponent,\n    NxCircleToggleComponent,\n    NxIconToggleButtonComponent,\n    NxMobileToggleButtonComponent\n  ],\n  exports: [\n    NxCircleToggleGroupComponent,\n    NxIconToggleButtonComponent,\n    NxCircleToggleComponent,\n    NxMobileToggleButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule\n  ]\n})\nexport class NxCircleToggleModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nconst DEFAULT_TYPE = 'normal';\n\n/** Size of the list */\nexport type NxListSize = 'xsmall' | 'small' | 'normal';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ul[nxList], ol[nxList]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['list.component.scss'],\n  host: {\n    '[class.nx-list--xsmall]' : 'type === \"xsmall\"',\n    '[class.nx-list--small]' : 'type === \"small\"',\n    '[class.nx-list--normal]' : 'type === \"normal\"',\n    '[class.nx-list--negative]' : 'negative',\n    '[class.nx-list--ordered-circle]' : 'orderedCircle',\n  }\n})\n\nexport class NxListComponent {\n  private _classNames;\n\n  /** @docs-private */\n  type: NxListSize;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /** @docs-private */\n  orderedCircle: boolean = false;\n\n  /**\n   * Sets the visual appearance of the list. You can combine different values:\n   *\n   * xsmall | small | normal: The listed input values are expanded to the underlying BEM conform styles based\n   * on modifiers. Defaults to normal.\n   *\n   * negative: Display the list with a negative set of styling.\n   *\n   * ordered-circle: Display the list item numbers in a color filled circle.\n   */\n  @Input('nxList')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n\n    const [type = null] = this._classNames.match(/xsmall|small|normal/) || [DEFAULT_TYPE];\n    this.type = type as any;\n\n    this.negative = !!this._classNames.match(/negative/);\n    this.orderedCircle = !!this._classNames.match(/ordered-circle/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n}\n","import { Component, Input, ViewChild, ViewContainerRef } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'li[nxListIcon]',\n  template: `\n    <span class=\"nx-list__icon\">\n      <nx-icon [name]='name'></nx-icon>\n    </span>\n    <ng-content></ng-content>`\n})\n\nexport class NxListIconComponent {\n  /** @docs-private */\n  @ViewChild('viewRefPrefix', {read: ViewContainerRef}) viewRefPrefix: ViewContainerRef;\n\n  /** Sets the name of the icon to be displayed. */\n  @Input('nxListIcon') name: string;\n}\n","import { NgModule } from '@angular/core';\nimport { NxListComponent } from './list.component';\nimport { NxListIconComponent } from './list-icon.component';\nimport { NxIconModule, NxIconComponent } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxListComponent, NxListIconComponent ],\n  imports: [ NxIconModule ],\n  exports: [ NxListComponent, NxListIconComponent ],\n  bootstrap: [NxIconComponent]\n})\nexport class NxListModule {\n}\n","import {ElementRef, Input, Renderer2, ViewChild} from '@angular/core';\nimport { removeClasses } from '@allianz/ngx-ndbx/utils';\n\nlet nextId = 0;\n\n/** @docs-private */\nexport class NxRadioToggleButtonBaseComponent {\n  /** @docs-private */\n  toggleButtonId: string = 'nx-radio-toggle-button-' + nextId++;\n\n  /** @docs-private */\n  @Input('nxValue')\n  value: any;\n\n  /** @docs-private */\n  @ViewChild('toggleButtonLabelContainer')\n  labelContainer: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('toggleInput')\n  toggleInput: ElementRef;\n\n  constructor(protected renderer: Renderer2) {\n  }\n\n  /** @docs-private */\n  triggerInputClick(event) {\n    event.stopPropagation();\n    this.toggleInput.nativeElement.click();\n  }\n\n  /** @docs-private */\n  setFirstButton() {\n    this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--first');\n  }\n\n  /** @docs-private */\n  setLastButton() {\n    this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--last');\n  }\n\n  /** @docs-private */\n  resetClasses() {\n    removeClasses(this.renderer, this.labelContainer, 'nx-radio-toggle__label-container--first nx-radio-toggle__label-container--last');\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, merge } from 'rxjs';\nimport { filter, startWith, takeUntil, tap } from 'rxjs/operators';\n\nimport { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';\nimport { NxRadioToggleButtonChange, NxRadioToggleButtonComponent } from './radio-toggle-button.component';\n\nlet nextId = 0;\n\nconst MAPPING = {\n  'negative': 'nx-radio-toggle--negative',\n  'small': 'nx-radio-toggle--small',\n};\n\n@Component({\n  selector: 'nx-radio-toggle',\n  templateUrl: 'radio-toggle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['radio-toggle.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRadioToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class NxRadioToggleComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, AfterContentInit {\n\n  private _toggleId: string = (nextId++).toString();\n\n  private _selection: any;\n\n  private _destroyed: Subject<void> = new Subject();\n\n  private _disabled: boolean = false;\n\n  // emits to signal children to run change detection\n  _disableChange = new Subject<void>();\n\n  /** Sets the component to the disabled state.*/\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    const coerced = coerceBooleanProperty(value);\n    if (this._disabled !== coerced) {\n      this._disabled = coerced;\n      this._disableChange.next();\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @ViewChild('toggleContainer')\n  private toggleContainer: ElementRef;\n\n  private _name: string;\n\n  /** Sets the name used for accessibility. */\n  @Input('nxName')\n  set name(value: string) {\n    if (this._name !== value) {\n      this._name = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  /** @docs-private */\n  @ContentChildren(NxRadioToggleButtonBaseComponent)\n  toggleButtons: QueryList<NxRadioToggleButtonBaseComponent> = new QueryList();\n\n  private onTouchedCallback = () => { };\n\n  private onChangeCallback = (option: any) => { };\n\n  constructor(private renderer: Renderer2, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    this.subscribeToToggleButtonsChange();\n  }\n\n  ngAfterContentInit() {\n    const changedOrDestroyed = merge(this.toggleButtons.changes, this._destroyed);\n\n    merge(...this.toggleButtons.map((button: any) => button.onChecked))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe((change: NxRadioToggleButtonChange) => {\n        this._selection = change.value;\n        this.onChangeCallback(this._selection);\n      });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._disableChange.complete();\n  }\n\n  /** @docs-private */\n  subscribeToToggleButtonsChange(): void {\n    this.toggleButtons.changes\n      .pipe(\n        startWith(this.toggleButtons),\n        filter(toggles => toggles.length > 0),\n        takeUntil(this._destroyed)\n      ).subscribe((toggles) => {\n        toggles.forEach(toggle => {\n          toggle.resetClasses();\n          if (toggle.value === this.selection) {\n            // We need to defer the selection for the edge case that the button with the value of this.selection\n            // didn't exist yet but was added afterwards to prevent changed after checked errors\n            setTimeout(() => toggle.select());\n          }\n        });\n        toggles.first.setFirstButton();\n        toggles.last.setLastButton();\n      });\n  }\n\n  registerOnChange(onChangeCallback: any): void {\n    this.onChangeCallback = onChangeCallback;\n  }\n\n  registerOnTouched(onTouchedCallback: any): void {\n    this.onTouchedCallback = onTouchedCallback;\n  }\n\n  /** Preselects the respective options. */\n  @Input('nxSelection')\n  writeValue(value: string): void {\n    this._selection = value;\n    const correspondingButton =\n      this.toggleButtons.find((button: NxRadioToggleButtonComponent) => button.value === this._selection);\n    if (correspondingButton) {\n      (correspondingButton as NxRadioToggleButtonComponent).select();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  get id(): string {\n    return `nx-radio-toggle-${this._toggleId}`;\n  }\n\n  /** Sets the modifiers for the component. */\n  @Input('nxStyle')\n  set style(value: string) {\n    const modifierClasses = mapClassNames(value, [], MAPPING);\n    modifierClasses.split(' ')\n      .forEach(className => this.renderer.addClass(this.toggleContainer.nativeElement, className));\n  }\n\n  /** @docs-private */\n  set selection(selection: any) {\n    this._selection = selection;\n    this.onChangeCallback(selection);\n  }\n\n  get selection(): any {\n    return this._selection;\n  }\n}\n","import { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, Inject, Input, Renderer2,\n   OnDestroy, HostListener } from '@angular/core';\n\nimport { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';\nimport { NxRadioToggleComponent } from './radio-toggle.component';\n\n/** @docs-private */\nexport class NxRadioToggleButtonChange {\n  constructor(\n    public source: NxRadioToggleButtonComponent,\n    public value: any\n  ) {}\n}\n\n@Component({\n  selector: 'nx-radio-toggle-button',\n  styleUrls: ['radio-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'radio-toggle-button.component.html',\n  providers: [\n    {\n      provide: NxRadioToggleButtonBaseComponent, useExisting: forwardRef(() => NxRadioToggleButtonComponent)\n    }\n  ]\n})\nexport class NxRadioToggleButtonComponent extends NxRadioToggleButtonBaseComponent implements OnDestroy {\n\n  /** @docs-private */\n  // emits when the button is checked to notify the group\n  readonly onChecked = new Subject<NxRadioToggleButtonChange>();\n\n  private _destroyed: Subject<void> = new Subject();\n\n  private _disabled: boolean = false;\n  private _selected: boolean = false;\n\n  /** @docs-private */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled || (this.radioToggle && this.radioToggle.disabled);\n  }\n\n  /** Sets the checked state and notify siblings and the parent group about the change */\n  // Only use this if you want the onChecked event to be fired, this will inform the parent about the change!\n  // To select a button without firing the event use the select() function\n  @Input('nxSelected')\n  set selected(value: boolean) {\n    if (this._selected !== value) {\n      this._selected = value;\n      if (this._selected) {\n        this._notifySiblings();\n        this._emitCheckedEvent();\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => { };\n\n  constructor(\n    @Inject(forwardRef(() => NxRadioToggleComponent)) private radioToggle: NxRadioToggleComponent,\n    renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _toggleDispatcher: UniqueSelectionDispatcher) {\n    super(renderer);\n\n    this._removeUniqueSelectionListener = this._toggleDispatcher.listen((id: string, radioToggleId: string) => {\n      if (this.radioToggle && this.radioToggle.id === radioToggleId && this.id !== id) {\n        this._selected = false;\n        // need to let change detector know in case that the select() function was called on another button\n        this._changeDetectorRef.markForCheck();\n      }\n    });\n\n    this.radioToggle._disableChange.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._removeUniqueSelectionListener();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** @docs-private */\n  get toggleId(): string {\n    return this.radioToggle.id;\n  }\n\n  /** @docs-private */\n  get id(): string {\n    return this.toggleButtonId;\n  }\n\n  private _notifySiblings() {\n    const toggleId = this.radioToggle ? this.radioToggle.id : this.id;\n    this._toggleDispatcher.notify(this.id, toggleId);\n  }\n\n  private _emitCheckedEvent() {\n    this.onChecked.next(new NxRadioToggleButtonChange(this, this.value));\n  }\n\n  // Does NOT emit the onChecked event. Useful when you need to set initial\n  // state. Used by the parent to set checked states on initialization and during\n  // writeValue() changes.\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._notifySiblings();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  @HostListener('keyup.space')\n  onKeyupSpace(): void {\n    this._selected = false;\n    this._notifySiblings();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxRadioToggleComponent } from './radio-toggle.component';\nimport { FormsModule } from '@angular/forms';\nimport { NxRadioToggleButtonComponent } from './radio-toggle-button.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxRadioToggleComponent, NxRadioToggleButtonComponent ],\n  exports: [ NxRadioToggleComponent, NxRadioToggleButtonComponent ],\n  imports: [ CommonModule, FormsModule, NxIconModule ]\n})\nexport class NxRadioToggleModule { }\n","import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, Renderer2, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nlet nextId = 0;\n\n/**\n  * @deprecated Use `nx-circle-toggle` instead\n  * @deletion-target 8.0.0\n  */\n@Component({\n  selector: 'nx-checkbox-circle',\n  templateUrl: 'checkbox-circle.component.html',\n  styleUrls: ['checkbox-circle.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCheckboxCircleComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.is-checked]': 'checked'\n  }\n})\nexport class NxCheckboxCircleComponent implements ControlValueAccessor {\n\n  private _id: string = (nextId++).toString();\n\n  /**\n   * Id of the checkbox.\n   * If not set, the checkbox gets an incremented value by default.\n   */\n  @Input()\n  public set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n    }\n  }\n  public get id() {\n    return `nx-checkbox-circle-${this._id}`;\n  }\n\n  /** The name of the Checkbox Circle. */\n  @Input()\n  name: string;\n\n  /** An event emitted when the checked value has changed. */\n  @Output()\n  checkedChange = new EventEmitter<boolean>(false);\n\n  /** Whether the checkbox circle is checked. */\n  @Input()\n  checked: boolean;\n\n  /** The name of the icon that is displayed. If not added, no icon will be displayed. */\n  @Input('nxIcon')\n  iconName: string;\n\n  /** If set, the passed SVG will be displayed in the not-checked state. */\n  @Input('nxSvg')\n  svg: string;\n\n  /** If set, the passed SVG will be displayed in the checked state. */\n  @Input('nxSvgChecked')\n  svgChecked: string;\n\n  /** Label to be displayed under circle. */\n  @Input('nxLabel')\n  label: string;\n\n  private onChangeCallback = (checked: boolean) => { };\n\n  private onTouchedCallback = () => { };\n\n  constructor() {\n    console.warn('`nx-checkbox-circle` is deprecated. Use `nx-circle-toggle` instead.');\n  }\n\n  writeValue(value: boolean): void {\n    this.checked = value;\n    this.checkedChange.emit(value);\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n  }\n\n  /** @docs-private */\n  toggle() {\n    this.writeValue(!this.checked);\n    this.onChangeCallback(this.checked);\n  }\n\n  /** @docs-private */\n  get svgButton(): boolean {\n    return !!this.svg && !!this.svgChecked;\n  }\n\n  /** @docs-private */\n  get svgUrl(): string {\n    return this.checked ? this.svgChecked : this.svg;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NxCheckboxCircleComponent} from './checkbox-circle.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxCheckboxCircleComponent ],\n  exports: [ NxCheckboxCircleComponent ],\n  imports: [\n    NxIconModule,\n    CommonModule\n  ]\n})\nexport class NxCheckboxCircleModule { }\n","import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n\n/** Options for sizing of the spinner. */\nexport type SpinnerSize = 'small' | 'medium' | 'large';\n\nconst DEFAULT_SIZE = 'small';\n\n@Component({\n  selector: 'nx-spinner',\n  templateUrl: './spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./spinner.component.scss'],\n  host: {\n    '[class.nx-spinner--small]': 'size === \"small\"',\n    '[class.nx-spinner--medium]': 'size === \"medium\"',\n    '[class.nx-spinner--large]': 'size === \"large\"',\n    '[class.nx-spinner--negative]': 'negative',\n    '[attr.role]': '\"status\"',\n    '[attr.aria-busy]': '\"true\"',\n    '[attr.aria-live]': '\"assertive\"',\n  }\n})\nexport class NxSpinnerComponent {\n  private _size: SpinnerSize = DEFAULT_SIZE;\n\n  /** Sets the size of the spinner. Default is 'small'. */\n  @Input('nxSize')\n  set size(value: SpinnerSize) {\n    if (value !== this._size) {\n      this._size = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get size(): SpinnerSize {\n    return this._size;\n  }\n\n  private _negative: boolean = false;\n\n  /** Whether the spinner should use a negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule  } from '@angular/core';\n\nimport { NxSpinnerComponent } from './spinner.component';\n\n\n@NgModule({\n  declarations: [\n    NxSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NxSpinnerComponent\n  ],\n  bootstrap: [],\n  providers: []\n})\nexport class NxSpinnerModule { }\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** @docs-private */\n@Injectable()\nexport class NxModalService {\n\n  private subject = new Subject();\n  close$: Observable<any> = this.subject.asObservable();\n\n  close() {\n    this.subject.next();\n  }\n}\n","import { animate, animation, AnimationReferenceMetadata, style } from '@angular/animations';\n\nexport const fadeIn: AnimationReferenceMetadata = animation([\n    style({opacity: 0}),\n    animate('300ms', style({opacity: 1}))\n  ]);\n\nexport const fadeOut: AnimationReferenceMetadata = animation(\n  animate('300ms', style({opacity: 0}))\n);\n\nexport const scaleUp: AnimationReferenceMetadata = animation([\n    style({transform: 'scale(1)', opacity: 1}),\n    animate('250ms', style({transform: 'scale(1.3)', opacity: 0}))\n  ]);\n\nexport const scaleDown: AnimationReferenceMetadata = animation([\n    style({transform: 'scale(1.3)', opacity: 0}),\n    animate('250ms', style({transform: 'scale(1)', opacity: 1}))\n  ]);\n","import { OnDestroy, ChangeDetectionStrategy, Directive, ChangeDetectorRef } from '@angular/core';\nimport { Component, Input, OnInit, TemplateRef, Output, EventEmitter } from '@angular/core';\nimport { NxModalService } from './modal.service';\nimport { EventManager } from '@angular/platform-browser';\nimport { fadeIn, fadeOut, scaleDown, scaleUp } from './animations';\nimport { animateChild, query, transition, trigger, useAnimation } from '@angular/animations';\nimport { Subscription } from 'rxjs';\n\n/** Container for the action buttons in a modal. Has a fixed position at the bottom of the modal on scroll. */\n@Directive({\n  selector: '[nxModalActions]',\n  host: {\n    '[class.nx-modal__actions]': 'true'\n  }\n})\nexport class NxModalActionsDirective {}\n\n/** Scrollable container for the content of a modal. */\n@Directive({\n  selector: '[nxModalContent]',\n  host: {\n    '[class.nx-modal__content]': 'true'\n  }\n})\nexport class NxModalContentDirective {}\n\n@Component({\n  selector: 'nx-modal',\n  templateUrl: 'modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './modal.component.scss' ],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        useAnimation(fadeIn),\n        query('@scaleUpDown', [\n          animateChild()\n        ])\n      ]),\n      transition(':leave', [\n        query('@scaleUpDown', [\n          animateChild()\n        ]),\n        useAnimation(fadeOut)\n      ])\n    ]),\n    trigger('scaleUpDown', [\n      transition(':enter', useAnimation(scaleDown)),\n      transition(':leave', useAnimation(scaleUp))\n    ])\n  ],\n  host: {\n    '[@fadeInOut]': '',\n    '[class.nx-modal--fixed-width]': 'size === \"fixed\"'\n  }\n})\n\nexport class NxModalComponent implements OnInit, OnDestroy {\n\n\n  private _closeButtonLabel: string = 'Close dialog';\n\n  /** Sets the 'aria-label' of the modal close button needed for accessibility.\n   *\n   * Default value is 'Close dialog'.\n   */\n  @Input()\n  set closeButtonLabel(value: string) {\n    if (value !== this._closeButtonLabel) {\n      this._closeButtonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closeButtonLabel(): string {\n    return this._closeButtonLabel;\n  }\n\n  /**\n   * A template reference variable pointing to the template\n   * which contains the content of the modal view.\n   */\n  @Input('nxBody') body: TemplateRef<any>;\n\n  /**\n   * Whether the modal view should close when the user hits the escape key.\n   * Default is true.\n   */\n  @Input('nxHideOnEsc') hideOnEsc: boolean = true;\n\n  /**\n   * Whether the modal view should close when the user clicks on the backdrop.\n   * Default is true.\n   */\n  @Input('nxHideOnClickOutside') hideOnClickOutside: boolean = true;\n\n  /**\n   * Whether the modal view should have a close icon in the upper right corner.\n   * Default is true.\n   */\n  @Input('nxShowCloseIcon') showCloseIcon: boolean = true;\n\n  /**\n   * Controls the width of the dialog.\n   * On `auto` the width is controlled by the content width,\n   * on `fixed` the dialog gets a fixed width of 736px if the viewport is big enough. */\n  @Input('nxSize') size: 'fixed' | 'auto';\n\n  /**\n   * An event emitted when the user clicks on the backdrop or uses the built-in close button.\n   * This event can be applied in conjunction with the custom open state handling\n   * of a modal to close it when requested by the user.\n   */\n  @Output('nxClose') closeEvent = new EventEmitter<void>();\n\n  private closeSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private modalService: NxModalService, private eventManager: EventManager, private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.closeSubscription = this.modalService.close$.subscribe(() => this.closeEvent.emit());\n\n    this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {\n      if (this.hideOnEsc) {\n        this.modalService.close();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.closeSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  clickOutsideModal() {\n    if (this.hideOnClickOutside) {\n      this.modalService.close();\n    }\n  }\n\n  /** @docs-private */\n  closeButtonClick() {\n    this.modalService.close();\n  }\n\n  /** @docs-private */\n  cancelClick(evt: KeyboardEvent) {\n    evt.stopPropagation();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\n\nimport { NxModalService } from './modal.service';\n\n\n@Directive({selector: '[nxOpenModalOnClick]'})\nexport class NxOpenModalOnClickDirective implements OnInit, OnDestroy {\n\n  /** @docs-private */\n  elements: Array<any>;\n\n  private subscription: ISubscription;\n\n  constructor(private templateRef: TemplateRef<any>,\n              private viewContainer: ViewContainerRef,\n              private modalService: NxModalService) {\n  }\n\n  ngOnInit() {\n    this.subscription = this.modalService.close$.subscribe(() => this.viewContainer.clear());\n  }\n\n  ngOnDestroy() {\n    this.elements.forEach(el => {\n      if (el.removeEventListener) {\n        el.removeEventListener('click', this.clickHandler);\n      }\n    });\n\n    this.subscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  clickHandler = (event: any) => {\n    this.viewContainer.clear();\n    // instantiate the template onto which this directive is applied\n    const viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n    // we need to mark the viewRef explicitly if the modal is used inside another\n    // component that is using onPush change detection\n    viewRef.markForCheck();\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * One or multiple template reference variables pointing to elements\n   * which should trigger opening the modal on click.\n   *\n   * Value: A single template reference variable or an array of template reference variables.\n   */\n  @Input()\n  set nxOpenModalOnClick(elements) {\n    // also support the case where only one element is passed, check for the length property to be sure elements is an array\n    if (elements.length) {\n      this.elements = elements;\n    } else {\n      this.elements = [ elements ];\n    }\n    // add a click event listener to any element passed as property to this directive\n    this.elements.forEach(el => {\n      if (el.addEventListener) {\n        el.addEventListener('click', this.clickHandler);\n      // workaround until refactoring: if the reference is a component\n      // reference the component has to implement a getter to its own elementRef\n      } else if (el.elementRef) {\n        el.elementRef.nativeElement.addEventListener('click', this.clickHandler);\n      } else {\n        console.warn(`nxOpenModalOnClick: Given Element doesn't appear to be an ElementRef.`, el);\n      }\n    });\n  }\n\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {NxModalComponent, NxModalActionsDirective, NxModalContentDirective} from './modal.component';\nimport { CommonModule } from '@angular/common';\nimport { NxOpenModalOnClickDirective } from './modal-open-on-click.directive';\nimport { NxModalService } from './modal.service';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n@NgModule({\n  imports: [ CommonModule, A11yModule, NxIconModule ],\n  declarations: [\n    NxModalComponent,\n    NxOpenModalOnClickDirective,\n    NxModalActionsDirective,\n    NxModalContentDirective\n  ],\n  exports: [\n    NxModalComponent,\n    NxOpenModalOnClickDirective,\n    NxModalActionsDirective,\n    NxModalContentDirective\n  ],\n})\n\nexport class NxModalModule {\n  // define the modal service on root level as an application wide singleton,\n  // assuming that we only display one modal at a time, which seems quite reasonable\n  // this is static and named \"forRoot\" by convention\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NxModalModule,\n      providers: [NxModalService]\n    };\n  }\n}\n","import { Component, EventEmitter, forwardRef, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nlet nextId = 0;\n/** Options for placement of the label */\nexport type POSITION = 'left' | 'right';\n/** Options for sizing of the label */\nexport type LABEL_SIZE = 'small' | 'large';\n\n@Component({\n  selector: 'nx-switcher',\n  templateUrl: 'switcher.component.html',\n  styleUrls: ['./switcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxSwitcherComponent),\n      multi: true\n    }\n  ],\n  host: {\n    /* the host id should be set to null, otherwise nx-switcher and its <input> get the same id\n    and on label click the input click is not triggered (double id problem) */\n    '[attr.id]': 'null',\n    '[class.is-negative]': 'negative',\n    '[class.is-checked]': 'checked',\n    '[class.is-big]': 'big',\n    '[class.nx-switcher--small-label]': 'labelSize === \"small\"',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-swapped]': 'labelPosition === \"left\"'\n  }\n})\n\nexport class NxSwitcherComponent implements ControlValueAccessor {\n\n  private _id: string = `nx-switcher-${nextId++}`;\n  /** Sets the id of the switcher */\n  @Input()\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  private _labelPosition: POSITION = 'right';\n  /** Specifies the placement of the label */\n  @Input()\n  set labelPosition(value: POSITION) {\n    this._labelPosition = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get labelPosition(): POSITION {\n    return this._labelPosition;\n  }\n\n  private _name: string = null;\n  /** Sets the label text of the switcher */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  private _checked: boolean = false;\n  /** Whether the switcher is checked (on) or unchecked (off) */\n  @Input()\n  set checked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _big: boolean = false;\n  /** Whether the big switcher is used */\n  @Input('nxBig')\n  set big(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._big = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get big(): boolean {\n    return this._big;\n  }\n\n  private _labelSize: LABEL_SIZE = 'large';\n  /** Sets the size of the label */\n  @Input()\n  set labelSize(value: LABEL_SIZE) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get labelSize(): LABEL_SIZE {\n    return this._labelSize;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the style for a dark background is used */\n  @Input('nxNegative')\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._negative = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _disabled: boolean = false;\n  /** Whether the switcher is in the disabled state */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._disabled = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** An event is dispatched each time the switcher value is changed */\n  @Output('checkedChange') checkedChange = new EventEmitter<boolean>();\n\n  private onChangeCallback = (_: any) => {};\n  private onTouchedCallback = () => {};\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** Allows to toggle between the states */\n  toggle() {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this.checkedChange.emit(this.checked);\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxSwitcherComponent } from './switcher.component';\nimport { CommonModule } from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxSwitcherComponent ],\n  exports: [ NxSwitcherComponent ],\n  imports: [ CommonModule, NxIconModule ]\n})\nexport class NxSwitcherModule {}\n","import {Directive, TemplateRef} from '@angular/core';\n\n/**\n * Popover content that will be rendered lazily\n * after the popover is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[nxPopoverContent]'\n})\nexport class NxPopoverContentDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {NxPopoverContentDirective} from './popover-content';\n\n@Component({\n  selector: 'nx-popover',\n  templateUrl: './popover.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./popover.component.scss'],\n  exportAs: 'nxPopover',\n})\nexport class NxPopoverComponent implements OnDestroy {\n  /** @docs-private */\n  @ViewChild(TemplateRef)\n  templateRef: TemplateRef<any>;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(NxPopoverContentDirective) _lazyContent: NxPopoverContentDirective;\n\n  /** Event emitted when the popover is closed. */\n  @Output('nxClosed')\n  closed = new EventEmitter<void>();\n\n  /** @docs-private */\n  closeButtonClick = new Subject<void>();\n\n  /** @docs-private */\n  id: string;\n\n  /** @docs-private */\n  direction;\n\n  /** @docs-private */\n  showCloseButton: boolean = false;\n\n  /** @docs-private */\n  arrowStyle = {};\n\n  constructor() {\n  }\n\n  ngOnDestroy() {\n    this.closed.complete();\n  }\n\n  // emit to notify the popover trigger directive that the close button was clicked\n  /** @docs-private */\n  emitButtonClick() {\n    this.closeButtonClick.next();\n  }\n\n  /** @docs-private */\n  emitClosedEvent() {\n    this.closed.emit();\n  }\n\n  /** @docs-private */\n  get classList(): string[] {\n    if (this.direction) {\n      return [`nx-popover--${this.direction}`];\n    }\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ConnectedPosition,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { NxPopoverComponent } from './popover.component';\n\nexport declare type PopoverDirection = 'left' | 'top' | 'right' | 'bottom';\nexport declare type PopoverTriggerType = 'click' | 'hover' | 'manual';\nexport declare type PopoverTriggerScrollStrategy = 'close' | 'reposition';\nlet nextId = 0;\n\nconst fallbacks: ConnectionPositionPair[] = [\n  {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  },\n  {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center',\n    offsetX: 16,\n    offsetY: 0\n  },\n  {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center',\n    offsetX: -16,\n    offsetY: 0\n  },\n  {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  },\n  {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  }\n];\n\n@Directive({\n  selector: '[nxPopoverTriggerFor]',\n  exportAs: 'nxPopoverTrigger',\n  host: {\n    '(click)': 'handleClick()',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'isOpen',\n    '[attr.aria-describedby]': 'isOpen ? id : null'\n  }\n})\nexport class NxPopoverTriggerDirective implements AfterViewInit, OnDestroy, OnInit {\n  private overlayRef: OverlayRef;\n  private portal: TemplatePortal<any>;\n  private _destroyed = new Subject<void>();\n  private _show: boolean = false;\n  private _closeable: boolean = null;\n  private _positionStrategy: PositionStrategy;\n  private _embeddedViewRef: EmbeddedViewRef<any>;\n  private _documentClickObservable: Observable<MouseEvent>;\n\n  /** @docs-private */\n  id = 'nx-popover-' + nextId++;\n\n  /** An event is emitted if the visibility status of the popover changes. */\n  @Output('nxPopoverShowChange')\n  changeShow: EventEmitter<boolean> = new EventEmitter();\n\n  /** Whether to show or hide the popover. */\n  @Input('nxPopoverShow')\n  set show(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (this._show !== value) {\n      this._show = value;\n      if (this._show) {\n        this.openPopover();\n      } else {\n        this.closePopover();\n      }\n\n      this.changeShow.emit(this._show);\n    }\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  /** Whether to show a close button. By default a close icon is only shown for trigger type click. */\n  @Input('nxPopoverCloseable')\n  set closeable(value: boolean) {\n    this._closeable = coerceBooleanProperty(value);\n\n    if (this.popover) {\n      this.popover.showCloseButton = this.isCloseable();\n    }\n  }\n  get closeable(): boolean {\n    return this._closeable;\n  }\n\n  /** Links the trigger with the popover to open. */\n  @Input('nxPopoverTriggerFor')\n  popover: NxPopoverComponent;\n\n  /** Sets the desired direction to open the popover. E.g., right, left, bottom, top */\n  @Input('nxPopoverDirection')\n  direction: PopoverDirection = 'right';\n\n  /** Whether the popover will be opened automatically. */\n  @Input('nxPopoverInitialVisible')\n  popoverInitialVisible: boolean = false;\n\n  /** An event is emitted when the visibility of the popopver changes. */\n  @Input('nxPopoverVisibleChange')\n  visibleChange: EventEmitter<boolean> = new EventEmitter();\n\n  /** Whether the popover opens in modal state. */\n  @Input('nxPopoverModal')\n  modal: boolean = false;\n\n  // If nxPopoverTrigger equals to 'hover' the popover opens on mouseenter and closes on mouseout.\n  // If nxPopoverTrigger equals to 'click' the popover opens on click and closes on a click of the close icon or pressing ESC key.\n  // If nxPopoverTrigger equals to 'manual' the popover opens only when programatically requested.\n  /** Sets the way to trigger the popover. Options are hover, click, manual */\n  @Input('nxPopoverTrigger')\n  trigger: PopoverTriggerType = 'click';\n\n  /** Sets the scroll strategy. 'close' closes the popover on scroll while 'reposition' scrolls the popover with the origin. */\n  @Input('nxPopoverScrollStrategy')\n  scrollStrategy: PopoverTriggerScrollStrategy = 'close';\n\n\n\n  constructor(private overlay: Overlay,\n              private elementRef: ElementRef,\n              private viewContainerRef: ViewContainerRef,\n              private eventManager: EventManager) {\n    this._documentClickObservable = fromEvent<MouseEvent>(document, 'click');\n  }\n\n  /** @docs-private */\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    if (this.trigger === 'hover') {\n      this.openPopover();\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('mouseleave')\n  @HostListener('touchstart')\n  onMouseExit() {\n    if (this.trigger === 'hover') {\n      this.closePopover();\n    }\n  }\n\n  ngOnInit() {\n    this.popover.showCloseButton = this.isCloseable();\n  }\n\n  ngAfterViewInit(): void {\n    this.popover.id = this.id;\n\n    this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {\n      this.closePopover();\n    });\n\n    this.popover.closeButtonClick.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this.closePopover();\n    });\n\n    if (this.popoverInitialVisible || this._show) {\n      this.openPopover();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.closePopover();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** @docs-private */\n  get isOpen() {\n    return this.overlayRef && this.createOverlay().hasAttached();\n  }\n\n  /** @docs-private */\n  isCloseable() {\n    return (this.trigger === 'click' && this._closeable === null) || this._closeable;\n  }\n\n  /** Update the popover with the given position strategy. */\n  updatePosition() {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n\n  /** @docs-private */\n  handleClick() {\n    if (this.trigger === 'click') {\n      if (this.isOpen) {\n        this.closePopover();\n      } else {\n        this.openPopover();\n      }\n    }\n  }\n\n  /** Open the popover instance. */\n  open(): void {\n    this.show = true;\n  }\n\n  /** Close the popover instance. */\n  close(): void {\n    this.show = false;\n  }\n\n  /** Toggle the popover instance. */\n  toggle(): void {\n    this.show = !this.show;\n  }\n\n  private openPopover(): void {\n    if (!this.createOverlay().hasAttached()) {\n      this._embeddedViewRef = this.createOverlay().attach(this.portal);\n\n      if (!this.modal && this.trigger === 'click') {\n        this.waitForClose();\n      }\n    }\n  }\n\n  // detaches the overlay\n  // we are listening to the detachments observable which will then emit the nxClosed event\n  // on the popover component\n  private closePopover(): void {\n    if (this.overlayRef) {\n      this.overlayRef.detach();\n      this._embeddedViewRef = null;\n    }\n  }\n\n  private createOverlay(): OverlayRef {\n    if (!this.overlayRef) {\n      this.portal = new TemplatePortal(this.popover.templateRef, this.viewContainerRef);\n      const overlayState = new OverlayConfig();\n      overlayState.positionStrategy = this.getPosition();\n      this._positionStrategy = overlayState.positionStrategy;\n\n      if (this.scrollStrategy === 'reposition') {\n        overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n      } else {\n        overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n      }\n\n      overlayState.scrollStrategy.enable();\n\n      if (this.modal && this.trigger === 'click') {\n        overlayState.hasBackdrop = true;\n      }\n\n      this.overlayRef = this.overlay.create(overlayState);\n      this.subscribeToPositions(overlayState.positionStrategy as FlexibleConnectedPositionStrategy);\n      this._subscribeToDetach();\n      if (this.modal) {\n        this._subscribeToBackdropClick();\n      }\n    }\n    return this.overlayRef;\n  }\n\n  private subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n    position.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      const pair = change.connectionPair;\n      this.positionOverlay(pair);\n      this.positionArrow(pair);\n\n      // These position changes arrive too late,\n      // We have to trigger the change detection manually\n      // as it's detached from any render hierarchy\n      // and only updated by the overlay when attached.\n      if (this._embeddedViewRef && !this._embeddedViewRef.destroyed) {\n        this._embeddedViewRef.detectChanges();\n      }\n    });\n  }\n\n  // for modal popovers close the popover on backdrop clicks\n  private _subscribeToBackdropClick() {\n    this.overlayRef.backdropClick().pipe(takeUntil(this._destroyed)).subscribe((event) => {\n      this.closePopover();\n    });\n  }\n\n  // Emit the nxClosed event on the popover component when the overlay detaches\n  private _subscribeToDetach() {\n    this.overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this.popover.emitClosedEvent();\n    });\n  }\n\n  // subscribe to document clicks when trigger='click' to close the popover on clicks on the background\n  private waitForClose() {\n    return this._documentClickObservable\n      .pipe(\n        map(event => event.target),\n        filter(target => !this.elementRef.nativeElement.contains(target)),\n        takeUntil(this.popover.closed))\n      .subscribe(() => {\n        this.closePopover();\n      });\n  }\n\n  private positionOverlay(pair: ConnectionPositionPair) {\n    if (pair.originX === 'end' && pair.overlayX === 'start') {\n      this.popover.direction = 'right';\n    } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n      this.popover.direction = 'bottom';\n    } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n      this.popover.direction = 'left';\n    } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n      this.popover.direction = 'top';\n    }\n  }\n\n  private positionArrow(pair: ConnectionPositionPair) {\n\n    const parentElementPositionX = this.elementRef.nativeElement.getBoundingClientRect().left;\n    const parentElementWidth = this.elementRef.nativeElement.getBoundingClientRect().width / 2;\n    const parentElementLeftOffset = this.overlayRef.overlayElement.parentElement.offsetLeft;\n    const overlayElementLeftOffset = this.overlayRef.overlayElement.offsetLeft;\n\n    // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n    const targetPosition = (parentElementPositionX + parentElementWidth) - (parentElementLeftOffset + overlayElementLeftOffset);\n    if (pair.originX === pair.overlayX) {\n      const direction = 'left';\n      const arrowStyle = {};\n\n      arrowStyle[direction] = targetPosition + 'px';\n      this.popover.arrowStyle = arrowStyle;\n    }\n    if ((pair.originY === 'bottom' || pair.originY === 'top') && pair.overlayX === 'center') {\n      this.popover.arrowStyle = { left: targetPosition + 'px' };\n    }\n\n    if ((pair.originX === 'end' || pair.originX === 'start') && pair.overlayY === 'center') {\n      this.popover.arrowStyle = { top: '50%' };\n    }\n  }\n\n  private getPosition(): FlexibleConnectedPositionStrategy {\n    let positions: ConnectedPosition[];\n    let offsetX = 0;\n    let offsetY = 0;\n    if (this.direction === 'top') {\n      positions = [{\n        overlayX: 'center',\n        overlayY: 'bottom',\n        originX: 'center',\n        originY: 'top'\n      }];\n      offsetX = 0;\n      offsetY = -20;\n    } else if (this.direction === 'right') {\n      positions = [{\n        overlayX: 'start',\n        overlayY: 'center',\n        originX: 'end',\n        originY: 'center'\n      }];\n      offsetX = 20;\n      offsetY = 0;\n    } else if (this.direction === 'bottom') {\n      positions = [{\n        overlayX: 'center',\n        overlayY: 'top',\n        originX: 'center',\n        originY: 'bottom'\n      }];\n      offsetX = 0;\n      offsetY = 20;\n    } else if (this.direction === 'left') {\n      positions = [{\n        overlayX: 'end',\n        overlayY: 'center',\n        originX: 'start',\n        originY: 'center'\n      }];\n      offsetX = -20;\n      offsetY = 0;\n    }\n    return this.overlay.position().flexibleConnectedTo(this.elementRef)\n      .withPositions([...positions, ...fallbacks])\n      .withDefaultOffsetX(offsetX)\n      .withDefaultOffsetY(offsetY);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxPopoverTriggerDirective} from './popover-trigger.directive';\nimport {NxPopoverComponent} from './popover.component';\nimport {NxPopoverContentDirective} from './popover-content';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NxIconModule} from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxPopoverTriggerDirective,\n    NxPopoverComponent,\n    NxPopoverContentDirective\n  ],\n  exports: [\n    NxPopoverTriggerDirective,\n    NxPopoverComponent,\n    NxPopoverContentDirective\n  ]\n})\nexport class NxPopoverModule {\n\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DELETE, BACKSPACE } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'nx-tag',\n  templateUrl: 'tag.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['tag.component.scss'],\n  host: {\n    '(click)': 'tagClickHandler()',\n    '(keydown)': 'removeKeyHandler($event)',\n    '[attr.tabIndex]': '0'\n  }\n})\nexport class NxTagComponent {\n  private _removable: boolean;\n\n  /** Whether the tag is removeable. */\n  @Input()\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get removable() {\n    return this._removable;\n  }\n\n  private _value: string;\n  /** Sets the value of the tag. */\n  @Input()\n  set value(value: string) {\n    if (this._value !== value) {\n      this._value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get value(): string {\n    return this._value;\n  }\n\n  /** An event is dispatched each time when the tag is clicked. */\n  @Output() readonly clicked: EventEmitter<any> = new EventEmitter<any>();\n  /** An event is dispatched each time when the tag is removed. */\n  @Output() readonly removed: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  // Emit the removed event that the parent can remove the value\n  removeClickHandler(event: MouseEvent) {\n    event.stopPropagation();\n    this.removed.emit(this.value);\n  }\n\n  /** @docs-private */\n  removeKeyHandler(event: KeyboardEvent) {\n    if (this.removable && (event.keyCode === DELETE || event.keyCode === BACKSPACE)) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.removed.emit(this.value);\n    }\n  }\n\n  /** @docs-private */\n  tagClickHandler() {\n    this.clicked.emit(this.value);\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, EventEmitter, forwardRef, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'nx-taglist',\n  templateUrl: 'taglist.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './taglist.component.scss' ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxTaglistComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-taglist--keyword]': 'isKeywordList',\n    '[attr.aria-labelledby]': 'labelledby || null'\n  }\n})\n\nexport class NxTaglistComponent implements ControlValueAccessor {\n\n  /** An event is dispatched each time when the list of tags changed. */\n  @Output('nxTagsChange') tagsChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  /** An event is dispatched each time when a tag is clicked. */\n  @Output('nxTagClick') tagClickEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  private _tags: Array<any> = [];\n  /** Sets the list of tags. */\n  @Input('nxTags')\n  set tags(value: Array<any>) {\n    this._tags = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get tags(): Array<any> {\n    return this._tags;\n  }\n\n  private _allowTagDeletion: boolean = true;\n  /** Whether the tags can be removed from the list. */\n  @Input('nxAllowTagDeletion')\n  set allowTagDeletion(value: boolean) {\n    this._allowTagDeletion = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get allowTagDeletion(): boolean {\n    return this._allowTagDeletion;\n  }\n\n  private _isKeywordList: boolean = false;\n  /** Whether the tags can be styled as keywords. */\n  @Input('nxIsKeywordList')\n  set isKeywordList(value: boolean) {\n    this._isKeywordList = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get isKeywordList(): boolean {\n    return this._isKeywordList;\n  }\n\n  private _labelProperty: string = 'nxTaglistLabel';\n    /** Sets the label property, in case tags represent objects. */\n  @Input('nxLabelProperty')\n  set labelProp(value: string) {\n    if (this._labelProperty !== value) {\n      this._labelProperty = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelProp(): string {\n    return this._labelProperty;\n  }\n\n  private _ariaLabelledBy: string;\n  /** Sets the label property to improve accessibility. */\n  @Input('aria-labelledby')\n  set labelledby(value: string) {\n    if (this._ariaLabelledBy !== value) {\n      this._ariaLabelledBy = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelledby(): string {\n    return this._ariaLabelledBy;\n  }\n\n  private _valueFormatterFn: (value: any) => string = (value) => value;\n  /** Sets the customization function for tag value.  */\n  @Input('nxValueFormatter')\n  set valueFormatter(fn: (value: any) => string) {\n    this._valueFormatterFn = fn;\n    this._changeDetectorRef.markForCheck();\n  }\n  get valueFormatter(): (value: any) => string {\n    return this._valueFormatterFn;\n  }\n\n  private _onChange: (value: any) => void = () => {};\n  private _onTouched: () => any = () => {};\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** Allows to delete a tag given index. Takes index of the tag to be deleted as a parameter */\n  delete(index: number, value: any) {\n    if (this.allowTagDeletion) {\n      this.tags = [\n        ...this.tags.slice(0, index),\n        ...this.tags.slice(index + 1)\n      ];\n      this._onChange(this.tags);\n      this.tagsChange.emit(this.tags);\n    }\n  }\n\n  /** Allows to add a tag. Takes tag object as an input */\n  addTag(tag: any) {\n    if (!tag) {\n      return;\n    }\n\n    // make sure tag is either string or has the configured label prop and is not yet in the list\n    if ((typeof tag === 'string' && this.tags.indexOf(tag) === -1) ||\n      (tag[ this.labelProp ] && this.tags.filter((t) => t[ this.labelProp ] === tag[ this.labelProp ]).length < 1)) {\n\n      this.tags = [ ...this.tags, tag ];\n      this._onChange(this.tags);\n      this.tagsChange.emit(this.tags);\n    }\n  }\n\n  /** Allows to clear the tag list. */\n  clearTags() {\n    this.tags = [];\n    this._onChange(this.tags);\n    this.tagsChange.emit(this.tags);\n  }\n\n  /** @docs-private */\n  writeValue(tags: any): void {\n    this.tags = tags;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** @docs-private */\n  renderTag(tag: any) {\n    const tagStr: string = typeof tag === 'string' ? tag : tag[ this.labelProp ];\n    return this.valueFormatter(tagStr);\n  }\n\n  /** @docs-private */\n  tagClick(index, value: any) {\n    this.tagClickEvent.emit(this.tags[index]);\n  }\n}\n","import { NxTagComponent } from './tag.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NgModule } from '@angular/core';\nimport { NxTaglistComponent } from './taglist.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ NxTaglistComponent, NxTagComponent ],\n  exports: [ NxTaglistComponent, NxTagComponent ],\n  imports: [ CommonModule, NxIconModule ]\n})\nexport class NxTaglistModule {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'img[nxImg]'\n})\nexport class NxImageDirective {\n  constructor() {\n    console.warn('Directive nxImg which was used together with nxFigure ' +\n    'is now deprecated and not required anymore. Please remove it from your ' +\n    'tag. Check the documentation for more details.');\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/** Types of figures. */\nexport type FigureType = 'auto' | '1by1' | '1dot8by1' | '1dot2by1' | '1by1dot1' | '2dot6by1' | 'rounded';\n/** @docs-private */\nexport type figureSizes = 'auto' | '1by1' | '1dot8by1' | '1dot2by1' | '1by1dot1' | '2dot6by1';\n\nconst DEFAULT_SIZE = 'auto';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'figure[nxFigure]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./figure.component.scss'],\n  host: {\n    '[class.nx-image--auto]': 'size === \"auto\" && !rounded',\n    '[class.nx-image--1by1]': 'size === \"1by1\"',\n    '[class.nx-image--1dot8by1]': 'size === \"1dot8by1\"',\n    '[class.nx-image--1dot2by1]': 'size === \"1dot2by1\"',\n    '[class.nx-image--1by1dot1]': 'size === \"1by1dot1\"',\n    '[class.nx-image--2dot6by1]': 'size === \"2dot6by1\"',\n    '[class.nx-image--rounded]': 'rounded'\n  }\n})\nexport class NxFigureComponent {\n  private _classNames: FigureType;\n\n  /** @docs-private */\n  rounded: boolean;\n\n  /** @docs-private */\n  size: figureSizes;\n\n  /**\n   * Sets the type of the visual appearance of the image.\n   * The default value  is 'auto'.\n   */\n  @Input('nxFigure')\n  set classNames(value: FigureType) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n    const sizeRegex = /^(auto|1by1|1dot8by1|1dot2by1|1by1dot1|2dot6by1)$/;\n    const [size = null] = this._classNames.match(sizeRegex) || [DEFAULT_SIZE];\n    this.size = size as any;\n\n    this.rounded = !!this._classNames.match(/rounded/);\n  }\n\n  get classNames(): FigureType {\n    return this._classNames;\n  }\n}\n","import { NxImageDirective } from './image.directive';\nimport { NgModule } from '@angular/core';\nimport { NxFigureComponent } from './figure.component';\n\n@NgModule({\n  declarations: [ NxFigureComponent, NxImageDirective ],\n  exports: [ NxFigureComponent, NxImageDirective ]\n})\nexport class NxImageModule {\n}\n","import {NxRadioCircleComponent} from './radio-circle.component';\nimport {ElementRef, Input, OnChanges, ViewChild} from '@angular/core';\n\nlet nextId = 0;\n\nexport abstract class NxRadioCircleButton implements OnChanges {\n\n  /** @docs-private */\n  id: number = ++nextId;\n\n  /** Sets the label displayed below the circle. */\n  @Input('nxLabel')\n  label: string;\n\n  /** Sets an additional hint displayed below the label. */\n  @Input('nxHint')\n  hint: string;\n\n  /** Sets the value used in the model. */\n  @Input('nxValue')\n  value: any;\n\n  /** @docs-private */\n  @ViewChild('labelElement')\n  labelElement: ElementRef;\n\n  constructor(\n    /** @docs-private */\n    protected radioCircle: NxRadioCircleComponent\n    ) {\n  }\n\n  ngOnChanges(): void {\n    if (!this.label) {\n      console.warn(`nx-radio-circle-icon-button/nx-radio-circle-svg-button: required field 'nxLabel' is not set`);\n    }\n  }\n\n  get checked(): boolean {\n    return this.radioCircle.selectedButton === this || null;\n  }\n\n  /** Whether the item is preselected. */\n  @Input('nxSelected')\n  set checked(checked: boolean) {\n    if (checked) {\n      this.radioCircle.selectedButton = this;\n    } else {\n      if (this.checked) {\n        this.radioCircle.selectedButton = null;\n      }\n    }\n  }\n\n  /** @docs-private */\n  get circleButtonId(): string {\n    return this.radioCircle.radioCircleId + '-' + this.id;\n  }\n\n  /** @docs-private */\n  get radioCircleId(): string {\n    return this.radioCircle.radioCircleId;\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input, OnInit,\n  Output,\n  QueryList,\n  Renderer2\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NxRadioCircleButton} from './radio-circle-button';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nlet nextId = 0;\n\n/**\n * @deprecated Use `nx-circle-toggle-group` instead\n * @deletion-target 8.0.0\n */\n@Component({\n  selector: 'nx-radio-circle',\n  templateUrl: './radio-circle.html',\n  styleUrls: ['./radio-circle-button.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRadioCircleComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.is-responsive]': 'responsive',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n  }\n})\nexport class NxRadioCircleComponent implements ControlValueAccessor, AfterContentInit {\n\n  private _id = nextId++;\n\n  @ContentChildren(NxRadioCircleButton)\n  private _buttons: QueryList<NxRadioCircleButton>;\n\n  private _selectedButton: NxRadioCircleButton;\n\n  private _responsive: boolean = true;\n\n  /** An event emitted when the selection changes. */\n  @Output('nxValueChange')\n  valueChange: EventEmitter<any> = new EventEmitter();\n\n  /** Sets the name of the radio circle, which is used for accessibility. */\n  @Input('nxName')\n  name: string;\n\n  /** Whether the radio circle is disabled. */\n  @Input('disabled')\n  public disabled = false;\n\n  /**\n   * Whether the toggle behavior is disabled.\n   *\n   * @deprecated Use `nxResponsive` instead\n   * @deletion-target 7.0.0\n   */\n  @Input('nxResponsiveToggle')\n  set responsiveToggle(value: boolean) {\n    console.warn('`nxResponsiveToggle` is deprecated. Use `nxResponsive` instead.');\n    this.responsive = value;\n  }\n\n  /**\n   * Whether the radio circle should have a responsive behavior.\n   *\n   * On false the circles will stay even on mobile viewports.\n   * Default: true.\n   */\n  @Input('nxResponsive')\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.responsive) {\n      this._responsive = newValue;\n    }\n  }\n\n  get responsive(): boolean {\n    return this._responsive;\n  }\n\n  constructor(private renderer: Renderer2) {\n    console.warn('`nx-radio-circle` is deprecated. Use `nx-circle-toggle-group` instead.');\n  }\n\n  /** Sets the value of the radio circle. */\n  @Input('nxValue')\n  set value(value: any) {\n    this.writeValue(value);\n  }\n\n  get value(): any {\n    return this._selectedButton ? this._selectedButton.value : null;\n  }\n\n  /**\n   * @docs-private\n   * @deprecated Use `responsive` getter\n   * @deletion-target 7.0.0\n   */\n  getResposiveToggle(): any {\n    console.warn('The method `getResponsiveToggle is deprecated. Use the `responsive` getter instead');\n    return this._responsive;\n  }\n\n  private onTouchedCallback = (option: any) => {\n  }\n\n  private onChangeCallback = (option: any) => {\n  }\n\n  /** The id of the radio circle. */\n  get radioCircleId(): string {\n    return `radio-circle-${this._id}`;\n  }\n\n  ngAfterContentInit(): void {\n    this.renderer.addClass(this._buttons.first.labelElement.nativeElement, `nx-radio-circle__label--first`);\n    this.renderer.addClass(this._buttons.last.labelElement.nativeElement, `nx-radio-circle__label--last`);\n  }\n\n  writeValue(value: any): void {\n    if (this._buttons) {\n      this._selectedButton = this._buttons.find((button) => button.value === value);\n    }\n  }\n\n  registerOnChange(callback: any): void {\n    this.onChangeCallback = callback;\n  }\n\n  registerOnTouched(callback: any): void {\n    this.onTouchedCallback = callback;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  set selectedButton(button: NxRadioCircleButton) {\n    if (this.disabled) {\n      return;\n    }\n    this._selectedButton = button;\n    this.onChangeCallback(this.value);\n    this.valueChange.emit(this.value);\n  }\n\n  /** @docs-private */\n  get selectedButton(): NxRadioCircleButton {\n    return this._selectedButton;\n  }\n\n  /** @docs-private */\n  get buttons(): QueryList<NxRadioCircleButton> {\n    return this._buttons;\n  }\n}\n\n","import {Component, forwardRef, Inject, Input} from '@angular/core';\nimport {NxRadioCircleButton} from '../radio-circle-button';\nimport {NxRadioCircleComponent} from '../radio-circle.component';\n\n/**\n * @deprecated Use `nx-circle-toggle` instead\n * @deletion-target 8.0.0\n */\n@Component({\n  selector: 'nx-radio-circle-icon-button',\n  templateUrl: './radio-circle-icon-button.html',\n  styleUrls: ['../radio-circle-button.scss'],\n  providers: [\n    {\n      provide: NxRadioCircleButton, useExisting: forwardRef(() => NxRadioCircleIconButtonComponent)\n    }\n  ],\n  host: {\n    '[class.is-disabled]': 'radioCircle.disabled',\n    '[attr.aria-disabled]': 'radioCircle.disabled'\n  }\n})\nexport class NxRadioCircleIconButtonComponent extends NxRadioCircleButton {\n\n  /** Sets the id of the icon to display. */\n  @Input('nxIcon')\n  icon: string;\n\n  constructor(\n      /** @docs-private */\n      @Inject(forwardRef(() => NxRadioCircleComponent)) public radioCircle: NxRadioCircleComponent\n    ) {\n    super(radioCircle);\n    console.warn('`nx-radio-circle-icon-button` is deprecated. Use `nx-circle-toggle` instead.');\n  }\n}\n","import { AfterViewInit, Component, forwardRef, Inject, Input, HostListener, HostBinding } from '@angular/core';\nimport { NxRadioCircleButton } from '../radio-circle-button';\nimport { NxRadioCircleComponent } from '../radio-circle.component';\n\n/**\n * @deprecated Use `nx-circle-toggle` instead\n * @deletion-target 8.0.0\n */\n@Component({\n  selector: 'nx-radio-circle-svg-button',\n  templateUrl: './radio-circle-svg-button.html',\n  styleUrls: ['../radio-circle-button.scss'],\n  providers: [\n    {\n      provide: NxRadioCircleButton, useExisting: forwardRef(() => NxRadioCircleSvgButtonComponent)\n    }\n  ]\n})\nexport class NxRadioCircleSvgButtonComponent extends NxRadioCircleButton implements AfterViewInit {\n\n  /** Sets the SVG used for the not-checked state. */\n  @Input('nxSvg')\n  svg: string;\n\n  /** Sets the SVG used for the checked state. */\n  @Input('nxSvgChecked')\n  svgChecked: string;\n  private _hover: boolean = false;\n\n  /** @docs-private */\n  @HostListener('mouseenter') onMouseEnter() {\n    this._hover = true;\n  }\n\n  /** @docs-private */\n  @HostListener('mouseleave') onMouseLeave() {\n    this._hover = false;\n  }\n\n  constructor(@Inject(forwardRef(() => NxRadioCircleComponent)) radioCircle: NxRadioCircleComponent) {\n    super(radioCircle);\n    console.warn('`nx-radio-circle-svg-button` is deprecated. Use `nx-circle-toggle` instead.');\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.svg) {\n      console.warn(`nx-radio-circle-svg-button: required field 'nxSvg' is not set`);\n    }\n\n    if (!this.svgChecked) {\n      console.warn(`nx-radio-circle-svg-button: required field 'nxSvgChecked' is not set`);\n    }\n  }\n\n  /** @docs-private */\n  get svgUrl(): string {\n    return (this.checked || this._hover) ? this.svgChecked : this.svg;\n  }\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NgModule} from '@angular/core';\nimport {NxRadioCircleComponent} from './radio-circle.component';\nimport {NxRadioCircleIconButtonComponent} from './icon-button/radio-circle-icon-button.component';\nimport {NxRadioCircleSvgButtonComponent} from './svg-button/radio-circle-svg-button.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxRadioCircleComponent, NxRadioCircleIconButtonComponent, NxRadioCircleSvgButtonComponent ],\n  exports: [ NxRadioCircleComponent, NxRadioCircleIconButtonComponent, NxRadioCircleSvgButtonComponent ],\n  imports: [\n    CommonModule,\n    NxIconModule\n  ]\n})\nexport class NxRadioCircleModule { }\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'nx-video',\n  templateUrl: 'video.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './video.component.scss' ],\n})\n\n// note that this currently only supports youtube videos\nexport class NxVideoComponent {\n\n  private _videoId: string = null;\n\n  /** Sets the id of the YouTube video. */\n  @Input('nxVideoId')\n  set videoId(value: string) {\n    if (this._videoId !== value) {\n      this._videoId = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get videoId(): string {\n    return this._videoId;\n  }\n\n  private _altText: string = '';\n\n  /** Sets the value of the alt attribute for the preview image. */\n  @Input('nxAltText')\n  set altText(value: string) {\n    if (this._altText !== value) {\n      this._altText = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get altText(): string {\n    return this._altText;\n  }\n\n  private _playButtonAriaLabel: string = '';\n\n  /** Sets the value of the aria-label attribute on the play button (Default: Play Video). */\n  @Input('nxPlayButtonAriaLabel')\n  set nxPlayButtonAriaLabel(value: string) {\n    if (this._playButtonAriaLabel !== value) {\n      this._playButtonAriaLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get nxPlayButtonAriaLabel(): string {\n    return this._playButtonAriaLabel;\n  }\n\n  private _previewImageSrc: string = null;\n\n  /** Sets the preview image. If this is not provided, an image from YouTube will be used as default. */\n  @Input('nxPreviewImageSrc')\n  set previewImageSrc(value: string) {\n    if (this._previewImageSrc !== value) {\n      this._previewImageSrc = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get previewImageSrc(): string {\n    return this._previewImageSrc;\n  }\n\n  private _showPlayerControls: boolean = true;\n\n  /** Sets player controls. If set to false, player controls are not available. */\n  @Input('nxShowPlayerControls')\n  set showPlayerControls(value: boolean) {\n    this._showPlayerControls = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showPlayerControls(): boolean {\n    return this._showPlayerControls;\n  }\n\n  private _allowFullScreen: boolean = true;\n\n  /** Sets fullscreen option. If set to false, fullscreen option is not available. */\n  @Input('nxAllowFullScreen')\n  set allowFullScreen(value: boolean) {\n    this._allowFullScreen = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get allowFullScreen(): boolean {\n    return this._allowFullScreen;\n  }\n\n  private _interfaceLanguage: string = null;\n\n  /** Sets interface language. Can be used to override the interface language determined by YouTube. */\n  @Input('nxInterfaceLanguage')\n  set interfaceLanguage(value: string) {\n    if (this._interfaceLanguage !== value) {\n      this._interfaceLanguage = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get interfaceLanguage(): string {\n    return this._interfaceLanguage;\n  }\n\n  /** @docs-private */\n  showPlayer = false;\n\n  constructor(private sanitizer: DomSanitizer, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  select(): void {\n    this.showPlayer = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n   /** Returns the safe resource URL of the YouTube video, given video id.  */\n  get videoSrc(): SafeResourceUrl {\n    let url = `https://www.youtube.com/embed/${this.videoId}?rel=0&showinfo=0&autoplay=1`;\n    if (!this.showPlayerControls) {\n      url += '&controls=0';\n    }\n    if (!this.allowFullScreen) {\n      url += '&fs=0';\n    }\n    if (this.interfaceLanguage) {\n      url += `&hl=${this.interfaceLanguage}`;\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  /** Returns the preview image source URL, given video id. */\n  get imgSrc() {\n    return this.previewImageSrc ? this.previewImageSrc : `https://img.youtube.com/vi/${this.videoId}/sddefault.jpg`;\n  }\n\n  /** Returns the labels for the control buttons. */\n  get playButtonAriaLabel() {\n    const defaultLabel = this.altText ? `${this.altText} - Play Video` : 'Play Video';\n    return this.nxPlayButtonAriaLabel ? this.nxPlayButtonAriaLabel : defaultLabel;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxVideoComponent } from './video.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ NxVideoComponent ],\n  exports: [ NxVideoComponent ],\n  imports: [ CommonModule ]\n})\nexport class NxVideoModule {}\n","\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getNxDropdownDynamicMultipleError(): Error {\n  return Error('Cannot change `multiselect` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiselect` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getNxDropdownNonArrayValueError(): Error {\n  return Error('Value must be an array in multiselect mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getNxDropdownNonFunctionValueError(): Error {\n  return Error('`compareWith` must be a function.');\n}\n","import { NxFormfieldControl } from '@allianz/ngx-ndbx/formfield';\nimport { Input } from '@angular/core';\n\nexport abstract class NxDropdownControl extends NxFormfieldControl<any> {\n  /**\n   * Whether the dropdown should allow multi selection and additional checkboxes are shown.\n   *\n   * Note: Please make sure the value you bind is an array. If not an error is thrown! */\n  @Input('nxIsMultiselect') isMultiSelect: boolean = false;\n\n  /** @docs-private */\n  abstract formatValue?(value): string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nx-dropdown-group',\n  templateUrl: 'dropdown-group.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['dropdown-group.scss']\n})\nexport class NxDropdownGroupComponent {\n  /** Label displayed in the group. */\n  @Input('nxLabel') label: string;\n}\n","import { Highlightable } from '@angular/cdk/a11y';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxDropdownComponent } from '../dropdown';\nimport { NxDropdownControl } from '../dropdown.control';\nimport { NxDropdownGroupComponent } from './../group/dropdown-group';\n\n\nexport class NxDropdownItemChange {\n\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public item: NxDropdownItemComponent,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/** the unique id counter */\nlet nextId = 0;\n\n\n@Component({\n  selector: 'nx-dropdown-item',\n  templateUrl: 'dropdown-item.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [\n    'dropdown-item.scss'\n  ],\n  host: {\n    '[id]': 'id',\n    'role': 'option',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[class.nx-hidden]': '_hidden',\n    '[class.nx-dropdown-item--active]': 'active',\n    '[class.nx-selected]': 'selected',\n    '[class.nx-multiselect]': 'multiselect',\n    '(click)': '_onClick($event)'\n  }\n})\nexport class NxDropdownItemComponent implements Highlightable, OnDestroy, AfterViewChecked {\n  _hidden = false;\n\n  private _mostRecentViewValue = '';\n\n  private _id = `nx-dropdown-item-${nextId++}`;\n\n  /**\n   * The value of the dropdown item.\n   * You can't use undefined, null and '' (empty strings)\n   * as they are sentinel values signalling empty data.\n   */\n  @Input('nxValue') value;\n\n  /** The unique ID of the option. */\n  get id(): string { return this._id; }\n\n  private _selected: boolean = false;\n\n  /** Whether the item is selected. */\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _active: boolean;\n\n  /** Whether the item is active. */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * @docs-private\n   * Whether the parent dropdown is in multiselect mode.\n   */\n  get multiselect(): boolean {\n    return this._dropdown && this._dropdown.isMultiSelect;\n  }\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<NxDropdownItemChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * @docs-private\n   * The wrapping div in the template. Used by dropdown to use the container height for scrolling.\n   */\n  @ViewChild('container') containerElement;\n\n  constructor(\n    @Inject(NxDropdownControl) private _dropdown: NxDropdownControl,\n    /** @docs-private */\n    @Optional() readonly group: NxDropdownGroupComponent,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef) {\n    (this._dropdown as NxDropdownComponent).filterChanges.pipe(takeUntil(this._destroy)).subscribe((value) => {\n      this._showOrHideByFilter(value);\n    });\n    // reset the hidden state when dropdown closes that on next open the user is seeing the full list again\n    (this._dropdown as NxDropdownComponent)._closedStream.pipe(takeUntil(this._destroy)).subscribe(() => {\n      this._hidden = false;\n    });\n  }\n\n  ngAfterViewChecked() {\n    // Since the parent dropdown component could be using the item's label to display the selected values\n    // and it doesn't have a way of knowing if the item's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  _onClick(event) {\n    /* preventDefault to stop triggering the event twice when you click on the checkbox or the label inside the item */\n    event.preventDefault();\n    event.stopPropagation();\n    this._selectViaInteraction();\n  }\n\n  /**\n  * `Selects the option while indicating the selection came from the user. Used to\n  * determine if the select's view -> model callback should be invoked.`\n  */\n  _selectViaInteraction(): void {\n    this._selected = this.multiselect ? !this._selected : true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent(true);\n  }\n\n  /** @docs-private */\n  show() {\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  hide() {\n    this._hidden = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showOrHideByFilter(search) {\n    const constraint = (this._dropdown as NxDropdownComponent).filterFn(search, this.viewValue);\n    this._hidden = constraint ? false : true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get _formattedValue() {\n    return (this._dropdown as NxDropdownComponent).valueFormatter(this.value);\n  }\n\n  /** @docs-private */\n  get viewValue() {\n    return (this._elementRef.nativeElement.textContent || '').trim();\n  }\n\n  /** @docs-private */\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  private _emitSelectionChangeEvent(isUserInput: boolean = false) {\n    this.onSelectionChange.emit(new NxDropdownItemChange(this, isUserInput));\n  }\n\n  /** @docs-private */\n  setActiveStyles(): void {\n    this._active = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  setInactiveStyles(): void {\n    this._active = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  getLabel(): string {\n    return this.value;\n  }\n\n  _isContentEmpty(element) {\n    return element.children.length === 0 && !element.textContent.trim();\n  }\n\n  _onLabelChange() {\n    // trigger change detection when the label content changes for the case that ng-content was empty before.\n    // this is also important when the label comes in deferred, e.g. by a delayed observable,\n    // then first the default label derived from the value is shown\n    // and after the value from the async observable is ready we need to trigger change detection that the derived label\n    // gets hidden again.\n    // Notice(!): the event of (cdkObserveContent) is run outside of the ngZone\n    // We run detectChanges directly here as markForCheck wasn't enough to always trigger change detection correctly\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n// This Directive solely purpose is to mark given ng-template and project it into the required destination.\n@Directive({\n  selector: '[nxClosedLabel]'\n})\nexport class NxDropdownClosedLabelDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { NxFormfieldComponent, NxFormfieldControl } from '@allianz/ngx-ndbx/formfield';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, SHIFT, TAB } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewChild,\n  TemplateRef,\n  ContentChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport { filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\n\nimport { getNxDropdownNonArrayValueError, getNxDropdownNonFunctionValueError } from './dropdown-errors';\nimport { NxDropdownControl } from './dropdown.control';\nimport { NxDropdownGroupComponent } from './group/dropdown-group';\nimport { NxDropdownItemChange, NxDropdownItemComponent } from './item/dropdown-item';\nimport { NxDropdownClosedLabelDirective } from './closed-label.directive';\n\n\n/** Change event object that is emitted when the select value has changed. */\nexport class NxDropdownSelectChange<T = any> {\n  constructor(\n    /** Reference to the select that emitted the change event. */\n    public source: NxDropdownComponent,\n    /** Current value of the select that emitted the event. */\n    public value: T) { }\n}\n\n// used in calculation of scrolltop to correctly show some space to the top of the panel\nconst itemPadding = 16;\n\n// Max-height: 6 items x 44px + 16px padding before first item\nexport const SELECT_PANEL_MAX_HEIGHT = 280;\n\n@Component({\n  selector: 'nx-dropdown',\n  templateUrl: 'dropdown.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['dropdown.scss'],\n  providers: [\n    { provide: NxDropdownControl, useExisting: NxDropdownComponent },\n    { provide: NxFormfieldControl, useExisting: NxDropdownComponent },\n  ],\n  host: {\n    'role': 'button',\n    '[class.nx-dropdown]': 'true',\n    '[class.is-filled]': 'hasValue',\n    '[class.has-focus]': 'focused',\n    '[class.nx-dropdown--negative]': '_negative',\n    '[class.nx-dropdown--disabled]': 'disabled',\n    '[attr.aria-describedby]': 'ariaDescribedby || null',\n    '[attr.aria-required]': 'required',\n    '[attr.aria-label]': '_getAriaLabel()',\n    '[attr.aria-haspopup]': '\"listbox\"',\n    '[attr.aria-expanded]': 'panelOpen',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.tabindex]': 'tabIndex',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(click)': 'openPanel()'\n  }\n})\nexport class NxDropdownComponent extends NxDropdownControl implements ControlValueAccessor,\n  OnInit, AfterContentInit, OnDestroy, DoCheck {\n\n  // The dropdown currently doesn't support readonly of the NxFormfieldControl so we hardcode it here\n  readonly readonly: boolean = false;\n\n  private _selectionModel: SelectionModel<NxDropdownItemComponent>;\n\n  protected _disabled: boolean = false;\n\n  private _focused: boolean = false;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  /** @docs-private */\n  errorState: boolean = false;\n\n  /** Holds the value from nxValue. */\n  private _value: any;\n\n  /** The scroltop of the panelBody. */\n  private _scrollTop: number = 0;\n\n  /** The minimal space between the viewport and the overlay */\n  _overlayViewportMargin: number = 16;\n\n  /** The last measured value for the trigger's client bounding rect. */\n  _triggerRect: ClientRect;\n\n  /** Holds the panelWidth after panel was attached. */\n  _panelWidth: number;\n\n  /**\n   * @docs-private\n   * Emits when internal state changes to inform formfield about it.\n   */\n  readonly stateChanges = new Subject<any>();\n\n  /** The IDs of child options to be passed to the aria-owns attribute. */\n  _optionIds: string = '';\n\n  /** @docs-private */\n  ariaDescribedby: string;\n\n  private _tabIndex: number = 0;\n\n  /** @docs-private */\n  currentFilter: string = '';\n\n\n  @Input()\n  get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n  set tabIndex(value: number) {\n    // If the specified tabIndex value is null or undefined, fall back to the default value.\n    this._tabIndex = value != null ? value : 0;\n  }\n\n  /** Label to describe the component. */\n  @Input('nxAriaLabel') _ariaLabel: string = '';\n\n  /** Selected value */\n  @Input('nxValue')\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (newValue !== this._value) {\n      this.writeValue(newValue);\n      this._value = newValue;\n      this._onChange(newValue);\n    }\n  }\n\n  /** Whether the dropdown is disabled. */\n  @Input('nxDisabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  /** Whether the component is required. This adds an aria-required label to the component. */\n  @Input('nxRequired') required: boolean;\n\n  private _style: string = '';\n  /** Whether the dropdown should render in its negative style or not. */\n  _negative: boolean = false;\n\n  /** If set to 'negative', the component is displayed with the negative set of styles. */\n  @Input('nxStyle')\n  set styles(value: string) {\n\n    if (this._style === value) {\n      return;\n    }\n\n    this._style = value;\n    this._negative = !!this._style.match(/negative/);\n  }\n\n  /** Whether the dropdown should be shown with an additional filter input. */\n  @Input('nxShowFilter') showFilter: boolean = false;\n\n  /** Text displayed as placeholder for the filter. */\n  @Input('nxFilterPlaceholder') filterPlaceholder: string = '';\n\n  /** Event emitted when the select panel has been toggled. */\n  @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the select has been opened. */\n  @Output('opened') readonly _openedStream: Observable<void> =\n    this.openedChange.pipe(filter(o => o), map(() => { }));\n\n  /** Event emitted when the select has been closed. */\n  @Output('closed') readonly _closedStream: Observable<void> =\n    this.openedChange.pipe(filter(o => !o), map(() => { }));\n\n  /** Event emitted when the user types in the filter input. */\n  @Output('filterInput') readonly filterChanges: Subject<any> = new Subject<any>();\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output('nxValueChange') readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Event emitted when the selected value has been changed. */\n  @Output() readonly selectionChange: EventEmitter<NxDropdownSelectChange> =\n    new EventEmitter<NxDropdownSelectChange>();\n\n  /** @docs-private */\n  readonly optionSelectionChanges: Observable<NxDropdownItemChange> = defer<Observable<NxDropdownItemChange>>(() => {\n    if (this.options) {\n      return merge(...this.options.map(option => option.onSelectionChange));\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n  });\n\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions = [{\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'top'\n  }, {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center'\n  }, {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }];\n\n\n  /**\n   * @docs-private\n   * Panel containing the select options.\n   */\n  @ViewChild('panel') panel: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('panelBody') panelBody: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('trigger') trigger: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('filterInput') filterInput: ElementRef;\n\n  /**\n   * @docs-private\n   * Overlay pane containing the options.\n   */\n  @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n  /** @docs-private */\n  @ContentChildren(NxDropdownItemComponent, { descendants: true }) options;\n\n  /** @docs-private */\n  @ContentChildren(NxDropdownGroupComponent) groups;\n\n  @ContentChild(NxDropdownClosedLabelDirective)\n  _customClosedDropdownLabel: NxDropdownClosedLabelDirective;\n\n  @ViewChild('defaultClosedDropdownLabel')\n  private _defaultClosedDropdownLabel: TemplateRef<any>;\n\n  /** @docs-private */\n  get closedDropdownLabel(): TemplateRef<any> {\n    return this._closedDropdownLabel;\n  }\n  private _closedDropdownLabel: TemplateRef<any>;\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * @docs-private\n   * The currently selected option.\n   */\n  get selected(): NxDropdownItemComponent | NxDropdownItemComponent[] {\n    return this.isMultiSelect ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  private _keyManager: ActiveDescendantKeyManager<NxDropdownItemComponent>;\n\n  /** @docs-private */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n  set panelOpen(value: boolean) {\n    this._panelOpen = value;\n  }\n\n  /**\n   * Function that transforms the value into a string.\n   * This function is used for displaying and filtering the content\n   * ( Default: (value) => value ? value.toString() : null; ).\n   */\n  @Input('nxValueFormatter') valueFormatter = (value) => {\n    return value == null ? '' : value.toString();\n  }\n\n  /** @docs-private */\n  get label(): string {\n    return this.formFieldComponent ? this.formFieldComponent.label : '';\n  }\n\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith() { return this._compareWith; }\n  set compareWith(fn: (o1: string, o2: string) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNxDropdownNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n\n  private _filterFn = (search: string, itemValue: string) => {\n    return itemValue.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) >= 0;\n  }\n\n  /**\n   * Function to be used when the user types into the search filter. The first argument is the user input,\n   * the second argument is the dropdown item value. The dropdown items will use this function to set their\n   * visibility state.\n   * A boolean should be returned.\n   */\n  @Input()\n  get filterFn() { return this._filterFn; }\n  set filterFn(fn: (search: string, itemValue: string) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNxDropdownNonFunctionValueError();\n    }\n    this._filterFn = fn;\n  }\n\n  /**\n   * @docs-private\n   * Whether the select is focused.\n   */\n  get focused(): boolean {\n    return this._focused || this.panelOpen;\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => { };\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => { };\n\n  /** @docs-private */\n  get elementRef(): ElementRef {\n    return this._elementRef;\n  }\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Attribute('tabindex') tabIndex: string,\n    @Optional() private formFieldComponent: NxFormfieldComponent,\n    /** @docs-private */\n    @Self() @Optional() public ngControl: NgControl,\n    @Optional() private _parentForm: NgForm,\n    @Optional() private _parentFormGroup: FormGroupDirective) {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.tabIndex = parseInt(tabIndex, 10) || 0;\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<NxDropdownItemComponent>(this.isMultiSelect);\n  }\n\n  ngAfterContentInit() {\n    this._closedDropdownLabel =\n      this._customClosedDropdownLabel && this._customClosedDropdownLabel.templateRef || this._defaultClosedDropdownLabel;\n    this._initKeyManager();\n\n    this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  /** @docs-private */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n\n  /** @docs-private */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<NxDropdownItemComponent>(this.options)\n      .withTypeAhead()\n      .withWrap()\n      .withVerticalOrientation()\n      .withHorizontalOrientation('ltr')\n      .skipPredicate(item => item._hidden);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n      // Restore focus to the trigger before closing. Ensures that the focus\n      // position won't be lost if the user got focus into the overlay.\n      this.closePanel();\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        // Delay the auto scrolling until all items have settled otherwise the item containers might\n        // not exist yet\n        this._ngZone.onStable\n          .asObservable()\n          .pipe(take(1)).subscribe(() => this._scrollActiveOptionIntoView());\n      } else if (!this._panelOpen && !this.isMultiSelect && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n\n  private _resetOptions(): void {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.item, event.isUserInput);\n\n      if (event.isUserInput && !this.isMultiSelect && this._panelOpen) {\n        this.closePanel();\n      }\n    });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        // defer it for the next cycle to not run in changed after checked errors\n        // the combination of dropdown-item notifying parent and when the parent\n        // tries to fetch the triggerValue from the child throws these errors\n        setTimeout(() => {\n          this._changeDetectorRef.markForCheck();\n          this.stateChanges.next();\n        });\n      });\n\n    this._setOptionIds();\n  }\n\n  /** Records option IDs to pass to the aria-owns property. */\n  private _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n\n  /** Invoked when an option is clicked. */\n  private _onSelect(option: NxDropdownItemComponent, isUserInput: boolean): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (option.value == null && !this.isMultiSelect) {\n      option.deselect();\n      this._selectionModel.clear();\n      this._propagateChanges(option.value);\n    } else {\n      option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n\n      if (this.isMultiSelect) {\n        this._sortValues();\n\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n\n    this.stateChanges.next();\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n    });\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    if (this.isMultiSelect && value) {\n      if (!Array.isArray(value)) {\n        throw getNxDropdownNonArrayValueError();\n      }\n\n      this._selectionModel.clear();\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      this._selectionModel.clear();\n      const correspondingOption = this._selectValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.setActiveItem(correspondingOption);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): NxDropdownItemComponent | undefined {\n    const correspondingOption = this.options.find((option: NxDropdownItemComponent) => {\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value, value);\n      } catch (error) {\n        if (isDevMode()) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n    return correspondingOption;\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (this.isMultiSelect) {\n      valueToEmit = (this.selected as NxDropdownItemComponent[]).map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as NxDropdownItemComponent).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(new NxDropdownSelectChange(this, valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  private _sortValues() {\n    if (this.isMultiSelect) {\n      const options = this.options.toArray();\n      this._selectionModel.sort((a, b) => options.indexOf(a) - options.indexOf(b));\n      this.stateChanges.next();\n    }\n  }\n\n  /** Focuses the select element. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Opens the panel of the dropdown. */\n  openPanel() {\n    if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n      return;\n    }\n    this._panelOpen = true;\n    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n    this._keyManager.withHorizontalOrientation(null);\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Closes the panel of the dropdown. */\n  closePanel() {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._keyManager.withHorizontalOrientation('ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n      this.openedChange.emit(false);\n      // defer the focus if the dropdown triggers actions that detach\n      // a template/view from the DOM to prevent changed after checked errors\n      setTimeout(() => this.focus());\n    }\n  }\n\n  // calculate inital scrollTop when the dropdown opens\n  // scrolls the selected item to the middle of the panel if possible\n  private _calculateScrollTop() {\n    // reset the scrolltop to make calculation easier\n    this.panelBody.nativeElement.scrollTop = 0;\n    this._scrollTop = 0;\n    if (!this.empty) {\n      const offset = this._getItemOffset(this._keyManager.activeItem);\n      const panelHeight = this.panelBody.nativeElement.offsetHeight;\n      const panelRect = this.panelBody.nativeElement.getBoundingClientRect();\n      const middleOfPanel = panelRect.top + panelHeight / 2;\n      const activeItemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n      if (offset > middleOfPanel) {\n        // because we reset the scrollTop to 0 at the top we can simply take the middleOfPanel which is our\n        // target position for the item and subtract it from the offset (which is now always relative to the viewport)\n        // to middle out the text a bit more add half of the height\n        // (this is still a few pixels off because the container is a bit larger than the font)\n        this._scrollTop = offset - middleOfPanel + (activeItemRect.height - itemPadding) / 2;\n        this.panelBody.nativeElement.scrollTop = this._scrollTop;\n      }\n    }\n  }\n\n  /** Scrolls the active option into view. */\n  private _scrollActiveOptionIntoView(): void {\n    if (!this.panelOpen || !this._keyManager.activeItem) {\n      return;\n    }\n    const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n    const itemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n    const labelCount = this._countGroupLabelsBeforeOption(activeOptionIndex, this.options,\n      this.groups);\n\n    this.panelBody.nativeElement.scrollTop = this._getOptionScrollPosition(\n      activeOptionIndex + labelCount,\n      itemRect.height,\n      this.panelBody.nativeElement.scrollTop,\n      SELECT_PANEL_MAX_HEIGHT\n    );\n  }\n\n  private _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<NxDropdownItemComponent>,\n    optionGroups: QueryList<NxDropdownGroupComponent>): number {\n\n    if (optionGroups.length) {\n      const optionsArray = options.toArray();\n      const groups = optionGroups.toArray();\n      let groupCounter = 0;\n\n      for (let i = 0; i < optionIndex + 1; i++) {\n        if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\n  private _getOptionScrollPosition(optionIndex: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n    let optionOffset = optionIndex * optionHeight + itemPadding;\n\n    if (this.showFilter) {\n      const filterHeight = this.panel.nativeElement.querySelector('.nx-dropdown__filter').getBoundingClientRect().height;\n      optionOffset = optionIndex * optionHeight + filterHeight;\n    }\n\n    if (optionOffset < currentScrollPosition) {\n      return optionOffset;\n    }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n      return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n  }\n\n  private _getItemOffset(item) {\n    const itemRect = item.containerElement.nativeElement.getBoundingClientRect();\n\n    return itemRect.top;\n  }\n\n  /**\n   * @docs-private\n   * Formfield Implementation\n   */\n  setDescribedByIds(ids: string[]): void {\n    this.ariaDescribedby = ids.join(' ');\n  }\n\n  /** @docs-private */\n  setAriaLabel(value: string) {\n    this._ariaLabel = value;\n  }\n\n  _getAriaLabel() {\n    return this._ariaLabel || (this.formFieldComponent ? this.formFieldComponent.label : null);\n  }\n\n  /**\n   * @docs-private\n   * Whether the select has a value.\n   */\n  get empty(): boolean {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n\n  /** @docs-private */\n  get hasValue() {\n    return this._selectionModel.hasValue();\n  }\n\n  /** @docs-private */\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n  /** End Formfield */\n\n  /** ControlValueAccessor */\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  /** End ControlValueAccessor */\n\n  _handleKeydown(event: KeyboardEvent) {\n    this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n  }\n\n  private _handleClosedKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n      keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if (isOpenKey || ((this.isMultiSelect || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.openPanel();\n    } else if (!this.isMultiSelect && !this.disabled) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  private _handleOpenKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    // all events other than the listed ones should be ignored or handled in _onFilter()\n    if (!([DOWN_ARROW, UP_ARROW, HOME, END, ENTER, LEFT_ARROW, RIGHT_ARROW, SHIFT, SPACE, TAB].indexOf(keyCode) >= 0)) {\n        return;\n    }\n\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const manager = this._keyManager;\n\n    const allHidden = this.options.map(option => option._hidden).every(option => Boolean(option));\n\n    if (keyCode === HOME || keyCode === END) {\n      event.preventDefault();\n      keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n    } else if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.closePanel();\n    } else if (keyCode === ENTER && manager.activeItem && !allHidden) {\n      event.preventDefault();\n\n      manager.activeItem._selectViaInteraction();\n    } else if (keyCode === ENTER && allHidden) {\n      event.preventDefault();\n\n      this.closePanel();\n    } else if (!this.showFilter && keyCode === SPACE && manager.activeItem) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (keyCode === TAB) {\n      this.closePanel();\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n\n      if (this.isMultiSelect && isArrowKey && event.shiftKey && manager.activeItem &&\n        manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  /** @docs-private */\n  formatValue(value): string {\n    return this.valueFormatter(value);\n  }\n\n  /** Called when the user types in the filter input */\n  _onFilter(event) {\n    event.preventDefault();\n    this.currentFilter = event.target.value;\n    this.filterChanges.next(event.target.value);\n    const allHidden = this.options.map(option => option._hidden).every(option => Boolean(option));\n    if (allHidden) {\n      this._keyManager.setActiveItem(null);\n    } else {\n      this._keyManager.setFirstItemActive();\n    }\n  }\n\n  /**\n   * @docs-private\n   * The value displayed in the trigger.\n   */\n  get triggerValue(): string {\n\n    if (this.empty) {\n      return '';\n    }\n\n    if (this.isMultiSelect) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      return selectedOptions.join(', ');\n    }\n    return this._selectionModel.selected[0].viewValue;\n  }\n\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first item instead.\n   */\n  private _highlightCorrectOption(): void {\n    if (this._keyManager) {\n      if (this.empty) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached(): void {\n    this._changeDetectorRef.markForCheck();\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this.panelBody.nativeElement.focus();\n      if (this._keyManager.activeItem) {\n        this._calculateScrollTop();\n      }\n      this._changeDetectorRef.markForCheck();\n      this.openedChange.emit(true);\n      if (this.showFilter) {\n        this.filterInput.nativeElement.focus();\n      }\n    });\n  }\n\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n\n    if (this.filterInput && this.showFilter) {\n      this._clearFilter();\n    }\n\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n\n  /** @docs-private */\n  get isFilterEmpty() {\n    return this.currentFilter.length === 0;\n  }\n\n  /** @docs-private */\n  _clearFilter() {\n    this.filterInput.nativeElement.value = '';\n    this.currentFilter = '';\n    this.filterChanges.next('');\n  }\n\n  /** @docs-private determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant(): string | null {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n}\n","import { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxCheckboxModule } from '@allianz/ngx-ndbx/checkbox';\nimport { NxDropdownComponent } from './dropdown';\nimport { NxDropdownGroupComponent } from './group/dropdown-group';\nimport { NxDropdownItemComponent } from './item/dropdown-item';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { NxDropdownClosedLabelDirective } from './closed-label.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxFormfieldModule,\n    NxCheckboxModule,\n    OverlayModule,\n    A11yModule,\n    NxIconModule,\n    ObserversModule\n  ],\n  declarations: [\n    NxDropdownComponent,\n    NxDropdownItemComponent,\n    NxDropdownGroupComponent,\n    NxDropdownClosedLabelDirective\n  ],\n  exports: [\n    NxDropdownComponent,\n    NxDropdownItemComponent,\n    NxDropdownGroupComponent,\n    NxDropdownClosedLabelDirective\n  ]\n})\nexport class NxDropdownModule {\n\n}\n","import { Component, Input, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\n\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Option selected event */\nexport class NxAutocompleteOptionSelected {\n  constructor(\n    /** The option that is selected or deselected. */\n    public source: NxAutocompleteOptionComponent,\n    /** Whether the input was triggered by the user. */\n    public isUserInput = false) { }\n}\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n@Component({\n  selector: 'nx-autocomplete-option',\n  templateUrl: 'autocomplete-option.component.html',\n  styleUrls: ['autocomplete-option.component.scss'],\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    '[class.nx-active]': 'active',\n    '[class.nx-disabled]': 'disabled',\n    '[style.display]': '\\'block\\'' // needed for to be able to calculate offset height\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxAutocompleteOptionComponent {\n\n  /** Id of the autocomplete option. By default it is set to an incremented value. */\n  public get id(): string {\n    return this._id;\n  }\n  private _id = `nx-autocomplete-option-${_uniqueIdCounter++}`;\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n  private _selected = false;\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n  private _active = false;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n    }\n  }\n  private _disabled = false;\n\n  /** The value of the autocomplete option. */\n  @Input() value: any;\n\n  /** Event emitted when the option is selected or deselected. */\n  @Output() readonly onSelectionChange = new EventEmitter<NxAutocompleteOptionSelected>();\n\n\n  constructor(\n    /** @docs-private */ public elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new NxAutocompleteOptionSelected(this, isUserInput));\n  }\n\n  /** @docs-private */\n  get viewValue(): string {\n    return (this.elementRef.nativeElement.textContent || '').trim();\n  }\n\n  /**\n   * @docs-private\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * @docs-private\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * @docs-private\n   * Gets the label to be used when determining whether the option should be focused.\n   */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Selects the option. */\n  select(): void {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /**\n   * @docs-private\n   * Sets focus onto this option.\n   */\n  focus(): void {\n    const element = this.elementRef.nativeElement;\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n}\n","\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy\n} from '@angular/core';\n\nimport { NxAutocompleteOptionComponent } from './autocomplete-option.component';\n\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n\n/** Event object that is emitted when an autocomplete option is selected. */\nexport class NxAutocompleteSelectedEvent {\n  constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    public source: NxAutocompleteComponent,\n    /** Option that was selected. */\n    public option: NxAutocompleteOptionComponent) { }\n}\n\n@Component({\n  selector: 'nx-autocomplete',\n  templateUrl: 'autocomplete.component.html',\n  styleUrls: ['autocomplete.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'nxAutocomplete',\n  host: {\n    'class': 'nx-autocomplete'\n  }\n})\nexport class NxAutocompleteComponent implements AfterViewInit, OnDestroy {\n\n  /** Manages active item in option list based on key events. */\n  _keyManager: ActiveDescendantKeyManager<NxAutocompleteOptionComponent>;\n\n  /** Whether the autocomplete panel should be visible, depending on option length. */\n  showPanel: boolean = false;\n\n  /** Whether the autocomplete panel is open. */\n  get isOpen(): boolean { return this._isOpen && this.showPanel; }\n  _isOpen: boolean = false;\n\n  /** @docs-private */\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\n\n  /**\n   * @docs-private\n   * Element for the panel containing the autocomplete options.\n   */\n  @ViewChild('panel') panel: ElementRef;\n\n  /** Items observable. If given, autocomplete takes care of the options and ng-content is discarderd */\n  @Input()\n  set items(val: Array<string> | Observable<Array<string>>) {\n    this._hasItems = true;\n    if (Array.isArray(val)) {\n      this._items = val;\n    } else if (val instanceof Observable) {\n      if (this._itemsSubscription) {\n        this._itemsSubscription.unsubscribe();\n      }\n      this._itemsSubscription = val.subscribe((itms) => {\n        this._items = itms;\n        this._changeDetectorRef.markForCheck();\n        // and check visibility in next cycle, when options are set\n        setTimeout(() => this._setVisibility());\n      });\n    } else if (val === null) {\n      this._items = val;\n    } else {\n      throw new Error('Invalid argument for autocomplete items. It has to be Array<string> or Observable<Array<string>>');\n    }\n  }\n  get items(): Array<string> | Observable<Array<string>> {\n    return this._items;\n  }\n  private _items: Array<string> = null;\n  private _itemsSubscription: Subscription;\n\n  /**\n   * @docs-private\n   * Is items observable set\n   */\n  public get hasItems(): boolean {\n    return this._hasItems;\n  }\n  private _hasItems = false;\n\n  /** Event that is emitted whenever an option from the list is selected. */\n  @Output() readonly optionSelected: EventEmitter<NxAutocompleteSelectedEvent> =\n      new EventEmitter<NxAutocompleteSelectedEvent>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Autocomplete options in view - ie from items */\n  @ViewChildren(NxAutocompleteOptionComponent)\n  private _vOptions: QueryList<NxAutocompleteOptionComponent>;\n\n  /** Autocomplete options in content - ie user provided */\n  @ContentChildren(NxAutocompleteOptionComponent, { descendants: true})\n  private _cOptions: QueryList<NxAutocompleteOptionComponent>;\n\n  /** Autocomplete options */\n  public get options(): QueryList<NxAutocompleteOptionComponent> {\n    return this.hasItems ? this._vOptions : this._cOptions;\n  }\n\n  /**\n   * Takes classes set on the host nx-autocomplete element and applies them to the panel\n   * inside the overlay container to allow for easy styling.\n   */\n  @Input('class')\n  set classList(value: string) {\n    if (value && value.length) {\n      value.split(' ').forEach(className => this._classList[className.trim()] = true);\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  _classList: {[key: string]: boolean} = {};\n\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n  id: string = `nx-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n\n  // As autocomplete option can hold any value, we might need a converter\n  // to get a string representation, which can be stored in input. Default value ? value.toString() : null.\n  /**\n   * Value to string converter.\n   */\n  @Input('nxValueFormatter')\n  public valueFormatter: (value: any) => string = (value: any) => value ? value.toString() : null\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef) {\n  }\n\n  ngAfterViewInit(): void {\n    this._keyManager = new ActiveDescendantKeyManager<NxAutocompleteOptionComponent>(this.options).withWrap();\n    this._setVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._itemsSubscription) {\n      this._itemsSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\n   * above or below the fold, as they are not actually being focused when active.\n   */\n  _setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n  /** Returns the panel's scrollTop. */\n  _getScrollTop(): number {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n\n  /** Panel should hide itself when the option list is empty. */\n  _setVisibility() {\n    this.showPanel = !!(this.options && this.options.length);\n    this._classList['nx-autocomplete-visible'] = this.showPanel;\n    this._classList['nx-autocomplete-hidden'] = !this.showPanel;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits the `select` event. */\n  _emitSelectEvent(option: NxAutocompleteOptionComponent): void {\n    const event = new NxAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n}\n","import { NxFormfieldComponent } from '@allianz/ngx-ndbx/formfield';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ViewportRuler,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, Subject, Subscription, defer, of, merge, fromEvent } from 'rxjs';\nimport { delay, filter, switchMap, take, tap, debounceTime, first } from 'rxjs/operators';\n\nimport { NxWordComponent } from '@allianz/ngx-ndbx/natural-language-form';\nimport { NxAutocompleteOptionComponent, NxAutocompleteOptionSelected } from './autocomplete-option.component';\nimport { NxAutocompleteComponent } from './autocomplete.component';\n\n\n\n\n\n\n\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const NX_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NxAutocompleteTriggerDirective),\n  multi: true\n};\n\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n */\nexport function getNxAutocompleteMissingPanelError(): Error {\n  return Error('Attempting to open an undefined instance of `nx-autocomplete`. ' +\n               'Make sure that the id passed to the `nxAutocomplete` is correct and that ' +\n               'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n\n@Directive({\n  selector: `input[nxAutocomplete], textarea[nxAutocomplete]`,\n  host: {\n    'role': 'combobox',\n    'autocomplete': 'off',\n    'aria-autocomplete': 'list',\n    '[attr.aria-activedescendant]': 'activeOption?.id',\n    '[attr.aria-expanded]': 'panelOpen.toString()',\n    '[attr.aria-owns]': 'autocomplete?.id',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  exportAs: 'nxAutocompleteTrigger',\n  providers: [NX_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class NxAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy, OnChanges, AfterViewInit {\n  private _overlayRef: OverlayRef | null;\n  private _portal: TemplatePortal;\n  private _componentDestroyed = false;\n\n  /** Old value of the native input. Used to work around issues with the `input` event on IE. */\n  private _previousValue: string | number | null;\n\n  /** Strategy that is used to position the panel. */\n  private _positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** Whether or not the label state is being overridden. */\n  private _manuallyFloatingLabel = false;\n\n  /** The subscription for closing actions (some are bound to document). */\n  private _closingActionsSubscription: Subscription;\n\n  /** Subscription to viewport size changes. */\n  private _viewportSubscription = Subscription.EMPTY;\n\n  /** Subscription to control value changes */\n  private _controlValueChangesSubscription: Subscription;\n\n  /** Subscription to items observable */\n  private _itemsSubscription: Subscription;\n\n  /** Stream of keyboard events that can close the panel. */\n  private readonly _closeKeyEventStream = new Subject<void>();\n\n  /** Value changes */\n  private readonly _valueChanges: Subject<any> = new Subject<any>();\n\n\n  /** The autocomplete panel to be attached to this trigger. */\n  @Input('nxAutocomplete') autocomplete: NxAutocompleteComponent;\n\n  /** The items callback. Called with input value, must return Observable of Array of strings */\n  @Input('nxAutocompleteItems')\n  set itemsCb(val: (val: string) => Observable<Array<string>>) {\n    if (typeof val === 'function') {\n      this._itemsCb = val;\n    } else {\n      throw new Error('Wrong value type for nxAutocompleteItems');\n    }\n  }\n  get itemsCb() {\n    return this._itemsCb;\n  }\n  private _itemsCb: (val: string) => Observable<Array<string>> = null;\n\n  /** Debounce in ms before items callback is triggered. Defaults to 400 */\n  @Input('nxAutocompleteDebounce')\n  set debounce(val: number) {\n    this._debounce = coerceNumberProperty(val);\n  }\n  private _debounce: number = 400;\n\n  /** Whether autocomplete functionality is disabled. */\n  @Input('nxAutocompleteDisabled')\n  set autocompleteDisabled(val: boolean) {\n    this._autocompleteDisabled = val;\n    this._bindAutocompleteItems();\n  }\n  get autocompleteDisabled() {\n    return this._autocompleteDisabled;\n  }\n  private _autocompleteDisabled = false;\n\n  /** Whether or not the autocomplete panel is open. */\n  get panelOpen(): boolean {\n    return this._overlayAttached && this.autocomplete.showPanel;\n  }\n  private _overlayAttached: boolean = false;\n\n  /** Stream of autocomplete option selections. */\n  readonly optionSelections: Observable<NxAutocompleteOptionSelected> = defer<Observable<NxAutocompleteOptionSelected>>(() => {\n    if (this.autocomplete && this.autocomplete.options) {\n     return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n    }\n\n    // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n    // Return a stream that we'll replace with the real one once everything is in place.\n    return this._zone.onStable\n        .asObservable()\n        .pipe(take(1), switchMap(() => this.optionSelections));\n  });\n\n  /** The currently active option, coerced to NxAutocompleteOptionComponent type. */\n  get activeOption(): NxAutocompleteOptionComponent | null {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n\n    return null;\n  }\n\n  /** Stream of clicks outside of the autocomplete panel. */\n  private get _outsideClickStream(): Observable<any> {\n    if (!this._document) {\n      return of(null);\n    }\n\n    return merge(\n      fromEvent(this._document, 'click'),\n      fromEvent(this._document, 'touchend')\n    )\n    .pipe(filter((event: MouseEvent | TouchEvent) => {\n      const clickTarget = event.target as HTMLElement;\n      const formField = this._formField ?\n          this._formField.elementRef.nativeElement : null;\n\n      return this._overlayAttached &&\n              clickTarget !== this._element.nativeElement &&\n              (!formField || !formField.contains(clickTarget)) &&\n              (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n    }));\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = (val) => {\n    this._valueChanges.next(val);\n  }\n\n  /** `View -> model callback called when autocomplete has been touched` */\n  _onTouched = () => {};\n\n  private get _formField(): NxFormfieldComponent | NxWordComponent {\n    if (this._nxFormField) {\n      return this._nxFormField;\n    } else if (this._nxWordField) {\n      return this._nxWordField;\n    }\n  }\n\n  constructor(private _element: ElementRef, private _overlay: Overlay,\n              private _viewContainerRef: ViewContainerRef,\n              private _zone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Optional() @Host() private _nxFormField: NxFormfieldComponent,\n              @Optional() @Host() private _nxWordField: NxWordComponent,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              // @deletion-target 7.0.0 Make `_viewportRuler` required.\n              private _viewportRuler?: ViewportRuler) {}\n\n  ngOnDestroy() {\n    this._viewportSubscription.unsubscribe();\n    this._componentDestroyed = true;\n    this._destroyPanel();\n    this._closeKeyEventStream.complete();\n    if (this._controlValueChangesSubscription) { this._controlValueChangesSubscription.unsubscribe(); }\n    if (this._itemsSubscription) { this._itemsSubscription.unsubscribe(); }\n  }\n\n  ngOnChanges() {\n    this._bindAutocompleteItems();\n  }\n\n  ngAfterViewInit() {\n    this._bindAutocompleteItems();\n  }\n\n  /**\n   * Binds or rebinds the autocomplete items. Prerequisites:\n   * - items callback has to be defined\n   * - autocomplete panel has to be bound\n   */\n  private _bindAutocompleteItems() {\n    if (this._controlValueChangesSubscription) {\n      this._controlValueChangesSubscription.unsubscribe();\n    }\n\n    if (typeof this._itemsCb === 'function' && this.autocomplete && !this.autocompleteDisabled) {\n\n      const itemsSubject = new Subject<string[]>();\n\n      this.autocomplete.items = itemsSubject;\n\n      const valueChanges =\n        this._formField &&\n        this._formField._control &&\n        this._formField._control.ngControl &&\n        this._formField._control.ngControl.valueChanges ?\n          this._formField._control.ngControl.valueChanges : this._valueChanges;\n\n      this._controlValueChangesSubscription = valueChanges.pipe(debounceTime(this._debounce))\n        .subscribe((input) => {\n          if (this._itemsSubscription) {\n            this._itemsSubscription.unsubscribe();\n          }\n          this._itemsSubscription = this._itemsCb(input).pipe(first()).subscribe(\n            (result) => {\n              itemsSubject.next(result);\n            },\n            (err) => {\n              // On error reset\n              // TODO: Log error?\n              itemsSubject.next([]);\n            }\n          );\n        });\n    }\n  }\n\n  /** Opens the autocomplete suggestion panel. */\n  openPanel(): void {\n    if (!this.autocompleteDisabled) {\n      this._attachOverlay();\n      this._floatLabel();\n    }\n  }\n\n  /** Closes the autocomplete suggestion panel. */\n  closePanel(): void {\n    this._resetLabel();\n\n    if (!this._overlayAttached) {\n      return;\n    }\n\n    if (this.panelOpen) {\n      // Only emit if the panel was visible.\n      this.autocomplete.closed.emit();\n    }\n\n    this.autocomplete._isOpen = this._overlayAttached = false;\n\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n\n    // Note that in some cases this can end up being called after the component is destroyed.\n    // Add a check to ensure that we don't try to run change detection on a destroyed view.\n    if (!this._componentDestroyed) {\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the label is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  get panelClosingActions(): Observable<NxAutocompleteOptionSelected> {\n    return merge(\n      this.optionSelections,\n      this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)),\n      this._closeKeyEventStream,\n      this._outsideClickStream,\n      this._overlayRef ?\n          this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n          of()\n    );\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean) {\n    this._element.nativeElement.disabled = isDisabled;\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n    // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n    if (this.panelOpen && (keyCode === ESCAPE || (keyCode === UP_ARROW && event.altKey))) {\n      this._resetActiveItem();\n      this._closeKeyEventStream.next();\n      event.stopPropagation();\n    } else if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else {\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n      if (this.panelOpen || keyCode === TAB) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey && this._isFieldEnabled()) {\n        this.openPanel();\n      }\n\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n        this._scrollToOption();\n      }\n    }\n  }\n\n  _handleInput(event: KeyboardEvent): void {\n    const target = event.target as HTMLInputElement;\n    let value: number | string | null = target.value;\n\n    // Based on `NumberValueAccessor` from forms.\n    if (target.type === 'number') {\n      value = value === '' ? null : parseFloat(value);\n    }\n\n    // If the input has a placeholder, IE will fire the `input` event on page load,\n    // focus and blur, in addition to when the user actually changed the value. To\n    // filter out all of the extra events, we save the value on focus and between\n    // `input` events, and we check whether it changed.\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\n    if (this._isFieldEnabled() && this._previousValue !== value &&\n      document.activeElement === event.target) {\n      this._previousValue = value;\n      this._onChange(value);\n      this.openPanel();\n    }\n  }\n\n  _handleFocus(): void {\n    if (this._isFieldEnabled()) {\n      this._previousValue = this._element.nativeElement.value;\n      this.openPanel();\n    }\n  }\n\n  /**\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\n   * This causes the value to jump when selecting an option with the mouse.\n   * This method manually floats the label until the panel can be closed.\n   * @param shouldAnimate Whether the label should be animated when it is floated.\n   */\n  private _floatLabel(): void {\n    if (this._nxFormField && this._nxFormField.floatLabel === 'auto') {\n      this._nxFormField.floatLabel = 'always';\n      this._manuallyFloatingLabel = true;\n    }\n  }\n\n  /** If the label has been manually elevated, return it to its normal state. */\n  private _resetLabel(): void  {\n    if (this._manuallyFloatingLabel) {\n      this._nxFormField.floatLabel = 'auto';\n      this._manuallyFloatingLabel = false;\n    }\n  }\n\n  /**\n   * Given that we are not actually focusing active options, we must manually adjust scroll\n   * to reveal options below the fold. First, we find the offset of the option from the top\n   * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n   * the panel height + the option height, so the active option will be just visible at the\n   * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n   * will become the offset. If that offset is visible within the panel already, the scrollTop is\n   * not adjusted.\n   */\n  private _scrollToOption(): void {\n\n    if (this.autocomplete.options.length === 0) {\n      return;\n    }\n    let optionOffset = 0;\n    const optionHeight = this.autocomplete.options.first.elementRef.nativeElement.offsetHeight;\n    if (this.autocomplete._keyManager.activeItem) {\n      optionOffset = this.autocomplete._keyManager.activeItem.elementRef.nativeElement.offsetTop;\n    }\n\n    const newScrollPosition = _getOptionScrollPosition(\n      optionOffset,\n      optionHeight,\n      this.autocomplete._getScrollTop(),\n      this.autocomplete.panel.nativeElement.offsetHeight\n    );\n\n    this.autocomplete._setScrollTop(newScrollPosition);\n  }\n\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  private _subscribeToClosingActions(): Subscription {\n    const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n    const optionChanges = this.autocomplete.options.changes.pipe(\n      tap(() =>  this._positionStrategy.reapplyLastPosition()),\n      // Defer emitting to the stream until the next tick, because changing\n      // bindings in here will cause \"changed after checked\" errors.\n      delay(0)\n    );\n\n    // When the zone is stable initially, and when the option list changes...\n    return merge(firstStable, optionChanges)\n      .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n          this._resetActiveItem();\n          this.autocomplete._setVisibility();\n          return this.panelClosingActions;\n        }),\n        // when the first closing event occurs...\n        take(1)\n      )\n      // set the value, close the panel, and complete.\n      .subscribe(event => this._setValueAndClose(event));\n  }\n\n  /** Destroys the autocomplete suggestion panel. */\n  private _destroyPanel(): void {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  private _setTriggerValue(value: any): void {\n\n    const toDisplay = this.autocomplete && this.autocomplete.valueFormatter ?\n      this.autocomplete.valueFormatter(value) :\n      value;\n\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const inputValue = toDisplay != null ? toDisplay : '';\n\n    // If it's used within a `NxFormField` or `NxWord`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = inputValue;\n    } else {\n      this._element.nativeElement.value = inputValue;\n    }\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  private _setValueAndClose(event: NxAutocompleteOptionSelected | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      this._onChange(event.source.value);\n      this._element.nativeElement.focus();\n      this.autocomplete._emitSelectEvent(event.source);\n    }\n\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  private _clearPreviousSelectedOption(skip: NxAutocompleteOptionComponent) {\n    this.autocomplete.options.forEach(option => {\n      if (option !== skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _attachOverlay(): void {\n    if (!this.autocomplete) {\n      throw getNxAutocompleteMissingPanelError();\n    }\n\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n      this._overlayRef = this._overlay.create(this._getOverlayConfig());\n\n      if (this._viewportRuler) {\n        this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n          if (this.panelOpen && this._overlayRef) {\n            this._overlayRef.updateSize({minWidth: this._getHostWidth()});\n          }\n        });\n      }\n    } else {\n      /** Update the panel width, in case the host width has changed */\n      this._overlayRef.updateSize({minWidth: this._getHostWidth()});\n    }\n\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._portal);\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n\n    const wasOpen = this.panelOpen;\n\n    this.autocomplete._setVisibility();\n    this.autocomplete._isOpen = this._overlayAttached = true;\n\n    // We need to do an extra `panelOpen` check in here, because the\n    // autocomplete won't be shown if there are no options.\n    if (this.panelOpen && wasOpen !== this.panelOpen) {\n      this.autocomplete.opened.emit();\n    }\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPosition(),\n      scrollStrategy: this._scrollStrategy(),\n      minWidth: this._getHostWidth(),\n      direction: this._dir ? this._dir.value : 'ltr'\n    });\n  }\n\n  private _getOverlayPosition(): PositionStrategy {\n    this._positionStrategy = this._overlay.position()\n      .flexibleConnectedTo(this._getConnectedElement())\n      .withViewportMargin(16)\n      .withPush(false)\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom',\n        }\n      ]);\n\n    return this._positionStrategy;\n  }\n\n  private _scrollStrategy() {\n    return this._overlay.scrollStrategies.reposition();\n  }\n\n  private _getConnectedElement(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n  }\n\n  /** Returns the width of the input element, so the panel min-width can match it. */\n  private _getHostWidth(): number {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  /**\n   * Resets the active item to -1 so arrow events will activate the\n   * correct options, or to 0 if the consumer opted into it.\n   */\n  private _resetActiveItem(): void {\n    this.autocomplete._keyManager.setActiveItem(-1);\n  }\n\n  /** Determines whether the panel can be opened. */\n  private _isFieldEnabled(): boolean {\n    const element: HTMLInputElement = this._element.nativeElement;\n    return !element.readOnly && !element.disabled;\n  }\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Option offset\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset: number, optionHeight: number,\n  currentScrollPosition: number, panelHeight: number): number {\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAutocompleteComponent } from './autocomplete.component';\nimport { NxAutocompleteOptionComponent } from './autocomplete-option.component';\nimport { NxAutocompleteTriggerDirective } from './autocomplete-trigger.directive';\n\n@NgModule({\n  declarations: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n  exports: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n  imports: [CommonModule, OverlayModule, A11yModule]\n})\nexport class NxAutocompleteModule { }\n","import { NxFormfieldControl, NxFormfieldErrorDirective } from '@allianz/ngx-ndbx/formfield';\nimport { getFontShorthand } from '@allianz/ngx-ndbx/utils';\nimport { Overlay } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subject ,  Subscription } from 'rxjs';\n\nimport { NxPopoverTriggerDirective } from '@allianz/ngx-ndbx/popover';\nimport { NxDropdownComponent } from '@allianz/ngx-ndbx/dropdown';\n\n/** Type to determine the minimal width of a word. */\nexport type SIZES = 'regular' | 'short' | 'long';\n\n@Component({\n  selector: 'nx-word',\n  templateUrl: 'word.component.html',\n  styleUrls: [\n    'word.component.scss'\n  ],\n  host: {\n    '[class.size-short]': 'size == \"short\"',\n    '[class.size-regular]': 'size == \"regular\"',\n    '[class.size-long]': 'size == \"long\"',\n    '[class.has-error]': 'hasErrors',\n    '[class.is-focused]': 'isFocused',\n    '[class.is-filled]': 'isFilled',\n    '[class.has-dropdown]': 'hasDropdown',\n\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class NxWordComponent implements AfterContentInit, OnDestroy {\n  private subscription: Subscription = Subscription.EMPTY;\n  private subscriptionValues: Subscription = Subscription.EMPTY;\n\n  /** @docs-private */\n  public hasErrors: boolean = false;\n\n  private measureCanvas: HTMLCanvasElement;\n\n  /** @docs-private */\n  inputChanges = new Subject<any>();\n\n  @ContentChild(NxFormfieldControl) _control: NxFormfieldControl<any>;\n  @ContentChildren(NxFormfieldErrorDirective) _errorChildren: QueryList<NxFormfieldErrorDirective>;\n  @ViewChild(NxPopoverTriggerDirective) _popover: NxPopoverTriggerDirective;\n  @ContentChild(NxDropdownComponent) _dropdown: NxDropdownComponent;\n\n  /** @docs-private */\n  @HostBinding('style.width.px')\n  currentTextWidth: number = 0;\n\n\n  // this will apply different min-widths to our component through our styles\n  /** Provide a hint for a minimal width. The actual size will be determined for inputs for each change. */\n  @Input('nxSize') size: SIZES = 'regular';\n\n  /**\n   * A word doesn't have a set place to show labels.\n   * In order to be accessible, you have to provide a label with this property.\n   * It will be attached to the given input through `aria-label`.\n   */\n  @Input('nxLabel') label: string;\n\n  constructor(\n    /** @docs-private */\n    public elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _overlay: Overlay\n  ) { }\n\n  ngAfterContentInit() {\n    this._validateControlChild();\n\n    this.subscription = this._control.stateChanges.pipe(startWith(null)).subscribe(() => {\n      this.hasErrors = this._control.errorState;\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // if we have a ngcontrol available stick to its valueChanges subject\n    if (this._control.ngControl) {\n      this.subscriptionValues = this._control.ngControl.valueChanges.subscribe(value => {\n        this.updateCurrentTextWidth();\n        this.inputChanges.next();\n      });\n    // in any other case it is a bre input and input changes are signaled through simple state changes\n    } else {\n      this.subscriptionValues = this._control.stateChanges.subscribe(value => {\n        this.updateCurrentTextWidth();\n        this.inputChanges.next();\n      });\n    }\n\n\n    this._control.setAriaLabel(this.label);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n    @docs-private\n    Calculate the width of the full text given by the input,\n    that value is bound to this component so it can grow.\n\n    The involved input is known to have a width of 100% an will fit the additional space given\n    which completes the auto growing behavior.\n  */\n  updateCurrentTextWidth() {\n    // provide the canvas only lazy\n    if (!this.measureCanvas) {\n      this.measureCanvas = this._renderer.createElement('canvas');\n    }\n\n\n    const ctx = this.measureCanvas.getContext('2d');\n    const inputRef = this._control.elementRef;\n    const styles = window.getComputedStyle(inputRef.nativeElement);\n    ctx.font = getFontShorthand(styles);\n\n    const metrics = ctx.measureText(this._control.value);\n    // add 1px (cursor width) to prevent jumping of the text on blur.\n    const newWidth = metrics.width + parseInt(styles.paddingRight, 10) + parseInt(styles.paddingLeft, 10) + 1;\n\n    // This should be injected via @Host to get an exact reference to NxNaturalLanguageFormComponent\n    // Works as promised as long as there is not other tag around the word. Not expected but possible.\n    const parent: HTMLElement = this.elementRef.nativeElement.parentElement;\n    const parentMeasurement = parent.getBoundingClientRect();\n\n    // Limit to own given minimal width\n    this.currentTextWidth = Math.max(parseInt(styles.minWidth, 10), newWidth);\n\n    // Limit to container width\n    this.currentTextWidth = Math.min(this.currentTextWidth, parentMeasurement.width);\n    this._popover.updatePosition();\n  }\n\n  /** @docs-private */\n  repositionError() {\n    if (this._popover) {\n      this._popover.updatePosition();\n    }\n  }\n\n  // Fail if the required control is missing.\n  protected _validateControlChild() {\n    if (!this._control) {\n      throw new Error('NxWordComponent requires an NxFormfieldControl compatible input.');\n    }\n  }\n\n  /** @docs-private */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this.elementRef;\n  }\n\n  /** @docs-private */\n  get isFocused(): boolean {\n    return this._control.focused;\n  }\n\n  /** @docs-private */\n  get isFilled(): boolean {\n    return !this._control.empty;\n  }\n\n  /** @docs-private */\n  get hasDropdown(): boolean {\n    return Boolean(this._dropdown);\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { delay, throttleTime } from 'rxjs/operators';\n\nimport { NxWordComponent } from './word.component';\n\n/** Size of the NLF. */\nexport type NxNaturalLanguageFormSize = 'small' | 'large';\n\nconst DEFAULT_SIZE = 'large';\n\n@Component({\n  selector: 'nx-natural-language-form',\n  templateUrl: 'natural-language-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['natural-language-form.scss'],\n  host: {\n    '[class.is-negative]': 'negative',\n    '[class.nx-natural-language-form--small]' : 'size === \"small\"',\n    '[class.nx-natural-language-form--large]' : 'size === \"large\"',\n  }\n})\n\nexport class NxNaturalLanguageFormComponent implements AfterContentInit, OnDestroy {\n  private _negative = false;\n\n  /** @docs-private */\n  resizeEvent$: Subject<void> = new Subject<void>();\n\n  /** @docs-private */\n  resizeObservable: Observable<void>;\n\n  @ContentChildren(NxWordComponent) _words: QueryList<NxWordComponent>;\n\n  /** @docs-private */\n  updatePopoversSubscription: Subscription = Subscription.EMPTY;\n\n  /** @docs-private */\n  private _size: NxNaturalLanguageFormSize = DEFAULT_SIZE;\n\n  /** Whether the negative set of stylings should be used. */\n  @Input('nxNegative')\n  set negative(value) {\n    this._negative = coerceBooleanProperty(value);\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  /**\n   * Sets the size of the NLF. Default value: large\n   */\n  @Input()\n  set size(value: NxNaturalLanguageFormSize) {\n    this._size = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get size(): NxNaturalLanguageFormSize {\n    return this._size;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  @HostListener('window:orientationchange', ['$event'])\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.resizeEvent$.next();\n  }\n\n  ngAfterContentInit() {\n    // Collect all words and listen for changes so we can update any open error popover\n    // which would otherwise get wrongly positioned.\n    const subjects = this._words.map((word: NxWordComponent) => word.inputChanges);\n    const source = merge(...subjects);\n\n    this.updatePopoversSubscription = source.subscribe( () => {\n      this.updatePositionPopovers();\n    });\n\n    this.resizeObservable = this.resizeEvent$.pipe(throttleTime(500), delay(100));\n    this.resizeObservable.subscribe(() => this.resizeWords());\n  }\n\n  /** @docs-private */\n  resizeWords() {\n    this._words.forEach((word: NxWordComponent) => {\n      word.updateCurrentTextWidth();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updatePopoversSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  updatePositionPopovers() {\n    if (this._words) {\n      this._words.forEach((word: NxWordComponent) => {\n        word.repositionError();\n      });\n    }\n  }\n}\n","import { NxPopoverModule } from '@allianz/ngx-ndbx/popover';\nimport { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { NxWordComponent } from './word.component';\nimport { NxNaturalLanguageFormComponent } from './natural-language-form.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxInputModule,\n    NxPopoverModule\n  ],\n  declarations: [\n    NxNaturalLanguageFormComponent,\n    NxWordComponent\n  ],\n  exports: [\n    NxNaturalLanguageFormComponent,\n    NxWordComponent\n  ]\n})\nexport class NxNaturalLanguageFormModule {}\n","import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** The contextual type of a message. */\nexport type CONTEXT = 'regular' | 'info' | 'error' | 'success' | 'warning';\n\nconst ICONS = {\n  info: 'info-circle',\n  error: 'exclamation-circle',\n  success: 'check-circle',\n  warning: 'exclamation-triangle'\n};\n\n@Component({\n  selector: 'nx-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'nxMessage',\n  host: {\n    '[class.context-info]': 'context === \"info\"',\n    '[class.context-error]': 'context === \"error\"',\n    '[class.context-success]': 'context === \"success\"',\n    '[class.context-warning]': 'context === \"warning\"',\n    '[class.nx-message--closable]': 'closable'\n\n  }\n})\nexport class NxMessageComponent {\n\n  private _context: CONTEXT = 'regular';\n\n  /**\n   * Sets the context of the message.\n   * The message box will color accordingly. Default: 'regular' */\n  @Input('nxContext')\n  set context(value: CONTEXT) {\n    if (value !== this._context) {\n      this._context = value;\n      this._icon = this.getIconName();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get context(): CONTEXT {\n    return this._context;\n  }\n\n  private _showIcon: boolean = false;\n\n  /**\n   * Whether an icon that belongs to the context of the message should be displayed.\n   * @deprecated The `showIcon` attribute should be always true in future. Messages without an icon are deprecated.\n   * @deletion-target 9.0.0\n   * */\n  @Input()\n  set showIcon(value: boolean) {\n    this._showIcon = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showIcon(): boolean {\n    return this._showIcon;\n  }\n\n  private _closable: boolean = false;\n\n  /** Whether a message should have a close icon in order to be dismissed. */\n  @Input()\n  set closable(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._closable) {\n      this._closable = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closable(): boolean {\n    return this._closable;\n  }\n\n  private _icon: string;\n\n  /** @docs-private */\n  get icon(): string {\n    return this._icon;\n  }\n\n  private _closeButtonLabel: string = 'Close dialog';\n\n  /** Sets the label of the close button of the message. */\n  @Input()\n  set closeButtonLabel(value: string) {\n    if (value !== this._closeButtonLabel) {\n      this._closeButtonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closeButtonLabel(): string {\n    return this._closeButtonLabel;\n  }\n\n\n  /** Event emitted when the close icon of the message has been clicked. */\n  @Output('close') closeEvent = new EventEmitter<void>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  _emitCloseEvent() {\n    this.closeEvent.emit();\n  }\n\n  /** @docs-private */\n  getIconName(): string {\n    if (this._context === 'info') {\n      return ICONS.info;\n    } else if (this._context === 'error') {\n      return ICONS.error;\n    } else if (this._context === 'success') {\n      return ICONS.success;\n    } else if (this._context === 'warning') {\n      return ICONS.warning;\n    }\n    return '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxMessageComponent } from './message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxMessageComponent\n  ],\n  exports: [\n    NxMessageComponent\n  ]\n})\nexport class NxMessageModule {\n\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'nx-page-search',\n  templateUrl: 'page-search.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ 'page-search.component.scss' ],\n})\nexport class NxPageSearchComponent {\n  /** An event emitted when the user clicks the search button. */\n  @Output('nxButtonClick') buttonClick = new EventEmitter();\n\n  private _buttonLabel: string = null;\n\n  /** Sets the text label of the button. */\n  @Input('nxButtonLabel')\n  set buttonLabel(value: string) {\n    if (this._buttonLabel !== value) {\n      this._buttonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get buttonLabel(): string {\n    return this._buttonLabel;\n  }\n\n  private _hideSearchButton = false;\n\n  /** Whether the search button should be hidden. */\n  @Input('nxHideSearchButton')\n  set hideSearchButton(value: boolean) {\n    this._hideSearchButton = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get hideSearchButton(): boolean {\n    return this._hideSearchButton;\n  }\n\n  private _buttonLayout = '12,12,12,2';\n\n  /** Layout of the search button inside of a NxGrid. Default: 12,12,12,2. */\n  @Input('nxButtonLayout')\n  set buttonLayout(value: string) {\n    if (this._buttonLayout !== value) {\n      this._buttonLayout = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get buttonLayout(): string {\n    return this._buttonLayout;\n  }\n\n  private _contentLayout: string = null;\n\n  /** Layout of the content area inside of a NxGrid. Default: 12,12,12,10 | 12 (if search button is hidden). */\n  @Input('nxContentLayout')\n  set contentLayout(value: string) {\n    if (this._contentLayout !== value) {\n      this._contentLayout = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get contentLayout(): string {\n    if (this._contentLayout) {\n      return this._contentLayout;\n    }\n    return !this.hideSearchButton ? '12,12,12,10' : '12';\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  onButtonClick() {\n    this.buttonClick.emit();\n  }\n}\n","import { NxGridModule } from '@allianz/ngx-ndbx/grid';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NxAutocompleteModule} from '@allianz/ngx-ndbx/autocomplete';\nimport {NxFormfieldModule} from '@allianz/ngx-ndbx/formfield';\nimport {NxPageSearchComponent} from './page-search.component';\nimport {NxButtonModule} from '@allianz/ngx-ndbx/button';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxAutocompleteModule,\n    NxFormfieldModule,\n    NxButtonModule,\n    NxGridModule\n  ],\n  declarations: [\n    NxPageSearchComponent\n  ],\n  exports: [\n    NxPageSearchComponent\n  ]\n})\nexport class NxPageSearchModule {\n\n}\n","import { NxIconComponent } from '@allianz/ngx-ndbx/icon';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'nx-rating',\n  templateUrl: './rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./rating.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRatingComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-rating--negative]': 'negative',\n    '[class.nx-rating--disabled]': 'disabled',\n  }\n})\nexport class NxRatingComponent implements ControlValueAccessor {\n\n  private _value: number = 0;\n  /** Sets the selected rating 1 - 5. */\n  @Input('nxValue')\n  set value(newValue: number) {\n    this._value = coerceNumberProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  private _disabled: boolean = false;\n  /** Whether the rating component should be disabled. */\n  @Input('nxDisabled')\n  set disabled( newValue: boolean) {\n    if (this._disabled === newValue) {\n      return;\n    }\n    this._disabled = coerceBooleanProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the negative colors be used. */\n  @Input('nxNegative')\n  set negative(newValue: boolean) {\n    if (this._negative === newValue) {\n      return;\n    }\n    this._negative = coerceBooleanProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _startLabel: string = null;\n  /** Sets the label painted at the start of the rating component. */\n  @Input('nxStartLabel')\n  set startLabel(newValue: string) {\n    this._startLabel = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get startLabel(): string {\n    return this._startLabel;\n  }\n\n  private _endLabel: string = null;\n  /** Sets the label painted at the end of the rating component. */\n  @Input('nxEndLabel')\n  set endLabel(newValue: string) {\n    this._endLabel = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get endLabel(): string {\n    return this._endLabel;\n  }\n\n  private _ariaLabel: string[] = ['1/5', '2/5', '3/5', '4/5', '5/5'];\n  @Input('nxAriaLabel')\n  /** Sets an array of custom aria-describedby attributes for each of the stars in the component. */\n  set ariaLabel(newAriaLabels: string[]) {\n    this._ariaLabel = newAriaLabels;\n    this._changeDetectorRef.markForCheck();\n  }\n  get ariaLabel(): string[] {\n    return this._ariaLabel;\n  }\n  /** An event is dispatched each time when the rating changes. */\n  @Output('nxValueChange') valueChange = new EventEmitter<number>();\n\n  /** @docs-private */\n  @ViewChildren(NxIconComponent, {read: ElementRef}) icons: QueryList<ElementRef>;\n  private onTouchedCallback = () => {};\n  private onChangeCallback = (option: any) => {};\n\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** Whether the given rating is selected. */\n  isSelected(index: number) {\n    return index <= this.value;\n  }\n\n  /** Allows to set the rating. */\n  setSelection(value: number) {\n    if (!this.disabled) {\n      this.value = value;\n      this.valueChange.emit(value);\n      this.onTouchedCallback();\n      this.onChangeCallback(this.value);\n    }\n  }\n\n  /** @docs-private */\n  handleKeyUp(event: KeyboardEvent, rating: number) {\n    const keyCode = event.keyCode;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (keyCode === ENTER) {\n      this.setSelection(rating);\n    }\n\n    if (keyCode === RIGHT_ARROW) {\n      this.value = Math.min(this.value + 1, 5);\n      const elementRef: ElementRef = this.icons.toArray()[this.value - 1];\n      elementRef.nativeElement.focus();\n    }\n\n    if (keyCode === LEFT_ARROW) {\n      this.value = Math.max(this.value - 1, 1);\n      const elementRef: ElementRef = this.icons.toArray()[this.value - 1];\n      elementRef.nativeElement.focus();\n    }\n  }\n\n  writeValue(value: number): void {\n    this.value = value;\n  }\n\n  registerOnChange(callback: any): void {\n    this.onChangeCallback = callback;\n  }\n\n  registerOnTouched(callback: any): void {\n    this.onTouchedCallback = callback;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  getAriaLabel(rating) {\n    return this.ariaLabel[rating - 1];\n  }\n\n  /** @docs-private */\n  getIconName(rating: number) {\n    return 'star' + ((!this.isSelected(rating)) ? '-o' : '');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxRatingComponent} from './rating.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxRatingComponent\n  ],\n  exports: [\n    NxRatingComponent\n  ]\n})\nexport class NxRatingModule {\n\n}\n","import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n\n\n@Injectable()\nexport class NxNumberStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** The aria label for the decrement '-' button */\n  decrementAriaLabel: string = 'Decrement';\n  /** The aria label for the increment '+' button */\n  incrementAriaLabel: string = 'Increment';\n}\n","import { getFontShorthand } from '@allianz/ngx-ndbx/utils';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\n\n/** @docs-private */\n@Directive({\n  selector: 'input[nxAutoResize]'\n})\nexport class NxAutoResizeDirective implements AfterViewInit, OnDestroy {\n\n  @HostBinding('style.width.px') width: number;\n\n  private _resize: boolean = true;\n  @Input('nxAutoResize')\n  set resize(value: boolean) {\n    this._resize = coerceBooleanProperty(value);\n    if (this._resize) {\n      this._addEventListener();\n      this.updateInputWidth();\n    } else {\n      this._removeEventListener();\n    }\n  }\n  get resize(): boolean {\n    return this._resize;\n  }\n\n  constructor(private _element: ElementRef,\n              private _renderer: Renderer2,\n              private _cdr: ChangeDetectorRef) {\n    this.updateInputWidth = this.updateInputWidth.bind(this);\n  }\n\n  ngAfterViewInit() {\n    if (this.resize) {\n      this._addEventListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this._removeEventListener();\n  }\n\n  updateInputWidth() {\n    const measureCanvas = this._renderer.createElement('canvas');\n\n    const ctx = measureCanvas.getContext('2d');\n    const styles = window.getComputedStyle(this._element.nativeElement);\n\n    ctx.font = getFontShorthand(styles);\n\n    const metrics = ctx.measureText(this._element.nativeElement.value);\n\n    const padding = this.sumStyles(styles.paddingLeft, styles.paddingRight);\n    const border = this.sumStyles(styles.borderLeftWidth, styles.borderRightWidth);\n    // the pixels are needed, because despite the correct calculation the last pixels of a number are always cut\n    const newWidth = metrics.width + padding + border + 16;\n\n    // Limit to own given minimal width\n    const parsed = parseFloat(styles.minWidth);\n    this.width = Math.max(Number.isNaN(parsed) ? 0 : parsed, newWidth);\n\n    // needed when the outer component is onPush\n    this._cdr.markForCheck();\n  }\n\n  _addEventListener() {\n    this._element.nativeElement.addEventListener('input', this.updateInputWidth, true);\n    this._element.nativeElement.addEventListener('change', this.updateInputWidth, true);\n  }\n\n  _removeEventListener() {\n    this._element.nativeElement.removeEventListener('input', this.updateInputWidth, true);\n    this._element.nativeElement.removeEventListener('change', this.updateInputWidth, true);\n  }\n\n  sumStyles(left, right) {\n    left = parseInt(left, 10);\n    right = parseInt(right, 10);\n    left = Number.isNaN(left) ? 0 : left;\n    right = Number.isNaN(right) ? 0 : right;\n    return left + right;\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { NxNumberStepperIntl } from './number-stepper-intl';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mapClassNames, numberOfDecimals, pad } from '@allianz/ngx-ndbx/utils';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n  OnDestroy\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\n\nimport { MappedStyles } from '@allianz/ngx-ndbx/core';\nimport { NxAutoResizeDirective } from './auto-resize.directive';\nimport { Decimal } from 'decimal.js';\n\nconst SIZE_MAPPING = {\n  big: 'nx-stepper--big',\n  normal: ''\n};\nconst STYLE_MAPPING = {\n  regular: '',\n  bold: 'nx-stepper__input--bold',\n  light: 'nx-stepper__input--light'\n};\nconst DEFAULT_CLASSES = ['nx-stepper'];\nconst INPUT_CLASSES = ['nx-stepper__input'];\n\nconst ALLOWED_CHARACTERS = new RegExp(/^-?[0-9]\\d*(\\.\\d+)?$/g);\nconst CUSTOM_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NxNumberStepperComponent),\n  multi: true\n};\nconst CUSTOM_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NxNumberStepperComponent),\n  multi: true\n};\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'nx-number-stepper',\n  templateUrl: 'number-stepper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['number-stepper.component.scss'],\n  inputs: ['classNames: nxSize'],\n  host: {\n    '[class.is-negative]': 'negative'\n  },\n  providers: [CUSTOM_VALUE_ACCESSOR, CUSTOM_VALIDATOR]\n})\nexport class NxNumberStepperComponent extends MappedStyles\n  implements OnInit, AfterViewInit, ControlValueAccessor, Validator, OnDestroy {\n  private _step: number = 1;\n  private _min: number = 0;\n  private _max: number = 100;\n  private _value: number = 0;\n  private _label = null;\n  private _resize: boolean = false;\n  private _intlSubscription: Subscription;\n  private _negative: boolean = false;\n  private _leadingZero: boolean = true;\n\n  /**\n   * Defines the size of the number stepper.\n   *\n   * Values: big | normal. Default: normal\n   */\n  classNames: string;\n\n  /** @docs-private */\n  public inputClassNames: string = mapClassNames(\n    'regular',\n    INPUT_CLASSES,\n    STYLE_MAPPING\n  );\n  private _style: string;\n\n  /** @docs-private */\n  public inputId = `nx-number-stepper-${nextUniqueId++}`;\n\n  /** @docs-private */\n  public inputWidth;\n\n  /** @docs-private */\n  public ariaDescribedBy = null;\n\n  /** @docs-private */\n  @ViewChild('numberInput') numberInput: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('customLabel') ngContentWrapper: ElementRef;\n\n  /** @docs-private */\n  @ViewChild(NxAutoResizeDirective) autoResize: NxAutoResizeDirective;\n\n  /** An event emitted on value change. */\n  @Output('nxValueChange') valueChange = new EventEmitter<number>();\n\n  /** Whether the input should be resized. Default: false */\n  @Input('nxResize')\n  set resize(value: boolean) {\n    this._resize = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get resize(): boolean {\n    return this._resize;\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  /** Defines the the label shown above the stepper input. */\n  @Input('nxLabel')\n  set label(value: string) {\n    if (this._label !== value) {\n      this._label = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get style(): string {\n    return this._style;\n  }\n\n  /**\n   * Defines the font weight of the input.\n   *\n   * Possible values: regular, bold, light. Default value: regular\n   *\n   * @deprecated The style input is not available anymore, only default font-weight should be used.\n   * @deletion-target 8.0.0\n   */\n  @Input('nxStyle')\n  set style(value: string) {\n    if (this._style === value) {\n      return;\n    }\n    this._style = value;\n    this.inputClassNames = mapClassNames(value, INPUT_CLASSES, STYLE_MAPPING);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Sets the step size. Default: 1 */\n  @Input('nxStep')\n  set step(value: number) {\n    // only internal changes no need to call markForCheck\n    this._step = Number(value);\n  }\n\n  get step(): number {\n    return this._step;\n  }\n\n  /** Sets the minimum accepted number. Default: 0 */\n  @Input('nxMin')\n  set min(value: number) {\n    this._min = Number(value);\n  }\n\n  get min(): number {\n    return this._min;\n  }\n\n  /** Sets the maximum accepted number. Default: 100 */\n  @Input('nxMax')\n  set max(value: number) {\n    this._max = Number(value);\n  }\n\n  get max(): number {\n    return this._max;\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  /** Sets the value of the number-stepper. */\n  @Input('nxValue')\n  set value(value: number | null) {\n    this._value = value;\n    if (this._value !== null) {\n      this.setInputValue(this._value);\n    } else {\n      this.setInputValue(0);\n    }\n    this.triggerResize();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Whether the negative set of styling should be used. */\n  @Input()\n  set negative(value: boolean) {\n    if (this._negative !== value) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  /** Whether the number stepper value should have a leading zero.\n   *\n   * Default value is true.\n   */\n  @Input()\n  set leadingZero(value: boolean) {\n    if (this._leadingZero !== value) {\n      this._leadingZero = coerceBooleanProperty(value);\n      this.setInputValue(this.value);\n    }\n  }\n  get leadingZero(): boolean {\n    return this._leadingZero;\n  }\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    _renderer: Renderer2,\n    _elementRef: ElementRef,\n    public _intl: NxNumberStepperIntl\n  ) {\n    super(SIZE_MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);\n    this._intlSubscription = this._intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  ngOnInit() {\n    this.setInputValue(this._value);\n  }\n\n  ngAfterViewInit() {\n    // defer to prevent checked after change errors\n    if (this.resize) {\n      setTimeout(() => this.triggerResize());\n    }\n    if (this.ngContentWrapper) {\n      this.ariaDescribedBy = this.ngContentWrapper.nativeElement.children.length > 0 ? `label-for-${this.inputId}` : null;\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  setInputValue(value) {\n    if (this.leadingZero) {\n      this.numberInput.nativeElement.value = pad(value.toString(), 2);\n    } else {\n      this.numberInput.nativeElement.value = value.toString();\n    }\n  }\n\n  /* ControlValueAccessor Implementations */\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  private onChangeCallback = (_: any) => { };\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => { };\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  /** @docs-private */\n  onInputChange(event) {\n    if (!this.validateUserInput(event.target.value)) {\n      this._value = null;\n    } else {\n      this._value = Number(event.target.value);\n    }\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  validateUserInput(input: string) {\n    return !!input.match(ALLOWED_CHARACTERS);\n  }\n\n  /** @docs-private */\n  increment() {\n    let newValue;\n    if (this.isBetweenLimits(this._value)) {\n      newValue = this.getNextGreaterValue(this._value);\n    } else {\n      newValue = this.enforceLimits(this._value);\n    }\n    this.value = newValue;\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  triggerResize() {\n    if (this.resize) {\n      this.autoResize.updateInputWidth();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** @docs-private */\n  decrement() {\n    let newValue;\n    if (this.isBetweenLimits(this._value)) {\n      newValue = this.getNextLowerValue(this._value);\n    } else {\n      newValue = this.enforceLimits(this._value);\n    }\n    this.value = newValue;\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  enforceLimits(value) {\n    if (value > this._max) {\n      return this._max;\n    } else if (value < this._min) {\n      return this._min;\n    }\n    return value;\n  }\n\n  /** @docs-private */\n  getNextLowerValue(start) {\n    // if there is an invalid input start is null\n    if (!start) {\n      start = 0;\n    }\n\n    let next;\n    if (this.isValidStep(start)) {\n      next = (new Decimal(start).minus(new Decimal(this._step))).toNumber();\n    } else {\n      next = new Decimal(start).toNearest(this._step, Decimal.ROUND_DOWN).toNumber();\n    }\n    return this.enforceLimits(next);\n  }\n\n  /** @docs-private */\n  getNextGreaterValue(start) {\n    let next;\n    if (!start) {\n      start = 0;\n    }\n    if (this.isValidStep(start)) {\n      next = (new Decimal(start).plus(new Decimal(this._step))).toNumber();\n    } else {\n      next = new Decimal(start).toNearest(this._step, Decimal.ROUND_UP).toNumber();\n    }\n    return this.enforceLimits(next);\n  }\n\n  /** @docs-private */\n  isBetweenLimits(value) {\n    return value <= this._max && value >= this._min;\n  }\n\n  /** @docs-private */\n  isMinimum() {\n    return this._value === this._min;\n  }\n\n  /** @docs-private */\n  isMaximum() {\n    return this._value === this._max;\n  }\n\n  /** @docs-private */\n  isValidStep(value) {\n    if (value === null) {\n      value = new Decimal(0);\n    }\n    const min = new Decimal(this._min);\n    const valueDec = new Decimal(value);\n    const checkValue = (min.minus(valueDec)).mod(new Decimal(this._step)).toNumber();\n\n    if (\n      this.isBetweenLimits(value) && ((this.isMinimum() || this.isMaximum()) ||\n      checkValue === 0)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /** @docs-private */\n  userInputToNumber(value): number {\n    const current = value === '' ? 0 : value;\n    return parseInt(current, 10);\n  }\n\n  _validateFn() {\n    // the manual user input must match min + n * step, e.g. minimum 1 step 2: 1, 3, 5, 7 etc.\n    if (!this.isValidStep(this._value)) {\n      return { nxNumberStepperStepError: 'Value is not a valid step' };\n    } else if (this._value === null) {\n      return { nxNumberStepperFormatError: 'Not a valid number' };\n    }\n    return null;\n  }\n\n  /** @docs-private */\n  validate(c: FormControl) {\n    return this._validateFn();\n  }\n\n  get _buttonType(): string {\n    return 'secondary' + (this.negative ? ' negative' : '');\n  }\n}\n","import { Directive } from '@angular/core';\n\n/** Directive used to pass a suffix to the number stepper. */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-number-stepper-prefix',\n  host: {\n    'class': 'nx-stepper__prefix'\n  }\n})\nexport class NxNumberStepperPrefixDirective {\n}\n","import { Directive } from '@angular/core';\n\n/** Directive used to pass a suffix to the number stepper. */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-number-stepper-suffix',\n  host: {\n    'class': 'nx-stepper__suffix'\n  }\n})\nexport class NxNumberStepperSuffixDirective {\n}\n","import { NxNumberStepperIntl } from './number-stepper-intl';\nimport { NxAutoResizeDirective } from './auto-resize.directive';\nimport { CommonModule } from '@angular/common';\nimport { NxButtonModule } from '@allianz/ngx-ndbx/button';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { NgModule } from '@angular/core';\n\nimport { NxNumberStepperComponent } from './number-stepper.component';\nimport { FormsModule } from '@angular/forms';\nimport { NxNumberStepperPrefixDirective } from './number-stepper-prefix.directive';\nimport { NxNumberStepperSuffixDirective } from './number-stepper-suffix.directive';\n\n@NgModule({\n  imports: [\n    NxInputModule,\n    FormsModule,\n    NxIconModule,\n    NxButtonModule,\n    CommonModule\n  ],\n  exports: [\n    NxNumberStepperComponent,\n    NxAutoResizeDirective,\n    NxNumberStepperPrefixDirective,\n    NxNumberStepperSuffixDirective\n  ],\n  declarations: [\n    NxNumberStepperComponent,\n    NxAutoResizeDirective,\n    NxNumberStepperPrefixDirective,\n    NxNumberStepperSuffixDirective\n  ],\n  providers: [NxNumberStepperIntl],\n})\nexport class NxNumberStepperModule { }\n","\n\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\n\n/**\n * Interface for providing custom labels in a simple pagination.\n * With an implementation you can localize your pagination with the NX_PAGINATION_TEXTS injection token.\n */\nexport interface IPaginationTexts {\n  /** Label that should replace 'previous'. */\n  previous: string;\n\n  /** Label that should replace 'next'. */\n  next: string;\n\n  /** Label that should replace 'first'.\n   *\n   * Optional attribute needed only for the advanced pagination.\n   */\n  first?: string;\n\n  /** Label that should replace 'last'.\n   *\n   * Optional attribute needed only for the advanced pagination.\n   */\n  last?: string;\n\n  /** Label that should replace 'of'. */\n  ofLabel: string;\n\n  /** Label that should replace the aria label. */\n  ariaLabel: string;\n}\n\nexport const DefaultPaginationTexts =  {\n  previous: 'Previous',\n  next: 'Next',\n  first: 'First',\n  last: 'Last',\n  ofLabel: 'of',\n  ariaLabel: 'Please select your page'\n};\n\n\n/** InjectionToken for pagination that can be used to override default locale code. */\nexport const NX_PAGINATION_TEXTS = new InjectionToken<IPaginationTexts>('nx-pagination-texts');\n","import { Injectable } from '@angular/core';\nimport { Page } from './pagination.component';\n\n/** @docs-private */\n@Injectable()\nexport class NxPaginationUtils  {\n  private _pagesToShow = 3;\n  private _elipsisText: string = '...';\n  private _classExpanded: string = 'expanded-view';\n\n  getPages(currentPage: number, totalPages: number): Page[] {\n\n    let pages = [];\n    let start = [], middle = [], end = [];\n\n    // First array -> start\n    start = this.getStartArray(currentPage, totalPages);\n    // Second array -> middle\n    middle =  this.getMiddleArray(currentPage, totalPages);\n    // Third array -> end\n    end = this.getEndArray(currentPage, totalPages);\n\n    pages = [ ...start, ...middle, ...end ];\n\n    return pages;\n  }\n\n  getMiddleArray(currentPage: number, totalPages: number): Array<any> {\n    let pageNumber = currentPage < 6 ? 4 : currentPage - 1;\n    const middle = [];\n\n    while (\n      middle.length < 3 &&\n      pageNumber >= 2 &&\n      pageNumber <= totalPages - 3 &&\n      (pageNumber <= currentPage + 1 && pageNumber >= currentPage - 1)\n    ) {\n      middle.push(this.createPaginationItem(pageNumber, pageNumber));\n      pageNumber++;\n    }\n    return middle;\n  }\n  getEndArray(currentPage: number, totalPages: number): Array<any> {\n    const end = [];\n    let currentItemToShow: number =\n      totalPages <= 3 ? totalPages + 1 :\n      totalPages <= 6 ? totalPages - (totalPages - 4) : totalPages - 2 ;\n    const showEllipsis = currentPage < totalPages - 4;\n\n    while (currentItemToShow <= totalPages) {\n      const endItem = end.length === 0 && showEllipsis ?\n        this.createPaginationItem(this._elipsisText, currentItemToShow, true) :\n        this.createPaginationItem(currentItemToShow , currentItemToShow, true);\n      end.push(endItem);\n      currentItemToShow++;\n    }\n\n    return end;\n  }\n  getStartArray(currentPage: number, totalPages: number): Array<any> {\n    let counterPages = 0;\n    const start = [];\n    const maxSizeArray = 3;\n\n    while (counterPages < maxSizeArray && counterPages < totalPages) {\n      const startItem = counterPages === 2 && currentPage > 5 ?\n        this.createPaginationItem(this._elipsisText, counterPages, true) :\n        this.createPaginationItem(counterPages + 1 , counterPages + 1, true);\n\n      start.push(startItem);\n      counterPages++;\n    }\n\n    return start;\n  }\n\n\n  private createPaginationItem(label: string | number, value: number, classExpanded?: boolean) {\n    return { label: label, value: value, class: classExpanded ? this._classExpanded : ''  };\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { DefaultPaginationTexts, IPaginationTexts, NX_PAGINATION_TEXTS } from './pagination-texts';\nimport { NxPaginationUtils } from './pagination-utils';\n\n/** @docs-private */\nexport interface Page {\n  label: string;\n  value: any;\n  class: string;\n}\n\n@Component({\n  selector: 'nx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './pagination.component.scss' ],\n})\n\nexport class NxPaginationComponent implements OnInit, AfterContentInit {\n  private _page: number;\n  private _count: number;\n  private _perPage: number;\n  private _type: string = 'simple';\n\n  /** @docs-private */\n  paginationTexts: IPaginationTexts;\n\n  /** @docs-private */\n  totalNumberPages: number = 0;\n\n  get page(): number { return this._page; }\n\n  /** Sets the current page. */\n  @Input('nxPage') // the current page\n  set page(value: number) {\n    this._page = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get count(): number { return this._count; }\n\n  /** Number of total items over all pages. */\n  @Input('nxCount') // how many total items there are in all pages\n  set count(value: number) {\n    this._count = value;\n    this.totalNumberPages =  this.calculateTotalPages();\n    this._changeDetectorRef.markForCheck();\n  }\n  get perPage(): number { return this._perPage; }\n\n  /** Sets the number of items you want to show per page. */\n  @Input('nxPerPage') // how many items we want to show per page\n  set perPage(value: number) {\n    this._perPage = value;\n    this.totalNumberPages =  this.calculateTotalPages();\n    this._changeDetectorRef.markForCheck();\n  }\n  get type(): string { return this._type; }\n\n  /**\n   * Determines the type of pagination.\n   *\n   * Values: simple |Â advanced, default: simple.\n   */\n  @Input('nxType')\n  set type(value: string) { // type advanced or simple\n    this._type = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** An event emitted when the previous page button is clicked. */\n  @Output() nxGoPrev = new EventEmitter<void>();\n\n  /** An event emitted when the next page button is clicked */\n  @Output() nxGoNext = new EventEmitter<void>();\n\n  /**\n   * An event emitted when a page number is clicked.\n   * Provides the number of the page as parameter.\n   */\n  @Output() nxGoPage = new EventEmitter<number>();\n\n  constructor(\n      @Optional() @Inject(NX_PAGINATION_TEXTS) paginationTexts: IPaginationTexts,\n      private paginationUtilsService: NxPaginationUtils,\n      private _changeDetectorRef: ChangeDetectorRef) {\n    this.paginationTexts = paginationTexts || DefaultPaginationTexts;\n   }\n\n  ngOnInit() {\n    this.totalNumberPages =  this.calculateTotalPages();\n  }\n\n  ngAfterContentInit() {\n    if (this.type === 'advanced' && (!this.paginationTexts.last || !this.paginationTexts.first)) {\n      console.warn('Please define aria labels for the last and first arrows.');\n    }\n  }\n\n  /** Returns the number of the first page. */\n  getMin(): number {\n    return ((this._perPage * this._page) - this._perPage) + 1;\n  }\n\n  /** Returns the number of the last page. */\n  getMax(): number {\n    let max = this._perPage * this._page;\n    if (max > this._count) {\n      max = this._count;\n    }\n    return max;\n  }\n\n  /** Returns the total number of pages */\n  calculateTotalPages(): number {\n    return Math.ceil(this._count / this._perPage) || 0;\n  }\n\n  /** Directs to the page with number n. */\n  onPage(n: number): void {\n    this.nxGoPage.emit(n);\n  }\n\n  /** Directs to the previous page. */\n  onPrev(): void {\n    if (!this._isPaginationPreviousDisabled()) {\n      this.nxGoPrev.emit();\n    }\n  }\n\n  /** Directs to the next page. */\n  onNext(): void {\n    if (!this._isPaginationNextDisabled()) {\n      this.nxGoNext.emit();\n    }\n  }\n\n  /** Directs to the first page. */\n  onFirst() {\n    if (!this._isPaginationPreviousDisabled()) {\n      this.onPage(1);\n    }\n  }\n\n  /** Directs to the last page. */\n  onLast() {\n    if (!this._isPaginationNextDisabled()) {\n      this.onPage(this.totalNumberPages);\n    }\n  }\n\n  /** Returns if the current page is the last page. */\n  lastPage(): boolean {\n    return this._perPage * this._page >= this._count;\n  }\n\n  /** @docs-private */\n  getPages(): Page[] {\n    return this.paginationUtilsService.getPages(this._page, this.totalNumberPages);\n  }\n\n  /** @docs-private */\n  getPaginationItemClasses(page: Page): Object {\n    const classes = {\n      'is-ellipsis': page.label === '...',\n      'nx-pagination__item--expanded-view': page.class === 'expanded-view'\n    };\n    return classes;\n  }\n\n  /** @docs-private */\n  getPaginationNumberClasses(page: Page): Object {\n    const classes = {\n      'is-active': page.value === this.page,\n      'nx-pagination__ellipsis': page.label === '...',\n      'nx-pagination__link': page.label !== '...'\n    };\n    return classes;\n  }\n\n  /** Returns true, if `nxCount` is greater than 0, else false. */\n  isPaginationVisible(): boolean {\n    return this.count > 0;\n  }\n\n  /** Returns true, if `nxCount` is greater than 0 and the type of pagination is 'simple', else false. */\n  isPaginationCompactVisible(): boolean {\n    return this.type.includes('simple') && this.count > 0;\n  }\n\n  /** @docs-private */\n  isPaginationContainerVisible(): boolean {\n    return this.type.includes('advanced');\n  }\n\n  _isPaginationPreviousDisabled(): boolean {\n    return this.page === this.getMin();\n  }\n\n  _isPaginationNextDisabled(): boolean {\n    return this.page === this.totalNumberPages;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxPaginationComponent } from './pagination.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxPaginationUtils } from './pagination-utils';\n\n@NgModule({\n  imports: [\n    CommonModule, NxIconModule\n  ],\n  declarations: [\n    NxPaginationComponent\n  ],\n  exports: [\n    NxPaginationComponent\n  ],\n  providers: [\n    NxPaginationUtils\n  ]\n})\nexport class NxPaginationModule { }\n","import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject ,  Observable } from 'rxjs';\n\nexport class TableDataSource extends DataSource<any> {\nconstructor(private _datachange: BehaviorSubject<any[]>) {\nsuper();\n}\n/** @docs-private Connect function called by the table to retrieve one stream containing the data to render. */\nconnect(): Observable<Object[]> {\nreturn this._datachange;\n}\n/** @docs-private */\ndisconnect() { }\n}\n","import { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnInit, Output, ChangeDetectorRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NxDisplayedColumns } from './displayedColumns';\nimport { TableDataSource } from './tabledata-source';\n\nconst MAPPING = {\n  light: 'nx-table--light',\n  border: 'nx-table--light nx-table--with-border'\n};\nconst DEFAULT_CLASSES = [ 'nx-table ' ];\n\n@Component({\n  selector: 'nx-dynamic-table',\n  templateUrl: './dynamic-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './dynamic-table.component.scss' ],\n})\nexport class NxDynamicTableComponent implements OnInit {\n\n  private _tableStyles: string = '';\n  private _dataChange: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  private _dataSource: TableDataSource | null;\n  private _data: any[];\n  private _classNames: string = mapClassNames('', DEFAULT_CLASSES, MAPPING);\n  private _displayedColumns: NxDisplayedColumns[];\n  private _columnKeys: string[];\n\n  /** Sets the data that it will show in the table. */\n  @Input('nxData')\n  set data(value: any[]) {\n    this._data = value\n      .filter(element => element);\n    // If user dont pass displayedColumns the table will show all data and the name of columns will be the key of data\n    if (!this._displayedColumns) {\n      const keys = [], cArray = [];\n      // For catch keys of data Objects and assing title, key and type string by default to displayedColumns\n      this._data\n        .forEach(element => {\n          for (const key in element) {\n            if (keys.indexOf(key) === -1) {\n              keys.push(key);\n              cArray.push({ title: key, key: key, type: 'string' });\n            }\n          }\n        });\n      this._columnKeys = keys;\n      this._displayedColumns = cArray;\n      // need to call markForCheck as the setter changes displayedColumns here\n      // sidenote: isn't needed for the data itself as it gets passed to the cdk-table\n      // by the datasource observable\n      this._changeDetectorRef.markForCheck();\n    }\n    this._dataChange.next(this._data);\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  /** Sets the name order and type of columns. */\n  @Input('nxDisplayedColumns')\n  set displayedColumns(value: NxDisplayedColumns[]) {\n    this._displayedColumns = value;\n    this._columnKeys = value.map(column => column.key);\n    this._changeDetectorRef.markForCheck();\n  }\n  get displayedColumns(): NxDisplayedColumns[] {\n    return this._displayedColumns;\n  }\n\n  /** @deprecated The default and light header styling will be removed.\n   * @deletion-target 8.0.0\n  */\n  @Input('nxType')\n  set styles(value: string) {\n    if (this._tableStyles === value) {\n      return;\n    }\n    this._classNames = mapClassNames(value, DEFAULT_CLASSES, MAPPING);\n    this._tableStyles = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** An event is dispatched when a row is clicked. */\n  @Output() nxRowClick = new EventEmitter();\n\n  /** @docs-private */\n  get dataSource(): TableDataSource {\n    return this._dataSource;\n  }\n  /** @docs-private */\n  get classNames(): string {\n    return this._classNames;\n  }\n  /** @docs-private */\n  get columnKeys(): string[] {\n    return this._columnKeys;\n  }\n\n  constructor(private el: ElementRef, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    if (!this._data) {\n      this._data = [];\n      this._dataChange.next(this._data);\n    }\n    this._dataSource = new TableDataSource(this._dataChange);\n  }\n\n  /** @docs-private */\n  handleRowClick(row: Object): void {\n    this.nxRowClick.emit(row);\n  }\n\n  /** @docs-private */\n  isNumeric(element: NxDisplayedColumns): boolean {\n    if (element.type === 'numeric') {\n      return true;\n    }\n    return false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxDynamicTableComponent } from './dynamic-table.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\n@NgModule({\n  declarations: [ NxDynamicTableComponent ],\n  exports: [ NxDynamicTableComponent ],\n  imports: [ CommonModule, CdkTableModule, ScrollDispatchModule ]\n})\nexport class NxDynamicTableModule { }\n","import { Directive, Input } from '@angular/core';\nimport { CdkAccordion } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AccordionStyle } from './expansion-panel';\n\nconst DEFAULT_TYPE: AccordionStyle = 'regular';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-accordion',\n  host: {\n    '[class.nx-accordion]': 'true',\n    'role': 'presentation'\n  }\n})\nexport class NxAccordionDirective extends CdkAccordion {\n\n  private _style: AccordionStyle = 'regular';\n\n  /**\n   * Value for the styling that should be chosen.\n   * Default value: 'regular'\n   */\n  @Input('nxStyle')\n  set style(value: AccordionStyle) {\n    value = value ? value : DEFAULT_TYPE;\n\n    const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE];\n    this._style = newValue as AccordionStyle;\n  }\n  get style(): AccordionStyle {\n    return this._style;\n  }\n\n  private _negative: boolean = null;\n\n  /** Whether the negative set of styles should be used. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n}\n","import { AnimationTriggerMetadata, trigger, state, style, transition, animate } from '@angular/animations';\n\nexport const nxAccordionAnimations: {\n  readonly bodyExpansion: AnimationTriggerMetadata;\n  readonly indicatorRotate: AnimationTriggerMetadata;\n} = {\n  bodyExpansion: trigger('bodyExpansion', [\n    state('closed', style({height: '0px', visibility: 'hidden'})),\n    state('open', style({height: '*', visibility: 'visible'})),\n    transition('open <=> closed', animate('.5s cubic-bezier(0.86, 0, 0.07, 1)'))\n  ]),\n  indicatorRotate: trigger('indicatorRotate', [\n    state('closed', style({transform: 'rotate(0deg)'})),\n    state('open', style({transform: 'rotate(180deg)'})),\n    transition('open <=> closed', animate('.3s ease')),\n  ])\n};\n","\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[nxExpansionPanelBody]' })\nexport class NxExpansionPanelBodyDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\n\nimport { NxAccordionDirective } from './accordion';\nimport { nxAccordionAnimations } from './accordion-animations';\nimport { NxExpansionPanelBodyDirective } from './expansion-panel-body';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n\nlet nextId = 0;\n\n/** The styling of the accordion. */\nexport type AccordionStyle = 'regular' | 'light';\nconst DEFAULT_TYPE = 'regular';\n\n@Component({\n  selector: 'nx-expansion-panel',\n  exportAs: 'NxExpansionPanelComponent',\n  templateUrl: 'expansion-panel.html',\n  styleUrls: ['expansion-panel.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxAccordionAnimations.bodyExpansion],\n  host: {\n    '[class.nx-expanded]': 'expanded',\n    '[class.nx-expansion-panel--light]': '_accordionStyle === \"light\"',\n    '[class.nx-expansion-panel--regular]': '_accordionStyle === \"regular\"',\n    '[class.nx-expansion-panel--negative]': 'negative'\n  },\n  providers: [\n    // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering\n    // to the same accordion.\n    { provide: NxAccordionDirective, useValue: undefined },\n  ],\n})\nexport class NxExpansionPanelComponent extends CdkAccordionItem implements AfterContentInit, OnChanges, OnDestroy {\n  /** Whether the negative set of styles should be used. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n  private _negative: boolean = null;\n  _accordionStyle: AccordionStyle = DEFAULT_TYPE;\n\n  /**\n   * Value for the styling that should be chosen.\n   * Default value: 'regular'.\n   */\n  @Input('nxStyle')\n  set style(value: AccordionStyle) {\n    value = value ? value : DEFAULT_TYPE;\n\n    const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE];\n    this._style = newValue as AccordionStyle;\n    this._accordionStyle = newValue as AccordionStyle;\n  }\n\n  get style(): AccordionStyle {\n    return this._style;\n  }\n  private _style: AccordionStyle = null;\n\n  /** @docs-private */\n  @ContentChild(NxExpansionPanelBodyDirective) lazyContent;\n\n  private _portal: TemplatePortal;\n\n  /** @docs-private */\n  get portal() {\n    return this._portal;\n  }\n\n  /** @docs-private */\n  accordion: NxAccordionDirective;\n  _headerId = `nx-expansion-panel-header-${nextId++}`;\n\n  /** Stream that emits for changes in `@Input` properties. */\n  readonly _inputChanges = new Subject<SimpleChanges>();\n\n  constructor(@Optional() @SkipSelf() accordion: NxAccordionDirective,\n    _changeDetectorRef: ChangeDetectorRef,\n    _expansionDispatcher: UniqueSelectionDispatcher,\n    private _viewContainerRef: ViewContainerRef\n  ) {\n    super(accordion, _changeDetectorRef, _expansionDispatcher);\n    this.accordion = accordion;\n  }\n\n  ngAfterContentInit() {\n    if (this.lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(\n        startWith(null),\n        filter(() => this.expanded && !this._portal),\n        take(1)\n      ).subscribe(() => {\n        this._portal = new TemplatePortal(this.lazyContent._template, this._viewContainerRef);\n      });\n    }\n\n    // Inherit appearance given by the accordion (if any).\n    if (Boolean(this.accordion)) {\n\n      if (this.style === null && this.accordion.style !== null) {\n        this.style = this.accordion.style;\n      }\n\n      if (this.negative === null && this.accordion.negative !== null) {\n        this.negative = this.accordion.negative;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._inputChanges.complete();\n  }\n\n  /** @docs-private */\n  getOpenState() {\n    return this.expanded ? 'open' : 'closed';\n  }\n}\n","import { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, Host, OnDestroy } from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { nxAccordionAnimations } from './accordion-animations';\nimport { NxExpansionPanelComponent } from './expansion-panel';\n\n\n@Component({\n  selector: 'nx-expansion-panel-header',\n  templateUrl: 'expansion-panel-header.html',\n  styleUrls: ['expansion-panel-header.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxAccordionAnimations.indicatorRotate],\n  host: {\n    '[class.nx-expanded]': 'isExpanded()',\n    'class': 'nx-expansion-panel__header',\n    'role': 'button',\n    '[attr.id]': 'panel._headerId',\n    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n    '[attr.aria-controls]': '_getPanelId()',\n    '[attr.aria-expanded]': 'isExpanded()',\n    '[attr.aria-disabled]': 'panel.disabled',\n    '(keydown)': 'keydown($event)',\n    '(click)': 'toggle()'\n  }\n})\nexport class NxExpansionPanelHeaderComponent implements OnDestroy {\n  private _parentChangeSubscription = Subscription.EMPTY;\n\n  constructor(\n    /** @docs-private */ @Host() public panel: NxExpansionPanelComponent,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this._parentChangeSubscription = merge(\n      panel.opened,\n      panel.closed,\n      panel._inputChanges.pipe(filter(changes => !!(changes.hideToggle || changes.disabled)))\n    )\n    .subscribe(() => this._changeDetectorRef.markForCheck());\n\n  }\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n\n  /** @docs-private */\n  getOpenState(): string {\n    return this.panel.getOpenState();\n  }\n\n  _getPanelId(): string {\n    return this.panel.id;\n  }\n\n  /**\n   * Toggle the expansion panel.\n   */\n  toggle() {\n    this.panel.toggle();\n  }\n\n  /** @docs-private */\n  keydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.toggle();\n        break;\n      default:\n        return;\n    }\n  }\n}\n\n\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-expansion-panel-description',\n  host : {\n    class: 'nx-expansion-panel__header-description'\n  }\n})\nexport class NxExpansionPanelDescriptionDirective {}\n\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-expansion-panel-title',\n  host : {\n    class: 'nx-expansion-panel__header-title'\n  }\n})\nexport class NxExpansionPanelTitleDirective {}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAccordionDirective } from './accordion';\nimport { NxExpansionPanelComponent } from './expansion-panel';\nimport { NxExpansionPanelBodyDirective } from './expansion-panel-body';\nimport {\n  NxExpansionPanelDescriptionDirective,\n  NxExpansionPanelHeaderComponent,\n  NxExpansionPanelTitleDirective,\n} from './expansion-panel-header';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    NxIconModule\n  ],\n  exports: [\n    NxAccordionDirective,\n    NxExpansionPanelComponent,\n    NxExpansionPanelHeaderComponent,\n    NxExpansionPanelDescriptionDirective,\n    NxExpansionPanelTitleDirective,\n    NxExpansionPanelBodyDirective\n  ],\n  declarations: [\n    NxAccordionDirective,\n    NxExpansionPanelComponent,\n    NxExpansionPanelHeaderComponent,\n    NxExpansionPanelDescriptionDirective,\n    NxExpansionPanelTitleDirective,\n    NxExpansionPanelBodyDirective\n  ],\n  providers: [],\n})\nexport class NxAccordionModule { }\n","/** @docs-private */\nexport abstract class NxTabGroupBase {\n\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  Optional,\n  Inject,\n  Host\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'nx-tab',\n  exportAs: 'nxTab',\n  templateUrl: 'tab.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxTabComponent implements OnInit, OnChanges, OnDestroy {\n  private _label: string;\n\n  /** The portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /** Sets the label of the tab shown in the tablist. */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    if (this._label !== value) {\n      this._label = value;\n    }\n  }\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Template inside the NxTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef) _implicitContent: TemplateRef<any>;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    @Inject(NxTabGroupBase) @Optional() @Host() private _tabGroup: NxTabGroupBase) {\n    if (!this._tabGroup) {\n      throw Error(`The nx-tab element has to be wrapped in a nx-tab-group to work.\n      Please provide a nx-tab-group element and place your tabs inside it.`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('label')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._implicitContent, this._viewContainerRef);\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { ChangeDetectionStrategy, Component, Input, ViewChild } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-body',\n  templateUrl: 'tab-body.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./tab-body.scss']\n})\nexport class NxTabBodyComponent {\n\n  @Input() content: TemplatePortal;\n  portal: TemplatePortal;\n\n  private _active: boolean = false;\n\n  @Input()\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n    if (this._active) {\n      this.attach();\n    } else {\n      this.detach();\n    }\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n  attach() {\n    if (!this.portalOutlet.hasAttached()) {\n      this.portalOutlet.attach(this.content);\n    }\n  }\n  detach() {\n    if (this.portalOutlet.hasAttached()) {\n      this.portalOutlet.detach();\n    }\n  }\n}\n","import { FocusableOption } from '@angular/cdk/a11y';\nimport { Directive, ElementRef } from '@angular/core';\n\n/** @docs-private */\n@Directive({ selector: '[nxTabLabel]' })\nexport class NxTabLabelDirective implements FocusableOption {\n  constructor(public elementRef: ElementRef) { }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\n\nimport { NxTabLabelDirective } from './tab-label';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['./tab-header.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxTabHeaderComponent implements OnInit, AfterContentInit {\n\n  private _keyManager: FocusKeyManager<NxTabLabelDirective>;\n\n  private _selectedIndex: number = 0;\n\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._selectedIndex = value;\n    if (this._keyManager) {\n      this._keyManager.updateActiveItemIndex(value);\n    }\n  }\n\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) { return; }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  private _autoselect: boolean = true;\n\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = value;\n  }\n\n  @Output() readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n  @Output() readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  @ContentChildren(NxTabLabelDirective) labels: QueryList<NxTabLabelDirective>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit() { }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<NxTabLabelDirective>(this.labels).withHorizontalOrientation('ltr').withWrap();\n    this._keyManager.updateActiveItemIndex(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _isValidIndex(idx: number) {\n    if (!this.labels) { return true; }\n\n    return !!this.labels.toArray()[idx];\n  }\n\n  /**\n   * Handles keyboard inputs on the labels\n   * If autoselect is enabled the tab gets changed immediately\n   * If autoselect is disabled only the focus changes but the user still has to select the item\n   * by himself\n   */\n  handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n\n    if (this.autoselect) {\n      this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n    } else if (event.keyCode !== ENTER && event.keyCode !== SPACE) {\n      this.indexFocused.emit(this._keyManager.activeItemIndex);\n    }\n  }\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  OnInit\n} from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { NxAccordionDirective } from '@allianz/ngx-ndbx/accordion';\nimport { NxExpansionPanelComponent } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabHeaderComponent } from './tab-header';\n\n\nexport class NxTabChangeEvent {\n  /** The index of the selected or focused tab. */\n  index: number;\n\n  /** The component instance of the selected or focused tab. */\n  tab: NxTabComponent;\n}\n\nlet nextId: number = 0;\nconst MOBILE_BREAKPOINT = 480;\n\n@Component({\n  selector: 'nx-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['./tab-group.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative'\n  },\n  providers: [{provide: NxTabGroupBase, useExisting: NxTabGroupComponent}]\n})\nexport class NxTabGroupComponent implements NxTabGroupBase, OnInit, OnDestroy, AfterContentInit, AfterContentChecked {\n  private _selectedIndex: number | null = null;\n  private _groupId: number;\n  private _negative: boolean = false;\n  private _indexToSelect: number | null = 0;\n  private _autoselect: boolean = true;\n  private _mobileAccordion: boolean = true;\n  _showAccordion: boolean = false;\n\n  /** @docs-private */\n  @ContentChildren(NxTabComponent) tabs: QueryList<NxTabComponent>;\n\n  /** @docs-private */\n  @ViewChildren(NxTabBodyComponent) tabBodyChildren: QueryList<NxTabBodyComponent>;\n\n  /** @docs-private */\n  @ViewChild('tabHeader') tabHeader: NxTabHeaderComponent;\n\n  /** @docs-private */\n  @ViewChildren(NxExpansionPanelComponent) panels: QueryList<NxExpansionPanelComponent>;\n\n  /** @docs-private */\n  @ViewChild(NxAccordionDirective) accordion: NxAccordionDirective;\n\n  /** Sets the selected tab. */\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n\n  /** Whether the negative set of styling should be used. */\n  @Input()\n  get negative(): boolean {\n    return this._negative;\n  }\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n    }\n  }\n\n  /** Whether the tab should be immediately selected on focus. */\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = coerceBooleanProperty(value);\n  }\n\n  /** Whether the tabs should to accordion on mobile viewports. */\n  @Input()\n  get mobileAccordion(): boolean {\n    return this._mobileAccordion;\n  }\n  set mobileAccordion(value: boolean) {\n    this._mobileAccordion = coerceBooleanProperty(value);\n  }\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n  /**\n   * An event emitted when focus has changed within a tab group.\n   *\n   * **Note:** is not supported in mobile view.\n   */\n  @Output() readonly focusChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n   /** Subscription to tabs being added/removed. */\n   private _tabsSubscription = Subscription.EMPTY;\n\n   /** Subscription to changes in the tab labels. */\n   private _tabLabelSubscription = Subscription.EMPTY;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    this._groupId = nextId++;\n  }\n\n  ngOnInit() {\n    this._switchAppearance(window.innerWidth);\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this.tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this.tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n    * After the content is checked, this component knows what tabs have been defined\n    * and what the selected index should be.\n    */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex !== indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n   /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the NxTab component, whereas the data binding is inside the NxTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this.tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** @docs-private */\n  focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): NxTabChangeEvent {\n    const event = new NxTabChangeEvent;\n    event.index = index;\n    if (this.tabs && this.tabs.length) {\n      event.tab = this.tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /** @docs-private */\n  handleClick(index: number) {\n    this.selectedIndex = this.tabHeader.focusIndex = index;\n  }\n\n  /**\n   * @docs-private\n   * Returns the tabindex for a tab label\n   */\n  getTabIndex(tab: NxTabComponent, idx: number): number | null {\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `nx-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `nx-tab-content-${this._groupId}-${i}`;\n  }\n\n  /** @docs-private */\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this._switchAppearance(event.target.innerWidth);\n  }\n\n  private _switchAppearance(viewPortWidth) {\n    if (!this._mobileAccordion) {\n      return;\n    }\n    if (viewPortWidth <= MOBILE_BREAKPOINT && !this._showAccordion) {\n      this._showMobileVersion();\n    } else if (viewPortWidth > MOBILE_BREAKPOINT && this._showAccordion) {\n      this._showDesktopVersion();\n    }\n  }\n\n  private _showMobileVersion() {\n    this._showAccordion = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showDesktopVersion() {\n    this._showAccordion = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Emulate the tab change event when an accordion panel is opened in\n   * mobile viewports.\n   */\n  _panelOpened(index: number) {\n    this.selectedIndex = index;\n  }\n}\n","import { Component, Input, Directive, ChangeDetectionStrategy, Optional, SkipSelf, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'nx-tab-nav-bar',\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['./tab-nav-bar.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative',\n    'role': 'navigation',\n  }\n})\nexport class NxTabNavBarComponent {\n\n  private _negative: boolean = false;\n\n  /** Whether the tab nav bar has negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n}\n\n@Directive({\n  selector: '[nxTabLink]',\n  host: {\n    '[class.nx-tab-link]': 'true',\n    '[class.is-active]': 'active',\n    '[attr.aria-current]': 'active',\n  }\n})\nexport class NxTabLinkDirective {\n\n  private _active: boolean = false;\n\n  /** Whether the tab link is active and has the active styling. */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._active) {\n      this._active = value;\n    }\n  }\n\n  constructor(\n    @Optional() @SkipSelf() private _tabNavBar: NxTabNavBarComponent) {\n    if (!this._tabNavBar) {\n      throw Error(`The nx-tab-link element has to be wrapped in a nx-tab-nav-bar to work.`);\n    }\n  }\n}\n","import { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAccordionModule } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabGroupComponent } from './tab-group';\nimport { NxTabHeaderComponent } from './tab-header';\nimport { NxTabLabelDirective } from './tab-label';\nimport { NxTabNavBarComponent, NxTabLinkDirective } from './tab-nav-bar';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    NxAccordionModule\n  ],\n  exports: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective\n  ],\n  declarations: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective\n  ],\n  providers: [],\n})\nexport class NxTabsModule { }\n","export const BREAKPOINT_MOBILE = '(max-width: 703px)';\nexport const BREAKPOINT_TABLET = '(min-width: 704px) and (max-width: 992px)';\nexport const BREAKPOINT_DESKTOP = '(min-width: 993px)';\n","import { ElementRef, Renderer2, Input } from '@angular/core';\n\nimport { appendClasses, mapClassNames, removeClasses } from '@allianz/ngx-ndbx/utils';\n\nexport type MappingObject = {\n  [key: string]: string;\n};\n\nexport class MappedStyles {\n  private _classNames: string;\n  private _classNamesSanitized: string;\n\n  constructor(\n    private mapping: MappingObject,\n    private baseClasses = [],\n    protected _elementRef: ElementRef,\n    protected _renderer: Renderer2) {\n      this.classNames = '';\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n    removeClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n    this._classNamesSanitized = mapClassNames(value, this.baseClasses, this.mapping);\n    this._classNames = value;\n    appendClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, Attribute} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  template: '<ng-content></ng-content>',\n  styleUrls: ['card.scss'],\n  selector: 'nx-card',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'nx-card',\n    '[class.is-selectable]': 'selectable',\n    '[class.is-selected]': 'selected',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '(click)': '_toggleSelected()',\n    '(keydown.enter)': '_toggleSelected()',\n    '[attr.tabindex]': '_getTabindex()'\n  }\n})\nexport class NxCardComponent {\n  _tabindex: string;\n\n  /** Whether this card is selectable or not.  */\n  @Input()\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  private _selectable: boolean;\n\n  /** Whether this card is selected or not.  */\n  @Input()\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _selected: boolean;\n\n  /** Whether the card is disabled.  */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Event emitted when the selected value has changed.  */\n  @Output() selectedChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Attribute('tabindex') tabindex: string) {\n    this._tabindex = tabindex;\n  }\n\n  _toggleSelected(): void {\n    if (this.selectable && !this.disabled) {\n      this.selected = !this.selected;\n      this.selectedChange.emit(this.selected);\n    }\n  }\n\n  _getTabindex(): string {\n    if (this.disabled) {\n      return '-1';\n    }\n\n    if (this.selectable) {\n      return this._tabindex || '0';\n    }\n\n    return this._tabindex || '';\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxCardComponent} from './card.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxCardComponent ],\n  exports: [ NxCardComponent ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NxCardModule { }\n"],"names":["tslib_1.__extends","nextId","DEFAULT_TYPE","MAPPING","DEFAULT_SIZE","NxPopoverTriggerDirective","NxDropdownComponent","NxWordComponent","DEFAULT_CLASSES","NxAccordionDirective","NxExpansionPanelComponent","MappedStyles"],"mappings":"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"}
