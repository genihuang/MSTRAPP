import { NxIconComponent } from '@allianz/ngx-ndbx/icon';
import { ChangeDetectionStrategy, Component, ContentChild, ElementRef, Renderer2, NgModule } from '@angular/core';
import { MappedStyles } from '@allianz/ngx-ndbx/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const MAPPING = {
    'black': 'nx-link--black',
    'negative': 'nx-link--negative',
    'text': 'nx-link--text',
    'block': 'nx-link--block',
    'icon-right': 'nx-link--icon-right'
};
/** @type {?} */
const DEFAULT_CLASSES = ['nx-link'];
class NxLinkComponent extends MappedStyles {
    /**
     * @param {?} _elementRef
     * @param {?} _renderer
     */
    constructor(_elementRef, _renderer) {
        super(MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);
        this._renderer = _renderer;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        // Add a specific link class that the css gets more specific than the nx-icon css
        /** @type {?} */
        const icons = this.elementRef.nativeElement.querySelectorAll('nx-icon');
        for (let i = 0; i < icons.length; i++) {
            this._renderer.addClass(icons[i], 'nx-link__icon');
        }
    }
    /**
     * \@docs-private
     * getter used for the modal component as a quickfix
     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
     * way to reach the elementRef of the component until the modal gets refactored.
     * @return {?}
     */
    get elementRef() {
        return this._elementRef;
    }
}
NxLinkComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-link',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['classNames: nxStyle'],
                styles: [":host{display:inline-block;color:#006192;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;position:relative;text-decoration:none;transition:color .2s,box-shadow .2s;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;line-height:24px}:host:hover{color:#008ed6}:host::ng-deep a:active{color:#003781}:host::ng-deep a{display:flex}:host-context([data-whatinput=keyboard])::ng-deep a:focus{border-radius:4px;outline:0;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-link--negative){color:#fff}:host(.nx-link--negative):hover{color:#c2c2c2}:host(.nx-link--negative)::ng-deep a:active{color:#999}:host(.nx-link--negative)::ng-deep a[aria-disabled],:host(.nx-link--negative)::ng-deep a[disabled]{color:rgba(255,255,255,.4)}:host(.nx-link--black){color:#414141}:host(.nx-link--black):hover{color:#999}:host(.nx-link--black)::ng-deep a:active{color:#5b5b5b}:host(.nx-link--black)::ng-deep a[aria-disabled],:host(.nx-link--black)::ng-deep a[disabled]{color:#c2c2c2}.nx-link--text{font-weight:700;text-transform:none;letter-spacing:normal;border-radius:4px}:host::ng-deep .c-icon,:host::ng-deep nx-icon.nx-link__icon{line-height:24px;font-size:24px;margin:0 8px 0 0}:host::ng-deep .c-icon::before,:host::ng-deep nx-icon.nx-link__icon::before{line-height:inherit;font-size:inherit;width:24px;height:24px}:host(.nx-link--icon-right)::ng-deep .c-icon,:host(.nx-link--icon-right)::ng-deep nx-icon.nx-link__icon{order:2;margin:0 0 0 8px}:host::ng-deep a[aria-disabled],:host::ng-deep a[disabled]{cursor:not-allowed;color:rgba(0,97,146,.4)}:host::ng-deep a[aria-disabled]:active,:host::ng-deep a[disabled]:active{color:#006192}:host::ng-deep a[aria-disabled]:focus,:host::ng-deep a[disabled]:focus{outline:0;box-shadow:none}"]
            }] }
];
/** @nocollapse */
NxLinkComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
NxLinkComponent.propDecorators = {
    icon: [{ type: ContentChild, args: [NxIconComponent,] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NxLinkModule {
}
NxLinkModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NxLinkComponent],
                exports: [NxLinkComponent]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NxLinkModule, NxLinkComponent };

//# sourceMappingURL=allianz-ngx-ndbx-link.js.map