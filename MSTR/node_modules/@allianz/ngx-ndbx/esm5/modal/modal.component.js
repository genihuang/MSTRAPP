/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Directive, ChangeDetectorRef } from '@angular/core';
import { Component, Input, TemplateRef, Output, EventEmitter } from '@angular/core';
import { NxModalService } from './modal.service';
import { EventManager } from '@angular/platform-browser';
import { fadeIn, fadeOut, scaleDown, scaleUp } from './animations';
import { animateChild, query, transition, trigger, useAnimation } from '@angular/animations';
import { Subscription } from 'rxjs';
/**
 * Container for the action buttons in a modal. Has a fixed position at the bottom of the modal on scroll.
 */
var NxModalActionsDirective = /** @class */ (function () {
    function NxModalActionsDirective() {
    }
    NxModalActionsDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[nxModalActions]',
                    host: {
                        '[class.nx-modal__actions]': 'true'
                    }
                },] }
    ];
    return NxModalActionsDirective;
}());
export { NxModalActionsDirective };
/**
 * Scrollable container for the content of a modal.
 */
var NxModalContentDirective = /** @class */ (function () {
    function NxModalContentDirective() {
    }
    NxModalContentDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[nxModalContent]',
                    host: {
                        '[class.nx-modal__content]': 'true'
                    }
                },] }
    ];
    return NxModalContentDirective;
}());
export { NxModalContentDirective };
var NxModalComponent = /** @class */ (function () {
    function NxModalComponent(modalService, eventManager, _changeDetectorRef) {
        this.modalService = modalService;
        this.eventManager = eventManager;
        this._changeDetectorRef = _changeDetectorRef;
        this._closeButtonLabel = 'Close dialog';
        /**
         * Whether the modal view should close when the user hits the escape key.
         * Default is true.
         */
        this.hideOnEsc = true;
        /**
         * Whether the modal view should close when the user clicks on the backdrop.
         * Default is true.
         */
        this.hideOnClickOutside = true;
        /**
         * Whether the modal view should have a close icon in the upper right corner.
         * Default is true.
         */
        this.showCloseIcon = true;
        /**
         * An event emitted when the user clicks on the backdrop or uses the built-in close button.
         * This event can be applied in conjunction with the custom open state handling
         * of a modal to close it when requested by the user.
         */
        this.closeEvent = new EventEmitter();
        this.closeSubscription = Subscription.EMPTY;
    }
    Object.defineProperty(NxModalComponent.prototype, "closeButtonLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return this._closeButtonLabel;
        },
        /** Sets the 'aria-label' of the modal close button needed for accessibility.
         *
         * Default value is 'Close dialog'.
         */
        set: /**
         * Sets the 'aria-label' of the modal close button needed for accessibility.
         *
         * Default value is 'Close dialog'.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== this._closeButtonLabel) {
                this._closeButtonLabel = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NxModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.closeSubscription = this.modalService.close$.subscribe((/**
         * @return {?}
         */
        function () { return _this.closeEvent.emit(); }));
        this.eventManager.addGlobalEventListener('window', 'keyup.esc', (/**
         * @return {?}
         */
        function () {
            if (_this.hideOnEsc) {
                _this.modalService.close();
            }
        }));
    };
    /**
     * @return {?}
     */
    NxModalComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.closeSubscription.unsubscribe();
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @return {?}
     */
    NxModalComponent.prototype.clickOutsideModal = /**
     * \@docs-private
     * @return {?}
     */
    function () {
        if (this.hideOnClickOutside) {
            this.modalService.close();
        }
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @return {?}
     */
    NxModalComponent.prototype.closeButtonClick = /**
     * \@docs-private
     * @return {?}
     */
    function () {
        this.modalService.close();
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @param {?} evt
     * @return {?}
     */
    NxModalComponent.prototype.cancelClick = /**
     * \@docs-private
     * @param {?} evt
     * @return {?}
     */
    function (evt) {
        evt.stopPropagation();
    };
    NxModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-modal',
                    template: "<div class=\"nx-modal\" role=\"dialog\" cdkTrapFocus cdkTrapFocusAutoCapture cdkFocusInitial>\n  <div class=\"nx-modal__backdrop\" (click)=\"clickOutsideModal()\">\n    <div class=\"nx-modal__position\">\n      <div class=\"nx-modal__container\" (click)=\"cancelClick($event)\" [@scaleUpDown]>\n\n        <button\n          (click)=\"closeButtonClick()\"\n          *ngIf=\"showCloseIcon\"\n          [attr.aria-label]=\"closeButtonLabel\"\n          class=\"nx-modal__close\"\n          type=\"button\">\n          <nx-icon name=\"close\"></nx-icon>\n        </button>\n\n        <div class=\"nx-modal__content-wrapper\">\n          <ng-container *ngIf=\"body else projectContent\">\n            <ng-container *ngTemplateOutlet=\"body\"></ng-container>\n          </ng-container>\n\n          <ng-template #projectContent>\n            <ng-content></ng-content>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [
                        trigger('fadeInOut', [
                            transition(':enter', [
                                useAnimation(fadeIn),
                                query('@scaleUpDown', [
                                    animateChild()
                                ])
                            ]),
                            transition(':leave', [
                                query('@scaleUpDown', [
                                    animateChild()
                                ]),
                                useAnimation(fadeOut)
                            ])
                        ]),
                        trigger('scaleUpDown', [
                            transition(':enter', useAnimation(scaleDown)),
                            transition(':leave', useAnimation(scaleUp))
                        ])
                    ],
                    host: {
                        '[@fadeInOut]': '',
                        '[class.nx-modal--fixed-width]': 'size === "fixed"'
                    },
                    styles: [".nx-modal{display:flex;position:fixed;width:100vw;height:100vh;top:0;bottom:0;left:0;right:0;z-index:100;align-items:center;justify-content:center;transition:opacity .3s}.nx-modal__backdrop{background-color:rgba(0,0,0,.35);height:100%;left:0;position:absolute;top:0;width:100%;z-index:-1}.nx-modal__position{position:absolute;display:inline-block;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);z-index:20}.nx-modal__container{border-radius:4px;background:#fff;box-shadow:0 8px 24px rgba(65,65,65,.35)}.nx-modal__content-wrapper{padding:40px 40px 48px;max-height:calc(100vh - 48px);overflow-y:auto}@media (max-width:703px){.nx-modal__content-wrapper{max-height:70vh;padding:40px 32px 48px}}.nx-modal__close{background-color:transparent;border:none;color:#414141;cursor:pointer;position:absolute;top:16px;right:16px;height:24px;outline:0;padding:0}.nx-modal__close nx-icon{font-size:24px}.nx-modal__close::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]) .nx-modal__close:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}@media (max-width:703px){.nx-modal__position{width:100%}.nx-modal__container{position:relative;max-width:calc(100vw - 16px);max-height:70vh;margin:0 auto}}:host(.nx-modal--fixed-width) .nx-modal__container{width:736px}::ng-deep .nx-modal__actions{height:72px;border-top:1px solid #d9d9d9;display:flex;align-items:center;justify-content:flex-end;padding:0 40px;position:absolute;bottom:0;background:#fff;left:0;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}::ng-deep .nx-modal__content{overflow-y:auto;max-height:calc(100vh - 72px - 48px)}@media (max-width:703px){::ng-deep .nx-modal__content{max-height:calc(70vh - 72px - 48px)}}"]
                }] }
    ];
    /** @nocollapse */
    NxModalComponent.ctorParameters = function () { return [
        { type: NxModalService },
        { type: EventManager },
        { type: ChangeDetectorRef }
    ]; };
    NxModalComponent.propDecorators = {
        closeButtonLabel: [{ type: Input }],
        body: [{ type: Input, args: ['nxBody',] }],
        hideOnEsc: [{ type: Input, args: ['nxHideOnEsc',] }],
        hideOnClickOutside: [{ type: Input, args: ['nxHideOnClickOutside',] }],
        showCloseIcon: [{ type: Input, args: ['nxShowCloseIcon',] }],
        size: [{ type: Input, args: ['nxSize',] }],
        closeEvent: [{ type: Output, args: ['nxClose',] }]
    };
    return NxModalComponent;
}());
export { NxModalComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxModalComponent.prototype._closeButtonLabel;
    /**
     * A template reference variable pointing to the template
     * which contains the content of the modal view.
     * @type {?}
     */
    NxModalComponent.prototype.body;
    /**
     * Whether the modal view should close when the user hits the escape key.
     * Default is true.
     * @type {?}
     */
    NxModalComponent.prototype.hideOnEsc;
    /**
     * Whether the modal view should close when the user clicks on the backdrop.
     * Default is true.
     * @type {?}
     */
    NxModalComponent.prototype.hideOnClickOutside;
    /**
     * Whether the modal view should have a close icon in the upper right corner.
     * Default is true.
     * @type {?}
     */
    NxModalComponent.prototype.showCloseIcon;
    /**
     * Controls the width of the dialog.
     * On `auto` the width is controlled by the content width,
     * on `fixed` the dialog gets a fixed width of 736px if the viewport is big enough.
     * @type {?}
     */
    NxModalComponent.prototype.size;
    /**
     * An event emitted when the user clicks on the backdrop or uses the built-in close button.
     * This event can be applied in conjunction with the custom open state handling
     * of a modal to close it when requested by the user.
     * @type {?}
     */
    NxModalComponent.prototype.closeEvent;
    /**
     * @type {?}
     * @private
     */
    NxModalComponent.prototype.closeSubscription;
    /**
     * @type {?}
     * @private
     */
    NxModalComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    NxModalComponent.prototype.eventManager;
    /**
     * @type {?}
     * @private
     */
    NxModalComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,