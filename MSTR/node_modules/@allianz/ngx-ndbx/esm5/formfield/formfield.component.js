/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ViewChild, InjectionToken, Inject, Optional } from '@angular/core';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Input, QueryList, ViewEncapsulation, Renderer2 } from '@angular/core';
import { startWith } from 'rxjs/operators';
import { getClassNameList } from '@allianz/ngx-ndbx/utils';
import { NxFormfieldHintDirective } from './hint.directive';
import { NxFormfieldNoteDirective } from './note.directive';
import { NxFormfieldErrorDirective } from './error.directive';
import { NxFormfieldControl } from './formfield-control';
import { NxFormfieldSuffixDirective } from './suffix.directive';
import { NxFormfieldPrefixDirective } from './prefix.directive';
import { NxFormfieldAppendixDirective } from './appendix.directive';
import { NxFormfieldLabelDirective } from './label.directive';
/** @type {?} */
var NX_STYLES = {
    'negative': 'nx-formfield--negative'
};
/**
 * Represents the default options for the form field that can be configured
 * using the `FORMFIELD_DEFAULT_OPTIONS` injection token.
 * @record
 */
export function FormfieldDefaultOptions() { }
if (false) {
    /**
     * Sets the default appearance. (optional)
     * @type {?|undefined}
     */
    FormfieldDefaultOptions.prototype.appearance;
    /**
     * Sets the default float label type. (optional)
     * @type {?|undefined}
     */
    FormfieldDefaultOptions.prototype.nxFloatLabel;
}
/** @type {?} */
export var FORMFIELD_DEFAULT_OPTIONS = new InjectionToken('FORMFIELD_DEFAULT_OPTIONS');
var NxFormfieldComponent = /** @class */ (function () {
    function NxFormfieldComponent(elementRef, renderer, _changeDetectorRef, _defaultOptions) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this._changeDetectorRef = _changeDetectorRef;
        this._defaultOptions = _defaultOptions;
        this._styles = '';
        this._subscriptions = [];
    }
    Object.defineProperty(NxFormfieldComponent.prototype, "floatLabel", {
        /**
         * Whether the label should float once the input is focused or filled (auto, default)
         * or force it to always float with a value of always to simulate a more static form.
         */
        get: /**
         * Whether the label should float once the input is focused or filled (auto, default)
         * or force it to always float with a value of always to simulate a more static form.
         * @return {?}
         */
        function () {
            return this._floatLabel || (this._defaultOptions && this._defaultOptions.nxFloatLabel) || 'auto';
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== this._floatLabel) {
                this._floatLabel = value || 'auto';
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxFormfieldComponent.prototype, "styles", {
        /**
         * Sets the styling of the formfield.
         * If 'negative', a negative set of stylings is used.
         */
        set: /**
         * Sets the styling of the formfield.
         * If 'negative', a negative set of stylings is used.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var _this = this;
            if (this._styles === value) {
                return;
            }
            /** @type {?} */
            var classNames = getClassNameList(value, NX_STYLES);
            classNames.forEach((/**
             * @param {?} classStr
             * @return {?}
             */
            function (classStr) {
                _this.renderer.addClass(_this.elementRef.nativeElement, classStr);
            }));
            this._styles = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxFormfieldComponent.prototype, "appearance", {
        get: /**
         * @return {?}
         */
        function () {
            return this._appearance || (this._defaultOptions && this._defaultOptions.appearance) || 'auto';
        },
        /**
         * **NDBX Expert option**
         *
         * Sets the appearance of the formfield.
         */
        set: /**
         * **NDBX Expert option**
         *
         * Sets the appearance of the formfield.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._appearance !== value) {
                this._appearance = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxFormfieldComponent.prototype, "_shouldAlwaysFloat", {
        get: /**
         * @return {?}
         */
        function () {
            return this.floatLabel === 'always';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxFormfieldComponent.prototype, "shouldLabelFloat", {
        /** @docs-private */
        get: /**
         * \@docs-private
         * @return {?}
         */
        function () {
            return (this._control.shouldLabelFloat || this._shouldAlwaysFloat);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxFormfieldComponent.prototype, "control", {
        /** @docs-private */
        get: /**
         * \@docs-private
         * @return {?}
         */
        function () {
            return this._control;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NxFormfieldComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var subscription;
        /** @type {?} */
        var subscriptions = [];
        this._validateControlChild();
        // Subscribe to changes in the child control state in order to update the form field UI.
        subscription = this._control.stateChanges.pipe(startWith(null)).subscribe((/**
         * @return {?}
         */
        function () {
            _this._syncDescribedByIds();
            _this._changeDetectorRef.markForCheck();
        }));
        subscriptions.push(subscription);
        // Re-validate when the number of hints changes.
        subscription = this._hintChildren.changes.pipe(startWith(null)).subscribe((/**
         * @return {?}
         */
        function () {
            _this._changeDetectorRef.markForCheck();
        }));
        subscriptions.push(subscription);
        // Update the aria-described by when the number of errors changes.
        subscription = this._errorChildren.changes.pipe(startWith(null)).subscribe((/**
         * @return {?}
         */
        function () {
            _this._syncDescribedByIds();
            _this._changeDetectorRef.markForCheck();
        }));
        subscriptions.push(subscription);
        this._subscriptions = subscriptions;
    };
    /**
     * @return {?}
     */
    NxFormfieldComponent.prototype.ngAfterContentChecked = /**
     * @return {?}
     */
    function () {
        this._validateControlChild();
    };
    /**
     * @return {?}
     */
    NxFormfieldComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._subscriptions.forEach((/**
         * @param {?} subscription
         * @return {?}
         */
        function (subscription) { return subscription.unsubscribe(); }));
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @return {?}
     */
    NxFormfieldComponent.prototype.getDisplayedMessage = /**
     * \@docs-private
     * @return {?}
     */
    function () {
        if (this._control.errorState && this._errorChildren && this._errorChildren.length > 0) {
            return 'error';
        }
        return 'hint';
    };
    /**
     * @private
     * @return {?}
     */
    NxFormfieldComponent.prototype._syncDescribedByIds = /**
     * @private
     * @return {?}
     */
    function () {
        if (this._control) {
            /** @type {?} */
            var ids = [];
            ids = this._noteChildren.map((/**
             * @param {?} hint
             * @return {?}
             */
            function (hint) { return hint.id; }));
            if (this.getDisplayedMessage() === 'hint') {
                ids = tslib_1.__spread(this._hintChildren.map((/**
                 * @param {?} hint
                 * @return {?}
                 */
                function (hint) { return hint.id; })), ids);
            }
            else if (this._errorChildren) {
                ids = tslib_1.__spread(this._errorChildren.map((/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) { return error.id; })), ids);
            }
            this._control.setDescribedByIds(ids);
        }
    };
    // Fail if the required control is missing.
    // Fail if the required control is missing.
    /**
     * @protected
     * @return {?}
     */
    NxFormfieldComponent.prototype._validateControlChild = 
    // Fail if the required control is missing.
    /**
     * @protected
     * @return {?}
     */
    function () {
        if (!this._control) {
            throw new Error('Formfield must contain a NxFormfieldControl like input[nxInput] or a custom implementation');
        }
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @return {?}
     */
    NxFormfieldComponent.prototype.getConnectedOverlayOrigin = /**
     * \@docs-private
     * @return {?}
     */
    function () {
        return this._connectionContainerRef || this.elementRef;
    };
    NxFormfieldComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-formfield',
                    template: "<!--\nWe are building the following structure.\n\n+-----------------------------+ +-----------+\n| Prefix |   Input   | Suffix | |  Appendix |\n+-----------------------------+ +-----------+\n|-----------------Border--------------------|\n+-------------------------------------------+\n|                 Hints                     |\n+-------------------------------------------+\n|                                           |\n|                Messages                   |\n|                                           |\n+-------------------------------------------+\n\n-->\n\n<div class=\"nx-formfield__wrapper\">\n\n\n  <!-- Give a flex context to properly align suffix, input & postfix -->\n  <div class=\"nx-formfield__row\"  #connectionContainer>\n    <div class=\"nx-formfield__flexfield\">\n      <div class=\"nx-formfield__prefix\" *ngIf=\"_prefixChildren.length\">\n          <ng-content select=\"[nxFormfieldPrefix]\"></ng-content>\n      </div>\n\n      <div class=\"nx-formfield__input\">\n        <ng-content></ng-content>\n\n        <!-- This handles the floating whole behavior -->\n        <span class=\"nx-formfield__label-holder\">\n          <label\n            class=\"nx-formfield__label\"\n            [attr.aria-owns]=\"_control.id\"\n            [attr.for]=\"_control.id\">\n            <ng-container *ngIf=\"!_labelChild\">\n              {{ label }}\n            </ng-container>\n            <ng-content select=\"nx-formfield-label\"></ng-content>\n          </label>\n        </span>\n      </div>\n\n      <div class=\"nx-formfield__suffix\" *ngIf=\"_suffixChildren.length\">\n          <ng-content select=\"[nxFormfieldSuffix]\"></ng-content>\n      </div>\n    </div>\n\n    <!-- Appendix is similar to a suffix but visibly outside of the input  -->\n    <div class=\"nx-formfield__appendix\" *ngIf=\"_appendixChildren.length\">\n      <ng-content select=\"[nxFormfieldAppendix]\"></ng-content>\n    </div>\n  </div>\n\n  <!-- Space to render the hints below the textfield -->\n  <div class=\"nx-formfield__hints\" *ngIf=\"_hintChildren.length\">\n      <ng-content select=\"[nxFormfieldHint]\"></ng-content>\n  </div>\n\n  <!-- In case we got some additional information we render them below the given input -->\n  <div class=\"nx-formfield__messages\" [ngSwitch]=\"getDisplayedMessage()\">\n    <div *ngSwitchCase=\"'error'\">\n      <ng-content select=\"[nxFormfieldError]\"></ng-content>\n    </div>\n\n    <div *ngSwitchCase=\"'hint'\">\n      <ng-content select=\"[nxFormfieldNote]\"></ng-content>\n    </div>\n  </div>\n</div>\n\n\n",
                    host: {
                        '[class.nx-formfield]': 'true',
                        '[class.is-disabled]': 'this._control.disabled',
                        '[class.is-readonly]': 'this._control.readonly',
                        '[class.is-filled]': 'this._control.empty === false',
                        '[class.is-focused]': 'this._control.focused',
                        '[class.is-floating]': 'this.shouldLabelFloat',
                        '[class.has-error]': 'this._control.errorState',
                        '[class.has-outline]': 'this.appearance === "outline"'
                    },
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    styles: [".nx-formfield{display:block;font-size:20px;color:#414141;text-align:left}.nx-formfield__wrapper{padding-bottom:24px}.nx-formfield__input{position:relative;line-height:28px;letter-spacing:.2px;flex:auto;min-width:0}.nx-formfield__label-holder{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;pointer-events:none;z-index:10;top:-16px;padding-top:16px}.nx-formfield__label{color:inherit;display:block;position:absolute;left:0;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;-webkit-transform-origin:0 0;transform-origin:0 0;transition:transform .15s ease-out,font-size .15s ease-out,-webkit-transform .15s ease-out;font-weight:300;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%;-ms-text-size-adjust:100%;text-size-adjust:100%;letter-spacing:.2px}.nx-formfield__flexfield{display:inline-flex;align-items:flex-end;width:100%;border-bottom:1px solid currentColor;margin-top:16px;padding-bottom:3px}.nx-formfield__row{display:flex;align-items:center;width:100%}.nx-formfield__input textarea[nxInput]{vertical-align:bottom}.nx-formfield__appendix,.nx-formfield__prefix,.nx-formfield__suffix{flex:none;white-space:nowrap;color:#414141;font-weight:600;letter-spacing:.2px}.nx-formfield__appendix nx-icon.nx-icon--auto,.nx-formfield__prefix nx-icon.nx-icon--auto,.nx-formfield__suffix nx-icon.nx-icon--auto{font-size:24px;font-weight:400}.nx-formfield__appendix nx-icon,.nx-formfield__prefix nx-icon,.nx-formfield__suffix nx-icon{display:block;color:#006192;height:24px}.nx-formfield__appendix nx-password-toggle nx-icon,.nx-formfield__prefix nx-password-toggle nx-icon,.nx-formfield__suffix nx-password-toggle nx-icon{color:#414141}.nx-formfield__prefix,.nx-formfield__suffix{line-height:28px;height:28px;display:inline-flex;align-items:center}.nx-formfield__appendix{margin-left:8px;margin-top:16px;display:flex;border-bottom:1px solid transparent;padding-bottom:3px;align-items:center}.nx-formfield__prefix{margin-right:8px}.nx-formfield__suffix{margin-left:8px}.nx-formfield__hints{text-align:right;color:#414141;font-size:12px;line-height:16px;letter-spacing:.5px;padding-top:8px}.nx-formfield__messages{margin-top:4px}.nx-formfield.is-focused .nx-formfield__label{text-overflow:ellipsis;font-weight:600;font-size:12px}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error){color:#006192}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) .nx-formfield__label{color:#414141}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) .nx-formfield__flexfield{border-bottom-color:#007ab3}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error).nx-formfield--negative{color:#fff}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) nx-password-toggle nx-icon{color:#007ab3}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline .nx-formfield__flexfield{border-color:#006192;box-shadow:0 0 0 2px #009de6}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline.has-error .nx-formfield__flexfield{border-color:#dc3149}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline nx-password-toggle nx-icon{color:#007ab3}.nx-formfield.has-outline{font-size:16px;line-height:24px}.nx-formfield.has-outline .nx-formfield__flexfield{border:1px solid #767676;border-radius:4px;margin-top:28px;min-height:40px;align-items:center;padding-bottom:0}.nx-formfield.has-outline .nx-formfield__label{padding-left:7px;padding-right:7px}.nx-formfield.has-outline .nx-formfield__input{margin-top:0;padding-bottom:0;line-height:38px}.nx-formfield.has-outline .nx-formfield__input input[nxInput],.nx-formfield.has-outline .nx-formfield__input textarea[nxInput]{font-weight:400}.nx-formfield.has-outline .nx-formfield__input textarea[nxInput]{min-height:38px;line-height:24px;padding:7px}.nx-formfield.has-outline .nx-formfield__input input[nxInput]{padding-right:7px;padding-left:7px;line-height:normal}.nx-formfield.has-outline nx-dropdown .nx-dropdown__icon{display:flex}.nx-formfield.has-outline nx-dropdown .nx-dropdown__container{padding-left:7px;height:38px}.nx-formfield.has-outline nx-datepicker-toggle .nx-datepicker-toggle-button{padding:0}.nx-formfield.has-outline .nx-formfield__appendix,.nx-formfield.has-outline .nx-formfield__prefix,.nx-formfield.has-outline .nx-formfield__suffix{font-weight:400}.nx-formfield.has-outline .nx-formfield__prefix,.nx-formfield.has-outline .nx-formfield__suffix{height:38px;line-height:38px}.nx-formfield.has-outline .nx-formfield__prefix{margin-left:7px;margin-right:0}.nx-formfield.has-outline .nx-formfield__suffix{margin-right:7px;margin-left:0}.nx-formfield.has-outline .nx-formfield__appendix{margin-left:8px;display:flex;margin-top:28px;border-top:1px solid transparent;border-bottom:1px solid transparent;padding-bottom:0}.nx-formfield.has-outline .nx-formfield__hints{text-align:left;font-size:16px}.nx-formfield.has-outline.is-readonly .nx-formfield__flexfield{border-color:#c2c2c2;background-color:#f5f5f5}.nx-formfield.is-floating .nx-formfield__label{-webkit-transform:translateY(-22px);transform:translateY(-22px);font-size:12px;font-weight:600;letter-spacing:.5px}.nx-formfield.is-floating.has-outline .nx-formfield__label-holder{top:-24px;padding-top:24px}.nx-formfield.is-floating.has-outline .nx-formfield__label{padding-top:0;-webkit-transform:translateX(-8px) translateY(-29px);transform:translateX(-8px) translateY(-29px);font-size:16px;line-height:24px}.nx-formfield.is-floating.has-outline .nx-formfield__prefix~.nx-formfield__input .nx-formfield__label{-webkit-transform:translateY(-29px);transform:translateY(-29px)}.nx-formfield.has-error{color:#dc3149}.nx-formfield.has-error .nx-formfield__label{font-weight:700}.nx-formfield.has-error.is-floating .nx-formfield__label{color:#414141;font-weight:600}.nx-formfield.has-error.has-outline{color:#414141}.nx-formfield.has-error.has-outline .nx-formfield__flexfield{border-color:#dc3149}.nx-formfield.has-error nx-password-toggle nx-icon{color:#dc3149}.nx-formfield.is-disabled{color:#c2c2c2;cursor:not-allowed;-webkit-text-fill-color:#c2c2c2}.nx-formfield.is-disabled .nx-formfield__hints{color:inherit}.nx-formfield.is-disabled .nx-formfield__flexfield{border-bottom-color:#c2c2c2}.nx-formfield.is-disabled.has-outline .nx-formfield__flexfield{border-color:#c2c2c2}.nx-formfield--negative{color:#fff}.nx-formfield--negative .nx-formfield__hints{color:inherit}.nx-formfield--negative.has-outline .nx-formfield__flexfield{border-color:#fff}.nx-formfield--negative nx-password-toggle nx-icon{color:#fff}", ".c-input{text-align:inherit;font-size:inherit;background:0 0;color:inherit;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;line-height:28px;height:28px}.c-input::-ms-clear{display:none}.c-input::-webkit-search-cancel-button,.c-input::-webkit-search-decoration,.c-input::-webkit-search-results-button,.c-input::-webkit-search-results-decoration{display:none;-webkit-appearance:none}textarea.c-input{min-height:28px;height:auto;font-family:inherit}.c-input.is-focused{border:none;outline:0;box-shadow:none}.c-input.is-filled{font-weight:600}.c-input.is-disabled{cursor:not-allowed}textarea.nx-input-element{resize:vertical;overflow:auto}.c-input:invalid,.c-input:required{box-shadow:none}"]
                }] }
    ];
    /** @nocollapse */
    NxFormfieldComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ChangeDetectorRef },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FORMFIELD_DEFAULT_OPTIONS,] }] }
    ]; };
    NxFormfieldComponent.propDecorators = {
        _control: [{ type: ContentChild, args: [NxFormfieldControl,] }],
        label: [{ type: Input, args: ['nxLabel',] }],
        _labelChild: [{ type: ContentChild, args: [NxFormfieldLabelDirective,] }],
        _hintChildren: [{ type: ContentChildren, args: [NxFormfieldHintDirective,] }],
        _noteChildren: [{ type: ContentChildren, args: [NxFormfieldNoteDirective,] }],
        _errorChildren: [{ type: ContentChildren, args: [NxFormfieldErrorDirective,] }],
        _suffixChildren: [{ type: ContentChildren, args: [NxFormfieldSuffixDirective,] }],
        _prefixChildren: [{ type: ContentChildren, args: [NxFormfieldPrefixDirective,] }],
        _appendixChildren: [{ type: ContentChildren, args: [NxFormfieldAppendixDirective,] }],
        _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer',] }],
        floatLabel: [{ type: Input, args: ['nxFloatLabel',] }],
        styles: [{ type: Input, args: ['nxStyle',] }],
        appearance: [{ type: Input }]
    };
    return NxFormfieldComponent;
}());
export { NxFormfieldComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._styles;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._subscriptions;
    /** @type {?} */
    NxFormfieldComponent.prototype._control;
    /**
     * Sets the label which will act as a floating label.
     * In addition, the component uses input and label to properly support accessibility.
     * @type {?}
     */
    NxFormfieldComponent.prototype.label;
    /** @type {?} */
    NxFormfieldComponent.prototype._labelChild;
    /** @type {?} */
    NxFormfieldComponent.prototype._hintChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._noteChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._errorChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._suffixChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._prefixChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._appendixChildren;
    /** @type {?} */
    NxFormfieldComponent.prototype._connectionContainerRef;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._floatLabel;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._appearance;
    /**
     * \@docs-private
     * @type {?}
     */
    NxFormfieldComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._changeDetectorRef;
    /**
     * @type {?}
     * @private
     */
    NxFormfieldComponent.prototype._defaultOptions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWZpZWxkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4L2Zvcm1maWVsZC8iLCJzb3VyY2VzIjpbImZvcm1maWVsZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFJTCx1QkFBdUIsRUFDdkIsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxZQUFZLEVBQ1osZUFBZSxFQUNmLFVBQVUsRUFDVixLQUFLLEVBQ0wsU0FBUyxFQUNULGlCQUFpQixFQUNqQixTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRTNELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzVELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzVELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzlELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXpELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDOztJQUV4RCxTQUFTLEdBQUc7SUFDaEIsVUFBVSxFQUFFLHdCQUF3QjtDQUNyQzs7Ozs7O0FBTUQsNkNBTUM7Ozs7OztJQUpDLDZDQUE0Qjs7Ozs7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Qzs7SUFFNUMsd0NBQW9FOzs7Ozs7SUFNcEUscUNBQWdDOztJQUVoQywyQ0FBZ0Y7O0lBQ2hGLDZDQUE4Rjs7SUFDOUYsNkNBQThGOztJQUM5Riw4Q0FBaUc7O0lBQ2pHLCtDQUFvRzs7SUFDcEcsK0NBQW9HOztJQUNwRyxpREFBMEc7O0lBRTFHLHVEQUFzRTs7Ozs7SUFnQnRFLDJDQUFvQzs7Ozs7SUFzQnBDLDJDQUFvQzs7Ozs7SUE2QmxDLDBDQUE2Qjs7Ozs7SUFDN0Isd0NBQTJCOzs7OztJQUMzQixrREFBNkM7Ozs7O0lBQzdDLCtDQUErRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXdDaGlsZCwgSW5qZWN0aW9uVG9rZW4sIEluamVjdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIEFmdGVyQ29udGVudENoZWNrZWQsXG4gIEFmdGVyQ29udGVudEluaXQsXG4gIE9uRGVzdHJveSxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIENvbnRlbnRDaGlsZCxcbiAgQ29udGVudENoaWxkcmVuLFxuICBFbGVtZW50UmVmLFxuICBJbnB1dCxcbiAgUXVlcnlMaXN0LFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgUmVuZGVyZXIyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc3RhcnRXaXRoIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgZ2V0Q2xhc3NOYW1lTGlzdCB9IGZyb20gJ0BhbGxpYW56L25neC1uZGJ4L3V0aWxzJztcblxuaW1wb3J0IHsgTnhGb3JtZmllbGRIaW50RGlyZWN0aXZlIH0gZnJvbSAnLi9oaW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOeEZvcm1maWVsZE5vdGVEaXJlY3RpdmUgfSBmcm9tICcuL25vdGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IE54Rm9ybWZpZWxkRXJyb3JEaXJlY3RpdmUgfSBmcm9tICcuL2Vycm9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOeEZvcm1maWVsZENvbnRyb2wgfSBmcm9tICcuL2Zvcm1maWVsZC1jb250cm9sJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTnhGb3JtZmllbGRTdWZmaXhEaXJlY3RpdmUgfSBmcm9tICcuL3N1ZmZpeC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTnhGb3JtZmllbGRQcmVmaXhEaXJlY3RpdmUgfSBmcm9tICcuL3ByZWZpeC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTnhGb3JtZmllbGRBcHBlbmRpeERpcmVjdGl2ZSB9IGZyb20gJy4vYXBwZW5kaXguZGlyZWN0aXZlJztcbmltcG9ydCB7IE54Rm9ybWZpZWxkTGFiZWxEaXJlY3RpdmUgfSBmcm9tICcuL2xhYmVsLmRpcmVjdGl2ZSc7XG5cbmNvbnN0IE5YX1NUWUxFUyA9IHtcbiAgJ25lZ2F0aXZlJzogJ254LWZvcm1maWVsZC0tbmVnYXRpdmUnXG59O1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGRlZmF1bHQgb3B0aW9ucyBmb3IgdGhlIGZvcm0gZmllbGQgdGhhdCBjYW4gYmUgY29uZmlndXJlZFxuICogdXNpbmcgdGhlIGBGT1JNRklFTERfREVGQVVMVF9PUFRJT05TYCBpbmplY3Rpb24gdG9rZW4uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybWZpZWxkRGVmYXVsdE9wdGlvbnMge1xuICAvKiogU2V0cyB0aGUgZGVmYXVsdCBhcHBlYXJhbmNlLiAob3B0aW9uYWwpICovXG4gIGFwcGVhcmFuY2U/OiBBcHBlYXJhbmNlVHlwZTtcblxuICAvKiogU2V0cyB0aGUgZGVmYXVsdCBmbG9hdCBsYWJlbCB0eXBlLiAob3B0aW9uYWwpICovXG4gIG54RmxvYXRMYWJlbD86IEZsb2F0TGFiZWxUeXBlO1xufVxuXG5leHBvcnQgY29uc3QgRk9STUZJRUxEX0RFRkFVTFRfT1BUSU9OUyA9XG4gIG5ldyBJbmplY3Rpb25Ub2tlbjxGb3JtZmllbGREZWZhdWx0T3B0aW9ucz4oJ0ZPUk1GSUVMRF9ERUZBVUxUX09QVElPTlMnKTtcblxuLyoqIFR5cGUgZm9yIHRoZSBhdmFpbGFibGUgZmxvYXRMYWJlbCB2YWx1ZXMuICovXG5leHBvcnQgdHlwZSBGbG9hdExhYmVsVHlwZSA9ICdhbHdheXMnIHwgJ2F1dG8nO1xuXG4vKiogVHlwZSBmb3IgdGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGZvcm1maWVsZC4gKi9cbmV4cG9ydCB0eXBlIEFwcGVhcmFuY2VUeXBlID0gJ291dGxpbmUnIHwgJ2F1dG8nO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC1mb3JtZmllbGQnLFxuICB0ZW1wbGF0ZVVybDogJ2Zvcm1maWVsZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogW1xuICAgICdmb3JtZmllbGQuc2NzcycsXG4gICAgJy4uL2lucHV0L2lucHV0LnNjc3MnXG4gIF0sXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLm54LWZvcm1maWVsZF0nOiAndHJ1ZScsXG4gICAgJ1tjbGFzcy5pcy1kaXNhYmxlZF0nOiAndGhpcy5fY29udHJvbC5kaXNhYmxlZCcsXG4gICAgJ1tjbGFzcy5pcy1yZWFkb25seV0nOiAndGhpcy5fY29udHJvbC5yZWFkb25seScsXG4gICAgJ1tjbGFzcy5pcy1maWxsZWRdJzogJ3RoaXMuX2NvbnRyb2wuZW1wdHkgPT09IGZhbHNlJyxcbiAgICAnW2NsYXNzLmlzLWZvY3VzZWRdJzogJ3RoaXMuX2NvbnRyb2wuZm9jdXNlZCcsXG4gICAgJ1tjbGFzcy5pcy1mbG9hdGluZ10nOiAndGhpcy5zaG91bGRMYWJlbEZsb2F0JyxcbiAgICAnW2NsYXNzLmhhcy1lcnJvcl0nOiAndGhpcy5fY29udHJvbC5lcnJvclN0YXRlJyxcbiAgICAnW2NsYXNzLmhhcy1vdXRsaW5lXSc6ICd0aGlzLmFwcGVhcmFuY2UgPT09IFwib3V0bGluZVwiJ1xuICB9LFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBOeEZvcm1maWVsZENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIEFmdGVyQ29udGVudENoZWNrZWQsIE9uRGVzdHJveSB7XG4gIHByaXZhdGUgX3N0eWxlczogc3RyaW5nID0gJyc7XG4gIHByaXZhdGUgX3N1YnNjcmlwdGlvbnM6IFN1YnNjcmlwdGlvbltdID0gW107XG5cbiAgQENvbnRlbnRDaGlsZChOeEZvcm1maWVsZENvbnRyb2wpIF9jb250cm9sOiBOeEZvcm1maWVsZENvbnRyb2w8YW55PjtcblxuICAvKipcbiAgICogU2V0cyB0aGUgbGFiZWwgd2hpY2ggd2lsbCBhY3QgYXMgYSBmbG9hdGluZyBsYWJlbC5cbiAgICogSW4gYWRkaXRpb24sIHRoZSBjb21wb25lbnQgdXNlcyBpbnB1dCBhbmQgbGFiZWwgdG8gcHJvcGVybHkgc3VwcG9ydCBhY2Nlc3NpYmlsaXR5LlxuICAgKi9cbiAgQElucHV0KCdueExhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICBAQ29udGVudENoaWxkKE54Rm9ybWZpZWxkTGFiZWxEaXJlY3RpdmUpIF9sYWJlbENoaWxkOiBOeEZvcm1maWVsZExhYmVsRGlyZWN0aXZlO1xuICBAQ29udGVudENoaWxkcmVuKE54Rm9ybWZpZWxkSGludERpcmVjdGl2ZSkgX2hpbnRDaGlsZHJlbjogUXVlcnlMaXN0PE54Rm9ybWZpZWxkSGludERpcmVjdGl2ZT47XG4gIEBDb250ZW50Q2hpbGRyZW4oTnhGb3JtZmllbGROb3RlRGlyZWN0aXZlKSBfbm90ZUNoaWxkcmVuOiBRdWVyeUxpc3Q8TnhGb3JtZmllbGROb3RlRGlyZWN0aXZlPjtcbiAgQENvbnRlbnRDaGlsZHJlbihOeEZvcm1maWVsZEVycm9yRGlyZWN0aXZlKSBfZXJyb3JDaGlsZHJlbjogUXVlcnlMaXN0PE54Rm9ybWZpZWxkRXJyb3JEaXJlY3RpdmU+O1xuICBAQ29udGVudENoaWxkcmVuKE54Rm9ybWZpZWxkU3VmZml4RGlyZWN0aXZlKSBfc3VmZml4Q2hpbGRyZW46IFF1ZXJ5TGlzdDxOeEZvcm1maWVsZFN1ZmZpeERpcmVjdGl2ZT47XG4gIEBDb250ZW50Q2hpbGRyZW4oTnhGb3JtZmllbGRQcmVmaXhEaXJlY3RpdmUpIF9wcmVmaXhDaGlsZHJlbjogUXVlcnlMaXN0PE54Rm9ybWZpZWxkUHJlZml4RGlyZWN0aXZlPjtcbiAgQENvbnRlbnRDaGlsZHJlbihOeEZvcm1maWVsZEFwcGVuZGl4RGlyZWN0aXZlKSBfYXBwZW5kaXhDaGlsZHJlbjogUXVlcnlMaXN0PE54Rm9ybWZpZWxkQXBwZW5kaXhEaXJlY3RpdmU+O1xuXG4gIEBWaWV3Q2hpbGQoJ2Nvbm5lY3Rpb25Db250YWluZXInKSBfY29ubmVjdGlvbkNvbnRhaW5lclJlZjogRWxlbWVudFJlZjtcblxuICAvKipcbiAgICogV2hldGhlciB0aGUgbGFiZWwgc2hvdWxkIGZsb2F0IG9uY2UgdGhlIGlucHV0IGlzIGZvY3VzZWQgb3IgZmlsbGVkIChhdXRvLCBkZWZhdWx0KVxuICAgKiBvciBmb3JjZSBpdCB0byBhbHdheXMgZmxvYXQgd2l0aCBhIHZhbHVlIG9mIGFsd2F5cyB0byBzaW11bGF0ZSBhIG1vcmUgc3RhdGljIGZvcm0uXG4gICAqL1xuICBASW5wdXQoJ254RmxvYXRMYWJlbCcpXG4gIGdldCBmbG9hdExhYmVsKCk6IEZsb2F0TGFiZWxUeXBlIHtcbiAgICByZXR1cm4gdGhpcy5fZmxvYXRMYWJlbCB8fCAodGhpcy5fZGVmYXVsdE9wdGlvbnMgJiYgdGhpcy5fZGVmYXVsdE9wdGlvbnMubnhGbG9hdExhYmVsKSB8fCAnYXV0byc7XG4gIH1cbiAgc2V0IGZsb2F0TGFiZWwodmFsdWU6IEZsb2F0TGFiZWxUeXBlKSB7XG4gICAgaWYgKHZhbHVlICE9PSB0aGlzLl9mbG9hdExhYmVsKSB7XG4gICAgICB0aGlzLl9mbG9hdExhYmVsID0gdmFsdWUgfHwgJ2F1dG8nO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG4gIHByaXZhdGUgX2Zsb2F0TGFiZWw6IEZsb2F0TGFiZWxUeXBlO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBzdHlsaW5nIG9mIHRoZSBmb3JtZmllbGQuXG4gICAqIElmICduZWdhdGl2ZScsIGEgbmVnYXRpdmUgc2V0IG9mIHN0eWxpbmdzIGlzIHVzZWQuXG4gICAqL1xuICBASW5wdXQoJ254U3R5bGUnKVxuICBzZXQgc3R5bGVzKHZhbHVlOiBzdHJpbmcpIHtcblxuICAgIGlmICh0aGlzLl9zdHlsZXMgPT09IHZhbHVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IGdldENsYXNzTmFtZUxpc3QodmFsdWUsIE5YX1NUWUxFUyk7XG5cbiAgICBjbGFzc05hbWVzLmZvckVhY2goY2xhc3NTdHIgPT4ge1xuICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgY2xhc3NTdHIpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fc3R5bGVzID0gdmFsdWU7XG4gIH1cblxuICBwcml2YXRlIF9hcHBlYXJhbmNlOiBBcHBlYXJhbmNlVHlwZTtcblxuICAvKipcbiAgICogKipOREJYIEV4cGVydCBvcHRpb24qKlxuICAgKlxuICAgKiBTZXRzIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBmb3JtZmllbGQuXG4gICAqL1xuICBASW5wdXQoKVxuICBzZXQgYXBwZWFyYW5jZSh2YWx1ZTogQXBwZWFyYW5jZVR5cGUpIHtcbiAgICBpZiAodGhpcy5fYXBwZWFyYW5jZSAhPT0gdmFsdWUpIHtcbiAgICAgIHRoaXMuX2FwcGVhcmFuY2UgPSB2YWx1ZTtcbiAgICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuICBnZXQgYXBwZWFyYW5jZSgpOiBBcHBlYXJhbmNlVHlwZSB7XG4gICAgcmV0dXJuIHRoaXMuX2FwcGVhcmFuY2UgfHwgKHRoaXMuX2RlZmF1bHRPcHRpb25zICYmIHRoaXMuX2RlZmF1bHRPcHRpb25zLmFwcGVhcmFuY2UpIHx8ICdhdXRvJztcbiAgfVxuXG4gIGdldCBfc2hvdWxkQWx3YXlzRmxvYXQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZmxvYXRMYWJlbCA9PT0gJ2Fsd2F5cyc7XG4gIH1cblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBwdWJsaWMgZ2V0IHNob3VsZExhYmVsRmxvYXQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICh0aGlzLl9jb250cm9sLnNob3VsZExhYmVsRmxvYXQgfHwgdGhpcy5fc2hvdWxkQWx3YXlzRmxvYXQpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgICBwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZixcbiAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgcHJpdmF0ZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIEBPcHRpb25hbCgpIEBJbmplY3QoRk9STUZJRUxEX0RFRkFVTFRfT1BUSU9OUykgcHJpdmF0ZSBfZGVmYXVsdE9wdGlvbnM6IEZvcm1maWVsZERlZmF1bHRPcHRpb25zXG4gICAgKSB7IH1cblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBwdWJsaWMgZ2V0IGNvbnRyb2woKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbnRyb2w7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgbGV0IHN1YnNjcmlwdGlvbjtcbiAgICBjb25zdCBzdWJzY3JpcHRpb25zID0gW107XG5cbiAgICB0aGlzLl92YWxpZGF0ZUNvbnRyb2xDaGlsZCgpO1xuXG4gICAgLy8gU3Vic2NyaWJlIHRvIGNoYW5nZXMgaW4gdGhlIGNoaWxkIGNvbnRyb2wgc3RhdGUgaW4gb3JkZXIgdG8gdXBkYXRlIHRoZSBmb3JtIGZpZWxkIFVJLlxuICAgIHN1YnNjcmlwdGlvbiA9IHRoaXMuX2NvbnRyb2wuc3RhdGVDaGFuZ2VzLnBpcGUoc3RhcnRXaXRoKG51bGwpKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgdGhpcy5fc3luY0Rlc2NyaWJlZEJ5SWRzKCk7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9KTtcblxuICAgIHN1YnNjcmlwdGlvbnMucHVzaChzdWJzY3JpcHRpb24pO1xuXG4gICAgLy8gUmUtdmFsaWRhdGUgd2hlbiB0aGUgbnVtYmVyIG9mIGhpbnRzIGNoYW5nZXMuXG4gICAgc3Vic2NyaXB0aW9uID0gdGhpcy5faGludENoaWxkcmVuLmNoYW5nZXMucGlwZShzdGFydFdpdGgobnVsbCkpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9KTtcbiAgICBzdWJzY3JpcHRpb25zLnB1c2goc3Vic2NyaXB0aW9uKTtcblxuICAgIC8vIFVwZGF0ZSB0aGUgYXJpYS1kZXNjcmliZWQgYnkgd2hlbiB0aGUgbnVtYmVyIG9mIGVycm9ycyBjaGFuZ2VzLlxuICAgIHN1YnNjcmlwdGlvbiA9IHRoaXMuX2Vycm9yQ2hpbGRyZW4uY2hhbmdlcy5waXBlKHN0YXJ0V2l0aChudWxsKSkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIHRoaXMuX3N5bmNEZXNjcmliZWRCeUlkcygpO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfSk7XG4gICAgc3Vic2NyaXB0aW9ucy5wdXNoKHN1YnNjcmlwdGlvbik7XG5cbiAgICB0aGlzLl9zdWJzY3JpcHRpb25zID0gc3Vic2NyaXB0aW9ucztcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpIHtcbiAgICB0aGlzLl92YWxpZGF0ZUNvbnRyb2xDaGlsZCgpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5fc3Vic2NyaXB0aW9ucy5mb3JFYWNoKChzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbikgPT4gc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCkpO1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgZ2V0RGlzcGxheWVkTWVzc2FnZSgpOiAnaGludCcgfCAnZXJyb3InIHtcbiAgICBpZiAodGhpcy5fY29udHJvbC5lcnJvclN0YXRlICYmIHRoaXMuX2Vycm9yQ2hpbGRyZW4gJiYgdGhpcy5fZXJyb3JDaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICByZXR1cm4gJ2Vycm9yJztcbiAgICB9XG5cbiAgICByZXR1cm4gJ2hpbnQnO1xuICB9XG5cbiAgcHJpdmF0ZSBfc3luY0Rlc2NyaWJlZEJ5SWRzKCkge1xuICAgIGlmICh0aGlzLl9jb250cm9sKSB7XG4gICAgICBsZXQgaWRzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgaWRzID0gdGhpcy5fbm90ZUNoaWxkcmVuLm1hcChoaW50ID0+IGhpbnQuaWQpO1xuXG4gICAgICBpZiAodGhpcy5nZXREaXNwbGF5ZWRNZXNzYWdlKCkgPT09ICdoaW50Jykge1xuICAgICAgICBpZHMgPSBbLi4udGhpcy5faGludENoaWxkcmVuLm1hcChoaW50ID0+IGhpbnQuaWQpLCAuLi5pZHNdO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLl9lcnJvckNoaWxkcmVuKSB7XG4gICAgICAgIGlkcyA9IFsuLi50aGlzLl9lcnJvckNoaWxkcmVuLm1hcChlcnJvciA9PiBlcnJvci5pZCksIC4uLmlkc107XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2NvbnRyb2wuc2V0RGVzY3JpYmVkQnlJZHMoaWRzKTtcbiAgICB9XG4gIH1cblxuICAvLyBGYWlsIGlmIHRoZSByZXF1aXJlZCBjb250cm9sIGlzIG1pc3NpbmcuXG4gIHByb3RlY3RlZCBfdmFsaWRhdGVDb250cm9sQ2hpbGQoKSB7XG4gICAgaWYgKCF0aGlzLl9jb250cm9sKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Zvcm1maWVsZCBtdXN0IGNvbnRhaW4gYSBOeEZvcm1maWVsZENvbnRyb2wgbGlrZSBpbnB1dFtueElucHV0XSBvciBhIGN1c3RvbSBpbXBsZW1lbnRhdGlvbicpO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIGdldENvbm5lY3RlZE92ZXJsYXlPcmlnaW4oKTogRWxlbWVudFJlZiB7XG4gICAgcmV0dXJuIHRoaXMuX2Nvbm5lY3Rpb25Db250YWluZXJSZWYgfHwgdGhpcy5lbGVtZW50UmVmO1xuICB9XG59XG4iXX0=