/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, } from '@angular/core';
import { Subject } from 'rxjs';
import { nxTooltipAnimations } from './tooltip-animations';
/**
 * Internal component that wraps the tooltip's content.
 * \@docs-private
 */
var NxTooltipComponent = /** @class */ (function () {
    function NxTooltipComponent(_changeDetectorRef, elementRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this.elementRef = elementRef;
        /**
         * The timeout ID of any current timer set to show the tooltip
         */
        this._showTimeoutId = null;
        /**
         * The timeout ID of any current timer set to hide the tooltip
         */
        this._hideTimeoutId = null;
        this._visibility = 'initial';
        this._position = 'bottom';
        this._arrowStyle = {};
        /**
         * Whether interactions on the page should close the tooltip
         */
        this._closeOnInteraction = false;
        /**
         * Subject for notifying that the tooltip has been hidden from the view
         */
        this._onHide = new Subject();
    }
    Object.defineProperty(NxTooltipComponent.prototype, "message", {
        get: /**
         * @return {?}
         */
        function () {
            return this._message;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._message = value;
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxTooltipComponent.prototype, "visibility", {
        /** Property watched by the animation framework to show or hide the tooltip */
        get: /**
         * Property watched by the animation framework to show or hide the tooltip
         * @return {?}
         */
        function () {
            return this._visibility;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxTooltipComponent.prototype, "position", {
        /* @docs-private */
        get: /* @docs-private */
        /**
         * @return {?}
         */
        function () {
            return this._position;
        },
        /* @docs-private */
        set: /* @docs-private */
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._position = value;
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxTooltipComponent.prototype, "arrowStyle", {
        /* @docs-private */
        get: /* @docs-private */
        /**
         * @return {?}
         */
        function () {
            return this._arrowStyle;
        },
        /* @docs-private */
        set: /* @docs-private */
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._arrowStyle = value;
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxTooltipComponent.prototype, "arrowClass", {
        /* @docs-private */
        get: /* @docs-private */
        /**
         * @return {?}
         */
        function () {
            return "nx-tooltip__arrow--" + this.position;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Shows the tooltip with an aninxion originating from the provided origin
     * @param delay Amount of milliseconds to the delay showing the tooltip.
     */
    /**
     * Shows the tooltip with an aninxion originating from the provided origin
     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.
     * @return {?}
     */
    NxTooltipComponent.prototype.show = /**
     * Shows the tooltip with an aninxion originating from the provided origin
     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.
     * @return {?}
     */
    function (delay) {
        var _this = this;
        // Cancel the delayed hide if it is scheduled
        if (this._hideTimeoutId) {
            clearTimeout(this._hideTimeoutId);
            this._hideTimeoutId = null;
        }
        // Body interactions should cancel the tooltip if there is a delay in showing.
        this._closeOnInteraction = true;
        this._showTimeoutId = window.setTimeout((/**
         * @return {?}
         */
        function () {
            _this._visibility = 'visible';
            _this._showTimeoutId = null;
            // Mark for check so if any parent component has set the
            // ChangeDetectionStrategy to OnPush it will be checked anyways
            _this._changeDetectorRef.markForCheck();
        }), delay);
    };
    /**
     * Begins the animation to hide the tooltip after the provided delay in ms.
     * @param delay Amount of milliseconds to delay showing the tooltip.
     */
    /**
     * Begins the animation to hide the tooltip after the provided delay in ms.
     * @param {?} delay Amount of milliseconds to delay showing the tooltip.
     * @return {?}
     */
    NxTooltipComponent.prototype.hide = /**
     * Begins the animation to hide the tooltip after the provided delay in ms.
     * @param {?} delay Amount of milliseconds to delay showing the tooltip.
     * @return {?}
     */
    function (delay) {
        var _this = this;
        if (this._hideTimeoutId) {
            return;
        }
        // Cancel the delayed show if it is scheduled
        if (this._showTimeoutId) {
            clearTimeout(this._showTimeoutId);
            this._showTimeoutId = null;
        }
        this._hideTimeoutId = window.setTimeout((/**
         * @return {?}
         */
        function () {
            _this._visibility = 'hidden';
            _this._hideTimeoutId = null;
            // Mark for check so if any parent component has set the
            // ChangeDetectionStrategy to OnPush it will be checked anyways
            _this._changeDetectorRef.markForCheck();
        }), delay);
    };
    /** Returns an observable that notifies when the tooltip has been hidden from view. */
    /**
     * Returns an observable that notifies when the tooltip has been hidden from view.
     * @return {?}
     */
    NxTooltipComponent.prototype.afterHidden = /**
     * Returns an observable that notifies when the tooltip has been hidden from view.
     * @return {?}
     */
    function () {
        return this._onHide.asObservable();
    };
    /** Whether the tooltip is being displayed. */
    /**
     * Whether the tooltip is being displayed.
     * @return {?}
     */
    NxTooltipComponent.prototype.isVisible = /**
     * Whether the tooltip is being displayed.
     * @return {?}
     */
    function () {
        return this.visibility === 'visible';
    };
    /** Whether the tooltip started a delay to be shown/hidden */
    /**
     * Whether the tooltip started a delay to be shown/hidden
     * @return {?}
     */
    NxTooltipComponent.prototype.isDelayed = /**
     * Whether the tooltip started a delay to be shown/hidden
     * @return {?}
     */
    function () {
        return this._showTimeoutId !== null || this._hideTimeoutId !== null;
    };
    /**
     * @return {?}
     */
    NxTooltipComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._onHide.complete();
    };
    /**
     * @return {?}
     */
    NxTooltipComponent.prototype._animationStart = /**
     * @return {?}
     */
    function () {
        this._closeOnInteraction = false;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NxTooltipComponent.prototype._animationDone = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var toState = (/** @type {?} */ (event.toState));
        if (toState === 'hidden' && !this.isVisible()) {
            this._onHide.next();
        }
        if (toState === 'visible' || toState === 'hidden') {
            this._closeOnInteraction = true;
        }
    };
    /**
     * Interactions on the HTML body should close the tooltip immediately.
     */
    /**
     * Interactions on the HTML body should close the tooltip immediately.
     * @return {?}
     */
    NxTooltipComponent.prototype._handleBodyInteraction = /**
     * Interactions on the HTML body should close the tooltip immediately.
     * @return {?}
     */
    function () {
        if (this._closeOnInteraction) {
            this.hide(0);
        }
    };
    NxTooltipComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-tooltip-component',
                    template: "<div class=\"nx-tooltip\"\n    [@state]=\"visibility\"\n    (@state.start)=\"_animationStart()\"\n    (@state.done)=\"_animationDone($event)\">\n  <div [ngClass]=\"arrowClass\" class=\"nx-tooltip__arrow\" [ngStyle]=\"arrowStyle\"></div>\n  {{ message }}\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [nxTooltipAnimations.tooltipState],
                    host: {
                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element
                        // won't be rendered if the aninxions are disabled or there is no web aninxions polyfill.
                        '[style.zoom]': 'visibility === "visible" ? 1 : null',
                        '(body:click)': 'this._handleBodyInteraction()',
                        'aria-hidden': 'true',
                    },
                    styles: ["::ng-deep .nx-tooltip-panel{pointer-events:none!important}:host{padding:16px}.nx-tooltip{color:#fff;border-radius:4px;font-size:14px;line-height:20px;max-width:408px;padding:8px 16px;background-color:#414141}@media screen and (-ms-high-contrast:active){.nx-tooltip{outline:windowText solid 1px}}.nx-tooltip__arrow{position:absolute;width:12px;height:12px;background-color:inherit;z-index:-1}.nx-tooltip__arrow--top{-webkit-transform:translate(-50%,0) rotate(45deg);transform:translate(-50%,0) rotate(45deg);bottom:10px}.nx-tooltip__arrow--right{-webkit-transform:translate(0,-50%) rotate(45deg);transform:translate(0,-50%) rotate(45deg);left:10px}.nx-tooltip__arrow--bottom{-webkit-transform:translate(-50%,0) rotate(45deg);transform:translate(-50%,0) rotate(45deg);top:10px}.nx-tooltip__arrow--left{-webkit-transform:translate(0,-50%) rotate(45deg);transform:translate(0,-50%) rotate(45deg);right:10px}"]
                }] }
    ];
    /** @nocollapse */
    NxTooltipComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef }
    ]; };
    return NxTooltipComponent;
}());
export { NxTooltipComponent };
if (false) {
    /**
     * The timeout ID of any current timer set to show the tooltip
     * @type {?}
     * @private
     */
    NxTooltipComponent.prototype._showTimeoutId;
    /**
     * The timeout ID of any current timer set to hide the tooltip
     * @type {?}
     * @private
     */
    NxTooltipComponent.prototype._hideTimeoutId;
    /**
     * Message to display in the tooltip
     * @type {?}
     * @private
     */
    NxTooltipComponent.prototype._message;
    /**
     * @type {?}
     * @private
     */
    NxTooltipComponent.prototype._visibility;
    /**
     * @type {?}
     * @private
     */
    NxTooltipComponent.prototype._position;
    /** @type {?} */
    NxTooltipComponent.prototype._arrowStyle;
    /**
     * Whether interactions on the page should close the tooltip
     * @type {?}
     * @private
     */
    NxTooltipComponent.prototype._closeOnInteraction;
    /**
     * Subject for notifying that the tooltip has been hidden from the view
     * @type {?}
     * @private
     */
    NxTooltipComponent.prototype._onHide;
    /**
     * @type {?}
     * @private
     */
    NxTooltipComponent.prototype._changeDetectorRef;
    /** @type {?} */
    NxTooltipComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,