/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
/**
 * This components is a collapsible menu for usage on smaller devices.
 * Can contain any content, but usually [nxMenuLink], [nxMenuGroup] and [nxAction].
 */
var NxMenuComponent = /** @class */ (function () {
    function NxMenuComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._open = false;
    }
    Object.defineProperty(NxMenuComponent.prototype, "open", {
        get: /**
         * @return {?}
         */
        function () {
            return this._open;
        },
        /** Whether the menu is open or closed. */
        set: /**
         * Whether the menu is open or closed.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var open = coerceBooleanProperty(value);
            if (open !== this._open) {
                this._open = open;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    /* Toggles the open state of the menu. */
    /* Toggles the open state of the menu. */
    /**
     * @return {?}
     */
    NxMenuComponent.prototype.toggle = /* Toggles the open state of the menu. */
    /**
     * @return {?}
     */
    function () {
        this.open = !this.open;
    };
    NxMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-menu',
                    template: "<div class=\"nx-menu__wrapper\" *ngIf=\"open\">\n  <ng-content></ng-content>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[attr.aria-expanded]': 'open'
                    },
                    styles: [":host(.nx-menu){display:block}.nx-menu__wrapper{position:fixed;top:60px;left:0;right:0;bottom:0;z-index:1;overflow:auto;background:#fff}::ng-deep .nx-menu__link{display:block;padding:12px 0;font-size:18px;line-height:24px;outline:0}::ng-deep .nx-menu__link+.nx-menu__link{margin-top:8px}::ng-deep [data-whatinput=keyboard] .nx-menu__link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px;outline:0}::ng-deep .nx-menu__item.nx-menu__item--large,::ng-deep .nx-menu__item.nx-menu__item--small{padding:24px;border-bottom:1px solid #d9d9d9}::ng-deep .nx-menu__item.nx-menu__item--large{padding-left:64px}"]
                }] }
    ];
    /** @nocollapse */
    NxMenuComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NxMenuComponent.propDecorators = {
        open: [{ type: Input }]
    };
    return NxMenuComponent;
}());
export { NxMenuComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxMenuComponent.prototype._open;
    /**
     * @type {?}
     * @private
     */
    NxMenuComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC9tZW51LyIsInNvdXJjZXMiOlsibWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7OztBQU05RDtJQStCRSx5QkFBb0Isa0JBQXFDO1FBQXJDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7UUFyQmpELFVBQUssR0FBWSxLQUFLLENBQUM7SUFxQjZCLENBQUM7SUFsQjdELHNCQUNJLGlDQUFJOzs7O1FBUVI7WUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDcEIsQ0FBQztRQVpELDBDQUEwQzs7Ozs7O1FBQzFDLFVBQ1MsS0FBYzs7Z0JBQ2YsSUFBSSxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQztZQUN6QyxJQUFJLElBQUksS0FBSyxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztnQkFDbEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO2FBQ3hDO1FBQ0gsQ0FBQzs7O09BQUE7SUFNRCx5Q0FBeUM7Ozs7O0lBQ3pDLGdDQUFNOzs7O0lBQU47UUFDRSxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztJQUN6QixDQUFDOztnQkE3QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxTQUFTO29CQUNuQixrR0FBd0I7b0JBRXhCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxJQUFJLEVBQUU7d0JBQ0osc0JBQXNCLEVBQUUsTUFBTTtxQkFDL0I7O2lCQUNGOzs7O2dCQWY0QyxpQkFBaUI7Ozt1QkFvQjNELEtBQUs7O0lBbUJSLHNCQUFDO0NBQUEsQUFoQ0QsSUFnQ0M7U0F2QlksZUFBZTs7Ozs7O0lBQzFCLGdDQUErQjs7Ozs7SUFxQm5CLDZDQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcblxuLyoqXG4gIFRoaXMgY29tcG9uZW50cyBpcyBhIGNvbGxhcHNpYmxlIG1lbnUgZm9yIHVzYWdlIG9uIHNtYWxsZXIgZGV2aWNlcy5cbiAgQ2FuIGNvbnRhaW4gYW55IGNvbnRlbnQsIGJ1dCB1c3VhbGx5IFtueE1lbnVMaW5rXSwgW254TWVudUdyb3VwXSBhbmQgW254QWN0aW9uXS5cbiovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC1tZW51JyxcbiAgdGVtcGxhdGVVcmw6ICdtZW51Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnbWVudS5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBob3N0OiB7XG4gICAgJ1thdHRyLmFyaWEtZXhwYW5kZWRdJzogJ29wZW4nXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnhNZW51Q29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfb3BlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBXaGV0aGVyIHRoZSBtZW51IGlzIG9wZW4gb3IgY2xvc2VkLiAqL1xuICBASW5wdXQoKVxuICBzZXQgb3Blbih2YWx1ZTogYm9vbGVhbikge1xuICAgIGNvbnN0IG9wZW4gPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgIGlmIChvcGVuICE9PSB0aGlzLl9vcGVuKSB7XG4gICAgICB0aGlzLl9vcGVuID0gb3BlbjtcbiAgICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBvcGVuKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9vcGVuO1xuICB9XG5cbiAgLyogVG9nZ2xlcyB0aGUgb3BlbiBzdGF0ZSBvZiB0aGUgbWVudS4gKi9cbiAgdG9nZ2xlKCkge1xuICAgIHRoaXMub3BlbiA9ICF0aGlzLm9wZW47XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG59XG5cbiJdfQ==