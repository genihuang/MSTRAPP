/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Directive } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
/**
 * \@title MenuButton
 */
var NxMenuButtonComponent = /** @class */ (function () {
    function NxMenuButtonComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._expandable = false;
        this._expanded = false;
        this._type = 'root';
    }
    Object.defineProperty(NxMenuButtonComponent.prototype, "expandable", {
        get: /**
         * @return {?}
         */
        function () {
            return this._expandable;
        },
        /** Whether this menu button is expandable or not. Will add a caret icon. */
        set: /**
         * Whether this menu button is expandable or not. Will add a caret icon.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._expandable = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxMenuButtonComponent.prototype, "expanded", {
        get: /**
         * @return {?}
         */
        function () {
            return this._expanded;
        },
        /**
         * Whether this menu button is expanded or not.
         * Only works in combination with the `expandable` option set to `true`.
         */
        set: /**
         * Whether this menu button is expanded or not.
         * Only works in combination with the `expandable` option set to `true`.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._expanded = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxMenuButtonComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            return this._type;
        },
        /**
         * The type of this menu button.
         * Can be `primary` or `secondary`, defaults to `primary`.
         */
        set: /**
         * The type of this menu button.
         * Can be `primary` or `secondary`, defaults to `primary`.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value === 'root' || value === 'nested') {
                this._type = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    NxMenuButtonComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: '[nxMenuButton]',
                    template: "<ng-content select=\"[nxMenuButtonIcon]\"></ng-content>\n<span class=\"nx-menu-button__label\">\n  <ng-content></ng-content>\n</span>\n<nx-icon *ngIf=\"expandable\" class=\"nx-menu-button__expand-icon\" name=\"chevron-down\"></nx-icon>\n",
                    host: {
                        '[class.is-expanded]': 'expandable && expanded',
                        '[class.is-expandable]': 'expandable',
                        '[class.nx-menu-button--nested]': 'type === "nested"',
                        '[class.nx-menu-button--root]': 'type === "root"',
                        'class': 'nx-menu-button'
                    },
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host{display:flex;align-items:center;background-color:#fff;color:#414141;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;box-shadow:none;border:none;margin:0;cursor:pointer;line-height:24px;font-weight:400;font-size:18px;width:100%;text-decoration:none;padding:24px}:host:hover{background-color:#ececec}:host.is-expanded{font-weight:700;background-color:#007ab3;border-color:#007ab3;color:#fff}:host.is-expanded .nx-menu-button__expand-icon{-webkit-transform:rotateZ(180deg);transform:rotateZ(180deg)}:host.nx-menu-button--nested{background-color:#f5f5f5}:host.nx-menu-button--nested.is-expanded{background-color:#c1ebfb;border-color:#c1ebfb;color:#414141}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]):focus{box-shadow:inset 0 0 0 4px #009de6,inset 0 0 0 6px #fff;border-radius:8px;border:none}.nx-menu-button__expand-icon{display:flex;justify-content:center;transition:.2s;-webkit-transform:rotateZ(0);transform:rotateZ(0);width:16px;height:24px;margin-right:8px;flex:0 0 auto;font-size:24px}.nx-menu-button__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 auto;text-align:left;line-height:1;padding:4px 0}::ng-deep .nx-menu-button__icon{margin-right:16px;height:24px;font-weight:400;flex:0 0 auto}"]
                }] }
    ];
    /** @nocollapse */
    NxMenuButtonComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NxMenuButtonComponent.propDecorators = {
        expandable: [{ type: Input }],
        expanded: [{ type: Input }],
        type: [{ type: Input, args: ['nxType',] }]
    };
    return NxMenuButtonComponent;
}());
export { NxMenuButtonComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxMenuButtonComponent.prototype._expandable;
    /**
     * @type {?}
     * @private
     */
    NxMenuButtonComponent.prototype._expanded;
    /**
     * @type {?}
     * @private
     */
    NxMenuButtonComponent.prototype._type;
    /**
     * @type {?}
     * @private
     */
    NxMenuButtonComponent.prototype._changeDetectorRef;
}
/**
 * Icon that can be added to a [nxButton].
 */
var NxMenuButtonIconDirective = /** @class */ (function () {
    function NxMenuButtonIconDirective() {
    }
    NxMenuButtonIconDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[nxMenuButtonIcon]',
                    host: {
                        class: 'nx-menu-button__icon'
                    }
                },] }
    ];
    return NxMenuButtonIconDirective;
}());
export { NxMenuButtonIconDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvbWVudS8iLCJzb3VyY2VzIjpbIm1lbnUtYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQWEsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ILE9BQU8sRUFBRSxxQkFBcUIsRUFBd0IsTUFBTSx1QkFBdUIsQ0FBQzs7OztBQU9wRjtJQXdERSwrQkFBb0Isa0JBQXFDO1FBQXJDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7UUFoQ2pELGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBYzdCLGNBQVMsR0FBWSxLQUFLLENBQUM7UUFnQjNCLFVBQUssR0FBcUIsTUFBTSxDQUFDO0lBRW1CLENBQUM7SUF4QzdELHNCQUNJLDZDQUFVOzs7O1FBSWQ7WUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDMUIsQ0FBQztRQVJELDRFQUE0RTs7Ozs7O1FBQzVFLFVBQ2UsS0FBYztZQUMzQixJQUFJLENBQUMsV0FBVyxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2hELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN6QyxDQUFDOzs7T0FBQTtJQVVELHNCQUNJLDJDQUFROzs7O1FBSVo7WUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDeEIsQ0FBQztRQVhEOzs7V0FHRzs7Ozs7OztRQUNILFVBQ2EsS0FBYztZQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN6QyxDQUFDOzs7T0FBQTtJQVVELHNCQUNJLHVDQUFJOzs7O1FBTVI7WUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDcEIsQ0FBQztRQWJEOzs7V0FHRzs7Ozs7OztRQUNILFVBQ1MsS0FBdUI7WUFDOUIsSUFBSSxLQUFLLEtBQUssTUFBTSxJQUFJLEtBQUssS0FBSyxRQUFRLEVBQUU7Z0JBQzFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO2dCQUNuQixJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7YUFDeEM7UUFDSCxDQUFDOzs7T0FBQTs7Z0JBbERGLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIseVBBQXlDO29CQUV6QyxJQUFJLEVBQUU7d0JBQ0oscUJBQXFCLEVBQUUsd0JBQXdCO3dCQUMvQyx1QkFBdUIsRUFBRSxZQUFZO3dCQUNyQyxnQ0FBZ0MsRUFBRSxtQkFBbUI7d0JBQ3JELDhCQUE4QixFQUFFLGlCQUFpQjt3QkFDakQsT0FBTyxFQUFFLGdCQUFnQjtxQkFDMUI7b0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2lCQUNoRDs7OztnQkFyQm1ELGlCQUFpQjs7OzZCQXdCbEUsS0FBSzsyQkFjTCxLQUFLO3VCQWNMLEtBQUssU0FBQyxRQUFROztJQWFqQiw0QkFBQztDQUFBLEFBekRELElBeURDO1NBM0NZLHFCQUFxQjs7Ozs7O0lBVWhDLDRDQUFxQzs7Ozs7SUFjckMsMENBQW1DOzs7OztJQWdCbkMsc0NBQXlDOzs7OztJQUU3QixtREFBNkM7Ozs7O0FBTzNEO0lBQUE7SUFNd0MsQ0FBQzs7Z0JBTnhDLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixJQUFJLEVBQUU7d0JBQ0osS0FBSyxFQUFFLHNCQUFzQjtxQkFDOUI7aUJBQ0Y7O0lBQ3VDLGdDQUFDO0NBQUEsQUFOekMsSUFNeUM7U0FBNUIseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBBdHRyaWJ1dGUsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5LCBjb2VyY2VOdW1iZXJQcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5cbmV4cG9ydCB0eXBlIE54TWVudUJ1dHRvblR5cGUgPSAncm9vdCcgfCAnbmVzdGVkJztcblxuLyoqXG4gKiBAdGl0bGUgTWVudUJ1dHRvblxuICovXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ1tueE1lbnVCdXR0b25dJyxcbiAgdGVtcGxhdGVVcmw6ICdtZW51LWJ1dHRvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWydtZW51LWJ1dHRvbi5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5pcy1leHBhbmRlZF0nOiAnZXhwYW5kYWJsZSAmJiBleHBhbmRlZCcsXG4gICAgJ1tjbGFzcy5pcy1leHBhbmRhYmxlXSc6ICdleHBhbmRhYmxlJyxcbiAgICAnW2NsYXNzLm54LW1lbnUtYnV0dG9uLS1uZXN0ZWRdJzogJ3R5cGUgPT09IFwibmVzdGVkXCInLFxuICAgICdbY2xhc3MubngtbWVudS1idXR0b24tLXJvb3RdJzogJ3R5cGUgPT09IFwicm9vdFwiJyxcbiAgICAnY2xhc3MnOiAnbngtbWVudS1idXR0b24nXG4gIH0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOeE1lbnVCdXR0b25Db21wb25lbnQge1xuICAvKiogV2hldGhlciB0aGlzIG1lbnUgYnV0dG9uIGlzIGV4cGFuZGFibGUgb3Igbm90LiBXaWxsIGFkZCBhIGNhcmV0IGljb24uICovXG4gIEBJbnB1dCgpXG4gIHNldCBleHBhbmRhYmxlKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fZXhwYW5kYWJsZSA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgZ2V0IGV4cGFuZGFibGUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2V4cGFuZGFibGU7XG4gIH1cbiAgcHJpdmF0ZSBfZXhwYW5kYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoaXMgbWVudSBidXR0b24gaXMgZXhwYW5kZWQgb3Igbm90LlxuICAgKiBPbmx5IHdvcmtzIGluIGNvbWJpbmF0aW9uIHdpdGggdGhlIGBleHBhbmRhYmxlYCBvcHRpb24gc2V0IHRvIGB0cnVlYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIHNldCBleHBhbmRlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2V4cGFuZGVkID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuICBnZXQgZXhwYW5kZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2V4cGFuZGVkO1xuICB9XG4gIHByaXZhdGUgX2V4cGFuZGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIFRoZSB0eXBlIG9mIHRoaXMgbWVudSBidXR0b24uXG4gICAqIENhbiBiZSBgcHJpbWFyeWAgb3IgYHNlY29uZGFyeWAsIGRlZmF1bHRzIHRvIGBwcmltYXJ5YC5cbiAgICovXG4gIEBJbnB1dCgnbnhUeXBlJylcbiAgc2V0IHR5cGUodmFsdWU6IE54TWVudUJ1dHRvblR5cGUpIHtcbiAgICBpZiAodmFsdWUgPT09ICdyb290JyB8fCB2YWx1ZSA9PT0gJ25lc3RlZCcpIHtcbiAgICAgIHRoaXMuX3R5cGUgPSB2YWx1ZTtcbiAgICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuICBnZXQgdHlwZSgpOiBOeE1lbnVCdXR0b25UeXBlIHtcbiAgICByZXR1cm4gdGhpcy5fdHlwZTtcbiAgfVxuICBwcml2YXRlIF90eXBlOiBOeE1lbnVCdXR0b25UeXBlID0gJ3Jvb3QnO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge31cbn1cblxuXG4vKipcbiAqIEljb24gdGhhdCBjYW4gYmUgYWRkZWQgdG8gYSBbbnhCdXR0b25dLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbnhNZW51QnV0dG9uSWNvbl0nLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICdueC1tZW51LWJ1dHRvbl9faWNvbidcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOeE1lbnVCdXR0b25JY29uRGlyZWN0aXZlIHt9XG4iXX0=