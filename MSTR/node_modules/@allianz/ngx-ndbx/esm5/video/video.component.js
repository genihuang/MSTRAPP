/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var NxVideoComponent = /** @class */ (function () {
    function NxVideoComponent(sanitizer, _changeDetectorRef) {
        this.sanitizer = sanitizer;
        this._changeDetectorRef = _changeDetectorRef;
        this._videoId = null;
        this._altText = '';
        this._playButtonAriaLabel = '';
        this._previewImageSrc = null;
        this._showPlayerControls = true;
        this._allowFullScreen = true;
        this._interfaceLanguage = null;
        /**
         * \@docs-private
         */
        this.showPlayer = false;
    }
    Object.defineProperty(NxVideoComponent.prototype, "videoId", {
        get: /**
         * @return {?}
         */
        function () {
            return this._videoId;
        },
        /** Sets the id of the YouTube video. */
        set: /**
         * Sets the id of the YouTube video.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._videoId !== value) {
                this._videoId = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "altText", {
        get: /**
         * @return {?}
         */
        function () {
            return this._altText;
        },
        /** Sets the value of the alt attribute for the preview image. */
        set: /**
         * Sets the value of the alt attribute for the preview image.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._altText !== value) {
                this._altText = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "nxPlayButtonAriaLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return this._playButtonAriaLabel;
        },
        /** Sets the value of the aria-label attribute on the play button (Default: Play Video). */
        set: /**
         * Sets the value of the aria-label attribute on the play button (Default: Play Video).
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._playButtonAriaLabel !== value) {
                this._playButtonAriaLabel = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "previewImageSrc", {
        get: /**
         * @return {?}
         */
        function () {
            return this._previewImageSrc;
        },
        /** Sets the preview image. If this is not provided, an image from YouTube will be used as default. */
        set: /**
         * Sets the preview image. If this is not provided, an image from YouTube will be used as default.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._previewImageSrc !== value) {
                this._previewImageSrc = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "showPlayerControls", {
        get: /**
         * @return {?}
         */
        function () {
            return this._showPlayerControls;
        },
        /** Sets player controls. If set to false, player controls are not available. */
        set: /**
         * Sets player controls. If set to false, player controls are not available.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._showPlayerControls = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "allowFullScreen", {
        get: /**
         * @return {?}
         */
        function () {
            return this._allowFullScreen;
        },
        /** Sets fullscreen option. If set to false, fullscreen option is not available. */
        set: /**
         * Sets fullscreen option. If set to false, fullscreen option is not available.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._allowFullScreen = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "interfaceLanguage", {
        get: /**
         * @return {?}
         */
        function () {
            return this._interfaceLanguage;
        },
        /** Sets interface language. Can be used to override the interface language determined by YouTube. */
        set: /**
         * Sets interface language. Can be used to override the interface language determined by YouTube.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._interfaceLanguage !== value) {
                this._interfaceLanguage = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    /** @docs-private */
    /**
     * \@docs-private
     * @return {?}
     */
    NxVideoComponent.prototype.select = /**
     * \@docs-private
     * @return {?}
     */
    function () {
        this.showPlayer = true;
        this._changeDetectorRef.markForCheck();
    };
    Object.defineProperty(NxVideoComponent.prototype, "videoSrc", {
        /** Returns the safe resource URL of the YouTube video, given video id.  */
        get: /**
         * Returns the safe resource URL of the YouTube video, given video id.
         * @return {?}
         */
        function () {
            /** @type {?} */
            var url = "https://www.youtube.com/embed/" + this.videoId + "?rel=0&showinfo=0&autoplay=1";
            if (!this.showPlayerControls) {
                url += '&controls=0';
            }
            if (!this.allowFullScreen) {
                url += '&fs=0';
            }
            if (this.interfaceLanguage) {
                url += "&hl=" + this.interfaceLanguage;
            }
            return this.sanitizer.bypassSecurityTrustResourceUrl(url);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "imgSrc", {
        /** Returns the preview image source URL, given video id. */
        get: /**
         * Returns the preview image source URL, given video id.
         * @return {?}
         */
        function () {
            return this.previewImageSrc ? this.previewImageSrc : "https://img.youtube.com/vi/" + this.videoId + "/sddefault.jpg";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxVideoComponent.prototype, "playButtonAriaLabel", {
        /** Returns the labels for the control buttons. */
        get: /**
         * Returns the labels for the control buttons.
         * @return {?}
         */
        function () {
            /** @type {?} */
            var defaultLabel = this.altText ? this.altText + " - Play Video" : 'Play Video';
            return this.nxPlayButtonAriaLabel ? this.nxPlayButtonAriaLabel : defaultLabel;
        },
        enumerable: true,
        configurable: true
    });
    NxVideoComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-video',
                    template: "<div class=\"nx-video\">\n  <div class=\"nx-video__iframe\">\n\n    <div *ngIf=\"!showPlayer\">\n\n      <button class=\"nx-video__play-button\"\n              (click)=\"select()\"\n              [attr.aria-label]=\"playButtonAriaLabel\"\n              (keydown.enter)=\"select()\">\n      </button>\n      <img [src]=\"imgSrc\" class=\"nx-video__thumbnail\"\n           [alt]=\"altText\"\n           (click)=\"select()\"\n           (keydown.enter)=\"select()\">\n\n    </div>\n    <div *ngIf=\"videoId && showPlayer\">\n      <iframe title=\"video\" class=\"nx-video__iframe\" [attr.allowfullscreen]=\"allowFullScreen\" [src]=\"videoSrc\"></iframe>\n    </div>\n\n  </div>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".nx-video{position:relative;padding-bottom:56.25%;overflow:hidden;width:100%;height:auto}.nx-video__iframe{position:absolute;top:0;left:0;width:100%;height:100%;border:none}.nx-video__thumbnail{position:absolute;cursor:pointer;width:100%;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);opacity:.7}.nx-video__play-button{border:none;background:url(play-button.svg) center no-repeat;cursor:pointer;position:absolute;width:88px;height:56px;z-index:1}.nx-video__play-button::-moz-focus-inner{border:0}.nx-video__play-button,.nx-video__play-button:before{top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}"]
                }] }
    ];
    /** @nocollapse */
    NxVideoComponent.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: ChangeDetectorRef }
    ]; };
    NxVideoComponent.propDecorators = {
        videoId: [{ type: Input, args: ['nxVideoId',] }],
        altText: [{ type: Input, args: ['nxAltText',] }],
        nxPlayButtonAriaLabel: [{ type: Input, args: ['nxPlayButtonAriaLabel',] }],
        previewImageSrc: [{ type: Input, args: ['nxPreviewImageSrc',] }],
        showPlayerControls: [{ type: Input, args: ['nxShowPlayerControls',] }],
        allowFullScreen: [{ type: Input, args: ['nxAllowFullScreen',] }],
        interfaceLanguage: [{ type: Input, args: ['nxInterfaceLanguage',] }]
    };
    return NxVideoComponent;
}());
export { NxVideoComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype._videoId;
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype._altText;
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype._playButtonAriaLabel;
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype._previewImageSrc;
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype._showPlayerControls;
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype._allowFullScreen;
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype._interfaceLanguage;
    /**
     * \@docs-private
     * @type {?}
     */
    NxVideoComponent.prototype.showPlayer;
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype.sanitizer;
    /**
     * @type {?}
     * @private
     */
    NxVideoComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlkZW8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvIiwic291cmNlcyI6WyJ2aWRlby92aWRlby5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzlELE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxZQUFZLEVBQW1CLE1BQU0sMkJBQTJCLENBQUM7QUFFMUU7SUEyR0UsMEJBQW9CLFNBQXVCLEVBQVUsa0JBQXFDO1FBQXRFLGNBQVMsR0FBVCxTQUFTLENBQWM7UUFBVSx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW1CO1FBakdsRixhQUFRLEdBQVcsSUFBSSxDQUFDO1FBY3hCLGFBQVEsR0FBVyxFQUFFLENBQUM7UUFjdEIseUJBQW9CLEdBQVcsRUFBRSxDQUFDO1FBY2xDLHFCQUFnQixHQUFXLElBQUksQ0FBQztRQWNoQyx3QkFBbUIsR0FBWSxJQUFJLENBQUM7UUFZcEMscUJBQWdCLEdBQVksSUFBSSxDQUFDO1FBWWpDLHVCQUFrQixHQUFXLElBQUksQ0FBQzs7OztRQWUxQyxlQUFVLEdBQUcsS0FBSyxDQUFDO0lBRTBFLENBQUM7SUE5RjlGLHNCQUNJLHFDQUFPOzs7O1FBTVg7WUFDRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQztRQVZELHdDQUF3Qzs7Ozs7O1FBQ3hDLFVBQ1ksS0FBYTtZQUN2QixJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssS0FBSyxFQUFFO2dCQUMzQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztnQkFDdEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO2FBQ3hDO1FBQ0gsQ0FBQzs7O09BQUE7SUFRRCxzQkFDSSxxQ0FBTzs7OztRQU1YO1lBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZCLENBQUM7UUFWRCxpRUFBaUU7Ozs7OztRQUNqRSxVQUNZLEtBQWE7WUFDdkIsSUFBSSxJQUFJLENBQUMsUUFBUSxLQUFLLEtBQUssRUFBRTtnQkFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7Z0JBQ3RCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQzthQUN4QztRQUNILENBQUM7OztPQUFBO0lBUUQsc0JBQ0ksbURBQXFCOzs7O1FBTXpCO1lBQ0UsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUM7UUFDbkMsQ0FBQztRQVZELDJGQUEyRjs7Ozs7O1FBQzNGLFVBQzBCLEtBQWE7WUFDckMsSUFBSSxJQUFJLENBQUMsb0JBQW9CLEtBQUssS0FBSyxFQUFFO2dCQUN2QyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsS0FBSyxDQUFDO2dCQUNsQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7YUFDeEM7UUFDSCxDQUFDOzs7T0FBQTtJQVFELHNCQUNJLDZDQUFlOzs7O1FBTW5CO1lBQ0UsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFDL0IsQ0FBQztRQVZELHNHQUFzRzs7Ozs7O1FBQ3RHLFVBQ29CLEtBQWE7WUFDL0IsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEtBQUssS0FBSyxFQUFFO2dCQUNuQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO2dCQUM5QixJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7YUFDeEM7UUFDSCxDQUFDOzs7T0FBQTtJQVFELHNCQUNJLGdEQUFrQjs7OztRQUl0QjtZQUNFLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDO1FBQ2xDLENBQUM7UUFSRCxnRkFBZ0Y7Ozs7OztRQUNoRixVQUN1QixLQUFjO1lBQ25DLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN4RCxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDekMsQ0FBQzs7O09BQUE7SUFRRCxzQkFDSSw2Q0FBZTs7OztRQUluQjtZQUNFLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBQy9CLENBQUM7UUFSRCxtRkFBbUY7Ozs7OztRQUNuRixVQUNvQixLQUFjO1lBQ2hDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNyRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDekMsQ0FBQzs7O09BQUE7SUFRRCxzQkFDSSwrQ0FBaUI7Ozs7UUFNckI7WUFDRSxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztRQUNqQyxDQUFDO1FBVkQscUdBQXFHOzs7Ozs7UUFDckcsVUFDc0IsS0FBYTtZQUNqQyxJQUFJLElBQUksQ0FBQyxrQkFBa0IsS0FBSyxLQUFLLEVBQUU7Z0JBQ3JDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxLQUFLLENBQUM7Z0JBQ2hDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQzthQUN4QztRQUNILENBQUM7OztPQUFBO0lBVUQsb0JBQW9COzs7OztJQUNwQixpQ0FBTTs7OztJQUFOO1FBQ0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFHRCxzQkFBSSxzQ0FBUTtRQURYLDJFQUEyRTs7Ozs7UUFDNUU7O2dCQUNNLEdBQUcsR0FBRyxtQ0FBaUMsSUFBSSxDQUFDLE9BQU8saUNBQThCO1lBQ3JGLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUU7Z0JBQzVCLEdBQUcsSUFBSSxhQUFhLENBQUM7YUFDdEI7WUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRTtnQkFDekIsR0FBRyxJQUFJLE9BQU8sQ0FBQzthQUNoQjtZQUNELElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO2dCQUMxQixHQUFHLElBQUksU0FBTyxJQUFJLENBQUMsaUJBQW1CLENBQUM7YUFDeEM7WUFDRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsOEJBQThCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUQsQ0FBQzs7O09BQUE7SUFHRCxzQkFBSSxvQ0FBTTtRQURWLDREQUE0RDs7Ozs7UUFDNUQ7WUFDRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLGdDQUE4QixJQUFJLENBQUMsT0FBTyxtQkFBZ0IsQ0FBQztRQUNsSCxDQUFDOzs7T0FBQTtJQUdELHNCQUFJLGlEQUFtQjtRQUR2QixrREFBa0Q7Ozs7O1FBQ2xEOztnQkFDUSxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUksSUFBSSxDQUFDLE9BQU8sa0JBQWUsQ0FBQyxDQUFDLENBQUMsWUFBWTtZQUNqRixPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7UUFDaEYsQ0FBQzs7O09BQUE7O2dCQTNJRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFVBQVU7b0JBQ3BCLHdyQkFBbUM7b0JBQ25DLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztpQkFFaEQ7Ozs7Z0JBUFEsWUFBWTtnQkFEK0IsaUJBQWlCOzs7MEJBZ0JsRSxLQUFLLFNBQUMsV0FBVzswQkFjakIsS0FBSyxTQUFDLFdBQVc7d0NBY2pCLEtBQUssU0FBQyx1QkFBdUI7a0NBYzdCLEtBQUssU0FBQyxtQkFBbUI7cUNBY3pCLEtBQUssU0FBQyxzQkFBc0I7a0NBWTVCLEtBQUssU0FBQyxtQkFBbUI7b0NBWXpCLEtBQUssU0FBQyxxQkFBcUI7O0lBK0M5Qix1QkFBQztDQUFBLEFBNUlELElBNElDO1NBcElZLGdCQUFnQjs7Ozs7O0lBRTNCLG9DQUFnQzs7Ozs7SUFjaEMsb0NBQThCOzs7OztJQWM5QixnREFBMEM7Ozs7O0lBYzFDLDRDQUF3Qzs7Ozs7SUFjeEMsK0NBQTRDOzs7OztJQVk1Qyw0Q0FBeUM7Ozs7O0lBWXpDLDhDQUEwQzs7Ozs7SUFlMUMsc0NBQW1COzs7OztJQUVQLHFDQUErQjs7Ozs7SUFBRSw4Q0FBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2VCb29sZWFuUHJvcGVydHkgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIsIFNhZmVSZXNvdXJjZVVybCB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC12aWRlbycsXG4gIHRlbXBsYXRlVXJsOiAndmlkZW8uY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3R5bGVVcmxzOiBbICcuL3ZpZGVvLmNvbXBvbmVudC5zY3NzJyBdLFxufSlcblxuLy8gbm90ZSB0aGF0IHRoaXMgY3VycmVudGx5IG9ubHkgc3VwcG9ydHMgeW91dHViZSB2aWRlb3NcbmV4cG9ydCBjbGFzcyBOeFZpZGVvQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF92aWRlb0lkOiBzdHJpbmcgPSBudWxsO1xuXG4gIC8qKiBTZXRzIHRoZSBpZCBvZiB0aGUgWW91VHViZSB2aWRlby4gKi9cbiAgQElucHV0KCdueFZpZGVvSWQnKVxuICBzZXQgdmlkZW9JZCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHRoaXMuX3ZpZGVvSWQgIT09IHZhbHVlKSB7XG4gICAgICB0aGlzLl92aWRlb0lkID0gdmFsdWU7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gIH1cbiAgZ2V0IHZpZGVvSWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fdmlkZW9JZDtcbiAgfVxuXG4gIHByaXZhdGUgX2FsdFRleHQ6IHN0cmluZyA9ICcnO1xuXG4gIC8qKiBTZXRzIHRoZSB2YWx1ZSBvZiB0aGUgYWx0IGF0dHJpYnV0ZSBmb3IgdGhlIHByZXZpZXcgaW1hZ2UuICovXG4gIEBJbnB1dCgnbnhBbHRUZXh0JylcbiAgc2V0IGFsdFRleHQodmFsdWU6IHN0cmluZykge1xuICAgIGlmICh0aGlzLl9hbHRUZXh0ICE9PSB2YWx1ZSkge1xuICAgICAgdGhpcy5fYWx0VGV4dCA9IHZhbHVlO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG4gIGdldCBhbHRUZXh0KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2FsdFRleHQ7XG4gIH1cblxuICBwcml2YXRlIF9wbGF5QnV0dG9uQXJpYUxhYmVsOiBzdHJpbmcgPSAnJztcblxuICAvKiogU2V0cyB0aGUgdmFsdWUgb2YgdGhlIGFyaWEtbGFiZWwgYXR0cmlidXRlIG9uIHRoZSBwbGF5IGJ1dHRvbiAoRGVmYXVsdDogUGxheSBWaWRlbykuICovXG4gIEBJbnB1dCgnbnhQbGF5QnV0dG9uQXJpYUxhYmVsJylcbiAgc2V0IG54UGxheUJ1dHRvbkFyaWFMYWJlbCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHRoaXMuX3BsYXlCdXR0b25BcmlhTGFiZWwgIT09IHZhbHVlKSB7XG4gICAgICB0aGlzLl9wbGF5QnV0dG9uQXJpYUxhYmVsID0gdmFsdWU7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gIH1cbiAgZ2V0IG54UGxheUJ1dHRvbkFyaWFMYWJlbCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9wbGF5QnV0dG9uQXJpYUxhYmVsO1xuICB9XG5cbiAgcHJpdmF0ZSBfcHJldmlld0ltYWdlU3JjOiBzdHJpbmcgPSBudWxsO1xuXG4gIC8qKiBTZXRzIHRoZSBwcmV2aWV3IGltYWdlLiBJZiB0aGlzIGlzIG5vdCBwcm92aWRlZCwgYW4gaW1hZ2UgZnJvbSBZb3VUdWJlIHdpbGwgYmUgdXNlZCBhcyBkZWZhdWx0LiAqL1xuICBASW5wdXQoJ254UHJldmlld0ltYWdlU3JjJylcbiAgc2V0IHByZXZpZXdJbWFnZVNyYyh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHRoaXMuX3ByZXZpZXdJbWFnZVNyYyAhPT0gdmFsdWUpIHtcbiAgICAgIHRoaXMuX3ByZXZpZXdJbWFnZVNyYyA9IHZhbHVlO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG4gIGdldCBwcmV2aWV3SW1hZ2VTcmMoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fcHJldmlld0ltYWdlU3JjO1xuICB9XG5cbiAgcHJpdmF0ZSBfc2hvd1BsYXllckNvbnRyb2xzOiBib29sZWFuID0gdHJ1ZTtcblxuICAvKiogU2V0cyBwbGF5ZXIgY29udHJvbHMuIElmIHNldCB0byBmYWxzZSwgcGxheWVyIGNvbnRyb2xzIGFyZSBub3QgYXZhaWxhYmxlLiAqL1xuICBASW5wdXQoJ254U2hvd1BsYXllckNvbnRyb2xzJylcbiAgc2V0IHNob3dQbGF5ZXJDb250cm9scyh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX3Nob3dQbGF5ZXJDb250cm9scyA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgZ2V0IHNob3dQbGF5ZXJDb250cm9scygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fc2hvd1BsYXllckNvbnRyb2xzO1xuICB9XG5cbiAgcHJpdmF0ZSBfYWxsb3dGdWxsU2NyZWVuOiBib29sZWFuID0gdHJ1ZTtcblxuICAvKiogU2V0cyBmdWxsc2NyZWVuIG9wdGlvbi4gSWYgc2V0IHRvIGZhbHNlLCBmdWxsc2NyZWVuIG9wdGlvbiBpcyBub3QgYXZhaWxhYmxlLiAqL1xuICBASW5wdXQoJ254QWxsb3dGdWxsU2NyZWVuJylcbiAgc2V0IGFsbG93RnVsbFNjcmVlbih2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2FsbG93RnVsbFNjcmVlbiA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgZ2V0IGFsbG93RnVsbFNjcmVlbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fYWxsb3dGdWxsU2NyZWVuO1xuICB9XG5cbiAgcHJpdmF0ZSBfaW50ZXJmYWNlTGFuZ3VhZ2U6IHN0cmluZyA9IG51bGw7XG5cbiAgLyoqIFNldHMgaW50ZXJmYWNlIGxhbmd1YWdlLiBDYW4gYmUgdXNlZCB0byBvdmVycmlkZSB0aGUgaW50ZXJmYWNlIGxhbmd1YWdlIGRldGVybWluZWQgYnkgWW91VHViZS4gKi9cbiAgQElucHV0KCdueEludGVyZmFjZUxhbmd1YWdlJylcbiAgc2V0IGludGVyZmFjZUxhbmd1YWdlKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodGhpcy5faW50ZXJmYWNlTGFuZ3VhZ2UgIT09IHZhbHVlKSB7XG4gICAgICB0aGlzLl9pbnRlcmZhY2VMYW5ndWFnZSA9IHZhbHVlO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG4gIGdldCBpbnRlcmZhY2VMYW5ndWFnZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9pbnRlcmZhY2VMYW5ndWFnZTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHNob3dQbGF5ZXIgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNhbml0aXplcjogRG9tU2FuaXRpemVyLCBwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgc2VsZWN0KCk6IHZvaWQge1xuICAgIHRoaXMuc2hvd1BsYXllciA9IHRydWU7XG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cblxuICAgLyoqIFJldHVybnMgdGhlIHNhZmUgcmVzb3VyY2UgVVJMIG9mIHRoZSBZb3VUdWJlIHZpZGVvLCBnaXZlbiB2aWRlbyBpZC4gICovXG4gIGdldCB2aWRlb1NyYygpOiBTYWZlUmVzb3VyY2VVcmwge1xuICAgIGxldCB1cmwgPSBgaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvJHt0aGlzLnZpZGVvSWR9P3JlbD0wJnNob3dpbmZvPTAmYXV0b3BsYXk9MWA7XG4gICAgaWYgKCF0aGlzLnNob3dQbGF5ZXJDb250cm9scykge1xuICAgICAgdXJsICs9ICcmY29udHJvbHM9MCc7XG4gICAgfVxuICAgIGlmICghdGhpcy5hbGxvd0Z1bGxTY3JlZW4pIHtcbiAgICAgIHVybCArPSAnJmZzPTAnO1xuICAgIH1cbiAgICBpZiAodGhpcy5pbnRlcmZhY2VMYW5ndWFnZSkge1xuICAgICAgdXJsICs9IGAmaGw9JHt0aGlzLmludGVyZmFjZUxhbmd1YWdlfWA7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0UmVzb3VyY2VVcmwodXJsKTtcbiAgfVxuXG4gIC8qKiBSZXR1cm5zIHRoZSBwcmV2aWV3IGltYWdlIHNvdXJjZSBVUkwsIGdpdmVuIHZpZGVvIGlkLiAqL1xuICBnZXQgaW1nU3JjKCkge1xuICAgIHJldHVybiB0aGlzLnByZXZpZXdJbWFnZVNyYyA/IHRoaXMucHJldmlld0ltYWdlU3JjIDogYGh0dHBzOi8vaW1nLnlvdXR1YmUuY29tL3ZpLyR7dGhpcy52aWRlb0lkfS9zZGRlZmF1bHQuanBnYDtcbiAgfVxuXG4gIC8qKiBSZXR1cm5zIHRoZSBsYWJlbHMgZm9yIHRoZSBjb250cm9sIGJ1dHRvbnMuICovXG4gIGdldCBwbGF5QnV0dG9uQXJpYUxhYmVsKCkge1xuICAgIGNvbnN0IGRlZmF1bHRMYWJlbCA9IHRoaXMuYWx0VGV4dCA/IGAke3RoaXMuYWx0VGV4dH0gLSBQbGF5IFZpZGVvYCA6ICdQbGF5IFZpZGVvJztcbiAgICByZXR1cm4gdGhpcy5ueFBsYXlCdXR0b25BcmlhTGFiZWwgPyB0aGlzLm54UGxheUJ1dHRvbkFyaWFMYWJlbCA6IGRlZmF1bHRMYWJlbDtcbiAgfVxufVxuIl19