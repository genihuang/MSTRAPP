/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ElementRef, Input, ViewChild } from '@angular/core';
/** @type {?} */
var nextId = 0;
/**
 * @abstract
 */
var NxRadioCircleButton = /** @class */ (function () {
    function NxRadioCircleButton(radioCircle) {
        this.radioCircle = radioCircle;
        /**
         * \@docs-private
         */
        this.id = ++nextId;
    }
    /**
     * @return {?}
     */
    NxRadioCircleButton.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        if (!this.label) {
            console.warn("nx-radio-circle-icon-button/nx-radio-circle-svg-button: required field 'nxLabel' is not set");
        }
    };
    Object.defineProperty(NxRadioCircleButton.prototype, "checked", {
        get: /**
         * @return {?}
         */
        function () {
            return this.radioCircle.selectedButton === this || null;
        },
        /** Whether the item is preselected. */
        set: /**
         * Whether the item is preselected.
         * @param {?} checked
         * @return {?}
         */
        function (checked) {
            if (checked) {
                this.radioCircle.selectedButton = this;
            }
            else {
                if (this.checked) {
                    this.radioCircle.selectedButton = null;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxRadioCircleButton.prototype, "circleButtonId", {
        /** @docs-private */
        get: /**
         * \@docs-private
         * @return {?}
         */
        function () {
            return this.radioCircle.radioCircleId + '-' + this.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxRadioCircleButton.prototype, "radioCircleId", {
        /** @docs-private */
        get: /**
         * \@docs-private
         * @return {?}
         */
        function () {
            return this.radioCircle.radioCircleId;
        },
        enumerable: true,
        configurable: true
    });
    NxRadioCircleButton.propDecorators = {
        label: [{ type: Input, args: ['nxLabel',] }],
        hint: [{ type: Input, args: ['nxHint',] }],
        value: [{ type: Input, args: ['nxValue',] }],
        labelElement: [{ type: ViewChild, args: ['labelElement',] }],
        checked: [{ type: Input, args: ['nxSelected',] }]
    };
    return NxRadioCircleButton;
}());
export { NxRadioCircleButton };
if (false) {
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioCircleButton.prototype.id;
    /**
     * Sets the label displayed below the circle.
     * @type {?}
     */
    NxRadioCircleButton.prototype.label;
    /**
     * Sets an additional hint displayed below the label.
     * @type {?}
     */
    NxRadioCircleButton.prototype.hint;
    /**
     * Sets the value used in the model.
     * @type {?}
     */
    NxRadioCircleButton.prototype.value;
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioCircleButton.prototype.labelElement;
    /**
     * \@docs-private
     * @type {?}
     * @protected
     */
    NxRadioCircleButton.prototype.radioCircle;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tY2lyY2xlLWJ1dHRvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsicmFkaW8tY2lyY2xlL3JhZGlvLWNpcmNsZS1idXR0b24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBQyxVQUFVLEVBQUUsS0FBSyxFQUFhLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7SUFFbEUsTUFBTSxHQUFHLENBQUM7Ozs7QUFFZDtJQXFCRSw2QkFFWSxXQUFtQztRQUFuQyxnQkFBVyxHQUFYLFdBQVcsQ0FBd0I7Ozs7UUFwQi9DLE9BQUUsR0FBVyxFQUFFLE1BQU0sQ0FBQztJQXNCdEIsQ0FBQzs7OztJQUVELHlDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQyw2RkFBNkYsQ0FBQyxDQUFDO1NBQzdHO0lBQ0gsQ0FBQztJQUVELHNCQUFJLHdDQUFPOzs7O1FBQVg7WUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxLQUFLLElBQUksSUFBSSxJQUFJLENBQUM7UUFDMUQsQ0FBQztRQUVELHVDQUF1Qzs7Ozs7O1FBQ3ZDLFVBQ1ksT0FBZ0I7WUFDMUIsSUFBSSxPQUFPLEVBQUU7Z0JBQ1gsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO2FBQ3hDO2lCQUFNO2dCQUNMLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtvQkFDaEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO2lCQUN4QzthQUNGO1FBQ0gsQ0FBQzs7O09BWkE7SUFlRCxzQkFBSSwrQ0FBYztRQURsQixvQkFBb0I7Ozs7O1FBQ3BCO1lBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN4RCxDQUFDOzs7T0FBQTtJQUdELHNCQUFJLDhDQUFhO1FBRGpCLG9CQUFvQjs7Ozs7UUFDcEI7WUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDO1FBQ3hDLENBQUM7OztPQUFBOzt3QkFuREEsS0FBSyxTQUFDLFNBQVM7dUJBSWYsS0FBSyxTQUFDLFFBQVE7d0JBSWQsS0FBSyxTQUFDLFNBQVM7K0JBSWYsU0FBUyxTQUFDLGNBQWM7MEJBb0J4QixLQUFLLFNBQUMsWUFBWTs7SUFvQnJCLDBCQUFDO0NBQUEsQUExREQsSUEwREM7U0ExRHFCLG1CQUFtQjs7Ozs7O0lBR3ZDLGlDQUFzQjs7Ozs7SUFHdEIsb0NBQ2M7Ozs7O0lBR2QsbUNBQ2E7Ozs7O0lBR2Isb0NBQ1c7Ozs7O0lBR1gsMkNBQ3lCOzs7Ozs7SUFJdkIsMENBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOeFJhZGlvQ2lyY2xlQ29tcG9uZW50fSBmcm9tICcuL3JhZGlvLWNpcmNsZS5jb21wb25lbnQnO1xuaW1wb3J0IHtFbGVtZW50UmVmLCBJbnB1dCwgT25DaGFuZ2VzLCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5sZXQgbmV4dElkID0gMDtcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIE54UmFkaW9DaXJjbGVCdXR0b24gaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIGlkOiBudW1iZXIgPSArK25leHRJZDtcblxuICAvKiogU2V0cyB0aGUgbGFiZWwgZGlzcGxheWVkIGJlbG93IHRoZSBjaXJjbGUuICovXG4gIEBJbnB1dCgnbnhMYWJlbCcpXG4gIGxhYmVsOiBzdHJpbmc7XG5cbiAgLyoqIFNldHMgYW4gYWRkaXRpb25hbCBoaW50IGRpc3BsYXllZCBiZWxvdyB0aGUgbGFiZWwuICovXG4gIEBJbnB1dCgnbnhIaW50JylcbiAgaGludDogc3RyaW5nO1xuXG4gIC8qKiBTZXRzIHRoZSB2YWx1ZSB1c2VkIGluIHRoZSBtb2RlbC4gKi9cbiAgQElucHV0KCdueFZhbHVlJylcbiAgdmFsdWU6IGFueTtcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBAVmlld0NoaWxkKCdsYWJlbEVsZW1lbnQnKVxuICBsYWJlbEVsZW1lbnQ6IEVsZW1lbnRSZWY7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgICBwcm90ZWN0ZWQgcmFkaW9DaXJjbGU6IE54UmFkaW9DaXJjbGVDb21wb25lbnRcbiAgICApIHtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5sYWJlbCkge1xuICAgICAgY29uc29sZS53YXJuKGBueC1yYWRpby1jaXJjbGUtaWNvbi1idXR0b24vbngtcmFkaW8tY2lyY2xlLXN2Zy1idXR0b246IHJlcXVpcmVkIGZpZWxkICdueExhYmVsJyBpcyBub3Qgc2V0YCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGNoZWNrZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMucmFkaW9DaXJjbGUuc2VsZWN0ZWRCdXR0b24gPT09IHRoaXMgfHwgbnVsbDtcbiAgfVxuXG4gIC8qKiBXaGV0aGVyIHRoZSBpdGVtIGlzIHByZXNlbGVjdGVkLiAqL1xuICBASW5wdXQoJ254U2VsZWN0ZWQnKVxuICBzZXQgY2hlY2tlZChjaGVja2VkOiBib29sZWFuKSB7XG4gICAgaWYgKGNoZWNrZWQpIHtcbiAgICAgIHRoaXMucmFkaW9DaXJjbGUuc2VsZWN0ZWRCdXR0b24gPSB0aGlzO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodGhpcy5jaGVja2VkKSB7XG4gICAgICAgIHRoaXMucmFkaW9DaXJjbGUuc2VsZWN0ZWRCdXR0b24gPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIGdldCBjaXJjbGVCdXR0b25JZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnJhZGlvQ2lyY2xlLnJhZGlvQ2lyY2xlSWQgKyAnLScgKyB0aGlzLmlkO1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgZ2V0IHJhZGlvQ2lyY2xlSWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5yYWRpb0NpcmNsZS5yYWRpb0NpcmNsZUlkO1xuICB9XG59XG4iXX0=