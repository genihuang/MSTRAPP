/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NxIconModule } from '@allianz/ngx-ndbx/icon';
import { A11yModule } from '@angular/cdk/a11y';
import { OverlayModule } from '@angular/cdk/overlay';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NX_DATE_LOCALE_PROVIDER } from './adapter/index';
import { NxDatefieldDirective } from './datefield.directive';
import { NxCalendarComponent } from './datepicker/calendar';
import { NxCalendarBodyComponent } from './datepicker/calendar-body';
import { NxDatepickerIntl } from './datepicker/datepicker-intl';
import { NxDatepickerToggleComponent, NxDatepickerToggleIconComponent } from './datepicker/datepicker-toggle';
import { NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER, NxDatepickerComponent, NxDatepickerContentComponent, } from './datepicker/datepicker.component';
import { NxMonthViewComponent } from './datepicker/month-view';
import { NxMultiYearViewComponent } from './datepicker/multi-year-view';
import { NxYearViewComponent } from './datepicker/year-view';
var NxDatefieldModule = /** @class */ (function () {
    function NxDatefieldModule() {
    }
    NxDatefieldModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        OverlayModule,
                        A11yModule,
                        NxIconModule
                    ],
                    providers: [
                        // Provide our NX_DATE_LOCALE to determine the current language
                        NX_DATE_LOCALE_PROVIDER,
                        NxDatepickerIntl,
                        NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER
                    ],
                    declarations: [
                        NxDatefieldDirective,
                        NxDatepickerComponent,
                        NxDatepickerToggleIconComponent,
                        NxDatepickerToggleComponent,
                        NxDatepickerContentComponent,
                        NxCalendarComponent,
                        NxCalendarBodyComponent,
                        NxMonthViewComponent,
                        NxMultiYearViewComponent,
                        NxYearViewComponent
                    ],
                    exports: [
                        NxDatefieldDirective,
                        NxDatepickerComponent,
                        NxDatepickerToggleIconComponent,
                        NxDatepickerToggleComponent,
                        NxCalendarComponent,
                        NxCalendarBodyComponent,
                        NxMonthViewComponent,
                        NxMultiYearViewComponent,
                        NxYearViewComponent
                    ],
                    entryComponents: [
                        NxDatepickerContentComponent
                    ]
                },] }
    ];
    return NxDatefieldModule;
}());
export { NxDatefieldModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZWZpZWxkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4L2RhdGVmaWVsZC8iLCJzb3VyY2VzIjpbImRhdGVmaWVsZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzFELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSwrQkFBK0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzlHLE9BQU8sRUFDTCxzQ0FBc0MsRUFDdEMscUJBQXFCLEVBQ3JCLDRCQUE0QixHQUM3QixNQUFNLG1DQUFtQyxDQUFDO0FBQzNDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQy9ELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBSTdEO0lBQUE7SUF3Q2lDLENBQUM7O2dCQXhDakMsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGFBQWE7d0JBQ2IsVUFBVTt3QkFDVixZQUFZO3FCQUNiO29CQUNELFNBQVMsRUFBRTt3QkFDVCwrREFBK0Q7d0JBQy9ELHVCQUF1Qjt3QkFDdkIsZ0JBQWdCO3dCQUNoQixzQ0FBc0M7cUJBQ3ZDO29CQUNELFlBQVksRUFBRTt3QkFDWixvQkFBb0I7d0JBQ3BCLHFCQUFxQjt3QkFDckIsK0JBQStCO3dCQUMvQiwyQkFBMkI7d0JBQzNCLDRCQUE0Qjt3QkFDNUIsbUJBQW1CO3dCQUNuQix1QkFBdUI7d0JBQ3ZCLG9CQUFvQjt3QkFDcEIsd0JBQXdCO3dCQUN4QixtQkFBbUI7cUJBQ3BCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxvQkFBb0I7d0JBQ3BCLHFCQUFxQjt3QkFDckIsK0JBQStCO3dCQUMvQiwyQkFBMkI7d0JBQzNCLG1CQUFtQjt3QkFDbkIsdUJBQXVCO3dCQUN2QixvQkFBb0I7d0JBQ3BCLHdCQUF3Qjt3QkFDeEIsbUJBQW1CO3FCQUNwQjtvQkFDRCxlQUFlLEVBQUU7d0JBQ2YsNEJBQTRCO3FCQUM3QjtpQkFDRjs7SUFDZ0Msd0JBQUM7Q0FBQSxBQXhDbEMsSUF3Q2tDO1NBQXJCLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE54SWNvbk1vZHVsZSB9IGZyb20gJ0BhbGxpYW56L25neC1uZGJ4L2ljb24nO1xuaW1wb3J0IHsgQTExeU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcbmltcG9ydCB7IE92ZXJsYXlNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTlhfREFURV9MT0NBTEVfUFJPVklERVIgfSBmcm9tICcuL2FkYXB0ZXIvaW5kZXgnO1xuaW1wb3J0IHsgTnhEYXRlZmllbGREaXJlY3RpdmUgfSBmcm9tICcuL2RhdGVmaWVsZC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTnhDYWxlbmRhckNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZXBpY2tlci9jYWxlbmRhcic7XG5pbXBvcnQgeyBOeENhbGVuZGFyQm9keUNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZXBpY2tlci9jYWxlbmRhci1ib2R5JztcbmltcG9ydCB7IE54RGF0ZXBpY2tlckludGwgfSBmcm9tICcuL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1pbnRsJztcbmltcG9ydCB7IE54RGF0ZXBpY2tlclRvZ2dsZUNvbXBvbmVudCwgTnhEYXRlcGlja2VyVG9nZ2xlSWNvbkNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZXBpY2tlci9kYXRlcGlja2VyLXRvZ2dsZSc7XG5pbXBvcnQge1xuICBOWF9EQVRFUElDS0VSX1NDUk9MTF9TVFJBVEVHWV9QUk9WSURFUixcbiAgTnhEYXRlcGlja2VyQ29tcG9uZW50LFxuICBOeERhdGVwaWNrZXJDb250ZW50Q29tcG9uZW50LFxufSBmcm9tICcuL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTnhNb250aFZpZXdDb21wb25lbnQgfSBmcm9tICcuL2RhdGVwaWNrZXIvbW9udGgtdmlldyc7XG5pbXBvcnQgeyBOeE11bHRpWWVhclZpZXdDb21wb25lbnQgfSBmcm9tICcuL2RhdGVwaWNrZXIvbXVsdGkteWVhci12aWV3JztcbmltcG9ydCB7IE54WWVhclZpZXdDb21wb25lbnQgfSBmcm9tICcuL2RhdGVwaWNrZXIveWVhci12aWV3JztcblxuXG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgT3ZlcmxheU1vZHVsZSxcbiAgICBBMTF5TW9kdWxlLFxuICAgIE54SWNvbk1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICAvLyBQcm92aWRlIG91ciBOWF9EQVRFX0xPQ0FMRSB0byBkZXRlcm1pbmUgdGhlIGN1cnJlbnQgbGFuZ3VhZ2VcbiAgICBOWF9EQVRFX0xPQ0FMRV9QUk9WSURFUixcbiAgICBOeERhdGVwaWNrZXJJbnRsLFxuICAgIE5YX0RBVEVQSUNLRVJfU0NST0xMX1NUUkFURUdZX1BST1ZJREVSXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE54RGF0ZWZpZWxkRGlyZWN0aXZlLFxuICAgIE54RGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBOeERhdGVwaWNrZXJUb2dnbGVJY29uQ29tcG9uZW50LFxuICAgIE54RGF0ZXBpY2tlclRvZ2dsZUNvbXBvbmVudCxcbiAgICBOeERhdGVwaWNrZXJDb250ZW50Q29tcG9uZW50LFxuICAgIE54Q2FsZW5kYXJDb21wb25lbnQsXG4gICAgTnhDYWxlbmRhckJvZHlDb21wb25lbnQsXG4gICAgTnhNb250aFZpZXdDb21wb25lbnQsXG4gICAgTnhNdWx0aVllYXJWaWV3Q29tcG9uZW50LFxuICAgIE54WWVhclZpZXdDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE54RGF0ZWZpZWxkRGlyZWN0aXZlLFxuICAgIE54RGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBOeERhdGVwaWNrZXJUb2dnbGVJY29uQ29tcG9uZW50LFxuICAgIE54RGF0ZXBpY2tlclRvZ2dsZUNvbXBvbmVudCxcbiAgICBOeENhbGVuZGFyQ29tcG9uZW50LFxuICAgIE54Q2FsZW5kYXJCb2R5Q29tcG9uZW50LFxuICAgIE54TW9udGhWaWV3Q29tcG9uZW50LFxuICAgIE54TXVsdGlZZWFyVmlld0NvbXBvbmVudCxcbiAgICBOeFllYXJWaWV3Q29tcG9uZW50XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1xuICAgIE54RGF0ZXBpY2tlckNvbnRlbnRDb21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOeERhdGVmaWVsZE1vZHVsZSB7IH1cbiJdfQ==