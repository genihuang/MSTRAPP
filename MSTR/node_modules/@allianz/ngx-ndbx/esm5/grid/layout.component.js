/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
var NxLayoutComponent = /** @class */ (function () {
    function NxLayoutComponent() {
        this._classNames = '';
        /**
         * \@docs-private
         */
        this.grid = true;
    }
    Object.defineProperty(NxLayoutComponent.prototype, "classNames", {
        get: /**
         * @return {?}
         */
        function () {
            return this._classNames;
        },
        /**
         * Type of layout.
         *
         * Values: grid | grid nogutters | grid maxwidth. Default value: grid.
         */
        set: /**
         * Type of layout.
         *
         * Values: grid | grid nogutters | grid maxwidth. Default value: grid.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._classNames === value) {
                return;
            }
            this._classNames = value;
            this.grid = !!this._classNames.match(/grid/);
            this.noGutters = !!this._classNames.match(/nogutters/);
            this.maxWidth = !!this._classNames.match(/maxwidth/);
        },
        enumerable: true,
        configurable: true
    });
    NxLayoutComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: '[nxLayout]',
                    template: '<ng-content></ng-content>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.nx-grid]': 'grid',
                        '[class.nx-grid--no-gutters]': 'noGutters',
                        '[class.nx-grid--max-width]': 'maxWidth'
                    },
                    styles: [":host(.nx-grid){position:relative;margin-left:auto;margin-right:auto;padding-right:8px;padding-left:8px}@media (min-width:704px){:host(.nx-grid){padding-right:32px;padding-left:32px}}:host(.nx-grid--no-gutters) ::ng-deep{padding-left:0;padding-right:0}:host(.nx-grid--no-gutters) ::ng-deep .nx-grid__row{margin-left:0;margin-right:0}:host(.nx-grid--no-gutters) ::ng-deep .nx-grid__row>[class*=nx-grid__column]{padding-left:0;padding-right:0}:host(.nx-grid--max-width){width:100%}@media (min-width:992px){:host(.nx-grid--max-width){width:1184px;max-width:100%}}"]
                }] }
    ];
    NxLayoutComponent.propDecorators = {
        classNames: [{ type: Input, args: ['nxLayout',] }]
    };
    return NxLayoutComponent;
}());
export { NxLayoutComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxLayoutComponent.prototype._classNames;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.grid;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.noGutters;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.maxWidth;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4L2dyaWQvIiwic291cmNlcyI6WyJsYXlvdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRTtJQUFBO1FBYVUsZ0JBQVcsR0FBVyxFQUFFLENBQUM7Ozs7UUFHakMsU0FBSSxHQUFZLElBQUksQ0FBQztJQTRCdkIsQ0FBQztJQWZDLHNCQUNJLHlDQUFVOzs7O1FBV2Q7WUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDMUIsQ0FBQztRQW5CRDs7OztXQUlHOzs7Ozs7OztRQUNILFVBQ2UsS0FBYTtZQUMxQixJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssS0FBSyxFQUFFO2dCQUM5QixPQUFPO2FBQ1I7WUFFRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztZQUN6QixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM3QyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUN2RCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN2RCxDQUFDOzs7T0FBQTs7Z0JBdkNGLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUUvQyxJQUFJLEVBQUU7d0JBQ0osaUJBQWlCLEVBQUUsTUFBTTt3QkFDekIsNkJBQTZCLEVBQUUsV0FBVzt3QkFDMUMsNEJBQTRCLEVBQUUsVUFBVTtxQkFDekM7O2lCQUNGOzs7NkJBa0JFLEtBQUssU0FBQyxVQUFVOztJQWVuQix3QkFBQztDQUFBLEFBNUNELElBNENDO1NBaENZLGlCQUFpQjs7Ozs7O0lBQzVCLHdDQUFpQzs7Ozs7SUFHakMsaUNBQXFCOzs7OztJQUdyQixzQ0FBbUI7Ozs7O0lBR25CLHFDQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnW254TGF5b3V0XScsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdHlsZVVybHM6IFsnbGF5b3V0LmNvbXBvbmVudC5zY3NzJ10sXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLm54LWdyaWRdJzogJ2dyaWQnLFxuICAgICdbY2xhc3MubngtZ3JpZC0tbm8tZ3V0dGVyc10nOiAnbm9HdXR0ZXJzJyxcbiAgICAnW2NsYXNzLm54LWdyaWQtLW1heC13aWR0aF0nOiAnbWF4V2lkdGgnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnhMYXlvdXRDb21wb25lbnQge1xuICBwcml2YXRlIF9jbGFzc05hbWVzOiBzdHJpbmcgPSAnJztcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBncmlkOiBib29sZWFuID0gdHJ1ZTtcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBub0d1dHRlcnM6IGJvb2xlYW47XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgbWF4V2lkdGg6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFR5cGUgb2YgbGF5b3V0LlxuICAgKlxuICAgKiBWYWx1ZXM6IGdyaWQgfCBncmlkIG5vZ3V0dGVycyB8IGdyaWQgbWF4d2lkdGguIERlZmF1bHQgdmFsdWU6IGdyaWQuXG4gICAqL1xuICBASW5wdXQoJ254TGF5b3V0JylcbiAgc2V0IGNsYXNzTmFtZXModmFsdWU6IHN0cmluZykge1xuICAgIGlmICh0aGlzLl9jbGFzc05hbWVzID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX2NsYXNzTmFtZXMgPSB2YWx1ZTtcbiAgICB0aGlzLmdyaWQgPSAhIXRoaXMuX2NsYXNzTmFtZXMubWF0Y2goL2dyaWQvKTtcbiAgICB0aGlzLm5vR3V0dGVycyA9ICEhdGhpcy5fY2xhc3NOYW1lcy5tYXRjaCgvbm9ndXR0ZXJzLyk7XG4gICAgdGhpcy5tYXhXaWR0aCA9ICEhdGhpcy5fY2xhc3NOYW1lcy5tYXRjaCgvbWF4d2lkdGgvKTtcbiAgfVxuXG4gIGdldCBjbGFzc05hbWVzKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2NsYXNzTmFtZXM7XG4gIH1cbn1cbiJdfQ==