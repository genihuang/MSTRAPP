import { EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
/**
  * @deprecated Use `nx-circle-toggle` instead
  * @deletion-target 8.0.0
  */
export declare class NxCheckboxCircleComponent implements ControlValueAccessor {
    private _id;
    /**
     * Id of the checkbox.
     * If not set, the checkbox gets an incremented value by default.
     */
    id: string;
    /** The name of the Checkbox Circle. */
    name: string;
    /** An event emitted when the checked value has changed. */
    checkedChange: EventEmitter<boolean>;
    /** Whether the checkbox circle is checked. */
    checked: boolean;
    /** The name of the icon that is displayed. If not added, no icon will be displayed. */
    iconName: string;
    /** If set, the passed SVG will be displayed in the not-checked state. */
    svg: string;
    /** If set, the passed SVG will be displayed in the checked state. */
    svgChecked: string;
    /** Label to be displayed under circle. */
    label: string;
    private onChangeCallback;
    private onTouchedCallback;
    constructor();
    writeValue(value: boolean): void;
    registerOnChange(onChange: any): void;
    registerOnTouched(onTouched: any): void;
    setDisabledState?(isDisabled: boolean): void;
    /** @docs-private */
    toggle(): void;
    /** @docs-private */
    readonly svgButton: boolean;
    /** @docs-private */
    readonly svgUrl: string;
}
