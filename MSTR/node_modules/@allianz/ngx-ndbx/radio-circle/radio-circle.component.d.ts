import { AfterContentInit, EventEmitter, QueryList, Renderer2 } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NxRadioCircleButton } from './radio-circle-button';
/**
 * @deprecated Use `nx-circle-toggle-group` instead
 * @deletion-target 8.0.0
 */
export declare class NxRadioCircleComponent implements ControlValueAccessor, AfterContentInit {
    private renderer;
    private _id;
    private _buttons;
    private _selectedButton;
    private _responsive;
    /** An event emitted when the selection changes. */
    valueChange: EventEmitter<any>;
    /** Sets the name of the radio circle, which is used for accessibility. */
    name: string;
    /** Whether the radio circle is disabled. */
    disabled: boolean;
    /**
     * Whether the toggle behavior is disabled.
     *
     * @deprecated Use `nxResponsive` instead
     * @deletion-target 7.0.0
     */
    responsiveToggle: boolean;
    /**
     * Whether the radio circle should have a responsive behavior.
     *
     * On false the circles will stay even on mobile viewports.
     * Default: true.
     */
    responsive: boolean;
    constructor(renderer: Renderer2);
    /** Sets the value of the radio circle. */
    value: any;
    /**
     * @docs-private
     * @deprecated Use `responsive` getter
     * @deletion-target 7.0.0
     */
    getResposiveToggle(): any;
    private onTouchedCallback;
    private onChangeCallback;
    /** The id of the radio circle. */
    readonly radioCircleId: string;
    ngAfterContentInit(): void;
    writeValue(value: any): void;
    registerOnChange(callback: any): void;
    registerOnTouched(callback: any): void;
    setDisabledState?(isDisabled: boolean): void;
    /** @docs-private */
    selectedButton: NxRadioCircleButton;
    /** @docs-private */
    readonly buttons: QueryList<NxRadioCircleButton>;
}
