{"version":3,"file":"allianz-ngx-ndbx-datefield.umd.js.map","sources":["ng://@allianz/ngx-ndbx/datefield/adapter/native-date-formats.ts","node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/datefield/adapter/date-adapter.ts","ng://@allianz/ngx-ndbx/datefield/adapter/date-token.ts","ng://@allianz/ngx-ndbx/datefield/adapter/native-date-adapter.ts","ng://@allianz/ngx-ndbx/datefield/adapter/date-formats.ts","ng://@allianz/ngx-ndbx/datefield/adapter/index.ts","ng://@allianz/ngx-ndbx/datefield/datefield-errors.ts","ng://@allianz/ngx-ndbx/datefield/datefield.directive.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/datepicker-errors.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/datepicker-intl.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/calendar-body.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/month-view.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/multi-year-view.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/year-view.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/calendar.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/datepicker.component.ts","ng://@allianz/ngx-ndbx/datefield/datepicker/datepicker-toggle.ts","ng://@allianz/ngx-ndbx/datefield/datefield.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NxDateFormats} from './date-formats';\n\n\nexport const NX_NATIVE_DATE_FORMATS: NxDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable ,  Subject } from 'rxjs';\nimport { NgModule } from '@angular/core';\n\n/** @docs-private */\nexport abstract class NxDateAdapter<D> {\n  protected locale = 'de-DE';\n  protected _localeChanges = new Subject<string>();\n  abstract toIso8601(date: D): string;\n  abstract format(date: D, displayFormat: any): string;\n  abstract parse(value: any, format: string|string[], strict: boolean): D | null;\n  abstract isValid(date: D): boolean;\n  abstract clone(date: D): D;\n  abstract isDateInstance(obj: any): boolean;\n  abstract invalid(): D;\n\n  abstract getYear(date: D): number;\n  abstract getMonth(date: D): number;\n  abstract getDate(date: D): number;\n\n  get localeChanges(): Observable<string> { return this._localeChanges; }\n\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      const firstValid = this.isValid(first);\n      const secondValid = this.isValid(second);\n\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid === secondValid;\n    }\n    return first === second;\n  }\n\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  setLocale(locale: string) {\n    this.locale = locale;\n    this._localeChanges.next(this.locale);\n  }\n\n  getLocale(): string {\n    return this.locale;\n  }\n\n  abstract getYearName(date: D): string;\n  abstract createDate(year: number, month: number, date: number): D;\n  abstract getNumDaysInMonth(date: D): number;\n  abstract getDateNames(): string[];\n  abstract getDayOfWeek(date: D): number;\n  abstract getFirstDayOfWeek(): number;\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n  abstract today(): D;\n  abstract addCalendarMonths(date: D, months: number): D;\n  abstract addCalendarYears(date: D, years: number): D;\n  abstract addCalendarDays(date: D, days: number): D;\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\n","import {InjectionToken, LOCALE_ID} from '@angular/core';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const NX_DATE_LOCALE = new InjectionToken<string>('nx-date-locale');\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\n\nimport { NxDateAdapter } from './date-adapter';\nimport { NX_DATE_LOCALE } from './date-token';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\n\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/**\n * @docs-private\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\n@Injectable()\nexport class NxNativeDateAdapter extends NxDateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from it's utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(NX_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    const result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() !== month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value === 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NxNativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) !== ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        const date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(Date.UTC(\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/** @docs-private */\nexport type NxDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any\n  }\n};\n\nexport const NX_DATE_FORMATS = new InjectionToken<NxDateFormats>('nx-date-formats');\n","import { NX_NATIVE_DATE_FORMATS } from './native-date-formats';\nimport { NxNativeDateAdapter } from './native-date-adapter';\nimport { NX_DATE_FORMATS } from './date-formats';\nimport { NgModule } from '@angular/core';\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\nimport { NxDateAdapter } from './date-adapter';\nimport { NX_DATE_LOCALE } from './date-token';\n\nimport { PlatformModule } from '@angular/cdk/platform';\n\nexport const NX_DATE_LOCALE_PROVIDER = {provide: NX_DATE_LOCALE, useExisting: LOCALE_ID};\n\nexport * from './date-token';\nexport * from './date-adapter';\nexport * from './date-formats';\n\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    {provide: NxDateAdapter, useClass: NxNativeDateAdapter},\n    NX_DATE_LOCALE_PROVIDER\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: NX_DATE_FORMATS, useValue: NX_NATIVE_DATE_FORMATS}],\n})\nexport class NxNativeDateModule {}\n\n","export function createMissingDateImplError(provider: string) {\n  return Error(\n      `NxDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: NxNativeDateModule, NxMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","import { NxFormfieldComponent } from '@allianz/ngx-ndbx/formfield';\nimport { NX_INPUT_VALUE_ACCESSOR } from '@allianz/ngx-ndbx/input';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { NX_DATE_FORMATS, NxDateAdapter, NxDateFormats } from './adapter/index';\nimport { createMissingDateImplError } from './datefield-errors';\nimport { NxDatepickerComponent } from './datepicker/datepicker.component';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// tslint:disable:member-ordering\nexport const NX_DATEFIELD_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NxDatefieldDirective),\n  multi: true\n};\n\n\nexport const NX_DATEFIELD_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NxDatefieldDirective),\n  multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use NxDatepickerInputEvent instead.\n */\nexport class NxDatepickerInputEvent<D> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    public target: NxDatefieldDirective<D>,\n    /** Reference to the native input element associated with the datepicker input. */\n    public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n\n/**\n * Directive used to provide date processing functionality to an input.\n */\n@Directive({\n  selector: 'input[nxDatefield]',\n  providers: [\n    NX_DATEFIELD_VALUE_ACCESSOR,\n    NX_DATEFIELD_VALIDATORS,\n    // {provide: NX_INPUT_VALUE_ACCESSOR, useExisting: NxDatefieldDirective},\n    { provide: NX_INPUT_VALUE_ACCESSOR, useExisting: NxDatefieldDirective }\n  ],\n  host: {\n    '[attr.aria-haspopup]': 'true',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onTouched()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'nxDatefield',\n})\nexport class NxDatefieldDirective<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\n    Validator {\n\n  /** @docs-private */\n  public currentFormattedDate = null;\n\n  /** The datepicker that this input is associated with. */\n  @Input('nxDatepicker')\n  set datepicker(value: NxDatepickerComponent<D>) {\n    this.registerDatepicker(value);\n  }\n  _datepicker: NxDatepickerComponent<D>;\n\n  private registerDatepicker(value: NxDatepickerComponent<D>) {\n    if (value) {\n      this._datepicker = value;\n      this._datepicker.registerInput(this);\n    }\n  }\n\n  /** Function that can be used to filter out dates within the datepicker and invalidate values in the datefield. */\n  @Input('nxDatefieldFilter')\n  set datefieldFilter(value: (date: D | null) => boolean) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n\n  _dateFilter: (date: D | null) => boolean;\n\n  /** Provide or read the current date. It's type <D> depends on the chosen date implementation */\n  @Input()\n  get value(): D | null { return this._value; }\n  set value(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._value = value;\n    this._elementRef.nativeElement.value =\n        value ? this._dateAdapter.format(value, this._displayFormat || this._dateFormats.display.dateInput) : '';\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  private _value: D | null;\n\n  /** Sets the minimum valid date. */\n  @Input('nxMin')\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _min: D | null;\n\n  /** Sets the maximum valid date. */\n  @Input('nxMax')\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _max: D | null;\n\n  /** If supported by the date implementation enable strict parsing (applies to Moment's parse function here) */\n  @Input('nxStrict')\n  get strict() { return this._strict; }\n  set strict(value: any) {\n    this._strict = coerceBooleanProperty(value);\n    // parse given text value again\n    this._onInput(this._elementRef.nativeElement.value);\n  }\n  private _strict: boolean = true;\n\n\n  /** Override the parse format given with parse.dateInput with the token NX_DATE_FORMATS  */\n  @Input('nxParseFormat')\n  get parseFormat() { return this._parseFormat; }\n  set parseFormat(value: string | string[]) {\n    this._parseFormat = value;\n    // parse given text value again\n    this._onInput(this._elementRef.nativeElement.value);\n  }\n  private _parseFormat: string | string[];\n\n  /** Override the display format given with display.dateInput with the token NX_DATE_FORMATS  */\n  @Input('nxDisplayFormat')\n  get displayFormat() { return this._displayFormat; }\n  set displayFormat(value: string) {\n    this._displayFormat = value;\n    this.format();\n  }\n  private _displayFormat: string;\n\n/** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n\n    if (newValue) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      this._elementRef.nativeElement.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<NxDatepickerInputEvent<D>> =\n      new EventEmitter<NxDatepickerInputEvent<D>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<NxDatepickerInputEvent<D>> =\n      new EventEmitter<NxDatepickerInputEvent<D>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D | null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {};\n\n  private _cvaOnChange: (value: any) => void = () => {};\n\n  private _validatorOnChange = () => {};\n\n  private _datepickerSubscription = Subscription.EMPTY;\n\n  private _localeSubscription = Subscription.EMPTY;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'nxDatefieldParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.min || !controlValue ||\n        this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n        null : {'nxDatefieldMin': {'min': this.min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.max || !controlValue ||\n        this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n        null : {'nxDatefieldMax': {'max': this.max, 'actual': controlValue}};\n  }\n\n  /**\n   * @docs-private\n   * This will force the current value to be parse again by the given DateAdapter.\n   * That's a convenience method so you can trigger it manually.\n   */\n  public format() {\n    this.value = this.value;\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n        null : {'nxDatefieldFilter': true};\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn | null =\n      Validators.compose(\n          [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid = false;\n\n  constructor(\n      private _elementRef: ElementRef,\n      @Optional() public _dateAdapter: NxDateAdapter<D>,\n      @Optional() @Inject(NX_DATE_FORMATS) private _dateFormats: NxDateFormats,\n      @Optional() private _formField: NxFormfieldComponent) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('NX_DATE_FORMATS');\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngAfterContentInit() {\n    if (this._datepicker) {\n      this._datepickerSubscription =\n          this._datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new NxDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new NxDatepickerInputEvent(this, this._elementRef.nativeElement));\n          });\n    }\n  }\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * @docs-private\n   * @deprecated\n   * @deletion-target 7.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /**\n   * @docs-private\n   *\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    // formfield not yet accessible as we don't have them in a secondary entry point to import yet.\n    // return this._elementRef;\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    let date = this._dateAdapter.parse(value, this._parseFormat || this._dateFormats.parse.dateInput, this.strict);\n\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._getValidDateOrNull(date);\n    this._value = date;\n\n    if (date) {\n      this.currentFormattedDate = this._dateAdapter.format(\n        date,\n        this._displayFormat || this._dateFormats.display.dateInput\n      );\n    } else {\n      this.currentFormattedDate = null;\n    }\n\n    this._cvaOnChange(date);\n    this._valueChange.emit(date);\n    this.dateInput.emit(new NxDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  _onChange() {\n    this.dateChange.emit(new NxDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  _focus() {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `NxDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: NxNativeDateModule, NxMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","import { Subject } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable()\nexport class NxDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (visible in UI). */\n  /** @deprecated Use `switchToMultiYearViewLabel` instead\n  */\n  calendarHeader: string = 'Choose a date';\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  NgZone,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class NxCalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel?: string,\n              public enabled?: boolean) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nx-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.scss'],\n  host: {\n    'class': 'nx-calendar-body',\n    'role': 'grid',\n    'attr.aria-readonly': 'true'\n  },\n  exportAs: 'nxCalendarBody',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxCalendarBodyComponent {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: NxCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols = 7;\n\n  /** Whether to allow selection of disabled cells. */\n  @Input() allowDisabledSelection = false;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell = 0;\n\n  /** The items to display in the first row in the offset space. */\n  @Input() previousItems: NxCalendarCell[] = [];\n\n  /** The items to display in the last row in the offset space. */\n  @Input() followingItems: NxCalendarCell[][] = [[]];\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(private _elementRef: ElementRef, private _ngZone: NgZone) { }\n\n  _cellClicked(cell: NxCalendarCell): void {\n    if (!this.allowDisabledSelection && !cell.enabled) {\n      return;\n    }\n    this.selectedValueChange.emit(cell.value);\n  }\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  get _firstRowOffset(): number {\n    return this.rows && this.rows.length && this.rows[0].length ?\n        this.numCols - this.rows[0].length : 0;\n  }\n\n  /** The number of blank cells to put at the end of the last filled row. */\n  get _lastRowOffset(): number {\n    return this.rows && this.rows.length && this.rows[this.rows.length - 1].length ?\n        this.numCols - this.rows[this.rows.length - 1].length : 0;\n  }\n\n  /** The index of the last row. */\n  get _lastRowIndex(): number {\n    return this.rows && this.rows.length ?\n        this.rows.length - 1 : 0;\n  }\n\n  /**\n   * The following full rows to display and fill up the calendar.\n   */\n  get _followingRows(): NxCalendarCell[][] {\n    if (this.followingItems && this.followingItems.length) {\n      // if first row is not a full row => display them in offset space\n      if (this.followingItems[0].length < this.numCols) {\n        return this.followingItems.slice(1, this.followingItems.length);\n      }\n      return this.followingItems;\n    }\n\n    return [];\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber === this.activeCell;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._elementRef.nativeElement.querySelector('.nx-calendar-body-active').focus();\n      });\n    });\n  }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\n\nimport { NxDateAdapter, NxDateFormats } from '../adapter/index';\nimport { NX_DATE_FORMATS } from './../adapter/date-formats';\nimport { NxCalendarBodyComponent, NxCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DAYS_PER_WEEK = 7;\nconst TOTAL_DAYS_TO_DISPLAY = 6 * DAYS_PER_WEEK;\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'nx-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'nxMonthView',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['month-view.scss']\n})\nexport class NxMonthViewComponent<D> implements AfterContentInit {\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(NxCalendarBodyComponent) _nxCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: NxCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number | null;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  /** Number of days that should be displayed in one row. */\n  _numCols: number = 7;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(NX_DATE_FORMATS) private _dateFormats: NxDateFormats,\n              @Optional() public _dateAdapter: NxDateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    const weekdays = longWeekdays.map((long, i) => {\n      return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n    this._focusActiveCell();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n    if (this._selectedDate !== date) {\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n\n    const isRtl = this._isRtl();\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -this._numCols);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._numCols);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n          this._userSelection.emit();\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    const firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  private _focusActiveCell() {\n    this._nxCalendarBody._focusActiveCell();\n  }\n\n  /** Creates NxCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell === DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      this._weeks[this._weeks.length - 1]\n          .push(new NxCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.dateFilter || this.dateFilter(date)) &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) === this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) === this._dateAdapter.getYear(d2));\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /**\n   * The last days of the previous month that should be displayed\n   * in the first row of the calendar.\n   */\n  _getLastDaysOfPreviousMonth(): NxCalendarCell[] {\n    const firstDayOfMonth: D = this._dateAdapter.createDate(\n      this._dateAdapter.getYear(this.activeDate),\n      this._dateAdapter.getMonth(this.activeDate),\n      1\n    );\n\n    const firstDayOfPreviousItems =\n      this._dateAdapter.addCalendarDays(firstDayOfMonth, - this._firstWeekOffset);\n\n    return this._getRowOfDays(firstDayOfPreviousItems, this._firstWeekOffset);\n  }\n\n  /**\n   * The first days of the following month that should be displayed\n   * after the days of the current month. After filling up the last\n   * row of the current month, additional rows are added, so that a\n   * total of 42 days (6 rows/weeks) is displayed.\n   */\n  _getFirstDaysOfFollowingMonth(): NxCalendarCell[][] {\n    const followingDays: NxCalendarCell[][] = [];\n\n    const firstDayOfNextMonth: D = this._dateAdapter.addCalendarMonths(\n      this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate),\n        1),\n      1\n    );\n\n    // there should be displayed a total of 7 * 6 items\n    const followingDaysCount =\n      TOTAL_DAYS_TO_DISPLAY - this._firstWeekOffset - this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const offsetItems = followingDaysCount % 7;\n\n    // add a non-full row to following rows.\n    // These items will fill up the last incomplete row of the current month.\n    if (offsetItems > 0) {\n      const offsetRow = this._getRowOfDays(firstDayOfNextMonth, offsetItems);\n      followingDays.push(offsetRow);\n    }\n\n    let remainingDays = followingDaysCount - offsetItems;\n    let firstDayInRow = this._dateAdapter.addCalendarDays(firstDayOfNextMonth, offsetItems);\n\n    // fill remaining rows if needed\n    while (remainingDays > 0) {\n      followingDays.push(\n        this._getRowOfDays(firstDayInRow, this._numCols)\n      );\n\n      firstDayInRow = this._dateAdapter.addCalendarDays(firstDayInRow, this._numCols);\n      remainingDays -= this._numCols;\n    }\n\n    return followingDays;\n  }\n\n  /**\n   * Returns a row with days, beginning with the date of `firstDayInRow`-parameter.\n   * The returned row contains `daysCount` elements.\n   */\n  _getRowOfDays(firstDayInRow: D, daysCount: number): NxCalendarCell[] {\n    const nextRow: NxCalendarCell[] = [];\n    const dateNames = this._dateAdapter.getDateNames();\n    for (let addDays = 0; addDays < daysCount; addDays++) {\n      const day = this._dateAdapter.getDate(\n        this._dateAdapter.addCalendarDays(firstDayInRow, addDays)\n      );\n      nextRow.push(new NxCalendarCell(day, dateNames[day - 1]));\n    }\n    return nextRow;\n  }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\n\nimport { NxDateAdapter } from '../adapter/index';\nimport { NxCalendarBodyComponent, NxCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const yearsPerPage = 20;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'nx-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'nxMultiYearView',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['multi-year-view.scss']\n})\nexport class NxMultiYearViewComponent<D> implements AfterContentInit {\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (Math.floor(this._dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n        Math.floor(this._dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(NxCalendarBodyComponent) _nxCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: NxCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: NxDateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n    this._focusActiveCell();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const activeOffset = activeYear % yearsPerPage;\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(activeYear - activeOffset + i);\n      if (row.length === yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(year: number) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    const month = this._dateAdapter.getMonth(this.activeDate);\n    const daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n            -this._dateAdapter.getYear(this._activeDate) % yearsPerPage);\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n            yearsPerPage - this._dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return this._dateAdapter.getYear(this.activeDate) % yearsPerPage;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  private _focusActiveCell() {\n    this._nxCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an NxCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    const yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new NxCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) === year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\n\nimport { NX_DATE_FORMATS, NxDateAdapter, NxDateFormats } from '../adapter/index';\nimport { NxCalendarBodyComponent, NxCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'nx-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'nxYearView',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['year-view.scss']\n})\nexport class NxYearViewComponent<D> implements AfterContentInit {\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(NxCalendarBodyComponent) _nxCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: NxCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  _numCols: number = 3;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(NX_DATE_FORMATS) private _dateFormats: NxDateFormats,\n              @Optional() public _dateAdapter: NxDateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n    this._focusActiveCell();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._numCols);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, this._numCols);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    const monthNames = this._dateAdapter.getMonthNames('short');\n    this._months = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  private _focusActiveCell() {\n    this._nxCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) === this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an NxCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    const ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new NxCalendarCell(\n        month, monthName, ariaLabel, this._shouldEnableMonth(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) === month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NX_DATE_FORMATS, NxDateAdapter, NxDateFormats } from './../adapter/index';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { NxDatepickerIntl } from './datepicker-intl';\nimport { NxMonthViewComponent } from './month-view';\nimport { NxMultiYearViewComponent } from './multi-year-view';\nimport { NxYearViewComponent } from './year-view';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst yearsPerPage = 20;\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'nx-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.scss'],\n  host: {\n    'class': 'nx-calendar',\n  },\n  exportAs: 'nxCalendar',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxCalendarComponent<D> implements AfterContentInit, OnDestroy, OnChanges {\n  private _intlChanges: Subscription;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when the currently selected date changes. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(NxMonthViewComponent) monthView: NxMonthViewComponent<D>;\n  /** Reference to the current year view component. */\n  @ViewChild(NxYearViewComponent) yearView: NxYearViewComponent<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(NxMultiYearViewComponent) multiYearView: NxMultiYearViewComponent<D>;\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get _activeDate(): D { return this._clampedActiveDate; }\n  set _activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  _currentView: 'month' | 'year' | 'multi-year';\n\n  /** The label for the current calendar view. */\n  get _periodButtonText(): string {\n    if (this._currentView === 'month') {\n      return this._dateAdapter.format(this._activeDate, this._dateFormats.display.monthYearLabel);\n    }\n    if (this._currentView === 'year') {\n      return this._dateAdapter.getYearName(this._activeDate);\n    }\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const firstYearInView = this._dateAdapter.getYearName(\n        this._dateAdapter.createDate(activeYear - activeYear % yearsPerPage, 0, 1));\n    const lastYearInView = this._dateAdapter.getYearName(\n        this._dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % yearsPerPage, 0, 1));\n    return `${firstYearInView} \\u2013 ${lastYearInView}`;\n  }\n\n  get _periodButtonLabel(): string {\n    return this._currentView === 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the the previous button. */\n  get _prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this._currentView];\n  }\n\n  /** The label for the the next button. */\n  get _nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this._currentView];\n  }\n\n  constructor(private _intl: NxDatepickerIntl,\n              @Optional() private _dateAdapter: NxDateAdapter<D>,\n              @Optional() @Inject(NX_DATE_FORMATS) private _dateFormats: NxDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngAfterContentInit() {\n    this._activeDate = this.startAt || this._dateAdapter.today();\n    this._currentView = this.startView;\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n    if (change && !change.firstChange) {\n      const view = this.monthView || this.yearView || this.multiYearView;\n\n      if (view) {\n        view._init();\n      }\n    }\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: D): void {\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  _userSelected(): void {\n    this._userSelection.emit();\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this._activeDate = date;\n    this._currentView = view;\n  }\n\n  /** Handles user clicks on the period label. */\n  _changeViewClicked(): void {\n    this._currentView = this._currentView === 'month' ? 'multi-year' : 'month';\n  }\n\n  /** Handles user clicks on the previous button. */\n  _previousClicked(): void {\n    this._activeDate = this._currentView === 'month' ?\n        this._dateAdapter.addCalendarMonths(this._activeDate, -1) :\n        this._dateAdapter.addCalendarYears(\n            this._activeDate, this._currentView === 'year' ? -1 : -yearsPerPage);\n  }\n\n  /** Handles user clicks on the next button. */\n  _nextClicked(): void {\n    this._activeDate = this._currentView === 'month' ?\n        this._dateAdapter.addCalendarMonths(this._activeDate, 1) :\n        this._dateAdapter.addCalendarYears(\n            this._activeDate, this._currentView === 'year' ? 1 : yearsPerPage);\n  }\n\n  /** Whether the previous period button is enabled. */\n  _previousEnabled(): boolean {\n    if (!this.minDate) {\n      return true;\n    }\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  _nextEnabled(): boolean {\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this._currentView === 'month') {\n      return this._dateAdapter.getYear(date1) === this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) === this._dateAdapter.getMonth(date2);\n    }\n    if (this._currentView === 'year') {\n      return this._dateAdapter.getYear(date1) === this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return Math.floor(this._dateAdapter.getYear(date1) / yearsPerPage) ===\n        Math.floor(this._dateAdapter.getYear(date2) / yearsPerPage);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n}\n","import { NxDatepickerIntl } from './datepicker-intl';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  RepositionScrollStrategy,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {take, filter} from 'rxjs/operators';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Subject, Subscription, merge} from 'rxjs';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {NxCalendarComponent} from './calendar';\nimport { NxDateAdapter } from '../adapter/date-adapter';\nimport { NxDatefieldDirective } from './../datefield.directive';\nimport { NxDatepickerToggleComponent } from './datepicker-toggle';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const NX_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('nx-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER = {\n  provide: NX_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nexport interface DatepickerDefaultOptions {\n  /** Sets the focus on toggle behavior. (optional) */\n  toggleIconTabindex?: number;\n}\n\nexport const DATEPICKER_DEFAULT_OPTIONS =\n  new InjectionToken<DatepickerDefaultOptions>('DATEPICKER_DEFAULT_OPTIONS');\n\n/**\n * @docs-private\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * NxCalendarComponent directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n */\n@Component({\n  selector: 'nx-datepicker-content',\n  templateUrl: 'datepicker-content.component.html',\n  styleUrls: ['datepicker-content.component.scss'],\n  host: {\n    'class': 'nx-datepicker-content'\n  },\n  exportAs: 'nxDatepickerContent',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxDatepickerContentComponent<D> implements AfterContentInit {\n  datepicker: NxDatepickerComponent<D>;\n\n  @ViewChild(NxCalendarComponent) _calendar: NxCalendarComponent<D>;\n\n  constructor(\n    public _intl: NxDatepickerIntl,\n    public elementRef: ElementRef, private _ngZone: NgZone) {}\n\n  ngAfterContentInit() {\n    this._focusActiveCell();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  private _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this.elementRef.nativeElement.querySelector('.nx-calendar-body-active').focus();\n      });\n    });\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"nxDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  selector: 'nx-datepicker',\n  template: '',\n  exportAs: 'nxDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxDatepickerComponent<D> implements OnDestroy {\n  /** The date to open the calendar initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /** @docs-private */\n  selectedChanged: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /**\n   * @docs-private\n   * The id for the datepicker calendar.\n   */\n  id: string = `nx-datepicker-${datepickerUid++}`;\n\n  /**\n   * @docs-private\n   * The currently selected date.\n   */\n  get selected(): D | null { return this._validSelected; }\n  set selected(value: D | null) { this._validSelected = value; }\n  private _validSelected: D | null = null;\n\n  /**\n   * @docs-private\n   * The minimum selectable date.\n   */\n  get minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /**\n   * @docs-private\n   * The maximum selectable date.\n   */\n  get maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  /** @docs-private */\n  get dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  private _popupRef: OverlayRef;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<NxDatepickerContentComponent<D>>;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<NxDatepickerContentComponent<D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: NxDatefieldDirective<D>;\n\n  _toggleButton: NxDatepickerToggleComponent<D>;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  constructor(private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(NX_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\n              @Optional() private _dateAdapter: NxDateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /**\n   * @docs-private\n   * Selects the given date\n   */\n  select(date: D): void {\n    const oldValue = this.selected;\n    this.selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this.selected)) {\n      this.selectedChanged.emit(date);\n    }\n  }\n\n  /**\n   * @docs-private\n   * Emits the selected year in multiyear view\n   */\n  selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /**\n   * @docs-private\n   * Emits selected month in year view\n   */\n  selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * @docs-private\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  registerInput(input: NxDatefieldDirective<D>): void {\n    if (this._datepickerInput) {\n      throw Error('A NxDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange.subscribe((value: D | null) => this.selected = value);\n  }\n\n  /**\n   * @docs-private\n   * Register an input toggle with this datepicker.\n   */\n  registerToggle(toggle: NxDatepickerToggleComponent<D>) {\n    if (this._toggleButton) {\n      throw Error('A NxDatepicker can only be associated with a single toggle button.');\n    }\n    this._toggleButton = toggle;\n  }\n\n  /**\n   * @docs-private\n   * Open the calendar.\n   */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an NxDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this._openAsPopup();\n\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /**\n   * @docs-private\n   * Close the calendar.\n   */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n\n    // if the datepicker toggle button is not focusable, focus the associated input.\n    if (this._toggleButton.tabindex < 0) {\n      this._datepickerInput._focus();\n    }\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal<NxDatepickerContentComponent<D>>(NxDatepickerContentComponent,\n                                                                          this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'nx-overlay-transparent-backdrop',\n      direction: this._dir ? this._dir.value : 'ltr',\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'nx-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))\n    ).subscribe(() => this.close());\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .connectedTo(this._datepickerInput.getConnectedOverlayOrigin(),\n        {originX: 'start', originY: 'bottom'},\n        {overlayX: 'start', overlayY: 'top'}\n      )\n      .withFallbackPosition(\n        {originX: 'start', originY: 'top'},\n        {overlayX: 'start', overlayY: 'bottom'},\n      )\n      .withFallbackPosition(\n        {originX: 'end', originY: 'bottom'},\n        {overlayX: 'end', overlayY: 'top'}\n      )\n      .withFallbackPosition(\n        {originX: 'end', originY: 'top'},\n        {overlayX: 'end', overlayY: 'bottom'},\n      );\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport { merge ,  of as observableOf ,  Subscription } from 'rxjs';\n\nimport { NxDatepickerIntl } from './datepicker-intl';\nimport { NxDatepickerComponent, DATEPICKER_DEFAULT_OPTIONS, DatepickerDefaultOptions } from './datepicker.component';\n\n\n\n/** Can be used to override the icon of a `nxDatepickerToggle`. */\n@Directive({\n  selector: '[nxDatepickerToggleIcon]'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class NxDatepickerToggleIconComponent {}\n\n\n@Component({\n  selector: 'nx-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.scss'],\n  host: {\n    'class': 'nx-datepicker-toggle',\n    '[class.nx-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.nx-datepicker-toggle--disabled]': 'disabled'\n  },\n  exportAs: 'nxDatepickerToggle',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxDatepickerToggleComponent<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  private _disabled: boolean;\n  private _tabindex: number = 0;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(NxDatepickerToggleIconComponent) _customIcon: NxDatepickerToggleIconComponent;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for')\n  set datepicker(value: NxDatepickerComponent<D>) {\n    this.registerDatepicker(value);\n  }\n  get datepicker(): NxDatepickerComponent<D> {\n    return this._datepicker;\n  }\n  _datepicker: NxDatepickerComponent<D>;\n\n  private registerDatepicker(value: NxDatepickerComponent<D>) {\n    if (value) {\n      this._datepicker = value;\n      this._datepicker.registerToggle(this);\n    }\n  }\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  /** Sets the tabindex for the toggle button. Default: 0. */\n  @Input()\n  set tabindex(value: number) {\n    if (this._tabindex !== value) {\n      this._tabindex = value;\n    }\n  }\n  get tabindex(): number {\n    return this._tabindex;\n  }\n\n  constructor(public _intl: NxDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(DATEPICKER_DEFAULT_OPTIONS) private _defaultOptions: DatepickerDefaultOptions) {\n      if (this._defaultOptions && this._defaultOptions.toggleIconTabindex) {\n        this._tabindex = this._defaultOptions.toggleIconTabindex;\n      }\n    }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.datepicker) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput._disabledChange : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerDisabled,\n      inputDisabled,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NX_DATE_LOCALE_PROVIDER } from './adapter/index';\nimport { NxDatefieldDirective } from './datefield.directive';\nimport { NxCalendarComponent } from './datepicker/calendar';\nimport { NxCalendarBodyComponent } from './datepicker/calendar-body';\nimport { NxDatepickerIntl } from './datepicker/datepicker-intl';\nimport { NxDatepickerToggleComponent, NxDatepickerToggleIconComponent } from './datepicker/datepicker-toggle';\nimport {\n  NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER,\n  NxDatepickerComponent,\n  NxDatepickerContentComponent,\n} from './datepicker/datepicker.component';\nimport { NxMonthViewComponent } from './datepicker/month-view';\nimport { NxMultiYearViewComponent } from './datepicker/multi-year-view';\nimport { NxYearViewComponent } from './datepicker/year-view';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    A11yModule,\n    NxIconModule\n  ],\n  providers: [\n    // Provide our NX_DATE_LOCALE to determine the current language\n    NX_DATE_LOCALE_PROVIDER,\n    NxDatepickerIntl,\n    NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER\n  ],\n  declarations: [\n    NxDatefieldDirective,\n    NxDatepickerComponent,\n    NxDatepickerToggleIconComponent,\n    NxDatepickerToggleComponent,\n    NxDatepickerContentComponent,\n    NxCalendarComponent,\n    NxCalendarBodyComponent,\n    NxMonthViewComponent,\n    NxMultiYearViewComponent,\n    NxYearViewComponent\n  ],\n  exports: [\n    NxDatefieldDirective,\n    NxDatepickerComponent,\n    NxDatepickerToggleIconComponent,\n    NxDatepickerToggleComponent,\n    NxCalendarComponent,\n    NxCalendarBodyComponent,\n    NxMonthViewComponent,\n    NxMultiYearViewComponent,\n    NxYearViewComponent\n  ],\n  entryComponents: [\n    NxDatepickerContentComponent\n  ]\n})\nexport class NxDatefieldModule { }\n"],"names":["Subject","InjectionToken","tslib_1.__extends","platform","Injectable","Optional","Inject","Platform","LOCALE_ID","NgModule","PlatformModule","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","EventEmitter","Subscription","Validators","coerceBooleanProperty","DOWN_ARROW","Directive","NX_INPUT_VALUE_ACCESSOR","ElementRef","NxFormfieldComponent","Input","Output","createMissingDateImplError","take","Component","ChangeDetectionStrategy","NgZone","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","HOME","END","PAGE_UP","PAGE_DOWN","ENTER","ChangeDetectorRef","Directionality","ViewChild","yearsPerPage","overlay","Overlay","input","ComponentPortal","OverlayConfig","merge","filter","ESCAPE","ViewContainerRef","DOCUMENT","observableOf","ContentChild","CommonModule","OverlayModule","A11yModule","NxIconModule"],"mappings":"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"}
