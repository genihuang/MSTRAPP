{"version":3,"file":"allianz-ngx-ndbx-base.umd.js.map","sources":["ng://@allianz/ngx-ndbx/base/error/error.component.ts","ng://@allianz/ngx-ndbx/base/error/error.module.ts","ng://@allianz/ngx-ndbx/base/label/label.component.ts","ng://@allianz/ngx-ndbx/base/label/label.module.ts"],"sourcesContent":["import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, InjectionToken, Inject, Optional} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/* Types of error notification styles */\nexport type ErrorStyleType = 'message' | 'text';\n\n/**\n * Represents the default options for the error notification that can be configured\n * using the `ERROR_DEFAULT_OPTIONS` injection token.\n */\nexport interface ErrorDefaultOptions {\n  /** Defines the style type of the error notification. */\n  appearance?: ErrorStyleType;\n}\n\nexport const ERROR_DEFAULT_OPTIONS = new InjectionToken<ErrorDefaultOptions>('ERROR_DEFAULT_OPTIONS');\n\n@Component({\n  selector: 'nx-error',\n  templateUrl: './error.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./error.component.scss'],\n  host: {\n    '[attr.role]': '\"alert\"'\n  },\n})\nexport class NxErrorComponent {\n  private _showIcon: boolean = true;\n  private _appearance: ErrorStyleType = 'message';\n\n  /** Whether an icon should be displayed. */\n  @Input()\n  set showIcon(value: boolean) {\n    this._showIcon = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showIcon(): boolean {\n    return this._showIcon;\n  }\n\n  /**\n   * Whether the error should have message or text styling.\n   *\n   * Default is 'message'.\n   */\n  @Input()\n  set appearance(value: ErrorStyleType) {\n    if (value !== this.appearance) {\n      this._appearance = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get appearance(): ErrorStyleType {\n    return this._appearance;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(ERROR_DEFAULT_OPTIONS) private _defaultOptions: ErrorDefaultOptions) {\n      if (this._defaultOptions && this._defaultOptions.appearance) {\n        this.appearance = this._defaultOptions.appearance;\n      }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {NxErrorComponent} from './error.component';\nimport {CommonModule} from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxMessageModule } from '@allianz/ngx-ndbx/message';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule,\n    NxMessageModule\n  ],\n  declarations: [\n    NxErrorComponent\n  ],\n  exports: [\n    NxErrorComponent\n  ]\n})\nexport class NxErrorModule {\n\n}\n","import { ChangeDetectionStrategy, Component, Input, Optional, Inject, InjectionToken } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\nlet nextId = 0;\n\nexport interface LabelDefaultOptions {\n  /** Sets the default appearance. (optional) */\n  size?: LABEL_SIZE_TYPE;\n}\n\n/** Options for sizing of the label. */\nexport type LABEL_SIZE_TYPE = 'small' | 'large';\nconst DEFAULT_SIZE = 'large';\n\nexport const LABEL_DEFAULT_OPTIONS =\n  new InjectionToken<LabelDefaultOptions>('LABEL_DEFAULT_OPTIONS');\n@Component({\n  selector: 'nx-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.disabled]': 'disabled',\n    '[attr.aria-labelledby]': 'id || null',\n    '[class.nx-label--negative]': 'negative',\n    '[class.nx-label--large]': 'size === \"large\"',\n    '[class.nx-label--small]': 'size === \"small\"',\n    '[attr.id]': 'id',\n  },\n})\n\n\nexport class NxLabelComponent {\n  readonly _stateChanges = new Subject<void>();\n  private _disabled: boolean = false;\n  private _negative: boolean = false;\n  private _size: LABEL_SIZE_TYPE;\n\n  /** Sets the label to disabled */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._stateChanges.next();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Sets the label to disabled */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._stateChanges.next();\n  }\n\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _id: string = `nx-label-${nextId++}`;\n  /** Sets the Id of the label */\n  @Input()\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * **NDBX Expert option**\n   * Sets the appearance of the label */\n  @Input()\n  set size(value: LABEL_SIZE_TYPE) {\n    this._size = value;\n    this._stateChanges.next();\n  }\n\n  get size(): LABEL_SIZE_TYPE {\n    return this._size;\n  }\n\n  constructor(@Optional() @Inject(LABEL_DEFAULT_OPTIONS) private _defaultOptions: LabelDefaultOptions\n  ) {\n    this._size = (this._defaultOptions && this._defaultOptions.size) ? this._defaultOptions.size : DEFAULT_SIZE;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxLabelComponent} from './label.component';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NxLabelComponent\n  ],\n  exports: [\n    NxLabelComponent\n  ]\n})\nexport class NxLabelModule {\n\n}\n"],"names":["InjectionToken","coerceBooleanProperty","Component","ChangeDetectionStrategy","ChangeDetectorRef","Optional","Inject","Input","NgModule","CommonModule","NxIconModule","NxMessageModule","Subject"],"mappings":"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"}
