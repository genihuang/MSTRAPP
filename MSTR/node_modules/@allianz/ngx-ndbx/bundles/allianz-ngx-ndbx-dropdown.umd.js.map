{"version":3,"file":"allianz-ngx-ndbx-dropdown.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/dropdown/dropdown-errors.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.control.ts","ng://@allianz/ngx-ndbx/dropdown/group/dropdown-group.ts","ng://@allianz/ngx-ndbx/dropdown/item/dropdown-item.ts","ng://@allianz/ngx-ndbx/dropdown/closed-label.directive.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getNxDropdownDynamicMultipleError(): Error {\n  return Error('Cannot change `multiselect` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiselect` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getNxDropdownNonArrayValueError(): Error {\n  return Error('Value must be an array in multiselect mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getNxDropdownNonFunctionValueError(): Error {\n  return Error('`compareWith` must be a function.');\n}\n","import { NxFormfieldControl } from '@allianz/ngx-ndbx/formfield';\nimport { Input } from '@angular/core';\n\nexport abstract class NxDropdownControl extends NxFormfieldControl<any> {\n  /**\n   * Whether the dropdown should allow multi selection and additional checkboxes are shown.\n   *\n   * Note: Please make sure the value you bind is an array. If not an error is thrown! */\n  @Input('nxIsMultiselect') isMultiSelect: boolean = false;\n\n  /** @docs-private */\n  abstract formatValue?(value): string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nx-dropdown-group',\n  templateUrl: 'dropdown-group.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['dropdown-group.scss']\n})\nexport class NxDropdownGroupComponent {\n  /** Label displayed in the group. */\n  @Input('nxLabel') label: string;\n}\n","import { Highlightable } from '@angular/cdk/a11y';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxDropdownComponent } from '../dropdown';\nimport { NxDropdownControl } from '../dropdown.control';\nimport { NxDropdownGroupComponent } from './../group/dropdown-group';\n\n\nexport class NxDropdownItemChange {\n\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public item: NxDropdownItemComponent,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/** the unique id counter */\nlet nextId = 0;\n\n\n@Component({\n  selector: 'nx-dropdown-item',\n  templateUrl: 'dropdown-item.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [\n    'dropdown-item.scss'\n  ],\n  host: {\n    '[id]': 'id',\n    'role': 'option',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[class.nx-hidden]': '_hidden',\n    '[class.nx-dropdown-item--active]': 'active',\n    '[class.nx-selected]': 'selected',\n    '[class.nx-multiselect]': 'multiselect',\n    '(click)': '_onClick($event)'\n  }\n})\nexport class NxDropdownItemComponent implements Highlightable, OnDestroy, AfterViewChecked {\n  _hidden = false;\n\n  private _mostRecentViewValue = '';\n\n  private _id = `nx-dropdown-item-${nextId++}`;\n\n  /**\n   * The value of the dropdown item.\n   * You can't use undefined, null and '' (empty strings)\n   * as they are sentinel values signalling empty data.\n   */\n  @Input('nxValue') value;\n\n  /** The unique ID of the option. */\n  get id(): string { return this._id; }\n\n  private _selected: boolean = false;\n\n  /** Whether the item is selected. */\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _active: boolean;\n\n  /** Whether the item is active. */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * @docs-private\n   * Whether the parent dropdown is in multiselect mode.\n   */\n  get multiselect(): boolean {\n    return this._dropdown && this._dropdown.isMultiSelect;\n  }\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<NxDropdownItemChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * @docs-private\n   * The wrapping div in the template. Used by dropdown to use the container height for scrolling.\n   */\n  @ViewChild('container') containerElement;\n\n  constructor(\n    @Inject(NxDropdownControl) private _dropdown: NxDropdownControl,\n    /** @docs-private */\n    @Optional() readonly group: NxDropdownGroupComponent,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef) {\n    (this._dropdown as NxDropdownComponent).filterChanges.pipe(takeUntil(this._destroy)).subscribe((value) => {\n      this._showOrHideByFilter(value);\n    });\n    // reset the hidden state when dropdown closes that on next open the user is seeing the full list again\n    (this._dropdown as NxDropdownComponent)._closedStream.pipe(takeUntil(this._destroy)).subscribe(() => {\n      this._hidden = false;\n    });\n  }\n\n  ngAfterViewChecked() {\n    // Since the parent dropdown component could be using the item's label to display the selected values\n    // and it doesn't have a way of knowing if the item's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  _onClick(event) {\n    /* preventDefault to stop triggering the event twice when you click on the checkbox or the label inside the item */\n    event.preventDefault();\n    event.stopPropagation();\n    this._selectViaInteraction();\n  }\n\n  /**\n  * `Selects the option while indicating the selection came from the user. Used to\n  * determine if the select's view -> model callback should be invoked.`\n  */\n  _selectViaInteraction(): void {\n    this._selected = this.multiselect ? !this._selected : true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent(true);\n  }\n\n  /** @docs-private */\n  show() {\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  hide() {\n    this._hidden = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showOrHideByFilter(search) {\n    const constraint = (this._dropdown as NxDropdownComponent).filterFn(search, this.viewValue);\n    this._hidden = constraint ? false : true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get _formattedValue() {\n    return (this._dropdown as NxDropdownComponent).valueFormatter(this.value);\n  }\n\n  /** @docs-private */\n  get viewValue() {\n    return (this._elementRef.nativeElement.textContent || '').trim();\n  }\n\n  /** @docs-private */\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  private _emitSelectionChangeEvent(isUserInput: boolean = false) {\n    this.onSelectionChange.emit(new NxDropdownItemChange(this, isUserInput));\n  }\n\n  /** @docs-private */\n  setActiveStyles(): void {\n    this._active = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  setInactiveStyles(): void {\n    this._active = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  getLabel(): string {\n    return this.value;\n  }\n\n  _isContentEmpty(element) {\n    return element.children.length === 0 && !element.textContent.trim();\n  }\n\n  _onLabelChange() {\n    // trigger change detection when the label content changes for the case that ng-content was empty before.\n    // this is also important when the label comes in deferred, e.g. by a delayed observable,\n    // then first the default label derived from the value is shown\n    // and after the value from the async observable is ready we need to trigger change detection that the derived label\n    // gets hidden again.\n    // Notice(!): the event of (cdkObserveContent) is run outside of the ngZone\n    // We run detectChanges directly here as markForCheck wasn't enough to always trigger change detection correctly\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n// This Directive solely purpose is to mark given ng-template and project it into the required destination.\n@Directive({\n  selector: '[nxClosedLabel]'\n})\nexport class NxDropdownClosedLabelDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { NxFormfieldComponent, NxFormfieldControl } from '@allianz/ngx-ndbx/formfield';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, SHIFT, TAB } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewChild,\n  TemplateRef,\n  ContentChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport { filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\n\nimport { getNxDropdownNonArrayValueError, getNxDropdownNonFunctionValueError } from './dropdown-errors';\nimport { NxDropdownControl } from './dropdown.control';\nimport { NxDropdownGroupComponent } from './group/dropdown-group';\nimport { NxDropdownItemChange, NxDropdownItemComponent } from './item/dropdown-item';\nimport { NxDropdownClosedLabelDirective } from './closed-label.directive';\n\n\n/** Change event object that is emitted when the select value has changed. */\nexport class NxDropdownSelectChange<T = any> {\n  constructor(\n    /** Reference to the select that emitted the change event. */\n    public source: NxDropdownComponent,\n    /** Current value of the select that emitted the event. */\n    public value: T) { }\n}\n\n// used in calculation of scrolltop to correctly show some space to the top of the panel\nconst itemPadding = 16;\n\n// Max-height: 6 items x 44px + 16px padding before first item\nexport const SELECT_PANEL_MAX_HEIGHT = 280;\n\n@Component({\n  selector: 'nx-dropdown',\n  templateUrl: 'dropdown.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['dropdown.scss'],\n  providers: [\n    { provide: NxDropdownControl, useExisting: NxDropdownComponent },\n    { provide: NxFormfieldControl, useExisting: NxDropdownComponent },\n  ],\n  host: {\n    'role': 'button',\n    '[class.nx-dropdown]': 'true',\n    '[class.is-filled]': 'hasValue',\n    '[class.has-focus]': 'focused',\n    '[class.nx-dropdown--negative]': '_negative',\n    '[class.nx-dropdown--disabled]': 'disabled',\n    '[attr.aria-describedby]': 'ariaDescribedby || null',\n    '[attr.aria-required]': 'required',\n    '[attr.aria-label]': '_getAriaLabel()',\n    '[attr.aria-haspopup]': '\"listbox\"',\n    '[attr.aria-expanded]': 'panelOpen',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.tabindex]': 'tabIndex',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(click)': 'openPanel()'\n  }\n})\nexport class NxDropdownComponent extends NxDropdownControl implements ControlValueAccessor,\n  OnInit, AfterContentInit, OnDestroy, DoCheck {\n\n  // The dropdown currently doesn't support readonly of the NxFormfieldControl so we hardcode it here\n  readonly readonly: boolean = false;\n\n  private _selectionModel: SelectionModel<NxDropdownItemComponent>;\n\n  protected _disabled: boolean = false;\n\n  private _focused: boolean = false;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  /** @docs-private */\n  errorState: boolean = false;\n\n  /** Holds the value from nxValue. */\n  private _value: any;\n\n  /** The scroltop of the panelBody. */\n  private _scrollTop: number = 0;\n\n  /** The minimal space between the viewport and the overlay */\n  _overlayViewportMargin: number = 16;\n\n  /** The last measured value for the trigger's client bounding rect. */\n  _triggerRect: ClientRect;\n\n  /** Holds the panelWidth after panel was attached. */\n  _panelWidth: number;\n\n  /**\n   * @docs-private\n   * Emits when internal state changes to inform formfield about it.\n   */\n  readonly stateChanges = new Subject<any>();\n\n  /** The IDs of child options to be passed to the aria-owns attribute. */\n  _optionIds: string = '';\n\n  /** @docs-private */\n  ariaDescribedby: string;\n\n  private _tabIndex: number = 0;\n\n  /** @docs-private */\n  currentFilter: string = '';\n\n\n  @Input()\n  get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n  set tabIndex(value: number) {\n    // If the specified tabIndex value is null or undefined, fall back to the default value.\n    this._tabIndex = value != null ? value : 0;\n  }\n\n  /** Label to describe the component. */\n  @Input('nxAriaLabel') _ariaLabel: string = '';\n\n  /** Selected value */\n  @Input('nxValue')\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (newValue !== this._value) {\n      this.writeValue(newValue);\n      this._value = newValue;\n      this._onChange(newValue);\n    }\n  }\n\n  /** Whether the dropdown is disabled. */\n  @Input('nxDisabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  /** Whether the component is required. This adds an aria-required label to the component. */\n  @Input('nxRequired') required: boolean;\n\n  private _style: string = '';\n  /** Whether the dropdown should render in its negative style or not. */\n  _negative: boolean = false;\n\n  /** If set to 'negative', the component is displayed with the negative set of styles. */\n  @Input('nxStyle')\n  set styles(value: string) {\n\n    if (this._style === value) {\n      return;\n    }\n\n    this._style = value;\n    this._negative = !!this._style.match(/negative/);\n  }\n\n  /** Whether the dropdown should be shown with an additional filter input. */\n  @Input('nxShowFilter') showFilter: boolean = false;\n\n  /** Text displayed as placeholder for the filter. */\n  @Input('nxFilterPlaceholder') filterPlaceholder: string = '';\n\n  /** Event emitted when the select panel has been toggled. */\n  @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the select has been opened. */\n  @Output('opened') readonly _openedStream: Observable<void> =\n    this.openedChange.pipe(filter(o => o), map(() => { }));\n\n  /** Event emitted when the select has been closed. */\n  @Output('closed') readonly _closedStream: Observable<void> =\n    this.openedChange.pipe(filter(o => !o), map(() => { }));\n\n  /** Event emitted when the user types in the filter input. */\n  @Output('filterInput') readonly filterChanges: Subject<any> = new Subject<any>();\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output('nxValueChange') readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Event emitted when the selected value has been changed. */\n  @Output() readonly selectionChange: EventEmitter<NxDropdownSelectChange> =\n    new EventEmitter<NxDropdownSelectChange>();\n\n  /** @docs-private */\n  readonly optionSelectionChanges: Observable<NxDropdownItemChange> = defer<Observable<NxDropdownItemChange>>(() => {\n    if (this.options) {\n      return merge(...this.options.map(option => option.onSelectionChange));\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n  });\n\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions = [{\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'top'\n  }, {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center'\n  }, {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }];\n\n\n  /**\n   * @docs-private\n   * Panel containing the select options.\n   */\n  @ViewChild('panel') panel: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('panelBody') panelBody: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('trigger') trigger: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('filterInput') filterInput: ElementRef;\n\n  /**\n   * @docs-private\n   * Overlay pane containing the options.\n   */\n  @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n  /** @docs-private */\n  @ContentChildren(NxDropdownItemComponent, { descendants: true }) options;\n\n  /** @docs-private */\n  @ContentChildren(NxDropdownGroupComponent) groups;\n\n  @ContentChild(NxDropdownClosedLabelDirective)\n  _customClosedDropdownLabel: NxDropdownClosedLabelDirective;\n\n  @ViewChild('defaultClosedDropdownLabel')\n  private _defaultClosedDropdownLabel: TemplateRef<any>;\n\n  /** @docs-private */\n  get closedDropdownLabel(): TemplateRef<any> {\n    return this._closedDropdownLabel;\n  }\n  private _closedDropdownLabel: TemplateRef<any>;\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * @docs-private\n   * The currently selected option.\n   */\n  get selected(): NxDropdownItemComponent | NxDropdownItemComponent[] {\n    return this.isMultiSelect ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  private _keyManager: ActiveDescendantKeyManager<NxDropdownItemComponent>;\n\n  /** @docs-private */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n  set panelOpen(value: boolean) {\n    this._panelOpen = value;\n  }\n\n  /**\n   * Function that transforms the value into a string.\n   * This function is used for displaying and filtering the content\n   * ( Default: (value) => value ? value.toString() : null; ).\n   */\n  @Input('nxValueFormatter') valueFormatter = (value) => {\n    return value == null ? '' : value.toString();\n  }\n\n  /** @docs-private */\n  get label(): string {\n    return this.formFieldComponent ? this.formFieldComponent.label : '';\n  }\n\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith() { return this._compareWith; }\n  set compareWith(fn: (o1: string, o2: string) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNxDropdownNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n\n  private _filterFn = (search: string, itemValue: string) => {\n    return itemValue.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) >= 0;\n  }\n\n  /**\n   * Function to be used when the user types into the search filter. The first argument is the user input,\n   * the second argument is the dropdown item value. The dropdown items will use this function to set their\n   * visibility state.\n   * A boolean should be returned.\n   */\n  @Input()\n  get filterFn() { return this._filterFn; }\n  set filterFn(fn: (search: string, itemValue: string) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNxDropdownNonFunctionValueError();\n    }\n    this._filterFn = fn;\n  }\n\n  /**\n   * @docs-private\n   * Whether the select is focused.\n   */\n  get focused(): boolean {\n    return this._focused || this.panelOpen;\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => { };\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => { };\n\n  /** @docs-private */\n  get elementRef(): ElementRef {\n    return this._elementRef;\n  }\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Attribute('tabindex') tabIndex: string,\n    @Optional() private formFieldComponent: NxFormfieldComponent,\n    /** @docs-private */\n    @Self() @Optional() public ngControl: NgControl,\n    @Optional() private _parentForm: NgForm,\n    @Optional() private _parentFormGroup: FormGroupDirective) {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.tabIndex = parseInt(tabIndex, 10) || 0;\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<NxDropdownItemComponent>(this.isMultiSelect);\n  }\n\n  ngAfterContentInit() {\n    this._closedDropdownLabel =\n      this._customClosedDropdownLabel && this._customClosedDropdownLabel.templateRef || this._defaultClosedDropdownLabel;\n    this._initKeyManager();\n\n    this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  /** @docs-private */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n\n  /** @docs-private */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<NxDropdownItemComponent>(this.options)\n      .withTypeAhead()\n      .withWrap()\n      .withVerticalOrientation()\n      .withHorizontalOrientation('ltr')\n      .skipPredicate(item => item._hidden);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n      // Restore focus to the trigger before closing. Ensures that the focus\n      // position won't be lost if the user got focus into the overlay.\n      this.closePanel();\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        // Delay the auto scrolling until all items have settled otherwise the item containers might\n        // not exist yet\n        this._ngZone.onStable\n          .asObservable()\n          .pipe(take(1)).subscribe(() => this._scrollActiveOptionIntoView());\n      } else if (!this._panelOpen && !this.isMultiSelect && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n\n  private _resetOptions(): void {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.item, event.isUserInput);\n\n      if (event.isUserInput && !this.isMultiSelect && this._panelOpen) {\n        this.closePanel();\n      }\n    });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        // defer it for the next cycle to not run in changed after checked errors\n        // the combination of dropdown-item notifying parent and when the parent\n        // tries to fetch the triggerValue from the child throws these errors\n        setTimeout(() => {\n          this._changeDetectorRef.markForCheck();\n          this.stateChanges.next();\n        });\n      });\n\n    this._setOptionIds();\n  }\n\n  /** Records option IDs to pass to the aria-owns property. */\n  private _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n\n  /** Invoked when an option is clicked. */\n  private _onSelect(option: NxDropdownItemComponent, isUserInput: boolean): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (option.value == null && !this.isMultiSelect) {\n      option.deselect();\n      this._selectionModel.clear();\n      this._propagateChanges(option.value);\n    } else {\n      option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n\n      if (this.isMultiSelect) {\n        this._sortValues();\n\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n\n    this.stateChanges.next();\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n    });\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    if (this.isMultiSelect && value) {\n      if (!Array.isArray(value)) {\n        throw getNxDropdownNonArrayValueError();\n      }\n\n      this._selectionModel.clear();\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      this._selectionModel.clear();\n      const correspondingOption = this._selectValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.setActiveItem(correspondingOption);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): NxDropdownItemComponent | undefined {\n    const correspondingOption = this.options.find((option: NxDropdownItemComponent) => {\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value, value);\n      } catch (error) {\n        if (isDevMode()) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n    return correspondingOption;\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (this.isMultiSelect) {\n      valueToEmit = (this.selected as NxDropdownItemComponent[]).map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as NxDropdownItemComponent).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(new NxDropdownSelectChange(this, valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  private _sortValues() {\n    if (this.isMultiSelect) {\n      const options = this.options.toArray();\n      this._selectionModel.sort((a, b) => options.indexOf(a) - options.indexOf(b));\n      this.stateChanges.next();\n    }\n  }\n\n  /** Focuses the select element. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Opens the panel of the dropdown. */\n  openPanel() {\n    if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n      return;\n    }\n    this._panelOpen = true;\n    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n    this._keyManager.withHorizontalOrientation(null);\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Closes the panel of the dropdown. */\n  closePanel() {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._keyManager.withHorizontalOrientation('ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n      this.openedChange.emit(false);\n      // defer the focus if the dropdown triggers actions that detach\n      // a template/view from the DOM to prevent changed after checked errors\n      setTimeout(() => this.focus());\n    }\n  }\n\n  // calculate inital scrollTop when the dropdown opens\n  // scrolls the selected item to the middle of the panel if possible\n  private _calculateScrollTop() {\n    // reset the scrolltop to make calculation easier\n    this.panelBody.nativeElement.scrollTop = 0;\n    this._scrollTop = 0;\n    if (!this.empty) {\n      const offset = this._getItemOffset(this._keyManager.activeItem);\n      const panelHeight = this.panelBody.nativeElement.offsetHeight;\n      const panelRect = this.panelBody.nativeElement.getBoundingClientRect();\n      const middleOfPanel = panelRect.top + panelHeight / 2;\n      const activeItemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n      if (offset > middleOfPanel) {\n        // because we reset the scrollTop to 0 at the top we can simply take the middleOfPanel which is our\n        // target position for the item and subtract it from the offset (which is now always relative to the viewport)\n        // to middle out the text a bit more add half of the height\n        // (this is still a few pixels off because the container is a bit larger than the font)\n        this._scrollTop = offset - middleOfPanel + (activeItemRect.height - itemPadding) / 2;\n        this.panelBody.nativeElement.scrollTop = this._scrollTop;\n      }\n    }\n  }\n\n  /** Scrolls the active option into view. */\n  private _scrollActiveOptionIntoView(): void {\n    if (!this.panelOpen || !this._keyManager.activeItem) {\n      return;\n    }\n    const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n    const itemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n    const labelCount = this._countGroupLabelsBeforeOption(activeOptionIndex, this.options,\n      this.groups);\n\n    this.panelBody.nativeElement.scrollTop = this._getOptionScrollPosition(\n      activeOptionIndex + labelCount,\n      itemRect.height,\n      this.panelBody.nativeElement.scrollTop,\n      SELECT_PANEL_MAX_HEIGHT\n    );\n  }\n\n  private _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<NxDropdownItemComponent>,\n    optionGroups: QueryList<NxDropdownGroupComponent>): number {\n\n    if (optionGroups.length) {\n      const optionsArray = options.toArray();\n      const groups = optionGroups.toArray();\n      let groupCounter = 0;\n\n      for (let i = 0; i < optionIndex + 1; i++) {\n        if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\n  private _getOptionScrollPosition(optionIndex: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n    let optionOffset = optionIndex * optionHeight + itemPadding;\n\n    if (this.showFilter) {\n      const filterHeight = this.panel.nativeElement.querySelector('.nx-dropdown__filter').getBoundingClientRect().height;\n      optionOffset = optionIndex * optionHeight + filterHeight;\n    }\n\n    if (optionOffset < currentScrollPosition) {\n      return optionOffset;\n    }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n      return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n  }\n\n  private _getItemOffset(item) {\n    const itemRect = item.containerElement.nativeElement.getBoundingClientRect();\n\n    return itemRect.top;\n  }\n\n  /**\n   * @docs-private\n   * Formfield Implementation\n   */\n  setDescribedByIds(ids: string[]): void {\n    this.ariaDescribedby = ids.join(' ');\n  }\n\n  /** @docs-private */\n  setAriaLabel(value: string) {\n    this._ariaLabel = value;\n  }\n\n  _getAriaLabel() {\n    return this._ariaLabel || (this.formFieldComponent ? this.formFieldComponent.label : null);\n  }\n\n  /**\n   * @docs-private\n   * Whether the select has a value.\n   */\n  get empty(): boolean {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n\n  /** @docs-private */\n  get hasValue() {\n    return this._selectionModel.hasValue();\n  }\n\n  /** @docs-private */\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n  /** End Formfield */\n\n  /** ControlValueAccessor */\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  /** End ControlValueAccessor */\n\n  _handleKeydown(event: KeyboardEvent) {\n    this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n  }\n\n  private _handleClosedKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n      keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if (isOpenKey || ((this.isMultiSelect || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.openPanel();\n    } else if (!this.isMultiSelect && !this.disabled) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  private _handleOpenKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    // all events other than the listed ones should be ignored or handled in _onFilter()\n    if (!([DOWN_ARROW, UP_ARROW, HOME, END, ENTER, LEFT_ARROW, RIGHT_ARROW, SHIFT, SPACE, TAB].indexOf(keyCode) >= 0)) {\n        return;\n    }\n\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const manager = this._keyManager;\n\n    const allHidden = this.options.map(option => option._hidden).every(option => Boolean(option));\n\n    if (keyCode === HOME || keyCode === END) {\n      event.preventDefault();\n      keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n    } else if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.closePanel();\n    } else if (keyCode === ENTER && manager.activeItem && !allHidden) {\n      event.preventDefault();\n\n      manager.activeItem._selectViaInteraction();\n    } else if (keyCode === ENTER && allHidden) {\n      event.preventDefault();\n\n      this.closePanel();\n    } else if (!this.showFilter && keyCode === SPACE && manager.activeItem) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (keyCode === TAB) {\n      this.closePanel();\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n\n      if (this.isMultiSelect && isArrowKey && event.shiftKey && manager.activeItem &&\n        manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  /** @docs-private */\n  formatValue(value): string {\n    return this.valueFormatter(value);\n  }\n\n  /** Called when the user types in the filter input */\n  _onFilter(event) {\n    event.preventDefault();\n    this.currentFilter = event.target.value;\n    this.filterChanges.next(event.target.value);\n    const allHidden = this.options.map(option => option._hidden).every(option => Boolean(option));\n    if (allHidden) {\n      this._keyManager.setActiveItem(null);\n    } else {\n      this._keyManager.setFirstItemActive();\n    }\n  }\n\n  /**\n   * @docs-private\n   * The value displayed in the trigger.\n   */\n  get triggerValue(): string {\n\n    if (this.empty) {\n      return '';\n    }\n\n    if (this.isMultiSelect) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      return selectedOptions.join(', ');\n    }\n    return this._selectionModel.selected[0].viewValue;\n  }\n\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first item instead.\n   */\n  private _highlightCorrectOption(): void {\n    if (this._keyManager) {\n      if (this.empty) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached(): void {\n    this._changeDetectorRef.markForCheck();\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this.panelBody.nativeElement.focus();\n      if (this._keyManager.activeItem) {\n        this._calculateScrollTop();\n      }\n      this._changeDetectorRef.markForCheck();\n      this.openedChange.emit(true);\n      if (this.showFilter) {\n        this.filterInput.nativeElement.focus();\n      }\n    });\n  }\n\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n\n    if (this.filterInput && this.showFilter) {\n      this._clearFilter();\n    }\n\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n\n  /** @docs-private */\n  get isFilterEmpty() {\n    return this.currentFilter.length === 0;\n  }\n\n  /** @docs-private */\n  _clearFilter() {\n    this.filterInput.nativeElement.value = '';\n    this.currentFilter = '';\n    this.filterChanges.next('');\n  }\n\n  /** @docs-private determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant(): string | null {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n}\n","import { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxCheckboxModule } from '@allianz/ngx-ndbx/checkbox';\nimport { NxDropdownComponent } from './dropdown';\nimport { NxDropdownGroupComponent } from './group/dropdown-group';\nimport { NxDropdownItemComponent } from './item/dropdown-item';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { NxDropdownClosedLabelDirective } from './closed-label.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxFormfieldModule,\n    NxCheckboxModule,\n    OverlayModule,\n    A11yModule,\n    NxIconModule,\n    ObserversModule\n  ],\n  declarations: [\n    NxDropdownComponent,\n    NxDropdownItemComponent,\n    NxDropdownGroupComponent,\n    NxDropdownClosedLabelDirective\n  ],\n  exports: [\n    NxDropdownComponent,\n    NxDropdownItemComponent,\n    NxDropdownGroupComponent,\n    NxDropdownClosedLabelDirective\n  ]\n})\nexport class NxDropdownModule {\n\n}\n"],"names":["tslib_1.__extends","Input","NxFormfieldControl","Component","ChangeDetectionStrategy","Subject","EventEmitter","takeUntil","Inject","Optional","ChangeDetectorRef","ElementRef","Output","ViewChild","Directive","TemplateRef","filter","map","defer","merge","take","switchMap","SelectionModel","startWith","ActiveDescendantKeyManager","isDevMode","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","HOME","END","SHIFT","TAB","NgZone","Attribute","NxFormfieldComponent","NgControl","Self","NgForm","FormGroupDirective","CdkConnectedOverlay","ContentChildren","ContentChild","NgModule","CommonModule","NxFormfieldModule","NxCheckboxModule","OverlayModule","A11yModule","NxIconModule","ObserversModule"],"mappings":"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"}
