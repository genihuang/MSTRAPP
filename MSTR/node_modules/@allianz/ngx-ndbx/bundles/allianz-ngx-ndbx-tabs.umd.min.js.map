{"version":3,"sources":["ng://@allianz/ngx-ndbx/tabs/tab-group-base.ts","ng://@allianz/ngx-ndbx/tabs/tab.ts","ng://@allianz/ngx-ndbx/tabs/tab-body.ts","node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/tabs/tab-group.ts","ng://@allianz/ngx-ndbx/tabs/tab-label.ts","ng://@allianz/ngx-ndbx/tabs/tab-header.ts","ng://@allianz/ngx-ndbx/tabs/tab-nav-bar.ts","ng://@allianz/ngx-ndbx/tabs/tabs.module.ts"],"names":["NxTabGroupBase","NxTabComponent","_viewContainerRef","_tabGroup","this","_contentPortal","_stateChanges","Subject","isActive","Error","Object","defineProperty","prototype","_label","value","ngOnChanges","changes","hasOwnProperty","next","ngOnInit","TemplatePortal","_implicitContent","ngOnDestroy","complete","Component","args","selector","exportAs","template","changeDetection","ChangeDetectionStrategy","OnPush","ViewContainerRef","decorators","type","Inject","Optional","Host","Input","ViewChild","TemplateRef","NxTabBodyComponent","_active","coerceBooleanProperty","attach","detach","portalOutlet","hasAttached","content","CdkPortalOutlet","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","push","error","NxTabChangeEvent","nextId","NxTabGroupComponent","_changeDetectorRef","_selectedIndex","_negative","_indexToSelect","_autoselect","_mobileAccordion","_showAccordion","selectedIndexChange","EventEmitter","selectedTabChange","focusChange","_tabsSubscription","Subscription","EMPTY","_tabLabelSubscription","_groupId","coerceNumberProperty","_switchAppearance","window","innerWidth","ngAfterContentInit","_this","_subscribeToTabLabels","tabs","subscribe","_clampTabIndex","toArray","length","markForCheck","ngAfterContentChecked","indexToSelect","isFirstRun_1","emit","_createChangeEvent","Promise","resolve","then","forEach","tab","index","unsubscribe","merge","apply","__spread","arguments","concat","map","Math","min","max","focusChanged","event","handleClick","selectedIndex","tabHeader","focusIndex","getTabIndex","idx","_getTabLabelId","_getTabContentId","onResize","target","viewPortWidth","_showMobileVersion","_showDesktopVersion","_panelOpened","host","[class.is-negative]","providers","provide","useExisting","ChangeDetectorRef","ContentChildren","ViewChildren","NxExpansionPanelComponent","NxAccordionDirective","Output","HostListener","NxTabLabelDirective","elementRef","focus","nativeElement","Directive","ElementRef","NxTabHeaderComponent","selectFocusedIndex","indexFocused","_keyManager","updateActiveItemIndex","activeItemIndex","_isValidIndex","setActiveItem","FocusKeyManager","labels","withHorizontalOrientation","withWrap","handleKeydown","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","onKeydown","autoselect","NxTabNavBarComponent","newValue","negative","role","NxTabLinkDirective","_tabNavBar","[class.nx-tab-link]","[class.is-active]","[attr.aria-current]","SkipSelf","NxTabsModule","NgModule","imports","CommonModule","PortalModule","NxAccordionModule","exports","declarations"],"mappings":"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","sourcesContent":["/** @docs-private */\nexport abstract class NxTabGroupBase {\n\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  Optional,\n  Inject,\n  Host\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'nx-tab',\n  exportAs: 'nxTab',\n  templateUrl: 'tab.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxTabComponent implements OnInit, OnChanges, OnDestroy {\n  private _label: string;\n\n  /** The portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /** Sets the label of the tab shown in the tablist. */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    if (this._label !== value) {\n      this._label = value;\n    }\n  }\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Template inside the NxTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef) _implicitContent: TemplateRef<any>;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    @Inject(NxTabGroupBase) @Optional() @Host() private _tabGroup: NxTabGroupBase) {\n    if (!this._tabGroup) {\n      throw Error(`The nx-tab element has to be wrapped in a nx-tab-group to work.\n      Please provide a nx-tab-group element and place your tabs inside it.`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('label')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._implicitContent, this._viewContainerRef);\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { ChangeDetectionStrategy, Component, Input, ViewChild } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-body',\n  templateUrl: 'tab-body.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./tab-body.scss']\n})\nexport class NxTabBodyComponent {\n\n  @Input() content: TemplatePortal;\n  portal: TemplatePortal;\n\n  private _active: boolean = false;\n\n  @Input()\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n    if (this._active) {\n      this.attach();\n    } else {\n      this.detach();\n    }\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n  attach() {\n    if (!this.portalOutlet.hasAttached()) {\n      this.portalOutlet.attach(this.content);\n    }\n  }\n  detach() {\n    if (this.portalOutlet.hasAttached()) {\n      this.portalOutlet.detach();\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NxTabGroupBase } from './tab-group-base';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  OnInit\n} from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { NxAccordionDirective } from '@allianz/ngx-ndbx/accordion';\nimport { NxExpansionPanelComponent } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabHeaderComponent } from './tab-header';\n\n\nexport class NxTabChangeEvent {\n  /** The index of the selected or focused tab. */\n  index: number;\n\n  /** The component instance of the selected or focused tab. */\n  tab: NxTabComponent;\n}\n\nlet nextId: number = 0;\nconst MOBILE_BREAKPOINT = 480;\n\n@Component({\n  selector: 'nx-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['./tab-group.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative'\n  },\n  providers: [{provide: NxTabGroupBase, useExisting: NxTabGroupComponent}]\n})\nexport class NxTabGroupComponent implements NxTabGroupBase, OnInit, OnDestroy, AfterContentInit, AfterContentChecked {\n  private _selectedIndex: number | null = null;\n  private _groupId: number;\n  private _negative: boolean = false;\n  private _indexToSelect: number | null = 0;\n  private _autoselect: boolean = true;\n  private _mobileAccordion: boolean = true;\n  _showAccordion: boolean = false;\n\n  /** @docs-private */\n  @ContentChildren(NxTabComponent) tabs: QueryList<NxTabComponent>;\n\n  /** @docs-private */\n  @ViewChildren(NxTabBodyComponent) tabBodyChildren: QueryList<NxTabBodyComponent>;\n\n  /** @docs-private */\n  @ViewChild('tabHeader') tabHeader: NxTabHeaderComponent;\n\n  /** @docs-private */\n  @ViewChildren(NxExpansionPanelComponent) panels: QueryList<NxExpansionPanelComponent>;\n\n  /** @docs-private */\n  @ViewChild(NxAccordionDirective) accordion: NxAccordionDirective;\n\n  /** Sets the selected tab. */\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n\n  /** Whether the negative set of styling should be used. */\n  @Input()\n  get negative(): boolean {\n    return this._negative;\n  }\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n    }\n  }\n\n  /** Whether the tab should be immediately selected on focus. */\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = coerceBooleanProperty(value);\n  }\n\n  /** Whether the tabs should to accordion on mobile viewports. */\n  @Input()\n  get mobileAccordion(): boolean {\n    return this._mobileAccordion;\n  }\n  set mobileAccordion(value: boolean) {\n    this._mobileAccordion = coerceBooleanProperty(value);\n  }\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n  /**\n   * An event emitted when focus has changed within a tab group.\n   *\n   * **Note:** is not supported in mobile view.\n   */\n  @Output() readonly focusChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n   /** Subscription to tabs being added/removed. */\n   private _tabsSubscription = Subscription.EMPTY;\n\n   /** Subscription to changes in the tab labels. */\n   private _tabLabelSubscription = Subscription.EMPTY;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    this._groupId = nextId++;\n  }\n\n  ngOnInit() {\n    this._switchAppearance(window.innerWidth);\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this.tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this.tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n    * After the content is checked, this component knows what tabs have been defined\n    * and what the selected index should be.\n    */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex !== indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n   /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the NxTab component, whereas the data binding is inside the NxTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this.tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** @docs-private */\n  focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): NxTabChangeEvent {\n    const event = new NxTabChangeEvent;\n    event.index = index;\n    if (this.tabs && this.tabs.length) {\n      event.tab = this.tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /** @docs-private */\n  handleClick(index: number) {\n    this.selectedIndex = this.tabHeader.focusIndex = index;\n  }\n\n  /**\n   * @docs-private\n   * Returns the tabindex for a tab label\n   */\n  getTabIndex(tab: NxTabComponent, idx: number): number | null {\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `nx-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `nx-tab-content-${this._groupId}-${i}`;\n  }\n\n  /** @docs-private */\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this._switchAppearance(event.target.innerWidth);\n  }\n\n  private _switchAppearance(viewPortWidth) {\n    if (!this._mobileAccordion) {\n      return;\n    }\n    if (viewPortWidth <= MOBILE_BREAKPOINT && !this._showAccordion) {\n      this._showMobileVersion();\n    } else if (viewPortWidth > MOBILE_BREAKPOINT && this._showAccordion) {\n      this._showDesktopVersion();\n    }\n  }\n\n  private _showMobileVersion() {\n    this._showAccordion = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showDesktopVersion() {\n    this._showAccordion = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Emulate the tab change event when an accordion panel is opened in\n   * mobile viewports.\n   */\n  _panelOpened(index: number) {\n    this.selectedIndex = index;\n  }\n}\n","import { FocusableOption } from '@angular/cdk/a11y';\nimport { Directive, ElementRef } from '@angular/core';\n\n/** @docs-private */\n@Directive({ selector: '[nxTabLabel]' })\nexport class NxTabLabelDirective implements FocusableOption {\n  constructor(public elementRef: ElementRef) { }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\n\nimport { NxTabLabelDirective } from './tab-label';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['./tab-header.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxTabHeaderComponent implements OnInit, AfterContentInit {\n\n  private _keyManager: FocusKeyManager<NxTabLabelDirective>;\n\n  private _selectedIndex: number = 0;\n\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._selectedIndex = value;\n    if (this._keyManager) {\n      this._keyManager.updateActiveItemIndex(value);\n    }\n  }\n\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) { return; }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  private _autoselect: boolean = true;\n\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = value;\n  }\n\n  @Output() readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n  @Output() readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  @ContentChildren(NxTabLabelDirective) labels: QueryList<NxTabLabelDirective>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit() { }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<NxTabLabelDirective>(this.labels).withHorizontalOrientation('ltr').withWrap();\n    this._keyManager.updateActiveItemIndex(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _isValidIndex(idx: number) {\n    if (!this.labels) { return true; }\n\n    return !!this.labels.toArray()[idx];\n  }\n\n  /**\n   * Handles keyboard inputs on the labels\n   * If autoselect is enabled the tab gets changed immediately\n   * If autoselect is disabled only the focus changes but the user still has to select the item\n   * by himself\n   */\n  handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n\n    if (this.autoselect) {\n      this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n    } else if (event.keyCode !== ENTER && event.keyCode !== SPACE) {\n      this.indexFocused.emit(this._keyManager.activeItemIndex);\n    }\n  }\n}\n","import { Component, Input, Directive, ChangeDetectionStrategy, Optional, SkipSelf, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'nx-tab-nav-bar',\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['./tab-nav-bar.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative',\n    'role': 'navigation',\n  }\n})\nexport class NxTabNavBarComponent {\n\n  private _negative: boolean = false;\n\n  /** Whether the tab nav bar has negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n}\n\n@Directive({\n  selector: '[nxTabLink]',\n  host: {\n    '[class.nx-tab-link]': 'true',\n    '[class.is-active]': 'active',\n    '[attr.aria-current]': 'active',\n  }\n})\nexport class NxTabLinkDirective {\n\n  private _active: boolean = false;\n\n  /** Whether the tab link is active and has the active styling. */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._active) {\n      this._active = value;\n    }\n  }\n\n  constructor(\n    @Optional() @SkipSelf() private _tabNavBar: NxTabNavBarComponent) {\n    if (!this._tabNavBar) {\n      throw Error(`The nx-tab-link element has to be wrapped in a nx-tab-nav-bar to work.`);\n    }\n  }\n}\n","import { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAccordionModule } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabGroupComponent } from './tab-group';\nimport { NxTabHeaderComponent } from './tab-header';\nimport { NxTabLabelDirective } from './tab-label';\nimport { NxTabNavBarComponent, NxTabLinkDirective } from './tab-nav-bar';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    NxAccordionModule\n  ],\n  exports: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective\n  ],\n  declarations: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective\n  ],\n  providers: [],\n})\nexport class NxTabsModule { }\n"]}