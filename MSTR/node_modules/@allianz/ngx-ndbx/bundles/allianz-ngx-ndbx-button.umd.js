(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/button', ['exports', '@angular/core'], factory) :
    (factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx'].button = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var DEFAULT_SIZE = 'medium';
    /** @type {?} */
    var DEFAULT_TYPE = 'primary';
    /** @type {?} */
    var NX_BUTTON_HOST_BINDINGS = {
        '[class.nx-button--primary]': 'type === "primary"',
        '[class.nx-button--secondary]': 'type === "secondary"',
        '[class.nx-button--tertiary]': 'type === "tertiary"',
        '[class.nx-button--cta]': 'type === "cta"',
        '[class.nx-button--emphasis]': 'type === "emphasis"',
        '[class.nx-button--large]': 'size === "large"',
        '[class.nx-button--medium]': 'size === "medium"',
        '[class.nx-button--small-medium]': 'size === "small-medium"',
        '[class.nx-button--small]': 'size === "small"',
        '[class.nx-button--block]': 'block',
        '[class.nx-button--negative]': 'negative',
    };
    /**
     * \@docs-private
     */
    var /**
     * \@docs-private
     */ NxButtonBase = /** @class */ (function () {
        function NxButtonBase(_changeDetectorRef, _elementRef) {
            this._changeDetectorRef = _changeDetectorRef;
            this._elementRef = _elementRef;
            /**
             * \@docs-private
             */
            this.type = DEFAULT_TYPE;
            /**
             * \@docs-private
             */
            this.size = DEFAULT_SIZE;
            /**
             * \@docs-private
             */
            this.negative = false;
            /**
             * \@docs-private
             */
            this.block = false;
        }
        Object.defineProperty(NxButtonBase.prototype, "classNames", {
            get: /**
             * @return {?}
             */ function () {
                return this._classNames;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (this._classNames === value) {
                    return;
                }
                this._classNames = value;
                var _a = __read(this._classNames.match(/primary|secondary|tertiary|cta|emphasis/) || [DEFAULT_TYPE], 1), _b = _a[0], type = _b === void 0 ? null : _b;
                this.type = ( /** @type {?} */(type));
                var _c = __read(this._classNames.match(/small-medium|small|medium|large/) || [DEFAULT_SIZE], 1), _d = _c[0], size = _d === void 0 ? null : _d;
                this.size = ( /** @type {?} */(size));
                this.negative = /negative/.test(this._classNames);
                this.block = /block/.test(this._classNames);
                this._changeDetectorRef.markForCheck();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxButtonBase.prototype, "elementRef", {
            /**
             * @docs-private
             * getter used for the modal component as a quickfix
             * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
             * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
             * way to reach the elementRef of the component until the modal gets refactored.
             */
            get: /**
             * \@docs-private
             * getter used for the modal component as a quickfix
             * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
             * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
             * way to reach the elementRef of the component until the modal gets refactored.
             * @return {?}
             */ function () {
                return this._elementRef;
            },
            enumerable: true,
            configurable: true
        });
        return NxButtonBase;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxButtonComponent = /** @class */ (function (_super) {
        __extends(NxButtonComponent, _super);
        function NxButtonComponent(changeDetectorRef, elementRef) {
            return _super.call(this, changeDetectorRef, elementRef) || this;
        }
        NxButtonComponent.decorators = [
            { type: core.Component, args: [{
                        template: "<span class=\"nx-button__content-wrapper\">\n  <ng-content></ng-content>\n</span>\n",
                        // tslint:disable-next-line:component-selector
                        selector: 'button[nxButton]',
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: NX_BUTTON_HOST_BINDINGS,
                        inputs: ['classNames:nxButton'],
                        styles: [":host{border:2px solid transparent;border-radius:4px;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;line-height:24px;margin:0 0 24px;padding:10px 30px;text-transform:uppercase;transition:background-color .2s,border-color .2s,color .2s,box-shadow .2s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:auto;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;min-height:48px}:host:disabled{cursor:not-allowed}:host:focus{outline:transparent solid 2px}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]).nx-button--negative:focus,:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-button--primary){color:#fff;background-color:#007ab3}:host(.nx-button--primary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--primary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--primary):disabled{background-color:rgba(0,122,179,.4);border-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--primary.nx-button--negative){background-color:#fff;border-color:#fff;color:#006192}:host(.nx-button--primary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--primary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--primary.nx-button--negative):disabled{background-color:rgba(255,255,255,.4);border-color:transparent;color:rgba(65,65,65,.3)}:host(.nx-button--secondary){background-color:transparent;border-color:#007ab3;color:#006192}:host(.nx-button--secondary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--secondary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--secondary):disabled{background-color:transparent;border-color:rgba(0,122,179,.4);color:rgba(0,97,146,.4)}:host(.nx-button--secondary.nx-button--negative){color:#fff;border-color:#fff}:host(.nx-button--secondary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--secondary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--secondary.nx-button--negative):disabled{background-color:transparent;border-color:rgba(255,255,255,.4);color:rgba(255,255,255,.4)}:host(.nx-button--tertiary){background-color:transparent;color:#006192}:host(.nx-button--tertiary):hover{background-color:#ececec}:host(.nx-button--tertiary):active{background-color:#d9d9d9;box-shadow:none}:host(.nx-button--tertiary):disabled{background-color:transparent;color:rgba(0,97,146,.4)}:host(.nx-button--tertiary.nx-button--negative){color:#fff}:host(.nx-button--tertiary.nx-button--negative):hover{background-color:#d9d9d9;color:#006192}:host(.nx-button--tertiary.nx-button--negative):active{background-color:#c2c2c2;color:#006192}:host(.nx-button--tertiary.nx-button--negative):disabled{background-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--large){font-size:20px;min-height:72px;padding:22px 46px;line-height:24px}@media (max-width:703px){:host{display:block;width:100%}:host(.nx-button--large){padding:22px 30px}}:host(.nx-button--small-medium){display:inline-block;font-size:16px;padding:6px 22px;text-transform:none;line-height:24px;min-height:40px;width:auto}:host(.nx-button--small){display:inline-block;font-size:14px;padding:6px 14px;text-transform:none;line-height:16px;min-height:32px;width:auto}:host(.nx-button--cta){background-color:#3da556;color:#fff}:host(.nx-button--cta):hover{background-color:#348357}:host(.nx-button--cta):active{background-color:#276442}:host(.nx-button--cta):disabled{background-color:rgba(61,165,86,.4)}:host(.nx-button--emphasis){background-color:#f86200;color:#fff}:host(.nx-button--emphasis):hover{background-color:#e15200}:host(.nx-button--emphasis):active{background-color:#c15500}:host(.nx-button--emphasis):disabled{background-color:rgba(248,98,0,.4)}@media (min-width:704px){:host(.nx-button--block){display:block;width:100%}}:host .nx-button__content-wrapper{display:flex;align-items:center;justify-content:center}:host([nxiconbutton]){padding:0;font-size:24px;flex:0 0 auto}:host([nxiconbutton]).nx-button--small{width:32px;font-size:16px}:host([nxiconbutton]).nx-button--small-medium{width:40px}:host([nxiconbutton]).nx-button--medium{width:48px}:host([nxiconbutton]).nx-button--large{width:72px}"]
                    }] }
        ];
        /** @nocollapse */
        NxButtonComponent.ctorParameters = function () {
            return [
                { type: core.ChangeDetectorRef },
                { type: core.ElementRef }
            ];
        };
        return NxButtonComponent;
    }(NxButtonBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxIconButtonComponent = /** @class */ (function (_super) {
        __extends(NxIconButtonComponent, _super);
        function NxIconButtonComponent(changeDetectorRef, elementRef) {
            return _super.call(this, changeDetectorRef, elementRef) || this;
        }
        NxIconButtonComponent.decorators = [
            { type: core.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'button[nxIconButton]',
                        template: "<span class=\"nx-button__content-wrapper\">\n  <ng-content></ng-content>\n</span>\n",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: NX_BUTTON_HOST_BINDINGS,
                        inputs: ['classNames:nxIconButton'],
                        styles: [":host{border:2px solid transparent;border-radius:4px;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;line-height:24px;margin:0 0 24px;padding:10px 30px;text-transform:uppercase;transition:background-color .2s,border-color .2s,color .2s,box-shadow .2s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:auto;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;min-height:48px}:host:disabled{cursor:not-allowed}:host:focus{outline:transparent solid 2px}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]).nx-button--negative:focus,:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-button--primary){color:#fff;background-color:#007ab3}:host(.nx-button--primary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--primary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--primary):disabled{background-color:rgba(0,122,179,.4);border-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--primary.nx-button--negative){background-color:#fff;border-color:#fff;color:#006192}:host(.nx-button--primary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--primary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--primary.nx-button--negative):disabled{background-color:rgba(255,255,255,.4);border-color:transparent;color:rgba(65,65,65,.3)}:host(.nx-button--secondary){background-color:transparent;border-color:#007ab3;color:#006192}:host(.nx-button--secondary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--secondary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--secondary):disabled{background-color:transparent;border-color:rgba(0,122,179,.4);color:rgba(0,97,146,.4)}:host(.nx-button--secondary.nx-button--negative){color:#fff;border-color:#fff}:host(.nx-button--secondary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--secondary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--secondary.nx-button--negative):disabled{background-color:transparent;border-color:rgba(255,255,255,.4);color:rgba(255,255,255,.4)}:host(.nx-button--tertiary){background-color:transparent;color:#006192}:host(.nx-button--tertiary):hover{background-color:#ececec}:host(.nx-button--tertiary):active{background-color:#d9d9d9;box-shadow:none}:host(.nx-button--tertiary):disabled{background-color:transparent;color:rgba(0,97,146,.4)}:host(.nx-button--tertiary.nx-button--negative){color:#fff}:host(.nx-button--tertiary.nx-button--negative):hover{background-color:#d9d9d9;color:#006192}:host(.nx-button--tertiary.nx-button--negative):active{background-color:#c2c2c2;color:#006192}:host(.nx-button--tertiary.nx-button--negative):disabled{background-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--large){font-size:20px;min-height:72px;padding:22px 46px;line-height:24px}@media (max-width:703px){:host{display:block;width:100%}:host(.nx-button--large){padding:22px 30px}}:host(.nx-button--small-medium){display:inline-block;font-size:16px;padding:6px 22px;text-transform:none;line-height:24px;min-height:40px;width:auto}:host(.nx-button--small){display:inline-block;font-size:14px;padding:6px 14px;text-transform:none;line-height:16px;min-height:32px;width:auto}:host(.nx-button--cta){background-color:#3da556;color:#fff}:host(.nx-button--cta):hover{background-color:#348357}:host(.nx-button--cta):active{background-color:#276442}:host(.nx-button--cta):disabled{background-color:rgba(61,165,86,.4)}:host(.nx-button--emphasis){background-color:#f86200;color:#fff}:host(.nx-button--emphasis):hover{background-color:#e15200}:host(.nx-button--emphasis):active{background-color:#c15500}:host(.nx-button--emphasis):disabled{background-color:rgba(248,98,0,.4)}@media (min-width:704px){:host(.nx-button--block){display:block;width:100%}}:host .nx-button__content-wrapper{display:flex;align-items:center;justify-content:center}:host([nxiconbutton]){padding:0;font-size:24px;flex:0 0 auto}:host([nxiconbutton]).nx-button--small{width:32px;font-size:16px}:host([nxiconbutton]).nx-button--small-medium{width:40px}:host([nxiconbutton]).nx-button--medium{width:48px}:host([nxiconbutton]).nx-button--large{width:72px}"]
                    }] }
        ];
        /** @nocollapse */
        NxIconButtonComponent.ctorParameters = function () {
            return [
                { type: core.ChangeDetectorRef },
                { type: core.ElementRef }
            ];
        };
        return NxIconButtonComponent;
    }(NxButtonBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxButtonModule = /** @class */ (function () {
        function NxButtonModule() {
        }
        NxButtonModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [NxButtonComponent, NxIconButtonComponent],
                        exports: [NxButtonComponent, NxIconButtonComponent]
                    },] }
        ];
        return NxButtonModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NxButtonModule = NxButtonModule;
    exports.NxButtonComponent = NxButtonComponent;
    exports.NxIconButtonComponent = NxIconButtonComponent;
    exports.ɵa = NX_BUTTON_HOST_BINDINGS;
    exports.ɵb = NxButtonBase;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=allianz-ngx-ndbx-button.umd.js.map