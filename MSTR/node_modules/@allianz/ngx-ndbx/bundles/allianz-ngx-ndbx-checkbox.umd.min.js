!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/common"),require("@angular/cdk/coercion"),require("@angular/core"),require("@angular/forms"),require("rxjs"),require("@allianz/ngx-ndbx/icon"),require("@allianz/ngx-ndbx/base")):"function"==typeof define&&define.amd?define("@allianz/ngx-ndbx/checkbox",["exports","@angular/common","@angular/cdk/coercion","@angular/core","@angular/forms","rxjs","@allianz/ngx-ndbx/icon","@allianz/ngx-ndbx/base"],n):n((e.allianz=e.allianz||{},e.allianz["ngx-ndbx"]=e.allianz["ngx-ndbx"]||{},e.allianz["ngx-ndbx"].checkbox={}),e.ng.common,e.ng.cdk.coercion,e.ng.core,e.ng.forms,e.rxjs,e.allianz["ngx-ndbx"].icon,e.allianz["ngx-ndbx"].base)}(this,function(e,n,t,o,c,r,i,a){"use strict";var h=0,l=function x(e,n,t){this.checked=e,this.value=n,this.checkbox=t},s=function(){function e(e,n){this._changeDetectorRef=e,this.ngControl=n,this._stateChanges=new r.Subject,this.selectionChange=new o.EventEmitter,this._id="nx-checkbox-group-"+h++,this._disabled=!1,this._negative=!1,this._onChange=function(){},this._onTouched=function(){},this.ngControl&&(this.ngControl.valueAccessor=this)}return Object.defineProperty(e.prototype,"id",{get:function(){return this._id},set:function(e){this._id!==e&&(this._id=e,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e,this._changeDetectorRef.markForCheck()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=t.coerceBooleanProperty(e),this._label&&(this._label.disabled=this._disabled),this._stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"negative",{get:function(){return this._negative},set:function(e){this._negative=t.coerceBooleanProperty(e),this._changeDetectorRef.markForCheck(),this._stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"labelSize",{get:function(){return this._labelSize},set:function(e){this._labelSize=e,this._stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"required",{get:function(){return this._required},set:function(e){this._required=t.coerceBooleanProperty(e)},enumerable:!0,configurable:!0}),e.prototype.ngAfterContentInit=function(){var e=this;this.ngControl&&(this._value=this._checkboxes.filter(function(e){return e.checked}).map(function(e){return e.value}),Promise.resolve().then(function(){e._onChange(e._value)})),this._updateSelectedCheckboxFromValue(),this._checkboxes.changes.subscribe(function(){e._value=e._checkboxes.filter(function(e){return e.checked}).map(function(e){return e.value}),e.ngControl&&e.ngControl.control.setValue(e._value),e._updateSelectedCheckboxFromValue()})},e.prototype.ngOnDestroy=function(){this._stateChanges.complete()},e.prototype.writeValue=function(e){this._value&&(this._value=e),this._updateSelectedCheckboxFromValue()},e.prototype.registerOnChange=function(e){this._onChange=e},e.prototype.registerOnTouched=function(e){this._onTouched=e},e.prototype._updateSelectedCheckboxFromValue=function(){var n=this;null!==this._checkboxes&&this._value&&this._checkboxes.map(function(e){-1!==n._value.indexOf(e.value)&&(e.checked=!0)})},e.prototype.change=function(e){e=this._checkboxes.filter(function(e){return e.checked}).map(function(e){return e.value}),this._onChange(e),this._onTouched&&this._onTouched(),this.selectionChange.emit(new l(e.checked,e.value,e))},e.decorators=[{type:o.Component,args:[{selector:"nx-checkbox-group",template:'<div>\n  <div class="nx-checkbox-group__label">\n    <ng-content select="nx-label"></ng-content>\n  </div>\n  <div class="nx-checkbox-group__errors">\n    <ng-content select="nx-error"></ng-content>\n  </div>\n  <div class="nx-checkbox-group__controls">\n    <ng-content></ng-content>\n  </div>\n</div>\n',changeDetection:o.ChangeDetectionStrategy.OnPush,host:{"[class.nx-checkbox-group]":"true","[class.nx-checkbox-group--negative]":"negative","[attr.id]":"id","[attr.required]":"required","[attr.disabled]":"disabled || null","[attr.aria-labelledby]":"this._label?.id  || null","[attr.role]":'"group"'},styles:[":host ::ng-deep nx-error{margin-bottom:8px}:host ::ng-deep nx-label{margin-bottom:16px;display:block}:host.nx-checkbox-group--negative ::ng-deep nx-error,:host.nx-checkbox-group--negative ::ng-deep nx-icon.nx-error__icon,:host.nx-checkbox-group--negative ::ng-deep nx-label{color:#fff}"]}]}],e.ctorParameters=function(){return[{type:o.ChangeDetectorRef},{type:c.NgControl,decorators:[{type:o.Optional},{type:o.Self}]}]},e.propDecorators={_checkboxes:[{type:o.ContentChildren,args:[o.forwardRef(function(){return b}),{descendants:!0}]}],_label:[{type:o.ContentChild,args:[o.forwardRef(function(){return a.NxLabelComponent}),{}]}],selectionChange:[{type:o.Output}],id:[{type:o.Input}],name:[{type:o.Input}],disabled:[{type:o.Input}],negative:[{type:o.Input}],labelSize:[{type:o.Input}],required:[{type:o.Input}]},e}(),b=function(){function e(e,n){this._changeDetectorRef=e,this.checkboxGroup=n,this._id=(h++).toString(),this._disabled=!1,this._negative=!1,this._labelSize="small",this._checked=!1,this._name=null,this._indeterminate=!1,this.indeterminateChange=new o.EventEmitter(!1),this.checkedChange=new o.EventEmitter(!1),this.checkboxChange=new o.EventEmitter,this.onChangeCallback=function(e){},this.onTouchedCallback=function(){}}return Object.defineProperty(e.prototype,"id",{get:function(){return"nx-checkbox-"+this._id},set:function(e){e!==this._id&&(this._id=e,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this.checkboxGroup&&this.checkboxGroup.name?this.checkboxGroup.name:this._name},set:function(e){this._name=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disabled",{get:function(){return this.checkboxGroup&&this.checkboxGroup.disabled?this.checkboxGroup.disabled:this._disabled},set:function(e){var n=t.coerceBooleanProperty(e);n!==this._disabled&&(this._disabled=n,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"labelSize",{get:function(){return this.checkboxGroup&&this.checkboxGroup.labelSize?this.checkboxGroup.labelSize:this._labelSize},set:function(e){this._labelSize=e,this._changeDetectorRef.markForCheck()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"negative",{get:function(){return this.checkboxGroup&&this.checkboxGroup.negative?this.checkboxGroup.negative:this._negative},set:function(e){var n=t.coerceBooleanProperty(e);n!==this._negative&&(this._negative=n,this._changeDetectorRef.markForCheck())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"checked",{get:function(){return this._checked},set:function(e){var n=t.coerceBooleanProperty(e);n!==this._checked&&(this._indeterminate&&this._setIndeterminate(!1),this._setChecked(n))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"indeterminate",{get:function(){return this._indeterminate},set:function(e){var n=t.coerceBooleanProperty(e);this._indeterminate!==n&&(this._checked&&this._setChecked(!1),this._setIndeterminate(n)),this._changeDetectorRef.markForCheck()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"required",{get:function(){return this._required},set:function(e){this._required=t.coerceBooleanProperty(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"value",{get:function(){return this._value?this._value:this.checked.toString()},set:function(e){this._value=e,this._changeDetectorRef.markForCheck()},enumerable:!0,configurable:!0}),e.prototype._controlInvalid=function(){return!!(this.checkboxGroup&&this.checkboxGroup.ngControl&&this.checkboxGroup.ngControl.invalid&&this.checkboxGroup.ngControl.touched)},e.prototype.ngOnInit=function(){var e=this;this.checkboxGroup&&(this.name=this.checkboxGroup.name,this._parentChangeSubscription=this.checkboxGroup._stateChanges.subscribe(function(){e._changeDetectorRef.markForCheck()}))},e.prototype.ngOnDestroy=function(){this._parentChangeSubscription&&this._parentChangeSubscription.unsubscribe()},e.prototype._setIndeterminate=function(e){this._indeterminate=e,this.indeterminateChange.emit(this._indeterminate),this._changeDetectorRef.markForCheck()},e.prototype._setChecked=function(e){this._checked=e,this._changeDetectorRef.markForCheck()},e.prototype.toggle=function(){this.checked=!this.checked,this.onChangeCallback(this.checked),null!==this.checkboxGroup&&this.checkboxGroup.change(this)},e.prototype.writeValue=function(e){null===e&&(e=!1),e!==this.checked&&(this.checked=e)},e.prototype.registerOnChange=function(e){this.onChangeCallback=e},e.prototype.registerOnTouched=function(e){this.onTouchedCallback=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.prototype.touch=function(){this.onTouchedCallback()},e.prototype._onInputClick=function(e){e.stopPropagation(),this.disabled||(this.toggle(),this.checkedChange.emit(this._checked),this.checkboxChange.emit(this._createChangeEvent(this._checked)))},e.prototype._createChangeEvent=function(e){var n=new l(e,this.value,this);return n.checked=e,n.value=this.value,n.checkbox=this,n},e.decorators=[{type:o.Component,args:[{selector:"nx-checkbox",template:'<input\n  type="checkbox"\n  [id]="id"\n  [name]="name"\n  [checked]="checked"\n  [indeterminate]="indeterminate" [disabled]="disabled"\n  (blur)="touch()"\n  [attr.aria-labelledby]="id + \'-label\'"\n  (click)="_onInputClick($event)"\n  class="nx-checkbox__input"\n  [value]="value"\n>\n\n<label [id]="id + \'-label\'" [attr.for]="id" class="nx-checkbox__label">\n    <span class="nx-checkbox__control">\n        <nx-icon *ngIf="checked" name="check" aria-hidden="true"></nx-icon>\n        <div *ngIf="indeterminate" class="nx-checkbox__indeterminate-indicator"></div>\n    </span>\n    <div class="nx-checkbox__label-text">\n        <ng-content></ng-content>\n    </div>\n</label>\n',changeDetection:o.ChangeDetectionStrategy.OnPush,host:{"[class.nx-checkbox]":"true","[class.disabled]":"disabled","[class.nx-checkbox--label-large]":'labelSize === "large"',"[class.nx-checkbox--negative]":"negative","[attr.required]":"required","[class.has-error]":"_controlInvalid() || null","[attr.aria-invalid]":"_controlInvalid() || null"},providers:[{provide:c.NG_VALUE_ACCESSOR,useExisting:o.forwardRef(function(){return e}),multi:!0}],styles:[":host{display:block;position:relative;margin-bottom:16px}:host.has-error .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control,:host.ng-invalid .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{background-color:#dc3149;border-color:#dc3149}:host.has-error .nx-checkbox__control,:host.ng-invalid .nx-checkbox__control{border-color:#dc3149}:host.has-error .nx-checkbox__indeterminate-indicator,:host.ng-invalid .nx-checkbox__indeterminate-indicator{background-color:#dc3149}.nx-checkbox__input{opacity:0;position:absolute}.nx-checkbox__label{font-size:16px;line-height:24px;cursor:pointer;display:flex}:host(.nx-checkbox--label-large) .nx-checkbox__label{font-size:20px;line-height:28px;letter-spacing:.2px}.nx-checkbox__label-text{padding:0;margin-left:12px}.nx-checkbox__control{background-color:#fff;border:2px solid #767676;border-radius:4px;color:#fff;font-size:20px;height:24px;width:24px;min-width:24px;display:flex;justify-content:center;align-items:center;z-index:0;cursor:pointer}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{border-radius:4px}.nx-checkbox__indeterminate-indicator{background-color:#007ab3;height:2px;width:10px}.nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{background-color:#007ab3;border-color:#007ab3}.nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:#ececec;border-color:#c2c2c2;cursor:not-allowed}.nx-checkbox__input:checked:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:#c2c2c2}.nx-checkbox__input:disabled+.nx-checkbox__label{cursor:not-allowed;color:#c2c2c2}.nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#c2c2c2}:host(.nx-checkbox--negative) .nx-checkbox__control{border-color:#fff;background-color:transparent}:host(.nx-checkbox--negative) .nx-checkbox__label{color:#fff}:host(.nx-checkbox--negative) .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{color:#000;background-color:#fff;border-color:#fff}:host(.nx-checkbox--negative) .nx-checkbox__input:checked:disabled+.nx-checkbox__label .nx-checkbox__control{color:rgba(255,255,255,.4);border-color:transparent;background-color:rgba(194,194,194,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label{color:rgba(255,255,255,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:rgba(153,153,153,.4);border-color:rgba(217,217,217,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:rgba(217,217,217,.4)}@media screen and (-ms-high-contrast:active){.nx-checkbox__input:focus+.nx-checkbox__label{color:#fff}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control::after{background-color:#fff}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{border-color:#fff}.nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{border-color:#ff0;color:#ff0}.nx-checkbox__input:focus:checked+.nx-checkbox__label .nx-checkbox__control{background-color:none;border-color:#fff;color:#fff}.nx-checkbox__label{color:#ff0}.nx-checkbox__input:indeterminate+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#ff0}.nx-checkbox__input:indeterminate:focus+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#fff}}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__control{background-color:#075994}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#075994}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled])+.nx-checkbox__label .nx-checkbox__control{border-color:#075994}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__control{background-color:#003781}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#003781}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled])+.nx-checkbox__label .nx-checkbox__control{border-color:#003781}:host-context([data-whatinput=keyboard]) .nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}"]}]}],e.ctorParameters=function(){return[{type:o.ChangeDetectorRef},{type:s,decorators:[{type:o.Optional}]}]},e.propDecorators={id:[{type:o.Input}],name:[{type:o.Input}],disabled:[{type:o.Input}],labelSize:[{type:o.Input}],negative:[{type:o.Input}],checked:[{type:o.Input}],indeterminate:[{type:o.Input}],required:[{type:o.Input}],value:[{type:o.Input}],indeterminateChange:[{type:o.Output}],checkedChange:[{type:o.Output}],checkboxChange:[{type:o.Output}]},e}(),u=function(){function e(){}return e.decorators=[{type:o.NgModule,args:[{declarations:[b,s],exports:[b,s],imports:[n.CommonModule,i.NxIconModule,a.NxLabelModule]}]}],e}();e.NxCheckboxModule=u,e.NxCheckboxChangeEvent=l,e.NxCheckboxGroupComponent=s,e.NxCheckboxComponent=b,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=allianz-ngx-ndbx-checkbox.umd.min.js.map