{"version":3,"file":"allianz-ngx-ndbx.umd.js.map","sources":["ng://@allianz/ngx-ndbx/ndbx.module.ts","node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/button/button-base.ts","ng://@allianz/ngx-ndbx/button/button.component.ts","ng://@allianz/ngx-ndbx/button/icon-button.component.ts","ng://@allianz/ngx-ndbx/button/button.module.ts","ng://@allianz/ngx-ndbx/checkbox/checkbox.component.ts","ng://@allianz/ngx-ndbx/checkbox/checkbox.module.ts","ng://@allianz/ngx-ndbx/radio-button/radio-change.ts","ng://@allianz/ngx-ndbx/radio-button/radio-button.ts","ng://@allianz/ngx-ndbx/radio-button/radio-button.module.ts","ng://@allianz/ngx-ndbx/copytext/copytext.component.ts","ng://@allianz/ngx-ndbx/copytext/copytext.module.ts","ng://@allianz/ngx-ndbx/headline/headline.component.ts","ng://@allianz/ngx-ndbx/headline/headline.module.ts","ng://@allianz/ngx-ndbx/link/link.component.ts","ng://@allianz/ngx-ndbx/link/link.module.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle/toggle-button.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle-group/circle-toggle-group.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/mobile-toggle-button/mobile-toggle-button.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle/circle-toggle.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/icon-toggle-button/icon-toggle-button.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle.module.ts","ng://@allianz/ngx-ndbx/list/list.component.ts","ng://@allianz/ngx-ndbx/list/list-icon.component.ts","ng://@allianz/ngx-ndbx/list/list.module.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle-button-base.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle-button.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle.module.ts","ng://@allianz/ngx-ndbx/checkbox-circle/checkbox-circle.component.ts","ng://@allianz/ngx-ndbx/checkbox-circle/checkbox-circle.module.ts","ng://@allianz/ngx-ndbx/spinner/spinner.component.ts","ng://@allianz/ngx-ndbx/spinner/spinner.module.ts","ng://@allianz/ngx-ndbx/modal/modal.service.ts","ng://@allianz/ngx-ndbx/modal/animations.ts","ng://@allianz/ngx-ndbx/modal/modal.component.ts","ng://@allianz/ngx-ndbx/modal/modal-open-on-click.directive.ts","ng://@allianz/ngx-ndbx/modal/modal.module.ts","ng://@allianz/ngx-ndbx/switcher/switcher.component.ts","ng://@allianz/ngx-ndbx/switcher/switcher.module.ts","ng://@allianz/ngx-ndbx/popover/popover-trigger.directive.ts","ng://@allianz/ngx-ndbx/popover/popover-content.ts","ng://@allianz/ngx-ndbx/popover/popover.component.ts","ng://@allianz/ngx-ndbx/popover/popover.module.ts","ng://@allianz/ngx-ndbx/taglist/tag.component.ts","ng://@allianz/ngx-ndbx/taglist/taglist.component.ts","ng://@allianz/ngx-ndbx/taglist/taglist.module.ts","ng://@allianz/ngx-ndbx/image/image.directive.ts","ng://@allianz/ngx-ndbx/image/figure.component.ts","ng://@allianz/ngx-ndbx/image/image.module.ts","ng://@allianz/ngx-ndbx/radio-circle/radio-circle-button.ts","ng://@allianz/ngx-ndbx/radio-circle/radio-circle.component.ts","ng://@allianz/ngx-ndbx/radio-circle/icon-button/radio-circle-icon-button.component.ts","ng://@allianz/ngx-ndbx/radio-circle/svg-button/radio-circle-svg-button.component.ts","ng://@allianz/ngx-ndbx/radio-circle/radio-circle.module.ts","ng://@allianz/ngx-ndbx/video/video.component.ts","ng://@allianz/ngx-ndbx/video/video.module.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown-errors.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.control.ts","ng://@allianz/ngx-ndbx/dropdown/group/dropdown-group.ts","ng://@allianz/ngx-ndbx/dropdown/item/dropdown-item.ts","ng://@allianz/ngx-ndbx/dropdown/closed-label.directive.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.module.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete-option.component.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete.component.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete-trigger.directive.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete.module.ts","ng://@allianz/ngx-ndbx/natural-language-form/word.component.ts","ng://@allianz/ngx-ndbx/natural-language-form/natural-language-form.component.ts","ng://@allianz/ngx-ndbx/natural-language-form/natural-language-form.module.ts","ng://@allianz/ngx-ndbx/message/message.component.ts","ng://@allianz/ngx-ndbx/message/message.module.ts","ng://@allianz/ngx-ndbx/page-search/page-search.component.ts","ng://@allianz/ngx-ndbx/page-search/page-search.module.ts","ng://@allianz/ngx-ndbx/rating/rating.component.ts","ng://@allianz/ngx-ndbx/rating/rating.module.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-intl.ts","ng://@allianz/ngx-ndbx/number-stepper/auto-resize.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper.component.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-prefix.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-suffix.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper.module.ts","ng://@allianz/ngx-ndbx/pagination/pagination-texts.ts","ng://@allianz/ngx-ndbx/pagination/pagination-utils.ts","ng://@allianz/ngx-ndbx/pagination/pagination.component.ts","ng://@allianz/ngx-ndbx/pagination/pagination.module.ts","ng://@allianz/ngx-ndbx/dynamic-table/tabledata-source.ts","ng://@allianz/ngx-ndbx/dynamic-table/dynamic-table.component.ts","ng://@allianz/ngx-ndbx/dynamic-table/dynamic-table.module.ts","ng://@allianz/ngx-ndbx/accordion/accordion.ts","ng://@allianz/ngx-ndbx/accordion/accordion-animations.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel-body.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel-header.ts","ng://@allianz/ngx-ndbx/accordion/accordion.module.ts","ng://@allianz/ngx-ndbx/tabs/tab-group-base.ts","ng://@allianz/ngx-ndbx/tabs/tab.ts","ng://@allianz/ngx-ndbx/tabs/tab-body.ts","ng://@allianz/ngx-ndbx/tabs/tab-group.ts","ng://@allianz/ngx-ndbx/tabs/tab-label.ts","ng://@allianz/ngx-ndbx/tabs/tab-header.ts","ng://@allianz/ngx-ndbx/tabs/tab-nav-bar.ts","ng://@allianz/ngx-ndbx/tabs/tabs.module.ts","ng://@allianz/ngx-ndbx/core/breakpoints.ts","ng://@allianz/ngx-ndbx/core/mapped-styles.ts","ng://@allianz/ngx-ndbx/card/card.component.ts","ng://@allianz/ngx-ndbx/card/card.module.ts"],"sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\n\n@NgModule({\n})\nexport class NdbxModule {\n\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: NdbxModule\n    };\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  ElementRef,\n  ChangeDetectorRef\n} from '@angular/core';\n\n/** Type of a button. */\nexport type NxButtonType = 'primary' |Â 'secondary' | 'tertiary' | 'cta' | 'emphasis';\n\n/** Size of a button. */\nexport type NxButtonSize = 'small' | 'small-medium' | 'medium' | 'large' ;\n\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_TYPE = 'primary';\n\nexport const NX_BUTTON_HOST_BINDINGS = {\n    '[class.nx-button--primary]' : 'type === \"primary\"',\n    '[class.nx-button--secondary]' : 'type === \"secondary\"',\n    '[class.nx-button--tertiary]' : 'type === \"tertiary\"',\n    '[class.nx-button--cta]' : 'type === \"cta\"',\n    '[class.nx-button--emphasis]' : 'type === \"emphasis\"',\n\n    '[class.nx-button--large]' : 'size === \"large\"',\n    '[class.nx-button--medium]' : 'size === \"medium\"',\n    '[class.nx-button--small-medium]' : 'size === \"small-medium\"',\n    '[class.nx-button--small]' : 'size === \"small\"',\n\n    '[class.nx-button--block]' : 'block',\n    '[class.nx-button--negative]' : 'negative',\n  };\n\n/** @docs-private */\nexport class NxButtonBase {\n  private _classNames: string;\n\n  /** @docs-private */\n  type: NxButtonType = DEFAULT_TYPE;\n\n  /** @docs-private */\n  size: NxButtonSize = DEFAULT_SIZE;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /** @docs-private */\n  block: boolean = false;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, private _elementRef: ElementRef) { }\n\n  public set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n\n    const [type = null] = this._classNames.match(/primary|secondary|tertiary|cta|emphasis/) || [DEFAULT_TYPE];\n    this.type = type as NxButtonType;\n\n    const [size = null] = this._classNames.match(/small-medium|small|medium|large/) || [DEFAULT_SIZE];\n    this.size = size as NxButtonSize;\n\n    this.negative = /negative/.test(this._classNames);\n    this.block = /block/.test(this._classNames);\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  public get classNames(): string {\n    return this._classNames;\n  }\n\n  /**\n   * @docs-private\n   * getter used for the modal component as a quickfix\n   * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n   * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n   * way to reach the elementRef of the component until the modal gets refactored.\n   */\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NX_BUTTON_HOST_BINDINGS, NxButtonBase } from './button-base';\n\n@Component({\n  templateUrl: './button.html',\n  styleUrls: ['button.scss'],\n  // tslint:disable-next-line:component-selector\n  selector: 'button[nxButton]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: NX_BUTTON_HOST_BINDINGS,\n  inputs: ['classNames:nxButton']\n})\n\nexport class NxButtonComponent extends NxButtonBase {\n  constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef) {\n    super(changeDetectorRef, elementRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { NxButtonBase, NX_BUTTON_HOST_BINDINGS } from './button-base';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button[nxIconButton]',\n  templateUrl: './button.html',\n  styleUrls: ['button.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: NX_BUTTON_HOST_BINDINGS,\n  inputs: ['classNames:nxIconButton']\n})\nexport class NxIconButtonComponent extends NxButtonBase {\n  constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef) {\n    super(changeDetectorRef, elementRef);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxButtonComponent } from './button.component';\nimport { NxIconButtonComponent } from './icon-button.component';\n\n@NgModule({\n  declarations: [ NxButtonComponent, NxIconButtonComponent ],\n  exports: [ NxButtonComponent, NxIconButtonComponent ]\n})\nexport class NxButtonModule { }\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  ChangeDetectorRef,\n  AfterContentInit,\n  OnDestroy,\n  ContentChildren,\n  QueryList,\n  Optional,\n  Self,\n  OnInit, ContentChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  NgControl,\n} from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { NxLabelComponent } from '@allianz/ngx-ndbx/base';\n\nlet nextId = 0;\n\nexport class NxCheckboxChangeEvent {\n  constructor(\n  /** The checked value of the checkbox. */\n  public checked: boolean,\n  /** The value of the checkbox. */\n  public value: string,\n  /** The component instance of the checkbox which emitted the change event. */\n  public checkbox: NxCheckboxComponent\n  ) {}\n}\n\n/** Size of the label. */\nexport type NxCheckboxLabelSize = 'small' | 'large';\n\n@Component({\n  selector: 'nx-checkbox-group',\n  templateUrl: 'checkbox-group.component.html',\n  styleUrls: ['checkbox-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox-group]': 'true',\n    '[class.nx-checkbox-group--negative]': 'negative',\n    '[attr.id]': 'id',\n    '[attr.required]': 'required',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-labelledby]': 'this._label?.id  || null',\n    '[attr.role]': '\"group\"',\n  }\n})\nexport class NxCheckboxGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(forwardRef(() => NxCheckboxComponent), {descendants: true})\n  _checkboxes: QueryList<NxCheckboxComponent>;\n\n  @ContentChild(forwardRef(() => NxLabelComponent), {})\n   _label: NxLabelComponent;\n\n  readonly _stateChanges = new Subject<void>();\n  @Output() selectionChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  private _id: string = `nx-checkbox-group-${nextId++}`;\n  /** Sets the Id of the checkbox group. */\n  @Input()\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string;\n  /** Sets the name of the checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Disables all checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    if (this._label) {\n      this._label.disabled = this._disabled;\n    }\n    this._stateChanges.next();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Set the negative styles for all the checkboxes inside the nx-checkbox-group */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n    this._stateChanges.next();\n  }\n\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _labelSize: NxCheckboxLabelSize;\n  /** Sets the label size of the checkboxes inside the group */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._stateChanges.next();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return this._labelSize;\n  }\n\n  /** Whether the nx-checkbox-group are required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  private _value: any;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.ngControl) {\n      this._value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._onChange(this._value);\n      });\n    }\n\n    this._updateSelectedCheckboxFromValue();\n    this._checkboxes.changes.subscribe(() => {\n      this._value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n      if (this.ngControl) {\n        this.ngControl.control.setValue(this._value);\n      }\n      this._updateSelectedCheckboxFromValue();\n    });\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  writeValue(value: any): void {\n    if (this._value) {\n      this._value = value;\n    }\n    this._updateSelectedCheckboxFromValue();\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  private _onChange: (value: any) => void = () => {};\n\n  private _onTouched: () => any = () => {};\n\n  private _updateSelectedCheckboxFromValue(): void {\n    if (this._checkboxes !== null) {\n      if (this._value) {\n        this._checkboxes.map(checkbox => {\n          if (this._value.indexOf(checkbox.value) !== -1) {\n            checkbox.checked = true;\n          }\n        });\n      }\n    }\n  }\n\n  /** @docs-private */\n  change(value) {\n    value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n    this._onChange(value);\n    if (this._onTouched) {\n      this._onTouched();\n    }\n    this.selectionChange.emit(new NxCheckboxChangeEvent(value.checked, value.value, value));\n  }\n}\n\n@Component({\n  selector: 'nx-checkbox',\n  templateUrl: 'checkbox.component.html',\n  styleUrls: ['checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox]': 'true',\n    '[class.disabled]': 'disabled',\n    '[class.nx-checkbox--label-large]': 'labelSize === \"large\"',\n    '[class.nx-checkbox--negative]': 'negative',\n    '[attr.required]': 'required',\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.aria-invalid]': '_controlInvalid() || null',\n  },\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCheckboxComponent),\n      multi: true\n    }\n  ]\n})\n\nexport class NxCheckboxComponent implements ControlValueAccessor, OnDestroy, OnInit {\n  private _parentChangeSubscription: Subscription;\n  private _id: string = (nextId++).toString();\n  private _disabled: boolean = false;\n  private _negative: boolean = false;\n  private _labelSize: NxCheckboxLabelSize = 'small';\n  private _checked = false;\n  private _name: string = null;\n\n  /**\n   * Id of the checkbox.\n   *\n   * If not set, the checkbox gets an incremented value by default.\n   */\n  @Input()\n  set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id() {\n    return `nx-checkbox-${this._id}`;\n  }\n\n  /** Name of the checkbox. */\n  @Input()\n  set name(name: string) {\n    this._name = name;\n  }\n\n  get name(): string {\n    return (this.checkboxGroup && this.checkboxGroup.name) ? this.checkboxGroup.name : this._name;\n  }\n\n  /** Whether the checkbox is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.disabled) ? this.checkboxGroup.disabled : this._disabled;\n  }\n\n  /**\n   * Sets the label size of the checkbox. Default value: small\n   */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return (this.checkboxGroup && this.checkboxGroup.labelSize) ? this.checkboxGroup.labelSize : this._labelSize;\n  }\n\n  /**\n   * Whether the checkbox has negative styling.\n   */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.negative) ? this.checkboxGroup.negative : this._negative;\n  }\n\n\n  /** Whether the checkbox is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._checked) {\n      if (this._indeterminate) {\n        this._setIndeterminate(false);\n      }\n      this._setChecked(newValue);\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  private _indeterminate = false;\n\n  /** Whether the checkbox is indeterminated. */\n  @Input()\n  set indeterminate(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._indeterminate !== newValue) {\n      if (this._checked) {\n        this._setChecked(false);\n      }\n      this._setIndeterminate(newValue);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  /** Sets the value of the checkbox. Default value is the checked status. */\n  @Input()\n  get value(): string {\n    return this._value ? this._value : this.checked.toString();\n  }\n\n  set value(value: string) {\n    this._value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _value: string;\n\n  /** An event emitted when the indeterminate value has changed */\n  @Output()\n  indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits the boolean checked value of the changed checkbox.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits a NxCheckboxChangeEvent.\n   */\n  @Output()\n  checkboxChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public checkboxGroup: NxCheckboxGroupComponent) {\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n    return !!(this.checkboxGroup && this.checkboxGroup.ngControl && this.checkboxGroup.ngControl.invalid\n      && this.checkboxGroup.ngControl.touched);\n  }\n\n  ngOnInit() {\n    if (this.checkboxGroup) {\n      this.name = this.checkboxGroup.name;\n      // when relevant properties of the parent like name and disabled change\n      // we need to let change detection know that the template needs an update\n      this._parentChangeSubscription = this.checkboxGroup._stateChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n    }\n  }\n\n  private _setIndeterminate(value: boolean) {\n    this._indeterminate = value;\n    this.indeterminateChange.emit(this._indeterminate);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _setChecked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Toggles the checked state of the checkbox. */\n  public toggle() {\n    this.checked = !this.checked;\n    this.onChangeCallback(this.checked);\n    if (this.checkboxGroup !== null) {\n      this.checkboxGroup.change(this);\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  private onChangeCallback = (_: any) => {};\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n\n  /** @docs-private */\n  _onInputClick(event): void {\n    // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n    event.stopPropagation();\n    if (!this.disabled) {\n      this.toggle();\n      this.checkedChange.emit(this._checked);\n      this.checkboxChange.emit(this._createChangeEvent(this._checked));\n    }\n  }\n\n  /**@docs-private */\n  private _createChangeEvent(checkedValue: boolean): NxCheckboxChangeEvent {\n    const event = new NxCheckboxChangeEvent(checkedValue, this.value, this);\n    event.checked = checkedValue;\n    event.value = this.value;\n    event.checkbox = this;\n    return event;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxCheckboxComponent } from './checkbox.component';\nimport { NxCheckboxGroupComponent } from './checkbox.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxLabelModule } from '@allianz/ngx-ndbx/base';\n\n@NgModule({\n  declarations: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent,\n  ],\n  exports: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent,\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule,\n    NxLabelModule\n  ]\n})\nexport class NxCheckboxModule { }\n","// Change event object emitted by NxRadioComponent and NxRadioGroupComponent\nimport { NxRadioComponent } from './radio-button';\n\n/** The change event object emitted by the radio group and radio button. */\nexport class NxRadioChange {\n  source: NxRadioComponent;\n  value: any;\n\n  /** The NxRadioComponent that emits the change event. NxRadioChange object can be instantiated with source radio component and a value. */\n  constructor(source: NxRadioComponent, value: any) {\n    this.source = source;\n    this.value = value;\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, ContentChild,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroupDirective,\n  NG_VALUE_ACCESSOR,\n  NgControl, NgForm,\n} from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { NxRadioChange } from './radio-change';\nimport { NxLabelComponent } from '@allianz/ngx-ndbx/base';\n\n/** Label Size Types */\nexport type LabelSize  = 'small' | 'big';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-radio-group',\n  templateUrl: './radio-group.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'role': 'radiogroup',\n    '[attr.id]': 'id',\n    '[attr.required]': 'required',\n    '[class.nx-radio-group--negative]': 'negative',\n    '[attr.aria-labelledby]': 'this._label?.id  || null'\n  },\n  styleUrls: [ 'radio-button-group.scss' ]\n})\nexport class NxRadioGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n\n  @ContentChild(forwardRef(() => NxLabelComponent), {})\n  _label: NxLabelComponent;\n\n  // emits when the internal state changes on properties which are relevant\n  // for the radio buttons so that they can mark themself for check\n  readonly _stateChanges = new Subject<void>();\n\n  private _id: string = `nx-radio-group-${nextId++}`;\n  /** Sets the Id of the radio group. */\n  @Input('id')\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get id(): string {\n    return this._id;\n  }\n  private _disabled: boolean = false;\n\n  /** Whether every radio button in this group should be disabled. */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    // inform childs about the change where CD should be triggered\n    this._stateChanges.next();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the radio group should have negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _required: boolean = false;\n  /** Sets if at least an option should be selected. */\n  @Input()\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this._stateChanges.next();\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /** An event is dispatched on each group value change. */\n  @Output('nxGroupValueChange') groupValueChange: EventEmitter<NxRadioChange> = new EventEmitter<NxRadioChange>();\n  private _name: string = `nx-radio-group-${nextId++}`;\n  private _value: any = null;\n  // The currently selected radio button; should match _value\n  private _selected: NxRadioComponent | null = null;\n\n  @ContentChildren(forwardRef(() => NxRadioComponent), {descendants: true})\n  _radios: QueryList<NxRadioComponent>;\n\n  private _onChange: (value: any) => void = () => {};\n  private _onTouched: () => any = () => {};\n\n  get name(): string {\n    return this._name;\n  }\n\n  // this is also the name attribute, which is mandatory in conjunction with ngModel, hence no nx prefix\n  /** Sets the name of this radio group, which is mandatory in conjunction with ngModel (Default: null). */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._stateChanges.next();\n  }\n\n  get value(): any { return this._value; }\n\n  /** Sets the value of the selected radion button in this group (Default: null). */\n  @Input('nxValue')\n  set value(newValue: any) {\n    if (this._value !== newValue) {\n      // Set this before proceeding to ensure no circular loop occurs with selection.\n      this._value = newValue;\n\n      this._updateSelectedRadioFromValue();\n      this._checkSelectedRadioButton();\n    }\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl,\n              @Optional() public _parentForm: NgForm,\n              @Optional() public _parentFormGroup: FormGroupDirective) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._updateSelectedRadioFromValue();\n    this._checkSelectedRadioButton();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** @docs-private this is meant to be called by the radio buttons in this group */\n  change(value) {\n    this.value = value;\n    this._onChange(value);\n    this.groupValueChange.emit(new NxRadioChange(this._selected, this._value));\n  }\n\n  /** @docs-private this is meant to be called by the radio buttons in this group. */\n  touch() {\n    if (this._onTouched) {\n      this._onTouched();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _updateSelectedRadioFromValue(): void {\n    // If the value already matches the selected radio, do nothing.\n    const isAlreadySelected = this._selected != null && this._selected.value === this._value;\n\n    if (this._radios != null && !isAlreadySelected) {\n      this._selected = null;\n      this._radios.forEach(radio => {\n        radio.checked = this.value === radio.value;\n        if (radio.checked) {\n          this._selected = radio;\n        }\n      });\n    }\n  }\n\n  private _checkSelectedRadioButton() {\n    if (this._selected && !this._selected.checked) {\n      this._selected.checked = true;\n    }\n  }\n\n}\n\n\n@Component({\n  selector: 'nx-radio',\n  templateUrl: 'radio-button.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ 'radio-button.scss' ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRadioComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[attr.required]': 'required',\n    '[class.nx-radio-button--small-label]': 'labelSize === \"small\"',\n    '[class.nx-radio-button--big-label]': 'labelSize === \"big\"',\n    '[class.nx-radio--negative]': 'negative',\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.aria-invalid]': '_controlInvalid() || null'\n  }\n})\nexport class NxRadioComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n  private _parentChangeSubscription: Subscription;\n\n  private _id: string = `nx-radio-${nextId++}`;\n  /** Sets the id of the radio component. */\n  @Input('id')\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  /** @docs-private */\n  get inputId(): string {\n    return `${this.id}-input`;\n  }\n\n  /** @docs-private */\n  get labelId(): string {\n    return `${this.id}-label`;\n  }\n\n  private _name: string = null;\n  // this is also the name attribute, which is mandatory in conjunction with ngModel, hence no nx prefix\n  /** Sets the name of this radio component, which is mandatory in conjunction with ngModel (Default: null). */\n  @Input('name')\n  set name(value: string) {\n    if (this._name !== value) {\n      this._name = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get name(): string {\n    return (this.radioGroup && this.radioGroup.name) ? this.radioGroup.name : this._name;\n  }\n\n  private _labelSize: LabelSize = 'big';\n  /** Sets the label size of the radio button.\n   * The default value is `big`.\n  */\n  @Input()\n  set labelSize(value: LabelSize) {\n    if (this._labelSize !== value) {\n      this._labelSize = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelSize(): LabelSize {\n    return this._labelSize;\n  }\n\n  private _negative:  boolean = false;\n  /**\n   * Whether the negative set of styles should be used.\n   *\n   * If the radio button is placed in a radio group, the negative value\n   * is overwritten by the group's negative value.\n   */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._negative !== newValue) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this.radioGroup ? this.radioGroup.negative : this._negative;\n  }\n\n  /** An event is dispatched on each value change. */\n  @Output('nxValueChange') valueChange: EventEmitter<NxRadioChange> = new EventEmitter<NxRadioChange>();\n  private _value: any = null;\n  private _checked: boolean = false;\n  private _disabled: boolean = false;\n  private _required: boolean = false;\n\n  get value(): any {\n    return this._value;\n  }\n\n  /** Sets the value of the form control element (Default: null). */\n  @Input('nxValue')\n  set value(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this.onChangeCallback(value);\n    }\n  }\n\n  /** @docs-private */\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  /** Whether the radio component is selected. */\n  @Input('nxChecked')\n  set checked(value: boolean) {\n    if (this._checked !== value) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** @docs-private */\n  get disabled(): boolean {\n    return this._disabled || (this.radioGroup && this.radioGroup.disabled);\n  }\n\n  /** Whether the radio button should be disabled or not. */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  get required(): boolean {\n    return this._required || (this.radioGroup && this.radioGroup.required);\n  }\n\n  /** Sets if at least a radio button should be selected. */\n  @Input()\n  set required(value: boolean) {\n    this._required = value;\n    // needed when the outer component is set to onPush because it is a native property\n    // on the host element\n    this._changeDetectorRef.markForCheck();\n  }\n\n  constructor(@Optional() public radioGroup: NxRadioGroupComponent,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (this.radioGroup) {\n      this.name = this.radioGroup.name;\n      // when relevant properties of the parent like name and disabled change\n      // we need to let change detection know that the template needs an update\n      this._parentChangeSubscription = this.radioGroup._stateChanges.subscribe(()  => {\n        this._changeDetectorRef.markForCheck();\n      });\n\n      if (this.radioGroup.value === this._value) {\n        this._checked = true;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === this._value) {\n      this._checked = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  private onChangeCallback = (_: any) => {};\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n\n    if (this.radioGroup) {\n      this.radioGroup.touch();\n    }\n  }\n\n  _onInputChange(event: Event) {\n    event.stopPropagation();\n    this._checked = true;\n    this.valueChange.emit(new NxRadioChange(this, this._value));\n    this.onChangeCallback(this.value);\n\n    if (this.radioGroup && this.value !== this.radioGroup.value) {\n      this.radioGroup.change(this.value);\n    }\n  }\n\n  _onInputClick(event: Event) {\n    // make sure click event propagation on the visually hidden input\n    // are stopped to prevent multiple events bubbling up.\n    event.stopPropagation();\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n    const form = this.radioGroup && (this.radioGroup._parentFormGroup || this.radioGroup._parentForm);\n    return !!(this.radioGroup && this.radioGroup.ngControl && this.radioGroup.ngControl.invalid\n      && (this.radioGroup.ngControl.touched || (form && form.submitted)));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxRadioComponent } from './radio-button';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxRadioGroupComponent } from './radio-button';\n\n@NgModule({\n  declarations: [ NxRadioComponent, NxRadioGroupComponent ],\n  exports: [ NxRadioComponent, NxRadioGroupComponent ],\n  imports: [\n    NxIconModule\n  ]\n})\nexport class NxRadioModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/** A type that specifies the font size of a copytext. */\nexport type NxCopytextType = 'small' | 'medium' | 'normal' | 'large';\n\nconst DEFAULT_TYPE = 'normal';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'p[nxCopytext]',\n  styleUrls: ['copytext.component.scss'],\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-copy]': 'true',\n    '[class.nx-copy--small]': 'type === \"small\"',\n    '[class.nx-copy--medium]': 'type === \"medium\"',\n    '[class.nx-copy--normal]': 'type === \"normal\"',\n    '[class.nx-copy--large]': 'type === \"large\"',\n    '[class.nx-copy--negative]': 'negative',\n  }\n})\nexport class NxCopytextComponent {\n  private _classNames: string;\n\n  /** @docs-private */\n  type: NxCopytextType = DEFAULT_TYPE;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /**\n   * Sets the type and whether the negative set of styling should be used.\n   *\n   * You can combine the values of type NxCopytextType and 'negative'.\n   *\n   * Default type: 'normal'\n   */\n  @Input('nxCopytext')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n    this._classNames = value;\n    const [type = null] = this._classNames.match(/small|medium|normal|large/) || [DEFAULT_TYPE];\n    this.type = type as NxCopytextType;\n\n    this.negative = !!this._classNames.match(/negative/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { NxCopytextComponent } from './copytext.component';\n\n@NgModule({\n  declarations: [ NxCopytextComponent ],\n  exports: [ NxCopytextComponent ]\n})\nexport class NxCopytextModule { }\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n/** Types of headlines */\nexport type HeadlineType = 'page' | 'page-bold-caps' | 'section' | 'subsection-large'\n                    | 'subsection-medium' | 'subsection-small' | 'subsection-xsmall';\n\nconst DEFAULT_TYPE = 'section';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nxHeadline]',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['headline.component.scss'],\n  host: {\n    '[class.nx-heading--page]': 'type === \"page\"',\n    '[class.nx-heading--page-bold-caps]': 'type === \"page-bold-caps\"',\n    '[class.nx-heading--section]': 'type === \"section\"',\n    '[class.nx-heading--subsection-large]': 'type === \"subsection-large\"',\n    '[class.nx-heading--subsection-medium]': 'type === \"subsection-medium\"',\n    '[class.nx-heading--subsection-small]': 'type === \"subsection-small\"',\n    '[class.nx-heading--subsection-xsmall]': 'type === \"subsection-xsmall\"',\n\n    '[class.nx-heading--negative]': 'negative',\n  }\n})\n\nexport class NxHeadlineComponent {\n  private _classNames: string;\n  /** @docs-private */\n  public type: HeadlineType = DEFAULT_TYPE;\n  /** @docs-private */\n  public negative: boolean = false;\n\n  /** Changes the type of the headline which affects the visual appearance.\n   * You can combine a HeadlineType and 'negative'. */\n  @Input('nxHeadline')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n    const typeRegex = /page-bold-caps|page|section|subsection-large|subsection-medium|subsection-small|subsection-xsmall/;\n    const [type = null] = this._classNames.match(typeRegex) || [DEFAULT_TYPE];\n    this.type = type as any;\n\n    this.negative = !!this._classNames.match(/negative/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxHeadlineComponent } from './headline.component';\n\n@NgModule({\n  declarations: [ NxHeadlineComponent ],\n  exports: [ NxHeadlineComponent ]\n})\nexport class NxHeadlineModule { }\n","import { NxIconComponent } from '@allianz/ngx-ndbx/icon';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, ContentChild, ElementRef, Renderer2 } from '@angular/core';\n\nimport { MappedStyles } from '@allianz/ngx-ndbx/core';\n\n\nconst MAPPING = {\n  'black': 'nx-link--black',\n  'negative': 'nx-link--negative',\n  'text': 'nx-link--text',\n  'block': 'nx-link--block',\n  'icon-right': 'nx-link--icon-right'\n};\n\nconst DEFAULT_CLASSES = [ 'nx-link' ];\n\n@Component({\n  selector: 'nx-link',\n  styleUrls: [ './link.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ['classNames: nxStyle']\n})\n\nexport class NxLinkComponent extends MappedStyles implements AfterContentInit {\n  private _styles: string;\n\n  /** @docs-private */\n  @ContentChild(NxIconComponent) icon: NxIconComponent;\n\n  /**\n   * Sets the style of the link, thereby altering the visual appearance.\n   *\n   * You can use any combination of 'black', 'icon-right', 'negative', 'text' and 'block' (deprecated).\n   */\n  classNames;\n\n  constructor(_elementRef: ElementRef, protected _renderer: Renderer2) {\n    super(MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);\n  }\n\n  ngAfterContentInit() {\n    // Add a specific link class that the css gets more specific than the nx-icon css\n    const icons = this.elementRef.nativeElement.querySelectorAll('nx-icon');\n    for (let i = 0; i < icons.length; i++) {\n      this._renderer.addClass(icons[i], 'nx-link__icon');\n    }\n  }\n\n  /**\n   * @docs-private\n   * getter used for the modal component as a quickfix\n   * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n   * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n   * way to reach the elementRef of the component until the modal gets refactored.\n   */\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxLinkComponent } from './link.component';\n\n@NgModule({\n  declarations: [ NxLinkComponent ],\n  exports: [ NxLinkComponent ]\n})\nexport class NxLinkModule {\n}\n","/** @docs-private */\nexport abstract class ToggleButton {\n  id;\n  value;\n  checked;\n  name;\n  negative;\n  disabled;\n  tabIndex;\n  checkedChange;\n  selectionChange;\n  toggleButton;\n  abstract toggle(event);\n  abstract setGroupSelection();\n\n}\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  QueryList,\n  AfterViewInit,\n  ChangeDetectorRef,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil, tap, startWith, filter } from 'rxjs/operators';\nimport { merge, Subject } from 'rxjs';\n\nimport { ToggleButton } from '../circle-toggle/toggle-button';\nimport { ToggleChangeEvent } from '../circle-toggle/circle-toggle.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-circle-toggle-group',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./circle-toggle-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCircleToggleGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.is-responsive]': 'responsive',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-labelledby]': 'name',\n    '[attr.name]': 'name',\n    '[attr.id]': 'id',\n    '[class.nx-circle-toggle-group]': 'true',\n    'role': 'radiogroup'\n  }\n})\nexport class NxCircleToggleGroupComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n\n  @ContentChildren(ToggleButton) private _buttons: QueryList<ToggleButton>;\n\n  private _id = `nx-circle-toggle-group-${nextId++}`;\n\n  /**\n   * Id of the circle toggle group.\n   *\n   * If not set, the circle toggle group gets an incremented value by default.\n   */\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n  private _destroyed: Subject<void> = new Subject();\n\n  /** An event emitted when the selection changes. Outputs the value of the currently selected button. */\n  @Output()\n  valueChange: EventEmitter<any> = new EventEmitter();\n\n  private _name: string = `toggle-group-${nextId++}`;\n\n  /** Name that is used for accessibility. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this.updateToggleButtonsNames();\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean;\n\n  /** Whether the circle toggle group is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n    if (this.buttons) {\n      this.buttons.forEach(button => button.disabled = value);\n    }\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  _negative: boolean = false;\n  /** Whether the circle toggle group uses the negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.negative !== newValue) {\n      this._negative = newValue;\n    }\n    if (this.buttons) {\n      this.buttons.forEach(button => button.negative = value);\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _value;\n  /** The value of the selected circle toggle in the circle toggle group. */\n  @Input()\n  set value(value: string) {\n    this.writeValue(value);\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  private _responsive: boolean = true;\n  /** Whether the circle toggle group has a responsive behavior. */\n  @Input()\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.responsive) {\n      this._responsive = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get responsive(): boolean {\n    return this._responsive;\n  }\n\n  private onChangeCallback = (value: string) => { };\n  private onTouchedCallback = () => { };\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  writeValue(value: any) {\n    if (this.value !== value) {\n      this._value = value;\n      this.notifySelectedChild(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  ngAfterViewInit() {\n\n    this.subscribeToSelectionChanges();\n\n    // react if a content child is deleted, added etc.\n    this.buttons.changes\n      .pipe(\n        startWith(this.buttons),\n        filter(toggles => toggles.length > 0),\n        tap(toggles =>\n          Promise.resolve().then(() => {\n            toggles.forEach(toggle => toggle.toggleButton.resetClasses());\n            this.buttons.first.toggleButton.setFirstButton();\n            this.buttons.last.toggleButton.setLastButton();\n          })\n        ),\n        takeUntil(this._destroyed))\n      .subscribe(() => this.subscribeToSelectionChanges());\n  }\n\n  /** @docs-private */\n  subscribeToSelectionChanges() {\n    const changedOrDestroyed = merge(this.buttons.changes, this._destroyed);\n\n    merge(...this.buttons.map(button => button.selectionChange))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe((change: ToggleChangeEvent) => {\n        this.onChangeCallback(change.value);\n        this.valueChange.emit(change.value);\n      });\n  }\n\n  /**\n   * @docs-private\n   * inform the selected button if the group selection is set programattically at the beginning\n   */\n  notifySelectedChild(newValue: string) {\n    if (this.buttons) {\n      const selected = this.buttons.find((button) => button.value === newValue);\n      if (selected) {\n        selected.setGroupSelection();\n      }\n    }\n  }\n\n  /** @docs-private */\n  updateToggleButtonsNames(): void {\n    if (this.buttons) {\n      this.buttons.forEach(button => button.name = this.name);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  get selectedButton(): ToggleButton {\n    return this.buttons ? this.buttons.find(button => button.checked) : null;\n  }\n\n  /** @docs-private */\n  get buttons() {\n    return this._buttons;\n  }\n}\n\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-mobile-toggle-button',\n  templateUrl: 'mobile-toggle-button.component.html',\n  styleUrls: ['mobile-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-disabled]': 'disabled',\n    '[class.is-negative]': 'negative',\n    '[class.is-first]': 'isFirst',\n    '[class.is-last]': 'isLast',\n    '[class.is-flipped]': 'checked'\n  }\n})\nexport class NxMobileToggleButtonComponent {\n\n  @Input()\n  checked: boolean = false;\n\n  @Input()\n  negative: boolean = false;\n\n  @Input()\n  disabled: boolean = false;\n\n  @Input()\n  hint: string;\n\n  @Input()\n  label: string;\n\n  /** @docs-private */\n  isFirst: boolean;\n\n  /** @docs-private */\n  isLast: boolean;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  setFirstButton() {\n    this.isFirst = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  setLastButton() {\n    this.isLast = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  resetClasses() {\n    this.isFirst = false;\n    this.isLast = false;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input, Output, ViewChild, Optional, OnInit, OnDestroy, AfterViewInit, HostListener, ChangeDetectorRef, ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\nimport { ToggleButton } from './toggle-button';\nimport { NxCircleToggleGroupComponent } from '../circle-toggle-group/circle-toggle-group.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NxMobileToggleButtonComponent } from '../mobile-toggle-button/mobile-toggle-button.component';\n\nexport class ToggleChangeEvent {\n  /** A toggle button */\n  button: ToggleButton;\n\n  /** The value of the toggle button that is sent with the event. */\n  value: string;\n\n  constructor(button, value) {\n    this.button = button;\n    this.value = value;\n  }\n}\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-circle-toggle',\n  templateUrl: 'circle-toggle.component.html',\n  styleUrls: ['circle-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ToggleButton,\n      useExisting: forwardRef(() => NxCircleToggleComponent)\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCircleToggleComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-toggle-circle]': 'true',\n    '[class.in-group]': 'inGroup',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-responsive]': 'responsive'\n  }\n})\nexport class NxCircleToggleComponent extends ToggleButton implements\nOnInit, OnDestroy, AfterViewInit, ControlValueAccessor {\n\n  private _id: string = `toggle-button-${nextId++}`;\n\n  /** @docs-private */\n  inGroup: boolean = false;\n\n  /**\n   * Id of the circle toggle.\n   *\n   * If not set, the circle toggle gets an incremented value by default.\n   */\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string = null;\n\n  /** Name that is used for accessibility. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * An event that is emitted when the checked state fo the circle toggle changes.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>();\n\n  /**\n   * An event that is emitted when the checked state of the circle toggle changes.\n   * The event object contains the circle toggle itself and its value (see ToggleChangeEvent).\n   */\n  @Output()\n  selectionChange = new EventEmitter<ToggleChangeEvent>();\n\n  _checked: boolean = false;\n  /** Whether the circle toggle is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.checked !== newValue) {\n      this._checked = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _value: string = null;\n\n  /** The value that is used in the model. */\n  @Input()\n  set value(newValue: string) {\n    this._value = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): string {\n    return this._value;\n  }\n\n  private _iconName: string = null;\n  /** Id of the icon that should be displayed. */\n  @Input('icon')\n  set iconName(name: string) {\n    this._iconName = name;\n    this._changeDetectorRef.markForCheck();\n  }\n  get iconName(): string {\n    return this._iconName;\n  }\n\n  private _svg: string = null;\n\n  /** SVG that is displayed if the circle toggle is unchecked. */\n  @Input()\n  set svg(src: string) {\n    this._svg = src;\n    this._changeDetectorRef.markForCheck();\n  }\n  get svg(): string {\n    return this._svg;\n  }\n\n  private _svgChecked: string = null;\n\n  /** SVG that is displayed if the circle toggle is checked. */\n  @Input()\n  set svgChecked(src: string) {\n    this._svgChecked = src;\n    this._changeDetectorRef.markForCheck();\n  }\n  get svgChecked(): string {\n    return this._svgChecked;\n  }\n\n  private _label: string = null;\n\n  /** Label displayed below the circle. */\n  @Input()\n  set label(value: string) {\n    this._label = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get label(): string {\n    return this._label;\n  }\n\n  private _hint: string = null;\n\n  /** Additional hint displayed below the label. */\n  @Input()\n  set hint(value: string) {\n    this._hint = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get hint(): string {\n    return this._hint;\n  }\n\n  private _negative;\n\n  /** Whether the circle toggle uses the negative set of styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.negative !== newValue) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  private _responsive;\n\n  /** Whether the circle toggle has a responsive behavior. */\n  @Input()\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.responsive !== newValue) {\n      this._responsive = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get responsive() {\n    return this._responsive;\n  }\n\n  private _disabled: boolean;\n\n  /** Whether the circle toggle is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.disabled !== newValue) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /** @docs-private */\n  @ViewChild(NxMobileToggleButtonComponent)\n  toggleButton: NxMobileToggleButtonComponent;\n\n  private _hover: boolean = false;\n\n  /** touched is set to true on touch devices. */\n  _touched: boolean = false;\n\n  /** @docs-private */\n  @HostListener('mouseenter') onMouseEnter() {\n    if (!this._touched) {\n      this._hover = true;\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('mouseleave') onMouseLeave() {\n    if (!this._touched) {\n      this._hover = false;\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('touchstart') onTouchStart() {\n    this._touched = true;\n  }\n\n  _removeUniqueSelectionListener: () => void = () => { };\n\n  private onChangeCallback = (checked: boolean) => { };\n  private onTouchedCallback = () => { };\n\n  constructor(/** @docs-private */ @Optional() public toggleGroup: NxCircleToggleGroupComponent,\n    private _checkedDispatcher: UniqueSelectionDispatcher, private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n\n    if (this.toggleGroup) {\n      this.name = this.toggleGroup.name;\n    }\n  }\n\n  ngOnInit() {\n    if (this.toggleGroup) {\n      this.attachListenerForGroup();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.toggleGroup) {\n      Promise.resolve().then(() => {\n        this.inGroup = true;\n        this.negative = this.toggleGroup.negative;\n        this.disabled = this.toggleGroup.disabled;\n        this.responsive = this.toggleGroup.responsive;\n        this.id = this.toggleGroup.id + `-button-${nextId++}`;\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    // function returned by the listener\n    this._removeUniqueSelectionListener();\n  }\n\n  /** @docs-private */\n  attachListenerForGroup() {\n    this._removeUniqueSelectionListener =\n      this._checkedDispatcher.listen((groupId: string, buttonId: string) => {\n        if (this.id !== buttonId && groupId === this.toggleGroup.id) {\n          this.checked = false;\n        }\n      });\n  }\n\n  writeValue(newValue): void {\n    this.checked = newValue;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  toggle(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if ((this.toggleGroup && this.checked) || this.disabled) {\n      return;\n    } else {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this.checkedChange.emit(this.checked);\n      this.selectionChange.emit(new ToggleChangeEvent(this, this.value));\n      if (this.toggleGroup) {\n        this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n      }\n    }\n  }\n\n  /**\n   * @docs-private\n   *\n   * method called by the group if the internal value of the group is changed programatically,\n   * does not trigger change emission\n   */\n  setGroupSelection() {\n    // propagate changes only if the value in the group is different than the button checked value\n    if (!this.checked) {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n    }\n  }\n\n  /** @docs-private */\n  get svgButton(): boolean {\n    return !!this.svg && !!this.svgChecked;\n  }\n\n  /** @docs-private */\n  get svgUrl(): string {\n    let useFilledSvg = this.checked || (!this.disabled && this._hover);\n    if (this.negative) {\n      useFilledSvg = !useFilledSvg;\n    }\n    return useFilledSvg ? this.svgChecked : this.svg;\n  }\n\n  /** @docs-private */\n  get type() {\n    return this.toggleGroup ? 'radio' : 'checkbox';\n  }\n\n  /** @docs-private */\n  handleEnterKey(event) {\n    if (!this.toggleGroup) {\n      this.toggle(event);\n    }\n  }\n}\n","\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-icon-toggle-button',\n  templateUrl: 'icon-toggle-button.component.html',\n  styleUrls: ['icon-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-circle-button]': 'true',\n    '[class.is-flipped]': 'checked',\n    '[class.has-checkmark]': '!inGroup',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-negative]': 'negative',\n    '[class.is-touched]': 'touched'\n  }\n})\nexport class NxIconToggleButtonComponent {\n\n  @Input()\n  inGroup: boolean = true;\n\n  @Input()\n  hint: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  checked: boolean;\n\n  @Input()\n  icon: string;\n\n  @Input('svg')\n  svgUrl: string;\n\n  @Input()\n  disabled: boolean;\n\n  @Input()\n  negative: boolean;\n\n  @Input()\n  touched: boolean;\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { NxCircleToggleGroupComponent } from './circle-toggle-group/circle-toggle-group.component';\nimport { NxCircleToggleComponent } from './circle-toggle/circle-toggle.component';\nimport { NxIconToggleButtonComponent } from './icon-toggle-button/icon-toggle-button.component';\nimport { NxMobileToggleButtonComponent } from './mobile-toggle-button/mobile-toggle-button.component';\n\n@NgModule({\n  declarations: [\n    NxCircleToggleGroupComponent,\n    NxCircleToggleComponent,\n    NxIconToggleButtonComponent,\n    NxMobileToggleButtonComponent\n  ],\n  exports: [\n    NxCircleToggleGroupComponent,\n    NxIconToggleButtonComponent,\n    NxCircleToggleComponent,\n    NxMobileToggleButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule\n  ]\n})\nexport class NxCircleToggleModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nconst DEFAULT_TYPE = 'normal';\n\n/** Size of the list */\nexport type NxListSize = 'xsmall' | 'small' | 'normal';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ul[nxList], ol[nxList]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['list.component.scss'],\n  host: {\n    '[class.nx-list--xsmall]' : 'type === \"xsmall\"',\n    '[class.nx-list--small]' : 'type === \"small\"',\n    '[class.nx-list--normal]' : 'type === \"normal\"',\n    '[class.nx-list--negative]' : 'negative',\n    '[class.nx-list--ordered-circle]' : 'orderedCircle',\n  }\n})\n\nexport class NxListComponent {\n  private _classNames;\n\n  /** @docs-private */\n  type: NxListSize;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /** @docs-private */\n  orderedCircle: boolean = false;\n\n  /**\n   * Sets the visual appearance of the list. You can combine different values:\n   *\n   * xsmall | small | normal: The listed input values are expanded to the underlying BEM conform styles based\n   * on modifiers. Defaults to normal.\n   *\n   * negative: Display the list with a negative set of styling.\n   *\n   * ordered-circle: Display the list item numbers in a color filled circle.\n   */\n  @Input('nxList')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n\n    const [type = null] = this._classNames.match(/xsmall|small|normal/) || [DEFAULT_TYPE];\n    this.type = type as any;\n\n    this.negative = !!this._classNames.match(/negative/);\n    this.orderedCircle = !!this._classNames.match(/ordered-circle/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n}\n","import { Component, Input, ViewChild, ViewContainerRef } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'li[nxListIcon]',\n  template: `\n    <span class=\"nx-list__icon\">\n      <nx-icon [name]='name'></nx-icon>\n    </span>\n    <ng-content></ng-content>`\n})\n\nexport class NxListIconComponent {\n  /** @docs-private */\n  @ViewChild('viewRefPrefix', {read: ViewContainerRef}) viewRefPrefix: ViewContainerRef;\n\n  /** Sets the name of the icon to be displayed. */\n  @Input('nxListIcon') name: string;\n}\n","import { NgModule } from '@angular/core';\nimport { NxListComponent } from './list.component';\nimport { NxListIconComponent } from './list-icon.component';\nimport { NxIconModule, NxIconComponent } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxListComponent, NxListIconComponent ],\n  imports: [ NxIconModule ],\n  exports: [ NxListComponent, NxListIconComponent ],\n  bootstrap: [NxIconComponent]\n})\nexport class NxListModule {\n}\n","import {ElementRef, Input, Renderer2, ViewChild} from '@angular/core';\nimport { removeClasses } from '@allianz/ngx-ndbx/utils';\n\nlet nextId = 0;\n\n/** @docs-private */\nexport class NxRadioToggleButtonBaseComponent {\n  /** @docs-private */\n  toggleButtonId: string = 'nx-radio-toggle-button-' + nextId++;\n\n  /** @docs-private */\n  @Input('nxValue')\n  value: any;\n\n  /** @docs-private */\n  @ViewChild('toggleButtonLabelContainer')\n  labelContainer: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('toggleInput')\n  toggleInput: ElementRef;\n\n  constructor(protected renderer: Renderer2) {\n  }\n\n  /** @docs-private */\n  triggerInputClick(event) {\n    event.stopPropagation();\n    this.toggleInput.nativeElement.click();\n  }\n\n  /** @docs-private */\n  setFirstButton() {\n    this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--first');\n  }\n\n  /** @docs-private */\n  setLastButton() {\n    this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--last');\n  }\n\n  /** @docs-private */\n  resetClasses() {\n    removeClasses(this.renderer, this.labelContainer, 'nx-radio-toggle__label-container--first nx-radio-toggle__label-container--last');\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, merge } from 'rxjs';\nimport { filter, startWith, takeUntil, tap } from 'rxjs/operators';\n\nimport { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';\nimport { NxRadioToggleButtonChange, NxRadioToggleButtonComponent } from './radio-toggle-button.component';\n\nlet nextId = 0;\n\nconst MAPPING = {\n  'negative': 'nx-radio-toggle--negative',\n  'small': 'nx-radio-toggle--small',\n};\n\n@Component({\n  selector: 'nx-radio-toggle',\n  templateUrl: 'radio-toggle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['radio-toggle.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRadioToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class NxRadioToggleComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, AfterContentInit {\n\n  private _toggleId: string = (nextId++).toString();\n\n  private _selection: any;\n\n  private _destroyed: Subject<void> = new Subject();\n\n  private _disabled: boolean = false;\n\n  // emits to signal children to run change detection\n  _disableChange = new Subject<void>();\n\n  /** Sets the component to the disabled state.*/\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    const coerced = coerceBooleanProperty(value);\n    if (this._disabled !== coerced) {\n      this._disabled = coerced;\n      this._disableChange.next();\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @ViewChild('toggleContainer')\n  private toggleContainer: ElementRef;\n\n  private _name: string;\n\n  /** Sets the name used for accessibility. */\n  @Input('nxName')\n  set name(value: string) {\n    if (this._name !== value) {\n      this._name = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  /** @docs-private */\n  @ContentChildren(NxRadioToggleButtonBaseComponent)\n  toggleButtons: QueryList<NxRadioToggleButtonBaseComponent> = new QueryList();\n\n  private onTouchedCallback = () => { };\n\n  private onChangeCallback = (option: any) => { };\n\n  constructor(private renderer: Renderer2, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    this.subscribeToToggleButtonsChange();\n  }\n\n  ngAfterContentInit() {\n    const changedOrDestroyed = merge(this.toggleButtons.changes, this._destroyed);\n\n    merge(...this.toggleButtons.map((button: any) => button.onChecked))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe((change: NxRadioToggleButtonChange) => {\n        this._selection = change.value;\n        this.onChangeCallback(this._selection);\n      });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._disableChange.complete();\n  }\n\n  /** @docs-private */\n  subscribeToToggleButtonsChange(): void {\n    this.toggleButtons.changes\n      .pipe(\n        startWith(this.toggleButtons),\n        filter(toggles => toggles.length > 0),\n        takeUntil(this._destroyed)\n      ).subscribe((toggles) => {\n        toggles.forEach(toggle => {\n          toggle.resetClasses();\n          if (toggle.value === this.selection) {\n            // We need to defer the selection for the edge case that the button with the value of this.selection\n            // didn't exist yet but was added afterwards to prevent changed after checked errors\n            setTimeout(() => toggle.select());\n          }\n        });\n        toggles.first.setFirstButton();\n        toggles.last.setLastButton();\n      });\n  }\n\n  registerOnChange(onChangeCallback: any): void {\n    this.onChangeCallback = onChangeCallback;\n  }\n\n  registerOnTouched(onTouchedCallback: any): void {\n    this.onTouchedCallback = onTouchedCallback;\n  }\n\n  /** Preselects the respective options. */\n  @Input('nxSelection')\n  writeValue(value: string): void {\n    this._selection = value;\n    const correspondingButton =\n      this.toggleButtons.find((button: NxRadioToggleButtonComponent) => button.value === this._selection);\n    if (correspondingButton) {\n      (correspondingButton as NxRadioToggleButtonComponent).select();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  get id(): string {\n    return `nx-radio-toggle-${this._toggleId}`;\n  }\n\n  /** Sets the modifiers for the component. */\n  @Input('nxStyle')\n  set style(value: string) {\n    const modifierClasses = mapClassNames(value, [], MAPPING);\n    modifierClasses.split(' ')\n      .forEach(className => this.renderer.addClass(this.toggleContainer.nativeElement, className));\n  }\n\n  /** @docs-private */\n  set selection(selection: any) {\n    this._selection = selection;\n    this.onChangeCallback(selection);\n  }\n\n  get selection(): any {\n    return this._selection;\n  }\n}\n","import { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, Inject, Input, Renderer2,\n   OnDestroy, HostListener } from '@angular/core';\n\nimport { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';\nimport { NxRadioToggleComponent } from './radio-toggle.component';\n\n/** @docs-private */\nexport class NxRadioToggleButtonChange {\n  constructor(\n    public source: NxRadioToggleButtonComponent,\n    public value: any\n  ) {}\n}\n\n@Component({\n  selector: 'nx-radio-toggle-button',\n  styleUrls: ['radio-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'radio-toggle-button.component.html',\n  providers: [\n    {\n      provide: NxRadioToggleButtonBaseComponent, useExisting: forwardRef(() => NxRadioToggleButtonComponent)\n    }\n  ]\n})\nexport class NxRadioToggleButtonComponent extends NxRadioToggleButtonBaseComponent implements OnDestroy {\n\n  /** @docs-private */\n  // emits when the button is checked to notify the group\n  readonly onChecked = new Subject<NxRadioToggleButtonChange>();\n\n  private _destroyed: Subject<void> = new Subject();\n\n  private _disabled: boolean = false;\n  private _selected: boolean = false;\n\n  /** @docs-private */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled || (this.radioToggle && this.radioToggle.disabled);\n  }\n\n  /** Sets the checked state and notify siblings and the parent group about the change */\n  // Only use this if you want the onChecked event to be fired, this will inform the parent about the change!\n  // To select a button without firing the event use the select() function\n  @Input('nxSelected')\n  set selected(value: boolean) {\n    if (this._selected !== value) {\n      this._selected = value;\n      if (this._selected) {\n        this._notifySiblings();\n        this._emitCheckedEvent();\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => { };\n\n  constructor(\n    @Inject(forwardRef(() => NxRadioToggleComponent)) private radioToggle: NxRadioToggleComponent,\n    renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _toggleDispatcher: UniqueSelectionDispatcher) {\n    super(renderer);\n\n    this._removeUniqueSelectionListener = this._toggleDispatcher.listen((id: string, radioToggleId: string) => {\n      if (this.radioToggle && this.radioToggle.id === radioToggleId && this.id !== id) {\n        this._selected = false;\n        // need to let change detector know in case that the select() function was called on another button\n        this._changeDetectorRef.markForCheck();\n      }\n    });\n\n    this.radioToggle._disableChange.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._removeUniqueSelectionListener();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** @docs-private */\n  get toggleId(): string {\n    return this.radioToggle.id;\n  }\n\n  /** @docs-private */\n  get id(): string {\n    return this.toggleButtonId;\n  }\n\n  private _notifySiblings() {\n    const toggleId = this.radioToggle ? this.radioToggle.id : this.id;\n    this._toggleDispatcher.notify(this.id, toggleId);\n  }\n\n  private _emitCheckedEvent() {\n    this.onChecked.next(new NxRadioToggleButtonChange(this, this.value));\n  }\n\n  // Does NOT emit the onChecked event. Useful when you need to set initial\n  // state. Used by the parent to set checked states on initialization and during\n  // writeValue() changes.\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._notifySiblings();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  @HostListener('keyup.space')\n  onKeyupSpace(): void {\n    this._selected = false;\n    this._notifySiblings();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxRadioToggleComponent } from './radio-toggle.component';\nimport { FormsModule } from '@angular/forms';\nimport { NxRadioToggleButtonComponent } from './radio-toggle-button.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxRadioToggleComponent, NxRadioToggleButtonComponent ],\n  exports: [ NxRadioToggleComponent, NxRadioToggleButtonComponent ],\n  imports: [ CommonModule, FormsModule, NxIconModule ]\n})\nexport class NxRadioToggleModule { }\n","import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, Renderer2, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nlet nextId = 0;\n\n/**\n  * @deprecated Use `nx-circle-toggle` instead\n  * @deletion-target 8.0.0\n  */\n@Component({\n  selector: 'nx-checkbox-circle',\n  templateUrl: 'checkbox-circle.component.html',\n  styleUrls: ['checkbox-circle.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCheckboxCircleComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.is-checked]': 'checked'\n  }\n})\nexport class NxCheckboxCircleComponent implements ControlValueAccessor {\n\n  private _id: string = (nextId++).toString();\n\n  /**\n   * Id of the checkbox.\n   * If not set, the checkbox gets an incremented value by default.\n   */\n  @Input()\n  public set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n    }\n  }\n  public get id() {\n    return `nx-checkbox-circle-${this._id}`;\n  }\n\n  /** The name of the Checkbox Circle. */\n  @Input()\n  name: string;\n\n  /** An event emitted when the checked value has changed. */\n  @Output()\n  checkedChange = new EventEmitter<boolean>(false);\n\n  /** Whether the checkbox circle is checked. */\n  @Input()\n  checked: boolean;\n\n  /** The name of the icon that is displayed. If not added, no icon will be displayed. */\n  @Input('nxIcon')\n  iconName: string;\n\n  /** If set, the passed SVG will be displayed in the not-checked state. */\n  @Input('nxSvg')\n  svg: string;\n\n  /** If set, the passed SVG will be displayed in the checked state. */\n  @Input('nxSvgChecked')\n  svgChecked: string;\n\n  /** Label to be displayed under circle. */\n  @Input('nxLabel')\n  label: string;\n\n  private onChangeCallback = (checked: boolean) => { };\n\n  private onTouchedCallback = () => { };\n\n  constructor() {\n    console.warn('`nx-checkbox-circle` is deprecated. Use `nx-circle-toggle` instead.');\n  }\n\n  writeValue(value: boolean): void {\n    this.checked = value;\n    this.checkedChange.emit(value);\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n  }\n\n  /** @docs-private */\n  toggle() {\n    this.writeValue(!this.checked);\n    this.onChangeCallback(this.checked);\n  }\n\n  /** @docs-private */\n  get svgButton(): boolean {\n    return !!this.svg && !!this.svgChecked;\n  }\n\n  /** @docs-private */\n  get svgUrl(): string {\n    return this.checked ? this.svgChecked : this.svg;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NxCheckboxCircleComponent} from './checkbox-circle.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxCheckboxCircleComponent ],\n  exports: [ NxCheckboxCircleComponent ],\n  imports: [\n    NxIconModule,\n    CommonModule\n  ]\n})\nexport class NxCheckboxCircleModule { }\n","import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n\n/** Options for sizing of the spinner. */\nexport type SpinnerSize = 'small' | 'medium' | 'large';\n\nconst DEFAULT_SIZE = 'small';\n\n@Component({\n  selector: 'nx-spinner',\n  templateUrl: './spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./spinner.component.scss'],\n  host: {\n    '[class.nx-spinner--small]': 'size === \"small\"',\n    '[class.nx-spinner--medium]': 'size === \"medium\"',\n    '[class.nx-spinner--large]': 'size === \"large\"',\n    '[class.nx-spinner--negative]': 'negative',\n    '[attr.role]': '\"status\"',\n    '[attr.aria-busy]': '\"true\"',\n    '[attr.aria-live]': '\"assertive\"',\n  }\n})\nexport class NxSpinnerComponent {\n  private _size: SpinnerSize = DEFAULT_SIZE;\n\n  /** Sets the size of the spinner. Default is 'small'. */\n  @Input('nxSize')\n  set size(value: SpinnerSize) {\n    if (value !== this._size) {\n      this._size = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get size(): SpinnerSize {\n    return this._size;\n  }\n\n  private _negative: boolean = false;\n\n  /** Whether the spinner should use a negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule  } from '@angular/core';\n\nimport { NxSpinnerComponent } from './spinner.component';\n\n\n@NgModule({\n  declarations: [\n    NxSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NxSpinnerComponent\n  ],\n  bootstrap: [],\n  providers: []\n})\nexport class NxSpinnerModule { }\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** @docs-private */\n@Injectable()\nexport class NxModalService {\n\n  private subject = new Subject();\n  close$: Observable<any> = this.subject.asObservable();\n\n  close() {\n    this.subject.next();\n  }\n}\n","import { animate, animation, AnimationReferenceMetadata, style } from '@angular/animations';\n\nexport const fadeIn: AnimationReferenceMetadata = animation([\n    style({opacity: 0}),\n    animate('300ms', style({opacity: 1}))\n  ]);\n\nexport const fadeOut: AnimationReferenceMetadata = animation(\n  animate('300ms', style({opacity: 0}))\n);\n\nexport const scaleUp: AnimationReferenceMetadata = animation([\n    style({transform: 'scale(1)', opacity: 1}),\n    animate('250ms', style({transform: 'scale(1.3)', opacity: 0}))\n  ]);\n\nexport const scaleDown: AnimationReferenceMetadata = animation([\n    style({transform: 'scale(1.3)', opacity: 0}),\n    animate('250ms', style({transform: 'scale(1)', opacity: 1}))\n  ]);\n","import { OnDestroy, ChangeDetectionStrategy, Directive, ChangeDetectorRef } from '@angular/core';\nimport { Component, Input, OnInit, TemplateRef, Output, EventEmitter } from '@angular/core';\nimport { NxModalService } from './modal.service';\nimport { EventManager } from '@angular/platform-browser';\nimport { fadeIn, fadeOut, scaleDown, scaleUp } from './animations';\nimport { animateChild, query, transition, trigger, useAnimation } from '@angular/animations';\nimport { Subscription } from 'rxjs';\n\n/** Container for the action buttons in a modal. Has a fixed position at the bottom of the modal on scroll. */\n@Directive({\n  selector: '[nxModalActions]',\n  host: {\n    '[class.nx-modal__actions]': 'true'\n  }\n})\nexport class NxModalActionsDirective {}\n\n/** Scrollable container for the content of a modal. */\n@Directive({\n  selector: '[nxModalContent]',\n  host: {\n    '[class.nx-modal__content]': 'true'\n  }\n})\nexport class NxModalContentDirective {}\n\n@Component({\n  selector: 'nx-modal',\n  templateUrl: 'modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './modal.component.scss' ],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        useAnimation(fadeIn),\n        query('@scaleUpDown', [\n          animateChild()\n        ])\n      ]),\n      transition(':leave', [\n        query('@scaleUpDown', [\n          animateChild()\n        ]),\n        useAnimation(fadeOut)\n      ])\n    ]),\n    trigger('scaleUpDown', [\n      transition(':enter', useAnimation(scaleDown)),\n      transition(':leave', useAnimation(scaleUp))\n    ])\n  ],\n  host: {\n    '[@fadeInOut]': '',\n    '[class.nx-modal--fixed-width]': 'size === \"fixed\"'\n  }\n})\n\nexport class NxModalComponent implements OnInit, OnDestroy {\n\n\n  private _closeButtonLabel: string = 'Close dialog';\n\n  /** Sets the 'aria-label' of the modal close button needed for accessibility.\n   *\n   * Default value is 'Close dialog'.\n   */\n  @Input()\n  set closeButtonLabel(value: string) {\n    if (value !== this._closeButtonLabel) {\n      this._closeButtonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closeButtonLabel(): string {\n    return this._closeButtonLabel;\n  }\n\n  /**\n   * A template reference variable pointing to the template\n   * which contains the content of the modal view.\n   */\n  @Input('nxBody') body: TemplateRef<any>;\n\n  /**\n   * Whether the modal view should close when the user hits the escape key.\n   * Default is true.\n   */\n  @Input('nxHideOnEsc') hideOnEsc: boolean = true;\n\n  /**\n   * Whether the modal view should close when the user clicks on the backdrop.\n   * Default is true.\n   */\n  @Input('nxHideOnClickOutside') hideOnClickOutside: boolean = true;\n\n  /**\n   * Whether the modal view should have a close icon in the upper right corner.\n   * Default is true.\n   */\n  @Input('nxShowCloseIcon') showCloseIcon: boolean = true;\n\n  /**\n   * Controls the width of the dialog.\n   * On `auto` the width is controlled by the content width,\n   * on `fixed` the dialog gets a fixed width of 736px if the viewport is big enough. */\n  @Input('nxSize') size: 'fixed' | 'auto';\n\n  /**\n   * An event emitted when the user clicks on the backdrop or uses the built-in close button.\n   * This event can be applied in conjunction with the custom open state handling\n   * of a modal to close it when requested by the user.\n   */\n  @Output('nxClose') closeEvent = new EventEmitter<void>();\n\n  private closeSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private modalService: NxModalService, private eventManager: EventManager, private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.closeSubscription = this.modalService.close$.subscribe(() => this.closeEvent.emit());\n\n    this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {\n      if (this.hideOnEsc) {\n        this.modalService.close();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.closeSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  clickOutsideModal() {\n    if (this.hideOnClickOutside) {\n      this.modalService.close();\n    }\n  }\n\n  /** @docs-private */\n  closeButtonClick() {\n    this.modalService.close();\n  }\n\n  /** @docs-private */\n  cancelClick(evt: KeyboardEvent) {\n    evt.stopPropagation();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\n\nimport { NxModalService } from './modal.service';\n\n\n@Directive({selector: '[nxOpenModalOnClick]'})\nexport class NxOpenModalOnClickDirective implements OnInit, OnDestroy {\n\n  /** @docs-private */\n  elements: Array<any>;\n\n  private subscription: ISubscription;\n\n  constructor(private templateRef: TemplateRef<any>,\n              private viewContainer: ViewContainerRef,\n              private modalService: NxModalService) {\n  }\n\n  ngOnInit() {\n    this.subscription = this.modalService.close$.subscribe(() => this.viewContainer.clear());\n  }\n\n  ngOnDestroy() {\n    this.elements.forEach(el => {\n      if (el.removeEventListener) {\n        el.removeEventListener('click', this.clickHandler);\n      }\n    });\n\n    this.subscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  clickHandler = (event: any) => {\n    this.viewContainer.clear();\n    // instantiate the template onto which this directive is applied\n    const viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n    // we need to mark the viewRef explicitly if the modal is used inside another\n    // component that is using onPush change detection\n    viewRef.markForCheck();\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * One or multiple template reference variables pointing to elements\n   * which should trigger opening the modal on click.\n   *\n   * Value: A single template reference variable or an array of template reference variables.\n   */\n  @Input()\n  set nxOpenModalOnClick(elements) {\n    // also support the case where only one element is passed, check for the length property to be sure elements is an array\n    if (elements.length) {\n      this.elements = elements;\n    } else {\n      this.elements = [ elements ];\n    }\n    // add a click event listener to any element passed as property to this directive\n    this.elements.forEach(el => {\n      if (el.addEventListener) {\n        el.addEventListener('click', this.clickHandler);\n      // workaround until refactoring: if the reference is a component\n      // reference the component has to implement a getter to its own elementRef\n      } else if (el.elementRef) {\n        el.elementRef.nativeElement.addEventListener('click', this.clickHandler);\n      } else {\n        console.warn(`nxOpenModalOnClick: Given Element doesn't appear to be an ElementRef.`, el);\n      }\n    });\n  }\n\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {NxModalComponent, NxModalActionsDirective, NxModalContentDirective} from './modal.component';\nimport { CommonModule } from '@angular/common';\nimport { NxOpenModalOnClickDirective } from './modal-open-on-click.directive';\nimport { NxModalService } from './modal.service';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n@NgModule({\n  imports: [ CommonModule, A11yModule, NxIconModule ],\n  declarations: [\n    NxModalComponent,\n    NxOpenModalOnClickDirective,\n    NxModalActionsDirective,\n    NxModalContentDirective\n  ],\n  exports: [\n    NxModalComponent,\n    NxOpenModalOnClickDirective,\n    NxModalActionsDirective,\n    NxModalContentDirective\n  ],\n})\n\nexport class NxModalModule {\n  // define the modal service on root level as an application wide singleton,\n  // assuming that we only display one modal at a time, which seems quite reasonable\n  // this is static and named \"forRoot\" by convention\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NxModalModule,\n      providers: [NxModalService]\n    };\n  }\n}\n","import { Component, EventEmitter, forwardRef, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nlet nextId = 0;\n/** Options for placement of the label */\nexport type POSITION = 'left' | 'right';\n/** Options for sizing of the label */\nexport type LABEL_SIZE = 'small' | 'large';\n\n@Component({\n  selector: 'nx-switcher',\n  templateUrl: 'switcher.component.html',\n  styleUrls: ['./switcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxSwitcherComponent),\n      multi: true\n    }\n  ],\n  host: {\n    /* the host id should be set to null, otherwise nx-switcher and its <input> get the same id\n    and on label click the input click is not triggered (double id problem) */\n    '[attr.id]': 'null',\n    '[class.is-negative]': 'negative',\n    '[class.is-checked]': 'checked',\n    '[class.is-big]': 'big',\n    '[class.nx-switcher--small-label]': 'labelSize === \"small\"',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-swapped]': 'labelPosition === \"left\"'\n  }\n})\n\nexport class NxSwitcherComponent implements ControlValueAccessor {\n\n  private _id: string = `nx-switcher-${nextId++}`;\n  /** Sets the id of the switcher */\n  @Input()\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  private _labelPosition: POSITION = 'right';\n  /** Specifies the placement of the label */\n  @Input()\n  set labelPosition(value: POSITION) {\n    this._labelPosition = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get labelPosition(): POSITION {\n    return this._labelPosition;\n  }\n\n  private _name: string = null;\n  /** Sets the label text of the switcher */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  private _checked: boolean = false;\n  /** Whether the switcher is checked (on) or unchecked (off) */\n  @Input()\n  set checked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _big: boolean = false;\n  /** Whether the big switcher is used */\n  @Input('nxBig')\n  set big(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._big = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get big(): boolean {\n    return this._big;\n  }\n\n  private _labelSize: LABEL_SIZE = 'large';\n  /** Sets the size of the label */\n  @Input()\n  set labelSize(value: LABEL_SIZE) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get labelSize(): LABEL_SIZE {\n    return this._labelSize;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the style for a dark background is used */\n  @Input('nxNegative')\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._negative = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _disabled: boolean = false;\n  /** Whether the switcher is in the disabled state */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._disabled = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** An event is dispatched each time the switcher value is changed */\n  @Output('checkedChange') checkedChange = new EventEmitter<boolean>();\n\n  private onChangeCallback = (_: any) => {};\n  private onTouchedCallback = () => {};\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** Allows to toggle between the states */\n  toggle() {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this.checkedChange.emit(this.checked);\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxSwitcherComponent } from './switcher.component';\nimport { CommonModule } from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxSwitcherComponent ],\n  exports: [ NxSwitcherComponent ],\n  imports: [ CommonModule, NxIconModule ]\n})\nexport class NxSwitcherModule {}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ConnectedPosition,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { NxPopoverComponent } from './popover.component';\n\nexport declare type PopoverDirection = 'left' | 'top' | 'right' | 'bottom';\nexport declare type PopoverTriggerType = 'click' | 'hover' | 'manual';\nexport declare type PopoverTriggerScrollStrategy = 'close' | 'reposition';\nlet nextId = 0;\n\nconst fallbacks: ConnectionPositionPair[] = [\n  {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  },\n  {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center',\n    offsetX: 16,\n    offsetY: 0\n  },\n  {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center',\n    offsetX: -16,\n    offsetY: 0\n  },\n  {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  },\n  {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  }\n];\n\n@Directive({\n  selector: '[nxPopoverTriggerFor]',\n  exportAs: 'nxPopoverTrigger',\n  host: {\n    '(click)': 'handleClick()',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'isOpen',\n    '[attr.aria-describedby]': 'isOpen ? id : null'\n  }\n})\nexport class NxPopoverTriggerDirective implements AfterViewInit, OnDestroy, OnInit {\n  private overlayRef: OverlayRef;\n  private portal: TemplatePortal<any>;\n  private _destroyed = new Subject<void>();\n  private _show: boolean = false;\n  private _closeable: boolean = null;\n  private _positionStrategy: PositionStrategy;\n  private _embeddedViewRef: EmbeddedViewRef<any>;\n  private _documentClickObservable: Observable<MouseEvent>;\n\n  /** @docs-private */\n  id = 'nx-popover-' + nextId++;\n\n  /** An event is emitted if the visibility status of the popover changes. */\n  @Output('nxPopoverShowChange')\n  changeShow: EventEmitter<boolean> = new EventEmitter();\n\n  /** Whether to show or hide the popover. */\n  @Input('nxPopoverShow')\n  set show(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (this._show !== value) {\n      this._show = value;\n      if (this._show) {\n        this.openPopover();\n      } else {\n        this.closePopover();\n      }\n\n      this.changeShow.emit(this._show);\n    }\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  /** Whether to show a close button. By default a close icon is only shown for trigger type click. */\n  @Input('nxPopoverCloseable')\n  set closeable(value: boolean) {\n    this._closeable = coerceBooleanProperty(value);\n\n    if (this.popover) {\n      this.popover.showCloseButton = this.isCloseable();\n    }\n  }\n  get closeable(): boolean {\n    return this._closeable;\n  }\n\n  /** Links the trigger with the popover to open. */\n  @Input('nxPopoverTriggerFor')\n  popover: NxPopoverComponent;\n\n  /** Sets the desired direction to open the popover. E.g., right, left, bottom, top */\n  @Input('nxPopoverDirection')\n  direction: PopoverDirection = 'right';\n\n  /** Whether the popover will be opened automatically. */\n  @Input('nxPopoverInitialVisible')\n  popoverInitialVisible: boolean = false;\n\n  /** An event is emitted when the visibility of the popopver changes. */\n  @Input('nxPopoverVisibleChange')\n  visibleChange: EventEmitter<boolean> = new EventEmitter();\n\n  /** Whether the popover opens in modal state. */\n  @Input('nxPopoverModal')\n  modal: boolean = false;\n\n  // If nxPopoverTrigger equals to 'hover' the popover opens on mouseenter and closes on mouseout.\n  // If nxPopoverTrigger equals to 'click' the popover opens on click and closes on a click of the close icon or pressing ESC key.\n  // If nxPopoverTrigger equals to 'manual' the popover opens only when programatically requested.\n  /** Sets the way to trigger the popover. Options are hover, click, manual */\n  @Input('nxPopoverTrigger')\n  trigger: PopoverTriggerType = 'click';\n\n  /** Sets the scroll strategy. 'close' closes the popover on scroll while 'reposition' scrolls the popover with the origin. */\n  @Input('nxPopoverScrollStrategy')\n  scrollStrategy: PopoverTriggerScrollStrategy = 'close';\n\n\n\n  constructor(private overlay: Overlay,\n              private elementRef: ElementRef,\n              private viewContainerRef: ViewContainerRef,\n              private eventManager: EventManager) {\n    this._documentClickObservable = fromEvent<MouseEvent>(document, 'click');\n  }\n\n  /** @docs-private */\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    if (this.trigger === 'hover') {\n      this.openPopover();\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('mouseleave')\n  @HostListener('touchstart')\n  onMouseExit() {\n    if (this.trigger === 'hover') {\n      this.closePopover();\n    }\n  }\n\n  ngOnInit() {\n    this.popover.showCloseButton = this.isCloseable();\n  }\n\n  ngAfterViewInit(): void {\n    this.popover.id = this.id;\n\n    this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {\n      this.closePopover();\n    });\n\n    this.popover.closeButtonClick.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this.closePopover();\n    });\n\n    if (this.popoverInitialVisible || this._show) {\n      this.openPopover();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.closePopover();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** @docs-private */\n  get isOpen() {\n    return this.overlayRef && this.createOverlay().hasAttached();\n  }\n\n  /** @docs-private */\n  isCloseable() {\n    return (this.trigger === 'click' && this._closeable === null) || this._closeable;\n  }\n\n  /** Update the popover with the given position strategy. */\n  updatePosition() {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n\n  /** @docs-private */\n  handleClick() {\n    if (this.trigger === 'click') {\n      if (this.isOpen) {\n        this.closePopover();\n      } else {\n        this.openPopover();\n      }\n    }\n  }\n\n  /** Open the popover instance. */\n  open(): void {\n    this.show = true;\n  }\n\n  /** Close the popover instance. */\n  close(): void {\n    this.show = false;\n  }\n\n  /** Toggle the popover instance. */\n  toggle(): void {\n    this.show = !this.show;\n  }\n\n  private openPopover(): void {\n    if (!this.createOverlay().hasAttached()) {\n      this._embeddedViewRef = this.createOverlay().attach(this.portal);\n\n      if (!this.modal && this.trigger === 'click') {\n        this.waitForClose();\n      }\n    }\n  }\n\n  // detaches the overlay\n  // we are listening to the detachments observable which will then emit the nxClosed event\n  // on the popover component\n  private closePopover(): void {\n    if (this.overlayRef) {\n      this.overlayRef.detach();\n      this._embeddedViewRef = null;\n    }\n  }\n\n  private createOverlay(): OverlayRef {\n    if (!this.overlayRef) {\n      this.portal = new TemplatePortal(this.popover.templateRef, this.viewContainerRef);\n      const overlayState = new OverlayConfig();\n      overlayState.positionStrategy = this.getPosition();\n      this._positionStrategy = overlayState.positionStrategy;\n\n      if (this.scrollStrategy === 'reposition') {\n        overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n      } else {\n        overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n      }\n\n      overlayState.scrollStrategy.enable();\n\n      if (this.modal && this.trigger === 'click') {\n        overlayState.hasBackdrop = true;\n      }\n\n      this.overlayRef = this.overlay.create(overlayState);\n      this.subscribeToPositions(overlayState.positionStrategy as FlexibleConnectedPositionStrategy);\n      this._subscribeToDetach();\n      if (this.modal) {\n        this._subscribeToBackdropClick();\n      }\n    }\n    return this.overlayRef;\n  }\n\n  private subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n    position.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      const pair = change.connectionPair;\n      this.positionOverlay(pair);\n      this.positionArrow(pair);\n\n      // These position changes arrive too late,\n      // We have to trigger the change detection manually\n      // as it's detached from any render hierarchy\n      // and only updated by the overlay when attached.\n      if (this._embeddedViewRef && !this._embeddedViewRef.destroyed) {\n        this._embeddedViewRef.detectChanges();\n      }\n    });\n  }\n\n  // for modal popovers close the popover on backdrop clicks\n  private _subscribeToBackdropClick() {\n    this.overlayRef.backdropClick().pipe(takeUntil(this._destroyed)).subscribe((event) => {\n      this.closePopover();\n    });\n  }\n\n  // Emit the nxClosed event on the popover component when the overlay detaches\n  private _subscribeToDetach() {\n    this.overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this.popover.emitClosedEvent();\n    });\n  }\n\n  // subscribe to document clicks when trigger='click' to close the popover on clicks on the background\n  private waitForClose() {\n    return this._documentClickObservable\n      .pipe(\n        map(event => event.target),\n        filter(target => !this.elementRef.nativeElement.contains(target)),\n        takeUntil(this.popover.closed))\n      .subscribe(() => {\n        this.closePopover();\n      });\n  }\n\n  private positionOverlay(pair: ConnectionPositionPair) {\n    if (pair.originX === 'end' && pair.overlayX === 'start') {\n      this.popover.direction = 'right';\n    } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n      this.popover.direction = 'bottom';\n    } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n      this.popover.direction = 'left';\n    } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n      this.popover.direction = 'top';\n    }\n  }\n\n  private positionArrow(pair: ConnectionPositionPair) {\n\n    const parentElementPositionX = this.elementRef.nativeElement.getBoundingClientRect().left;\n    const parentElementWidth = this.elementRef.nativeElement.getBoundingClientRect().width / 2;\n    const parentElementLeftOffset = this.overlayRef.overlayElement.parentElement.offsetLeft;\n    const overlayElementLeftOffset = this.overlayRef.overlayElement.offsetLeft;\n\n    // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n    const targetPosition = (parentElementPositionX + parentElementWidth) - (parentElementLeftOffset + overlayElementLeftOffset);\n    if (pair.originX === pair.overlayX) {\n      const direction = 'left';\n      const arrowStyle = {};\n\n      arrowStyle[direction] = targetPosition + 'px';\n      this.popover.arrowStyle = arrowStyle;\n    }\n    if ((pair.originY === 'bottom' || pair.originY === 'top') && pair.overlayX === 'center') {\n      this.popover.arrowStyle = { left: targetPosition + 'px' };\n    }\n\n    if ((pair.originX === 'end' || pair.originX === 'start') && pair.overlayY === 'center') {\n      this.popover.arrowStyle = { top: '50%' };\n    }\n  }\n\n  private getPosition(): FlexibleConnectedPositionStrategy {\n    let positions: ConnectedPosition[];\n    let offsetX = 0;\n    let offsetY = 0;\n    if (this.direction === 'top') {\n      positions = [{\n        overlayX: 'center',\n        overlayY: 'bottom',\n        originX: 'center',\n        originY: 'top'\n      }];\n      offsetX = 0;\n      offsetY = -20;\n    } else if (this.direction === 'right') {\n      positions = [{\n        overlayX: 'start',\n        overlayY: 'center',\n        originX: 'end',\n        originY: 'center'\n      }];\n      offsetX = 20;\n      offsetY = 0;\n    } else if (this.direction === 'bottom') {\n      positions = [{\n        overlayX: 'center',\n        overlayY: 'top',\n        originX: 'center',\n        originY: 'bottom'\n      }];\n      offsetX = 0;\n      offsetY = 20;\n    } else if (this.direction === 'left') {\n      positions = [{\n        overlayX: 'end',\n        overlayY: 'center',\n        originX: 'start',\n        originY: 'center'\n      }];\n      offsetX = -20;\n      offsetY = 0;\n    }\n    return this.overlay.position().flexibleConnectedTo(this.elementRef)\n      .withPositions([...positions, ...fallbacks])\n      .withDefaultOffsetX(offsetX)\n      .withDefaultOffsetY(offsetY);\n  }\n}\n","import {Directive, TemplateRef} from '@angular/core';\n\n/**\n * Popover content that will be rendered lazily\n * after the popover is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[nxPopoverContent]'\n})\nexport class NxPopoverContentDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {NxPopoverContentDirective} from './popover-content';\n\n@Component({\n  selector: 'nx-popover',\n  templateUrl: './popover.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./popover.component.scss'],\n  exportAs: 'nxPopover',\n})\nexport class NxPopoverComponent implements OnDestroy {\n  /** @docs-private */\n  @ViewChild(TemplateRef)\n  templateRef: TemplateRef<any>;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(NxPopoverContentDirective) _lazyContent: NxPopoverContentDirective;\n\n  /** Event emitted when the popover is closed. */\n  @Output('nxClosed')\n  closed = new EventEmitter<void>();\n\n  /** @docs-private */\n  closeButtonClick = new Subject<void>();\n\n  /** @docs-private */\n  id: string;\n\n  /** @docs-private */\n  direction;\n\n  /** @docs-private */\n  showCloseButton: boolean = false;\n\n  /** @docs-private */\n  arrowStyle = {};\n\n  constructor() {\n  }\n\n  ngOnDestroy() {\n    this.closed.complete();\n  }\n\n  // emit to notify the popover trigger directive that the close button was clicked\n  /** @docs-private */\n  emitButtonClick() {\n    this.closeButtonClick.next();\n  }\n\n  /** @docs-private */\n  emitClosedEvent() {\n    this.closed.emit();\n  }\n\n  /** @docs-private */\n  get classList(): string[] {\n    if (this.direction) {\n      return [`nx-popover--${this.direction}`];\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxPopoverTriggerDirective} from './popover-trigger.directive';\nimport {NxPopoverComponent} from './popover.component';\nimport {NxPopoverContentDirective} from './popover-content';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NxIconModule} from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxPopoverTriggerDirective,\n    NxPopoverComponent,\n    NxPopoverContentDirective\n  ],\n  exports: [\n    NxPopoverTriggerDirective,\n    NxPopoverComponent,\n    NxPopoverContentDirective\n  ]\n})\nexport class NxPopoverModule {\n\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DELETE, BACKSPACE } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'nx-tag',\n  templateUrl: 'tag.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['tag.component.scss'],\n  host: {\n    '(click)': 'tagClickHandler()',\n    '(keydown)': 'removeKeyHandler($event)',\n    '[attr.tabIndex]': '0'\n  }\n})\nexport class NxTagComponent {\n  private _removable: boolean;\n\n  /** Whether the tag is removeable. */\n  @Input()\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get removable() {\n    return this._removable;\n  }\n\n  private _value: string;\n  /** Sets the value of the tag. */\n  @Input()\n  set value(value: string) {\n    if (this._value !== value) {\n      this._value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get value(): string {\n    return this._value;\n  }\n\n  /** An event is dispatched each time when the tag is clicked. */\n  @Output() readonly clicked: EventEmitter<any> = new EventEmitter<any>();\n  /** An event is dispatched each time when the tag is removed. */\n  @Output() readonly removed: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  // Emit the removed event that the parent can remove the value\n  removeClickHandler(event: MouseEvent) {\n    event.stopPropagation();\n    this.removed.emit(this.value);\n  }\n\n  /** @docs-private */\n  removeKeyHandler(event: KeyboardEvent) {\n    if (this.removable && (event.keyCode === DELETE || event.keyCode === BACKSPACE)) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.removed.emit(this.value);\n    }\n  }\n\n  /** @docs-private */\n  tagClickHandler() {\n    this.clicked.emit(this.value);\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, EventEmitter, forwardRef, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'nx-taglist',\n  templateUrl: 'taglist.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './taglist.component.scss' ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxTaglistComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-taglist--keyword]': 'isKeywordList',\n    '[attr.aria-labelledby]': 'labelledby || null'\n  }\n})\n\nexport class NxTaglistComponent implements ControlValueAccessor {\n\n  /** An event is dispatched each time when the list of tags changed. */\n  @Output('nxTagsChange') tagsChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  /** An event is dispatched each time when a tag is clicked. */\n  @Output('nxTagClick') tagClickEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  private _tags: Array<any> = [];\n  /** Sets the list of tags. */\n  @Input('nxTags')\n  set tags(value: Array<any>) {\n    this._tags = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get tags(): Array<any> {\n    return this._tags;\n  }\n\n  private _allowTagDeletion: boolean = true;\n  /** Whether the tags can be removed from the list. */\n  @Input('nxAllowTagDeletion')\n  set allowTagDeletion(value: boolean) {\n    this._allowTagDeletion = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get allowTagDeletion(): boolean {\n    return this._allowTagDeletion;\n  }\n\n  private _isKeywordList: boolean = false;\n  /** Whether the tags can be styled as keywords. */\n  @Input('nxIsKeywordList')\n  set isKeywordList(value: boolean) {\n    this._isKeywordList = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get isKeywordList(): boolean {\n    return this._isKeywordList;\n  }\n\n  private _labelProperty: string = 'nxTaglistLabel';\n    /** Sets the label property, in case tags represent objects. */\n  @Input('nxLabelProperty')\n  set labelProp(value: string) {\n    if (this._labelProperty !== value) {\n      this._labelProperty = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelProp(): string {\n    return this._labelProperty;\n  }\n\n  private _ariaLabelledBy: string;\n  /** Sets the label property to improve accessibility. */\n  @Input('aria-labelledby')\n  set labelledby(value: string) {\n    if (this._ariaLabelledBy !== value) {\n      this._ariaLabelledBy = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelledby(): string {\n    return this._ariaLabelledBy;\n  }\n\n  private _valueFormatterFn: (value: any) => string = (value) => value;\n  /** Sets the customization function for tag value.  */\n  @Input('nxValueFormatter')\n  set valueFormatter(fn: (value: any) => string) {\n    this._valueFormatterFn = fn;\n    this._changeDetectorRef.markForCheck();\n  }\n  get valueFormatter(): (value: any) => string {\n    return this._valueFormatterFn;\n  }\n\n  private _onChange: (value: any) => void = () => {};\n  private _onTouched: () => any = () => {};\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** Allows to delete a tag given index. Takes index of the tag to be deleted as a parameter */\n  delete(index: number, value: any) {\n    if (this.allowTagDeletion) {\n      this.tags = [\n        ...this.tags.slice(0, index),\n        ...this.tags.slice(index + 1)\n      ];\n      this._onChange(this.tags);\n      this.tagsChange.emit(this.tags);\n    }\n  }\n\n  /** Allows to add a tag. Takes tag object as an input */\n  addTag(tag: any) {\n    if (!tag) {\n      return;\n    }\n\n    // make sure tag is either string or has the configured label prop and is not yet in the list\n    if ((typeof tag === 'string' && this.tags.indexOf(tag) === -1) ||\n      (tag[ this.labelProp ] && this.tags.filter((t) => t[ this.labelProp ] === tag[ this.labelProp ]).length < 1)) {\n\n      this.tags = [ ...this.tags, tag ];\n      this._onChange(this.tags);\n      this.tagsChange.emit(this.tags);\n    }\n  }\n\n  /** Allows to clear the tag list. */\n  clearTags() {\n    this.tags = [];\n    this._onChange(this.tags);\n    this.tagsChange.emit(this.tags);\n  }\n\n  /** @docs-private */\n  writeValue(tags: any): void {\n    this.tags = tags;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** @docs-private */\n  renderTag(tag: any) {\n    const tagStr: string = typeof tag === 'string' ? tag : tag[ this.labelProp ];\n    return this.valueFormatter(tagStr);\n  }\n\n  /** @docs-private */\n  tagClick(index, value: any) {\n    this.tagClickEvent.emit(this.tags[index]);\n  }\n}\n","import { NxTagComponent } from './tag.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NgModule } from '@angular/core';\nimport { NxTaglistComponent } from './taglist.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ NxTaglistComponent, NxTagComponent ],\n  exports: [ NxTaglistComponent, NxTagComponent ],\n  imports: [ CommonModule, NxIconModule ]\n})\nexport class NxTaglistModule {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'img[nxImg]'\n})\nexport class NxImageDirective {\n  constructor() {\n    console.warn('Directive nxImg which was used together with nxFigure ' +\n    'is now deprecated and not required anymore. Please remove it from your ' +\n    'tag. Check the documentation for more details.');\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/** Types of figures. */\nexport type FigureType = 'auto' | '1by1' | '1dot8by1' | '1dot2by1' | '1by1dot1' | '2dot6by1' | 'rounded';\n/** @docs-private */\nexport type figureSizes = 'auto' | '1by1' | '1dot8by1' | '1dot2by1' | '1by1dot1' | '2dot6by1';\n\nconst DEFAULT_SIZE = 'auto';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'figure[nxFigure]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./figure.component.scss'],\n  host: {\n    '[class.nx-image--auto]': 'size === \"auto\" && !rounded',\n    '[class.nx-image--1by1]': 'size === \"1by1\"',\n    '[class.nx-image--1dot8by1]': 'size === \"1dot8by1\"',\n    '[class.nx-image--1dot2by1]': 'size === \"1dot2by1\"',\n    '[class.nx-image--1by1dot1]': 'size === \"1by1dot1\"',\n    '[class.nx-image--2dot6by1]': 'size === \"2dot6by1\"',\n    '[class.nx-image--rounded]': 'rounded'\n  }\n})\nexport class NxFigureComponent {\n  private _classNames: FigureType;\n\n  /** @docs-private */\n  rounded: boolean;\n\n  /** @docs-private */\n  size: figureSizes;\n\n  /**\n   * Sets the type of the visual appearance of the image.\n   * The default value  is 'auto'.\n   */\n  @Input('nxFigure')\n  set classNames(value: FigureType) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n    const sizeRegex = /^(auto|1by1|1dot8by1|1dot2by1|1by1dot1|2dot6by1)$/;\n    const [size = null] = this._classNames.match(sizeRegex) || [DEFAULT_SIZE];\n    this.size = size as any;\n\n    this.rounded = !!this._classNames.match(/rounded/);\n  }\n\n  get classNames(): FigureType {\n    return this._classNames;\n  }\n}\n","import { NxImageDirective } from './image.directive';\nimport { NgModule } from '@angular/core';\nimport { NxFigureComponent } from './figure.component';\n\n@NgModule({\n  declarations: [ NxFigureComponent, NxImageDirective ],\n  exports: [ NxFigureComponent, NxImageDirective ]\n})\nexport class NxImageModule {\n}\n","import {NxRadioCircleComponent} from './radio-circle.component';\nimport {ElementRef, Input, OnChanges, ViewChild} from '@angular/core';\n\nlet nextId = 0;\n\nexport abstract class NxRadioCircleButton implements OnChanges {\n\n  /** @docs-private */\n  id: number = ++nextId;\n\n  /** Sets the label displayed below the circle. */\n  @Input('nxLabel')\n  label: string;\n\n  /** Sets an additional hint displayed below the label. */\n  @Input('nxHint')\n  hint: string;\n\n  /** Sets the value used in the model. */\n  @Input('nxValue')\n  value: any;\n\n  /** @docs-private */\n  @ViewChild('labelElement')\n  labelElement: ElementRef;\n\n  constructor(\n    /** @docs-private */\n    protected radioCircle: NxRadioCircleComponent\n    ) {\n  }\n\n  ngOnChanges(): void {\n    if (!this.label) {\n      console.warn(`nx-radio-circle-icon-button/nx-radio-circle-svg-button: required field 'nxLabel' is not set`);\n    }\n  }\n\n  get checked(): boolean {\n    return this.radioCircle.selectedButton === this || null;\n  }\n\n  /** Whether the item is preselected. */\n  @Input('nxSelected')\n  set checked(checked: boolean) {\n    if (checked) {\n      this.radioCircle.selectedButton = this;\n    } else {\n      if (this.checked) {\n        this.radioCircle.selectedButton = null;\n      }\n    }\n  }\n\n  /** @docs-private */\n  get circleButtonId(): string {\n    return this.radioCircle.radioCircleId + '-' + this.id;\n  }\n\n  /** @docs-private */\n  get radioCircleId(): string {\n    return this.radioCircle.radioCircleId;\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input, OnInit,\n  Output,\n  QueryList,\n  Renderer2\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NxRadioCircleButton} from './radio-circle-button';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nlet nextId = 0;\n\n/**\n * @deprecated Use `nx-circle-toggle-group` instead\n * @deletion-target 8.0.0\n */\n@Component({\n  selector: 'nx-radio-circle',\n  templateUrl: './radio-circle.html',\n  styleUrls: ['./radio-circle-button.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRadioCircleComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.is-responsive]': 'responsive',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n  }\n})\nexport class NxRadioCircleComponent implements ControlValueAccessor, AfterContentInit {\n\n  private _id = nextId++;\n\n  @ContentChildren(NxRadioCircleButton)\n  private _buttons: QueryList<NxRadioCircleButton>;\n\n  private _selectedButton: NxRadioCircleButton;\n\n  private _responsive: boolean = true;\n\n  /** An event emitted when the selection changes. */\n  @Output('nxValueChange')\n  valueChange: EventEmitter<any> = new EventEmitter();\n\n  /** Sets the name of the radio circle, which is used for accessibility. */\n  @Input('nxName')\n  name: string;\n\n  /** Whether the radio circle is disabled. */\n  @Input('disabled')\n  public disabled = false;\n\n  /**\n   * Whether the toggle behavior is disabled.\n   *\n   * @deprecated Use `nxResponsive` instead\n   * @deletion-target 7.0.0\n   */\n  @Input('nxResponsiveToggle')\n  set responsiveToggle(value: boolean) {\n    console.warn('`nxResponsiveToggle` is deprecated. Use `nxResponsive` instead.');\n    this.responsive = value;\n  }\n\n  /**\n   * Whether the radio circle should have a responsive behavior.\n   *\n   * On false the circles will stay even on mobile viewports.\n   * Default: true.\n   */\n  @Input('nxResponsive')\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.responsive) {\n      this._responsive = newValue;\n    }\n  }\n\n  get responsive(): boolean {\n    return this._responsive;\n  }\n\n  constructor(private renderer: Renderer2) {\n    console.warn('`nx-radio-circle` is deprecated. Use `nx-circle-toggle-group` instead.');\n  }\n\n  /** Sets the value of the radio circle. */\n  @Input('nxValue')\n  set value(value: any) {\n    this.writeValue(value);\n  }\n\n  get value(): any {\n    return this._selectedButton ? this._selectedButton.value : null;\n  }\n\n  /**\n   * @docs-private\n   * @deprecated Use `responsive` getter\n   * @deletion-target 7.0.0\n   */\n  getResposiveToggle(): any {\n    console.warn('The method `getResponsiveToggle is deprecated. Use the `responsive` getter instead');\n    return this._responsive;\n  }\n\n  private onTouchedCallback = (option: any) => {\n  }\n\n  private onChangeCallback = (option: any) => {\n  }\n\n  /** The id of the radio circle. */\n  get radioCircleId(): string {\n    return `radio-circle-${this._id}`;\n  }\n\n  ngAfterContentInit(): void {\n    this.renderer.addClass(this._buttons.first.labelElement.nativeElement, `nx-radio-circle__label--first`);\n    this.renderer.addClass(this._buttons.last.labelElement.nativeElement, `nx-radio-circle__label--last`);\n  }\n\n  writeValue(value: any): void {\n    if (this._buttons) {\n      this._selectedButton = this._buttons.find((button) => button.value === value);\n    }\n  }\n\n  registerOnChange(callback: any): void {\n    this.onChangeCallback = callback;\n  }\n\n  registerOnTouched(callback: any): void {\n    this.onTouchedCallback = callback;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  set selectedButton(button: NxRadioCircleButton) {\n    if (this.disabled) {\n      return;\n    }\n    this._selectedButton = button;\n    this.onChangeCallback(this.value);\n    this.valueChange.emit(this.value);\n  }\n\n  /** @docs-private */\n  get selectedButton(): NxRadioCircleButton {\n    return this._selectedButton;\n  }\n\n  /** @docs-private */\n  get buttons(): QueryList<NxRadioCircleButton> {\n    return this._buttons;\n  }\n}\n\n","import {Component, forwardRef, Inject, Input} from '@angular/core';\nimport {NxRadioCircleButton} from '../radio-circle-button';\nimport {NxRadioCircleComponent} from '../radio-circle.component';\n\n/**\n * @deprecated Use `nx-circle-toggle` instead\n * @deletion-target 8.0.0\n */\n@Component({\n  selector: 'nx-radio-circle-icon-button',\n  templateUrl: './radio-circle-icon-button.html',\n  styleUrls: ['../radio-circle-button.scss'],\n  providers: [\n    {\n      provide: NxRadioCircleButton, useExisting: forwardRef(() => NxRadioCircleIconButtonComponent)\n    }\n  ],\n  host: {\n    '[class.is-disabled]': 'radioCircle.disabled',\n    '[attr.aria-disabled]': 'radioCircle.disabled'\n  }\n})\nexport class NxRadioCircleIconButtonComponent extends NxRadioCircleButton {\n\n  /** Sets the id of the icon to display. */\n  @Input('nxIcon')\n  icon: string;\n\n  constructor(\n      /** @docs-private */\n      @Inject(forwardRef(() => NxRadioCircleComponent)) public radioCircle: NxRadioCircleComponent\n    ) {\n    super(radioCircle);\n    console.warn('`nx-radio-circle-icon-button` is deprecated. Use `nx-circle-toggle` instead.');\n  }\n}\n","import { AfterViewInit, Component, forwardRef, Inject, Input, HostListener, HostBinding } from '@angular/core';\nimport { NxRadioCircleButton } from '../radio-circle-button';\nimport { NxRadioCircleComponent } from '../radio-circle.component';\n\n/**\n * @deprecated Use `nx-circle-toggle` instead\n * @deletion-target 8.0.0\n */\n@Component({\n  selector: 'nx-radio-circle-svg-button',\n  templateUrl: './radio-circle-svg-button.html',\n  styleUrls: ['../radio-circle-button.scss'],\n  providers: [\n    {\n      provide: NxRadioCircleButton, useExisting: forwardRef(() => NxRadioCircleSvgButtonComponent)\n    }\n  ]\n})\nexport class NxRadioCircleSvgButtonComponent extends NxRadioCircleButton implements AfterViewInit {\n\n  /** Sets the SVG used for the not-checked state. */\n  @Input('nxSvg')\n  svg: string;\n\n  /** Sets the SVG used for the checked state. */\n  @Input('nxSvgChecked')\n  svgChecked: string;\n  private _hover: boolean = false;\n\n  /** @docs-private */\n  @HostListener('mouseenter') onMouseEnter() {\n    this._hover = true;\n  }\n\n  /** @docs-private */\n  @HostListener('mouseleave') onMouseLeave() {\n    this._hover = false;\n  }\n\n  constructor(@Inject(forwardRef(() => NxRadioCircleComponent)) radioCircle: NxRadioCircleComponent) {\n    super(radioCircle);\n    console.warn('`nx-radio-circle-svg-button` is deprecated. Use `nx-circle-toggle` instead.');\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.svg) {\n      console.warn(`nx-radio-circle-svg-button: required field 'nxSvg' is not set`);\n    }\n\n    if (!this.svgChecked) {\n      console.warn(`nx-radio-circle-svg-button: required field 'nxSvgChecked' is not set`);\n    }\n  }\n\n  /** @docs-private */\n  get svgUrl(): string {\n    return (this.checked || this._hover) ? this.svgChecked : this.svg;\n  }\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NgModule} from '@angular/core';\nimport {NxRadioCircleComponent} from './radio-circle.component';\nimport {NxRadioCircleIconButtonComponent} from './icon-button/radio-circle-icon-button.component';\nimport {NxRadioCircleSvgButtonComponent} from './svg-button/radio-circle-svg-button.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxRadioCircleComponent, NxRadioCircleIconButtonComponent, NxRadioCircleSvgButtonComponent ],\n  exports: [ NxRadioCircleComponent, NxRadioCircleIconButtonComponent, NxRadioCircleSvgButtonComponent ],\n  imports: [\n    CommonModule,\n    NxIconModule\n  ]\n})\nexport class NxRadioCircleModule { }\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'nx-video',\n  templateUrl: 'video.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './video.component.scss' ],\n})\n\n// note that this currently only supports youtube videos\nexport class NxVideoComponent {\n\n  private _videoId: string = null;\n\n  /** Sets the id of the YouTube video. */\n  @Input('nxVideoId')\n  set videoId(value: string) {\n    if (this._videoId !== value) {\n      this._videoId = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get videoId(): string {\n    return this._videoId;\n  }\n\n  private _altText: string = '';\n\n  /** Sets the value of the alt attribute for the preview image. */\n  @Input('nxAltText')\n  set altText(value: string) {\n    if (this._altText !== value) {\n      this._altText = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get altText(): string {\n    return this._altText;\n  }\n\n  private _playButtonAriaLabel: string = '';\n\n  /** Sets the value of the aria-label attribute on the play button (Default: Play Video). */\n  @Input('nxPlayButtonAriaLabel')\n  set nxPlayButtonAriaLabel(value: string) {\n    if (this._playButtonAriaLabel !== value) {\n      this._playButtonAriaLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get nxPlayButtonAriaLabel(): string {\n    return this._playButtonAriaLabel;\n  }\n\n  private _previewImageSrc: string = null;\n\n  /** Sets the preview image. If this is not provided, an image from YouTube will be used as default. */\n  @Input('nxPreviewImageSrc')\n  set previewImageSrc(value: string) {\n    if (this._previewImageSrc !== value) {\n      this._previewImageSrc = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get previewImageSrc(): string {\n    return this._previewImageSrc;\n  }\n\n  private _showPlayerControls: boolean = true;\n\n  /** Sets player controls. If set to false, player controls are not available. */\n  @Input('nxShowPlayerControls')\n  set showPlayerControls(value: boolean) {\n    this._showPlayerControls = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showPlayerControls(): boolean {\n    return this._showPlayerControls;\n  }\n\n  private _allowFullScreen: boolean = true;\n\n  /** Sets fullscreen option. If set to false, fullscreen option is not available. */\n  @Input('nxAllowFullScreen')\n  set allowFullScreen(value: boolean) {\n    this._allowFullScreen = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get allowFullScreen(): boolean {\n    return this._allowFullScreen;\n  }\n\n  private _interfaceLanguage: string = null;\n\n  /** Sets interface language. Can be used to override the interface language determined by YouTube. */\n  @Input('nxInterfaceLanguage')\n  set interfaceLanguage(value: string) {\n    if (this._interfaceLanguage !== value) {\n      this._interfaceLanguage = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get interfaceLanguage(): string {\n    return this._interfaceLanguage;\n  }\n\n  /** @docs-private */\n  showPlayer = false;\n\n  constructor(private sanitizer: DomSanitizer, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  select(): void {\n    this.showPlayer = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n   /** Returns the safe resource URL of the YouTube video, given video id.  */\n  get videoSrc(): SafeResourceUrl {\n    let url = `https://www.youtube.com/embed/${this.videoId}?rel=0&showinfo=0&autoplay=1`;\n    if (!this.showPlayerControls) {\n      url += '&controls=0';\n    }\n    if (!this.allowFullScreen) {\n      url += '&fs=0';\n    }\n    if (this.interfaceLanguage) {\n      url += `&hl=${this.interfaceLanguage}`;\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  /** Returns the preview image source URL, given video id. */\n  get imgSrc() {\n    return this.previewImageSrc ? this.previewImageSrc : `https://img.youtube.com/vi/${this.videoId}/sddefault.jpg`;\n  }\n\n  /** Returns the labels for the control buttons. */\n  get playButtonAriaLabel() {\n    const defaultLabel = this.altText ? `${this.altText} - Play Video` : 'Play Video';\n    return this.nxPlayButtonAriaLabel ? this.nxPlayButtonAriaLabel : defaultLabel;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxVideoComponent } from './video.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ NxVideoComponent ],\n  exports: [ NxVideoComponent ],\n  imports: [ CommonModule ]\n})\nexport class NxVideoModule {}\n","\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getNxDropdownDynamicMultipleError(): Error {\n  return Error('Cannot change `multiselect` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiselect` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getNxDropdownNonArrayValueError(): Error {\n  return Error('Value must be an array in multiselect mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getNxDropdownNonFunctionValueError(): Error {\n  return Error('`compareWith` must be a function.');\n}\n","import { NxFormfieldControl } from '@allianz/ngx-ndbx/formfield';\nimport { Input } from '@angular/core';\n\nexport abstract class NxDropdownControl extends NxFormfieldControl<any> {\n  /**\n   * Whether the dropdown should allow multi selection and additional checkboxes are shown.\n   *\n   * Note: Please make sure the value you bind is an array. If not an error is thrown! */\n  @Input('nxIsMultiselect') isMultiSelect: boolean = false;\n\n  /** @docs-private */\n  abstract formatValue?(value): string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nx-dropdown-group',\n  templateUrl: 'dropdown-group.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['dropdown-group.scss']\n})\nexport class NxDropdownGroupComponent {\n  /** Label displayed in the group. */\n  @Input('nxLabel') label: string;\n}\n","import { Highlightable } from '@angular/cdk/a11y';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxDropdownComponent } from '../dropdown';\nimport { NxDropdownControl } from '../dropdown.control';\nimport { NxDropdownGroupComponent } from './../group/dropdown-group';\n\n\nexport class NxDropdownItemChange {\n\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public item: NxDropdownItemComponent,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/** the unique id counter */\nlet nextId = 0;\n\n\n@Component({\n  selector: 'nx-dropdown-item',\n  templateUrl: 'dropdown-item.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [\n    'dropdown-item.scss'\n  ],\n  host: {\n    '[id]': 'id',\n    'role': 'option',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[class.nx-hidden]': '_hidden',\n    '[class.nx-dropdown-item--active]': 'active',\n    '[class.nx-selected]': 'selected',\n    '[class.nx-multiselect]': 'multiselect',\n    '(click)': '_onClick($event)'\n  }\n})\nexport class NxDropdownItemComponent implements Highlightable, OnDestroy, AfterViewChecked {\n  _hidden = false;\n\n  private _mostRecentViewValue = '';\n\n  private _id = `nx-dropdown-item-${nextId++}`;\n\n  /**\n   * The value of the dropdown item.\n   * You can't use undefined, null and '' (empty strings)\n   * as they are sentinel values signalling empty data.\n   */\n  @Input('nxValue') value;\n\n  /** The unique ID of the option. */\n  get id(): string { return this._id; }\n\n  private _selected: boolean = false;\n\n  /** Whether the item is selected. */\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _active: boolean;\n\n  /** Whether the item is active. */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * @docs-private\n   * Whether the parent dropdown is in multiselect mode.\n   */\n  get multiselect(): boolean {\n    return this._dropdown && this._dropdown.isMultiSelect;\n  }\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<NxDropdownItemChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * @docs-private\n   * The wrapping div in the template. Used by dropdown to use the container height for scrolling.\n   */\n  @ViewChild('container') containerElement;\n\n  constructor(\n    @Inject(NxDropdownControl) private _dropdown: NxDropdownControl,\n    /** @docs-private */\n    @Optional() readonly group: NxDropdownGroupComponent,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef) {\n    (this._dropdown as NxDropdownComponent).filterChanges.pipe(takeUntil(this._destroy)).subscribe((value) => {\n      this._showOrHideByFilter(value);\n    });\n    // reset the hidden state when dropdown closes that on next open the user is seeing the full list again\n    (this._dropdown as NxDropdownComponent)._closedStream.pipe(takeUntil(this._destroy)).subscribe(() => {\n      this._hidden = false;\n    });\n  }\n\n  ngAfterViewChecked() {\n    // Since the parent dropdown component could be using the item's label to display the selected values\n    // and it doesn't have a way of knowing if the item's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  _onClick(event) {\n    /* preventDefault to stop triggering the event twice when you click on the checkbox or the label inside the item */\n    event.preventDefault();\n    event.stopPropagation();\n    this._selectViaInteraction();\n  }\n\n  /**\n  * `Selects the option while indicating the selection came from the user. Used to\n  * determine if the select's view -> model callback should be invoked.`\n  */\n  _selectViaInteraction(): void {\n    this._selected = this.multiselect ? !this._selected : true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent(true);\n  }\n\n  /** @docs-private */\n  show() {\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  hide() {\n    this._hidden = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showOrHideByFilter(search) {\n    const constraint = (this._dropdown as NxDropdownComponent).filterFn(search, this.viewValue);\n    this._hidden = constraint ? false : true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get _formattedValue() {\n    return (this._dropdown as NxDropdownComponent).valueFormatter(this.value);\n  }\n\n  /** @docs-private */\n  get viewValue() {\n    return (this._elementRef.nativeElement.textContent || '').trim();\n  }\n\n  /** @docs-private */\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  private _emitSelectionChangeEvent(isUserInput: boolean = false) {\n    this.onSelectionChange.emit(new NxDropdownItemChange(this, isUserInput));\n  }\n\n  /** @docs-private */\n  setActiveStyles(): void {\n    this._active = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  setInactiveStyles(): void {\n    this._active = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  getLabel(): string {\n    return this.value;\n  }\n\n  _isContentEmpty(element) {\n    return element.children.length === 0 && !element.textContent.trim();\n  }\n\n  _onLabelChange() {\n    // trigger change detection when the label content changes for the case that ng-content was empty before.\n    // this is also important when the label comes in deferred, e.g. by a delayed observable,\n    // then first the default label derived from the value is shown\n    // and after the value from the async observable is ready we need to trigger change detection that the derived label\n    // gets hidden again.\n    // Notice(!): the event of (cdkObserveContent) is run outside of the ngZone\n    // We run detectChanges directly here as markForCheck wasn't enough to always trigger change detection correctly\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n// This Directive solely purpose is to mark given ng-template and project it into the required destination.\n@Directive({\n  selector: '[nxClosedLabel]'\n})\nexport class NxDropdownClosedLabelDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { NxFormfieldComponent, NxFormfieldControl } from '@allianz/ngx-ndbx/formfield';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, SHIFT, TAB } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewChild,\n  TemplateRef,\n  ContentChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport { filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\n\nimport { getNxDropdownNonArrayValueError, getNxDropdownNonFunctionValueError } from './dropdown-errors';\nimport { NxDropdownControl } from './dropdown.control';\nimport { NxDropdownGroupComponent } from './group/dropdown-group';\nimport { NxDropdownItemChange, NxDropdownItemComponent } from './item/dropdown-item';\nimport { NxDropdownClosedLabelDirective } from './closed-label.directive';\n\n\n/** Change event object that is emitted when the select value has changed. */\nexport class NxDropdownSelectChange<T = any> {\n  constructor(\n    /** Reference to the select that emitted the change event. */\n    public source: NxDropdownComponent,\n    /** Current value of the select that emitted the event. */\n    public value: T) { }\n}\n\n// used in calculation of scrolltop to correctly show some space to the top of the panel\nconst itemPadding = 16;\n\n// Max-height: 6 items x 44px + 16px padding before first item\nexport const SELECT_PANEL_MAX_HEIGHT = 280;\n\n@Component({\n  selector: 'nx-dropdown',\n  templateUrl: 'dropdown.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['dropdown.scss'],\n  providers: [\n    { provide: NxDropdownControl, useExisting: NxDropdownComponent },\n    { provide: NxFormfieldControl, useExisting: NxDropdownComponent },\n  ],\n  host: {\n    'role': 'button',\n    '[class.nx-dropdown]': 'true',\n    '[class.is-filled]': 'hasValue',\n    '[class.has-focus]': 'focused',\n    '[class.nx-dropdown--negative]': '_negative',\n    '[class.nx-dropdown--disabled]': 'disabled',\n    '[attr.aria-describedby]': 'ariaDescribedby || null',\n    '[attr.aria-required]': 'required',\n    '[attr.aria-label]': '_getAriaLabel()',\n    '[attr.aria-haspopup]': '\"listbox\"',\n    '[attr.aria-expanded]': 'panelOpen',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.tabindex]': 'tabIndex',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(click)': 'openPanel()'\n  }\n})\nexport class NxDropdownComponent extends NxDropdownControl implements ControlValueAccessor,\n  OnInit, AfterContentInit, OnDestroy, DoCheck {\n\n  // The dropdown currently doesn't support readonly of the NxFormfieldControl so we hardcode it here\n  readonly readonly: boolean = false;\n\n  private _selectionModel: SelectionModel<NxDropdownItemComponent>;\n\n  protected _disabled: boolean = false;\n\n  private _focused: boolean = false;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  /** @docs-private */\n  errorState: boolean = false;\n\n  /** Holds the value from nxValue. */\n  private _value: any;\n\n  /** The scroltop of the panelBody. */\n  private _scrollTop: number = 0;\n\n  /** The minimal space between the viewport and the overlay */\n  _overlayViewportMargin: number = 16;\n\n  /** The last measured value for the trigger's client bounding rect. */\n  _triggerRect: ClientRect;\n\n  /** Holds the panelWidth after panel was attached. */\n  _panelWidth: number;\n\n  /**\n   * @docs-private\n   * Emits when internal state changes to inform formfield about it.\n   */\n  readonly stateChanges = new Subject<any>();\n\n  /** The IDs of child options to be passed to the aria-owns attribute. */\n  _optionIds: string = '';\n\n  /** @docs-private */\n  ariaDescribedby: string;\n\n  private _tabIndex: number = 0;\n\n  /** @docs-private */\n  currentFilter: string = '';\n\n\n  @Input()\n  get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n  set tabIndex(value: number) {\n    // If the specified tabIndex value is null or undefined, fall back to the default value.\n    this._tabIndex = value != null ? value : 0;\n  }\n\n  /** Label to describe the component. */\n  @Input('nxAriaLabel') _ariaLabel: string = '';\n\n  /** Selected value */\n  @Input('nxValue')\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (newValue !== this._value) {\n      this.writeValue(newValue);\n      this._value = newValue;\n      this._onChange(newValue);\n    }\n  }\n\n  /** Whether the dropdown is disabled. */\n  @Input('nxDisabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  /** Whether the component is required. This adds an aria-required label to the component. */\n  @Input('nxRequired') required: boolean;\n\n  private _style: string = '';\n  /** Whether the dropdown should render in its negative style or not. */\n  _negative: boolean = false;\n\n  /** If set to 'negative', the component is displayed with the negative set of styles. */\n  @Input('nxStyle')\n  set styles(value: string) {\n\n    if (this._style === value) {\n      return;\n    }\n\n    this._style = value;\n    this._negative = !!this._style.match(/negative/);\n  }\n\n  /** Whether the dropdown should be shown with an additional filter input. */\n  @Input('nxShowFilter') showFilter: boolean = false;\n\n  /** Text displayed as placeholder for the filter. */\n  @Input('nxFilterPlaceholder') filterPlaceholder: string = '';\n\n  /** Event emitted when the select panel has been toggled. */\n  @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the select has been opened. */\n  @Output('opened') readonly _openedStream: Observable<void> =\n    this.openedChange.pipe(filter(o => o), map(() => { }));\n\n  /** Event emitted when the select has been closed. */\n  @Output('closed') readonly _closedStream: Observable<void> =\n    this.openedChange.pipe(filter(o => !o), map(() => { }));\n\n  /** Event emitted when the user types in the filter input. */\n  @Output('filterInput') readonly filterChanges: Subject<any> = new Subject<any>();\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output('nxValueChange') readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Event emitted when the selected value has been changed. */\n  @Output() readonly selectionChange: EventEmitter<NxDropdownSelectChange> =\n    new EventEmitter<NxDropdownSelectChange>();\n\n  /** @docs-private */\n  readonly optionSelectionChanges: Observable<NxDropdownItemChange> = defer<Observable<NxDropdownItemChange>>(() => {\n    if (this.options) {\n      return merge(...this.options.map(option => option.onSelectionChange));\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n  });\n\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions = [{\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'top'\n  }, {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center'\n  }, {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }];\n\n\n  /**\n   * @docs-private\n   * Panel containing the select options.\n   */\n  @ViewChild('panel') panel: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('panelBody') panelBody: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('trigger') trigger: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('filterInput') filterInput: ElementRef;\n\n  /**\n   * @docs-private\n   * Overlay pane containing the options.\n   */\n  @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n  /** @docs-private */\n  @ContentChildren(NxDropdownItemComponent, { descendants: true }) options;\n\n  /** @docs-private */\n  @ContentChildren(NxDropdownGroupComponent) groups;\n\n  @ContentChild(NxDropdownClosedLabelDirective)\n  _customClosedDropdownLabel: NxDropdownClosedLabelDirective;\n\n  @ViewChild('defaultClosedDropdownLabel')\n  private _defaultClosedDropdownLabel: TemplateRef<any>;\n\n  /** @docs-private */\n  get closedDropdownLabel(): TemplateRef<any> {\n    return this._closedDropdownLabel;\n  }\n  private _closedDropdownLabel: TemplateRef<any>;\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * @docs-private\n   * The currently selected option.\n   */\n  get selected(): NxDropdownItemComponent | NxDropdownItemComponent[] {\n    return this.isMultiSelect ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  private _keyManager: ActiveDescendantKeyManager<NxDropdownItemComponent>;\n\n  /** @docs-private */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n  set panelOpen(value: boolean) {\n    this._panelOpen = value;\n  }\n\n  /**\n   * Function that transforms the value into a string.\n   * This function is used for displaying and filtering the content\n   * ( Default: (value) => value ? value.toString() : null; ).\n   */\n  @Input('nxValueFormatter') valueFormatter = (value) => {\n    return value == null ? '' : value.toString();\n  }\n\n  /** @docs-private */\n  get label(): string {\n    return this.formFieldComponent ? this.formFieldComponent.label : '';\n  }\n\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith() { return this._compareWith; }\n  set compareWith(fn: (o1: string, o2: string) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNxDropdownNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n\n  private _filterFn = (search: string, itemValue: string) => {\n    return itemValue.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) >= 0;\n  }\n\n  /**\n   * Function to be used when the user types into the search filter. The first argument is the user input,\n   * the second argument is the dropdown item value. The dropdown items will use this function to set their\n   * visibility state.\n   * A boolean should be returned.\n   */\n  @Input()\n  get filterFn() { return this._filterFn; }\n  set filterFn(fn: (search: string, itemValue: string) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNxDropdownNonFunctionValueError();\n    }\n    this._filterFn = fn;\n  }\n\n  /**\n   * @docs-private\n   * Whether the select is focused.\n   */\n  get focused(): boolean {\n    return this._focused || this.panelOpen;\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => { };\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => { };\n\n  /** @docs-private */\n  get elementRef(): ElementRef {\n    return this._elementRef;\n  }\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Attribute('tabindex') tabIndex: string,\n    @Optional() private formFieldComponent: NxFormfieldComponent,\n    /** @docs-private */\n    @Self() @Optional() public ngControl: NgControl,\n    @Optional() private _parentForm: NgForm,\n    @Optional() private _parentFormGroup: FormGroupDirective) {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.tabIndex = parseInt(tabIndex, 10) || 0;\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<NxDropdownItemComponent>(this.isMultiSelect);\n  }\n\n  ngAfterContentInit() {\n    this._closedDropdownLabel =\n      this._customClosedDropdownLabel && this._customClosedDropdownLabel.templateRef || this._defaultClosedDropdownLabel;\n    this._initKeyManager();\n\n    this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  /** @docs-private */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n\n  /** @docs-private */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<NxDropdownItemComponent>(this.options)\n      .withTypeAhead()\n      .withWrap()\n      .withVerticalOrientation()\n      .withHorizontalOrientation('ltr')\n      .skipPredicate(item => item._hidden);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n      // Restore focus to the trigger before closing. Ensures that the focus\n      // position won't be lost if the user got focus into the overlay.\n      this.closePanel();\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        // Delay the auto scrolling until all items have settled otherwise the item containers might\n        // not exist yet\n        this._ngZone.onStable\n          .asObservable()\n          .pipe(take(1)).subscribe(() => this._scrollActiveOptionIntoView());\n      } else if (!this._panelOpen && !this.isMultiSelect && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n\n  private _resetOptions(): void {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.item, event.isUserInput);\n\n      if (event.isUserInput && !this.isMultiSelect && this._panelOpen) {\n        this.closePanel();\n      }\n    });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        // defer it for the next cycle to not run in changed after checked errors\n        // the combination of dropdown-item notifying parent and when the parent\n        // tries to fetch the triggerValue from the child throws these errors\n        setTimeout(() => {\n          this._changeDetectorRef.markForCheck();\n          this.stateChanges.next();\n        });\n      });\n\n    this._setOptionIds();\n  }\n\n  /** Records option IDs to pass to the aria-owns property. */\n  private _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n\n  /** Invoked when an option is clicked. */\n  private _onSelect(option: NxDropdownItemComponent, isUserInput: boolean): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (option.value == null && !this.isMultiSelect) {\n      option.deselect();\n      this._selectionModel.clear();\n      this._propagateChanges(option.value);\n    } else {\n      option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n\n      if (this.isMultiSelect) {\n        this._sortValues();\n\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n\n    this.stateChanges.next();\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n    });\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    if (this.isMultiSelect && value) {\n      if (!Array.isArray(value)) {\n        throw getNxDropdownNonArrayValueError();\n      }\n\n      this._selectionModel.clear();\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      this._selectionModel.clear();\n      const correspondingOption = this._selectValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.setActiveItem(correspondingOption);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): NxDropdownItemComponent | undefined {\n    const correspondingOption = this.options.find((option: NxDropdownItemComponent) => {\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value, value);\n      } catch (error) {\n        if (isDevMode()) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n    return correspondingOption;\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (this.isMultiSelect) {\n      valueToEmit = (this.selected as NxDropdownItemComponent[]).map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as NxDropdownItemComponent).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(new NxDropdownSelectChange(this, valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  private _sortValues() {\n    if (this.isMultiSelect) {\n      const options = this.options.toArray();\n      this._selectionModel.sort((a, b) => options.indexOf(a) - options.indexOf(b));\n      this.stateChanges.next();\n    }\n  }\n\n  /** Focuses the select element. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Opens the panel of the dropdown. */\n  openPanel() {\n    if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n      return;\n    }\n    this._panelOpen = true;\n    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n    this._keyManager.withHorizontalOrientation(null);\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Closes the panel of the dropdown. */\n  closePanel() {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._keyManager.withHorizontalOrientation('ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n      this.openedChange.emit(false);\n      // defer the focus if the dropdown triggers actions that detach\n      // a template/view from the DOM to prevent changed after checked errors\n      setTimeout(() => this.focus());\n    }\n  }\n\n  // calculate inital scrollTop when the dropdown opens\n  // scrolls the selected item to the middle of the panel if possible\n  private _calculateScrollTop() {\n    // reset the scrolltop to make calculation easier\n    this.panelBody.nativeElement.scrollTop = 0;\n    this._scrollTop = 0;\n    if (!this.empty) {\n      const offset = this._getItemOffset(this._keyManager.activeItem);\n      const panelHeight = this.panelBody.nativeElement.offsetHeight;\n      const panelRect = this.panelBody.nativeElement.getBoundingClientRect();\n      const middleOfPanel = panelRect.top + panelHeight / 2;\n      const activeItemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n      if (offset > middleOfPanel) {\n        // because we reset the scrollTop to 0 at the top we can simply take the middleOfPanel which is our\n        // target position for the item and subtract it from the offset (which is now always relative to the viewport)\n        // to middle out the text a bit more add half of the height\n        // (this is still a few pixels off because the container is a bit larger than the font)\n        this._scrollTop = offset - middleOfPanel + (activeItemRect.height - itemPadding) / 2;\n        this.panelBody.nativeElement.scrollTop = this._scrollTop;\n      }\n    }\n  }\n\n  /** Scrolls the active option into view. */\n  private _scrollActiveOptionIntoView(): void {\n    if (!this.panelOpen || !this._keyManager.activeItem) {\n      return;\n    }\n    const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n    const itemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n    const labelCount = this._countGroupLabelsBeforeOption(activeOptionIndex, this.options,\n      this.groups);\n\n    this.panelBody.nativeElement.scrollTop = this._getOptionScrollPosition(\n      activeOptionIndex + labelCount,\n      itemRect.height,\n      this.panelBody.nativeElement.scrollTop,\n      SELECT_PANEL_MAX_HEIGHT\n    );\n  }\n\n  private _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<NxDropdownItemComponent>,\n    optionGroups: QueryList<NxDropdownGroupComponent>): number {\n\n    if (optionGroups.length) {\n      const optionsArray = options.toArray();\n      const groups = optionGroups.toArray();\n      let groupCounter = 0;\n\n      for (let i = 0; i < optionIndex + 1; i++) {\n        if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\n  private _getOptionScrollPosition(optionIndex: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n    let optionOffset = optionIndex * optionHeight + itemPadding;\n\n    if (this.showFilter) {\n      const filterHeight = this.panel.nativeElement.querySelector('.nx-dropdown__filter').getBoundingClientRect().height;\n      optionOffset = optionIndex * optionHeight + filterHeight;\n    }\n\n    if (optionOffset < currentScrollPosition) {\n      return optionOffset;\n    }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n      return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n  }\n\n  private _getItemOffset(item) {\n    const itemRect = item.containerElement.nativeElement.getBoundingClientRect();\n\n    return itemRect.top;\n  }\n\n  /**\n   * @docs-private\n   * Formfield Implementation\n   */\n  setDescribedByIds(ids: string[]): void {\n    this.ariaDescribedby = ids.join(' ');\n  }\n\n  /** @docs-private */\n  setAriaLabel(value: string) {\n    this._ariaLabel = value;\n  }\n\n  _getAriaLabel() {\n    return this._ariaLabel || (this.formFieldComponent ? this.formFieldComponent.label : null);\n  }\n\n  /**\n   * @docs-private\n   * Whether the select has a value.\n   */\n  get empty(): boolean {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n\n  /** @docs-private */\n  get hasValue() {\n    return this._selectionModel.hasValue();\n  }\n\n  /** @docs-private */\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n  /** End Formfield */\n\n  /** ControlValueAccessor */\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  /** End ControlValueAccessor */\n\n  _handleKeydown(event: KeyboardEvent) {\n    this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n  }\n\n  private _handleClosedKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n      keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if (isOpenKey || ((this.isMultiSelect || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.openPanel();\n    } else if (!this.isMultiSelect && !this.disabled) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  private _handleOpenKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    // all events other than the listed ones should be ignored or handled in _onFilter()\n    if (!([DOWN_ARROW, UP_ARROW, HOME, END, ENTER, LEFT_ARROW, RIGHT_ARROW, SHIFT, SPACE, TAB].indexOf(keyCode) >= 0)) {\n        return;\n    }\n\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const manager = this._keyManager;\n\n    const allHidden = this.options.map(option => option._hidden).every(option => Boolean(option));\n\n    if (keyCode === HOME || keyCode === END) {\n      event.preventDefault();\n      keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n    } else if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.closePanel();\n    } else if (keyCode === ENTER && manager.activeItem && !allHidden) {\n      event.preventDefault();\n\n      manager.activeItem._selectViaInteraction();\n    } else if (keyCode === ENTER && allHidden) {\n      event.preventDefault();\n\n      this.closePanel();\n    } else if (!this.showFilter && keyCode === SPACE && manager.activeItem) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (keyCode === TAB) {\n      this.closePanel();\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n\n      if (this.isMultiSelect && isArrowKey && event.shiftKey && manager.activeItem &&\n        manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  /** @docs-private */\n  formatValue(value): string {\n    return this.valueFormatter(value);\n  }\n\n  /** Called when the user types in the filter input */\n  _onFilter(event) {\n    event.preventDefault();\n    this.currentFilter = event.target.value;\n    this.filterChanges.next(event.target.value);\n    const allHidden = this.options.map(option => option._hidden).every(option => Boolean(option));\n    if (allHidden) {\n      this._keyManager.setActiveItem(null);\n    } else {\n      this._keyManager.setFirstItemActive();\n    }\n  }\n\n  /**\n   * @docs-private\n   * The value displayed in the trigger.\n   */\n  get triggerValue(): string {\n\n    if (this.empty) {\n      return '';\n    }\n\n    if (this.isMultiSelect) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      return selectedOptions.join(', ');\n    }\n    return this._selectionModel.selected[0].viewValue;\n  }\n\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first item instead.\n   */\n  private _highlightCorrectOption(): void {\n    if (this._keyManager) {\n      if (this.empty) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached(): void {\n    this._changeDetectorRef.markForCheck();\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this.panelBody.nativeElement.focus();\n      if (this._keyManager.activeItem) {\n        this._calculateScrollTop();\n      }\n      this._changeDetectorRef.markForCheck();\n      this.openedChange.emit(true);\n      if (this.showFilter) {\n        this.filterInput.nativeElement.focus();\n      }\n    });\n  }\n\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n\n    if (this.filterInput && this.showFilter) {\n      this._clearFilter();\n    }\n\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n\n  /** @docs-private */\n  get isFilterEmpty() {\n    return this.currentFilter.length === 0;\n  }\n\n  /** @docs-private */\n  _clearFilter() {\n    this.filterInput.nativeElement.value = '';\n    this.currentFilter = '';\n    this.filterChanges.next('');\n  }\n\n  /** @docs-private determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant(): string | null {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n}\n","import { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxCheckboxModule } from '@allianz/ngx-ndbx/checkbox';\nimport { NxDropdownComponent } from './dropdown';\nimport { NxDropdownGroupComponent } from './group/dropdown-group';\nimport { NxDropdownItemComponent } from './item/dropdown-item';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { NxDropdownClosedLabelDirective } from './closed-label.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxFormfieldModule,\n    NxCheckboxModule,\n    OverlayModule,\n    A11yModule,\n    NxIconModule,\n    ObserversModule\n  ],\n  declarations: [\n    NxDropdownComponent,\n    NxDropdownItemComponent,\n    NxDropdownGroupComponent,\n    NxDropdownClosedLabelDirective\n  ],\n  exports: [\n    NxDropdownComponent,\n    NxDropdownItemComponent,\n    NxDropdownGroupComponent,\n    NxDropdownClosedLabelDirective\n  ]\n})\nexport class NxDropdownModule {\n\n}\n","import { Component, Input, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\n\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Option selected event */\nexport class NxAutocompleteOptionSelected {\n  constructor(\n    /** The option that is selected or deselected. */\n    public source: NxAutocompleteOptionComponent,\n    /** Whether the input was triggered by the user. */\n    public isUserInput = false) { }\n}\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n@Component({\n  selector: 'nx-autocomplete-option',\n  templateUrl: 'autocomplete-option.component.html',\n  styleUrls: ['autocomplete-option.component.scss'],\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    '[class.nx-active]': 'active',\n    '[class.nx-disabled]': 'disabled',\n    '[style.display]': '\\'block\\'' // needed for to be able to calculate offset height\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxAutocompleteOptionComponent {\n\n  /** Id of the autocomplete option. By default it is set to an incremented value. */\n  public get id(): string {\n    return this._id;\n  }\n  private _id = `nx-autocomplete-option-${_uniqueIdCounter++}`;\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n  private _selected = false;\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n  private _active = false;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n    }\n  }\n  private _disabled = false;\n\n  /** The value of the autocomplete option. */\n  @Input() value: any;\n\n  /** Event emitted when the option is selected or deselected. */\n  @Output() readonly onSelectionChange = new EventEmitter<NxAutocompleteOptionSelected>();\n\n\n  constructor(\n    /** @docs-private */ public elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new NxAutocompleteOptionSelected(this, isUserInput));\n  }\n\n  /** @docs-private */\n  get viewValue(): string {\n    return (this.elementRef.nativeElement.textContent || '').trim();\n  }\n\n  /**\n   * @docs-private\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * @docs-private\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * @docs-private\n   * Gets the label to be used when determining whether the option should be focused.\n   */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Selects the option. */\n  select(): void {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /**\n   * @docs-private\n   * Sets focus onto this option.\n   */\n  focus(): void {\n    const element = this.elementRef.nativeElement;\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n}\n","\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy\n} from '@angular/core';\n\nimport { NxAutocompleteOptionComponent } from './autocomplete-option.component';\n\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n\n/** Event object that is emitted when an autocomplete option is selected. */\nexport class NxAutocompleteSelectedEvent {\n  constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    public source: NxAutocompleteComponent,\n    /** Option that was selected. */\n    public option: NxAutocompleteOptionComponent) { }\n}\n\n@Component({\n  selector: 'nx-autocomplete',\n  templateUrl: 'autocomplete.component.html',\n  styleUrls: ['autocomplete.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'nxAutocomplete',\n  host: {\n    'class': 'nx-autocomplete'\n  }\n})\nexport class NxAutocompleteComponent implements AfterViewInit, OnDestroy {\n\n  /** Manages active item in option list based on key events. */\n  _keyManager: ActiveDescendantKeyManager<NxAutocompleteOptionComponent>;\n\n  /** Whether the autocomplete panel should be visible, depending on option length. */\n  showPanel: boolean = false;\n\n  /** Whether the autocomplete panel is open. */\n  get isOpen(): boolean { return this._isOpen && this.showPanel; }\n  _isOpen: boolean = false;\n\n  /** @docs-private */\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\n\n  /**\n   * @docs-private\n   * Element for the panel containing the autocomplete options.\n   */\n  @ViewChild('panel') panel: ElementRef;\n\n  /** Items observable. If given, autocomplete takes care of the options and ng-content is discarderd */\n  @Input()\n  set items(val: Array<string> | Observable<Array<string>>) {\n    this._hasItems = true;\n    if (Array.isArray(val)) {\n      this._items = val;\n    } else if (val instanceof Observable) {\n      if (this._itemsSubscription) {\n        this._itemsSubscription.unsubscribe();\n      }\n      this._itemsSubscription = val.subscribe((itms) => {\n        this._items = itms;\n        this._changeDetectorRef.markForCheck();\n        // and check visibility in next cycle, when options are set\n        setTimeout(() => this._setVisibility());\n      });\n    } else if (val === null) {\n      this._items = val;\n    } else {\n      throw new Error('Invalid argument for autocomplete items. It has to be Array<string> or Observable<Array<string>>');\n    }\n  }\n  get items(): Array<string> | Observable<Array<string>> {\n    return this._items;\n  }\n  private _items: Array<string> = null;\n  private _itemsSubscription: Subscription;\n\n  /**\n   * @docs-private\n   * Is items observable set\n   */\n  public get hasItems(): boolean {\n    return this._hasItems;\n  }\n  private _hasItems = false;\n\n  /** Event that is emitted whenever an option from the list is selected. */\n  @Output() readonly optionSelected: EventEmitter<NxAutocompleteSelectedEvent> =\n      new EventEmitter<NxAutocompleteSelectedEvent>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Autocomplete options in view - ie from items */\n  @ViewChildren(NxAutocompleteOptionComponent)\n  private _vOptions: QueryList<NxAutocompleteOptionComponent>;\n\n  /** Autocomplete options in content - ie user provided */\n  @ContentChildren(NxAutocompleteOptionComponent, { descendants: true})\n  private _cOptions: QueryList<NxAutocompleteOptionComponent>;\n\n  /** Autocomplete options */\n  public get options(): QueryList<NxAutocompleteOptionComponent> {\n    return this.hasItems ? this._vOptions : this._cOptions;\n  }\n\n  /**\n   * Takes classes set on the host nx-autocomplete element and applies them to the panel\n   * inside the overlay container to allow for easy styling.\n   */\n  @Input('class')\n  set classList(value: string) {\n    if (value && value.length) {\n      value.split(' ').forEach(className => this._classList[className.trim()] = true);\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  _classList: {[key: string]: boolean} = {};\n\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n  id: string = `nx-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n\n  // As autocomplete option can hold any value, we might need a converter\n  // to get a string representation, which can be stored in input. Default value ? value.toString() : null.\n  /**\n   * Value to string converter.\n   */\n  @Input('nxValueFormatter')\n  public valueFormatter: (value: any) => string = (value: any) => value ? value.toString() : null\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef) {\n  }\n\n  ngAfterViewInit(): void {\n    this._keyManager = new ActiveDescendantKeyManager<NxAutocompleteOptionComponent>(this.options).withWrap();\n    this._setVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._itemsSubscription) {\n      this._itemsSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\n   * above or below the fold, as they are not actually being focused when active.\n   */\n  _setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n  /** Returns the panel's scrollTop. */\n  _getScrollTop(): number {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n\n  /** Panel should hide itself when the option list is empty. */\n  _setVisibility() {\n    this.showPanel = !!(this.options && this.options.length);\n    this._classList['nx-autocomplete-visible'] = this.showPanel;\n    this._classList['nx-autocomplete-hidden'] = !this.showPanel;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits the `select` event. */\n  _emitSelectEvent(option: NxAutocompleteOptionComponent): void {\n    const event = new NxAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n}\n","import { NxFormfieldComponent } from '@allianz/ngx-ndbx/formfield';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ViewportRuler,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, Subject, Subscription, defer, of, merge, fromEvent } from 'rxjs';\nimport { delay, filter, switchMap, take, tap, debounceTime, first } from 'rxjs/operators';\n\nimport { NxWordComponent } from '@allianz/ngx-ndbx/natural-language-form';\nimport { NxAutocompleteOptionComponent, NxAutocompleteOptionSelected } from './autocomplete-option.component';\nimport { NxAutocompleteComponent } from './autocomplete.component';\n\n\n\n\n\n\n\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const NX_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NxAutocompleteTriggerDirective),\n  multi: true\n};\n\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n */\nexport function getNxAutocompleteMissingPanelError(): Error {\n  return Error('Attempting to open an undefined instance of `nx-autocomplete`. ' +\n               'Make sure that the id passed to the `nxAutocomplete` is correct and that ' +\n               'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n\n@Directive({\n  selector: `input[nxAutocomplete], textarea[nxAutocomplete]`,\n  host: {\n    'role': 'combobox',\n    'autocomplete': 'off',\n    'aria-autocomplete': 'list',\n    '[attr.aria-activedescendant]': 'activeOption?.id',\n    '[attr.aria-expanded]': 'panelOpen.toString()',\n    '[attr.aria-owns]': 'autocomplete?.id',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  exportAs: 'nxAutocompleteTrigger',\n  providers: [NX_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class NxAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy, OnChanges, AfterViewInit {\n  private _overlayRef: OverlayRef | null;\n  private _portal: TemplatePortal;\n  private _componentDestroyed = false;\n\n  /** Old value of the native input. Used to work around issues with the `input` event on IE. */\n  private _previousValue: string | number | null;\n\n  /** Strategy that is used to position the panel. */\n  private _positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** Whether or not the label state is being overridden. */\n  private _manuallyFloatingLabel = false;\n\n  /** The subscription for closing actions (some are bound to document). */\n  private _closingActionsSubscription: Subscription;\n\n  /** Subscription to viewport size changes. */\n  private _viewportSubscription = Subscription.EMPTY;\n\n  /** Subscription to control value changes */\n  private _controlValueChangesSubscription: Subscription;\n\n  /** Subscription to items observable */\n  private _itemsSubscription: Subscription;\n\n  /** Stream of keyboard events that can close the panel. */\n  private readonly _closeKeyEventStream = new Subject<void>();\n\n  /** Value changes */\n  private readonly _valueChanges: Subject<any> = new Subject<any>();\n\n\n  /** The autocomplete panel to be attached to this trigger. */\n  @Input('nxAutocomplete') autocomplete: NxAutocompleteComponent;\n\n  /** The items callback. Called with input value, must return Observable of Array of strings */\n  @Input('nxAutocompleteItems')\n  set itemsCb(val: (val: string) => Observable<Array<string>>) {\n    if (typeof val === 'function') {\n      this._itemsCb = val;\n    } else {\n      throw new Error('Wrong value type for nxAutocompleteItems');\n    }\n  }\n  get itemsCb() {\n    return this._itemsCb;\n  }\n  private _itemsCb: (val: string) => Observable<Array<string>> = null;\n\n  /** Debounce in ms before items callback is triggered. Defaults to 400 */\n  @Input('nxAutocompleteDebounce')\n  set debounce(val: number) {\n    this._debounce = coerceNumberProperty(val);\n  }\n  private _debounce: number = 400;\n\n  /** Whether autocomplete functionality is disabled. */\n  @Input('nxAutocompleteDisabled')\n  set autocompleteDisabled(val: boolean) {\n    this._autocompleteDisabled = val;\n    this._bindAutocompleteItems();\n  }\n  get autocompleteDisabled() {\n    return this._autocompleteDisabled;\n  }\n  private _autocompleteDisabled = false;\n\n  /** Whether or not the autocomplete panel is open. */\n  get panelOpen(): boolean {\n    return this._overlayAttached && this.autocomplete.showPanel;\n  }\n  private _overlayAttached: boolean = false;\n\n  /** Stream of autocomplete option selections. */\n  readonly optionSelections: Observable<NxAutocompleteOptionSelected> = defer<Observable<NxAutocompleteOptionSelected>>(() => {\n    if (this.autocomplete && this.autocomplete.options) {\n     return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n    }\n\n    // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n    // Return a stream that we'll replace with the real one once everything is in place.\n    return this._zone.onStable\n        .asObservable()\n        .pipe(take(1), switchMap(() => this.optionSelections));\n  });\n\n  /** The currently active option, coerced to NxAutocompleteOptionComponent type. */\n  get activeOption(): NxAutocompleteOptionComponent | null {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n\n    return null;\n  }\n\n  /** Stream of clicks outside of the autocomplete panel. */\n  private get _outsideClickStream(): Observable<any> {\n    if (!this._document) {\n      return of(null);\n    }\n\n    return merge(\n      fromEvent(this._document, 'click'),\n      fromEvent(this._document, 'touchend')\n    )\n    .pipe(filter((event: MouseEvent | TouchEvent) => {\n      const clickTarget = event.target as HTMLElement;\n      const formField = this._formField ?\n          this._formField.elementRef.nativeElement : null;\n\n      return this._overlayAttached &&\n              clickTarget !== this._element.nativeElement &&\n              (!formField || !formField.contains(clickTarget)) &&\n              (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n    }));\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = (val) => {\n    this._valueChanges.next(val);\n  }\n\n  /** `View -> model callback called when autocomplete has been touched` */\n  _onTouched = () => {};\n\n  private get _formField(): NxFormfieldComponent | NxWordComponent {\n    if (this._nxFormField) {\n      return this._nxFormField;\n    } else if (this._nxWordField) {\n      return this._nxWordField;\n    }\n  }\n\n  constructor(private _element: ElementRef, private _overlay: Overlay,\n              private _viewContainerRef: ViewContainerRef,\n              private _zone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Optional() @Host() private _nxFormField: NxFormfieldComponent,\n              @Optional() @Host() private _nxWordField: NxWordComponent,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              // @deletion-target 7.0.0 Make `_viewportRuler` required.\n              private _viewportRuler?: ViewportRuler) {}\n\n  ngOnDestroy() {\n    this._viewportSubscription.unsubscribe();\n    this._componentDestroyed = true;\n    this._destroyPanel();\n    this._closeKeyEventStream.complete();\n    if (this._controlValueChangesSubscription) { this._controlValueChangesSubscription.unsubscribe(); }\n    if (this._itemsSubscription) { this._itemsSubscription.unsubscribe(); }\n  }\n\n  ngOnChanges() {\n    this._bindAutocompleteItems();\n  }\n\n  ngAfterViewInit() {\n    this._bindAutocompleteItems();\n  }\n\n  /**\n   * Binds or rebinds the autocomplete items. Prerequisites:\n   * - items callback has to be defined\n   * - autocomplete panel has to be bound\n   */\n  private _bindAutocompleteItems() {\n    if (this._controlValueChangesSubscription) {\n      this._controlValueChangesSubscription.unsubscribe();\n    }\n\n    if (typeof this._itemsCb === 'function' && this.autocomplete && !this.autocompleteDisabled) {\n\n      const itemsSubject = new Subject<string[]>();\n\n      this.autocomplete.items = itemsSubject;\n\n      const valueChanges =\n        this._formField &&\n        this._formField._control &&\n        this._formField._control.ngControl &&\n        this._formField._control.ngControl.valueChanges ?\n          this._formField._control.ngControl.valueChanges : this._valueChanges;\n\n      this._controlValueChangesSubscription = valueChanges.pipe(debounceTime(this._debounce))\n        .subscribe((input) => {\n          if (this._itemsSubscription) {\n            this._itemsSubscription.unsubscribe();\n          }\n          this._itemsSubscription = this._itemsCb(input).pipe(first()).subscribe(\n            (result) => {\n              itemsSubject.next(result);\n            },\n            (err) => {\n              // On error reset\n              // TODO: Log error?\n              itemsSubject.next([]);\n            }\n          );\n        });\n    }\n  }\n\n  /** Opens the autocomplete suggestion panel. */\n  openPanel(): void {\n    if (!this.autocompleteDisabled) {\n      this._attachOverlay();\n      this._floatLabel();\n    }\n  }\n\n  /** Closes the autocomplete suggestion panel. */\n  closePanel(): void {\n    this._resetLabel();\n\n    if (!this._overlayAttached) {\n      return;\n    }\n\n    if (this.panelOpen) {\n      // Only emit if the panel was visible.\n      this.autocomplete.closed.emit();\n    }\n\n    this.autocomplete._isOpen = this._overlayAttached = false;\n\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n\n    // Note that in some cases this can end up being called after the component is destroyed.\n    // Add a check to ensure that we don't try to run change detection on a destroyed view.\n    if (!this._componentDestroyed) {\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the label is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  get panelClosingActions(): Observable<NxAutocompleteOptionSelected> {\n    return merge(\n      this.optionSelections,\n      this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)),\n      this._closeKeyEventStream,\n      this._outsideClickStream,\n      this._overlayRef ?\n          this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n          of()\n    );\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean) {\n    this._element.nativeElement.disabled = isDisabled;\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n    // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n    if (this.panelOpen && (keyCode === ESCAPE || (keyCode === UP_ARROW && event.altKey))) {\n      this._resetActiveItem();\n      this._closeKeyEventStream.next();\n      event.stopPropagation();\n    } else if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else {\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n      if (this.panelOpen || keyCode === TAB) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey && this._isFieldEnabled()) {\n        this.openPanel();\n      }\n\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n        this._scrollToOption();\n      }\n    }\n  }\n\n  _handleInput(event: KeyboardEvent): void {\n    const target = event.target as HTMLInputElement;\n    let value: number | string | null = target.value;\n\n    // Based on `NumberValueAccessor` from forms.\n    if (target.type === 'number') {\n      value = value === '' ? null : parseFloat(value);\n    }\n\n    // If the input has a placeholder, IE will fire the `input` event on page load,\n    // focus and blur, in addition to when the user actually changed the value. To\n    // filter out all of the extra events, we save the value on focus and between\n    // `input` events, and we check whether it changed.\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\n    if (this._isFieldEnabled() && this._previousValue !== value &&\n      document.activeElement === event.target) {\n      this._previousValue = value;\n      this._onChange(value);\n      this.openPanel();\n    }\n  }\n\n  _handleFocus(): void {\n    if (this._isFieldEnabled()) {\n      this._previousValue = this._element.nativeElement.value;\n      this.openPanel();\n    }\n  }\n\n  /**\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\n   * This causes the value to jump when selecting an option with the mouse.\n   * This method manually floats the label until the panel can be closed.\n   * @param shouldAnimate Whether the label should be animated when it is floated.\n   */\n  private _floatLabel(): void {\n    if (this._nxFormField && this._nxFormField.floatLabel === 'auto') {\n      this._nxFormField.floatLabel = 'always';\n      this._manuallyFloatingLabel = true;\n    }\n  }\n\n  /** If the label has been manually elevated, return it to its normal state. */\n  private _resetLabel(): void  {\n    if (this._manuallyFloatingLabel) {\n      this._nxFormField.floatLabel = 'auto';\n      this._manuallyFloatingLabel = false;\n    }\n  }\n\n  /**\n   * Given that we are not actually focusing active options, we must manually adjust scroll\n   * to reveal options below the fold. First, we find the offset of the option from the top\n   * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n   * the panel height + the option height, so the active option will be just visible at the\n   * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n   * will become the offset. If that offset is visible within the panel already, the scrollTop is\n   * not adjusted.\n   */\n  private _scrollToOption(): void {\n\n    if (this.autocomplete.options.length === 0) {\n      return;\n    }\n    let optionOffset = 0;\n    const optionHeight = this.autocomplete.options.first.elementRef.nativeElement.offsetHeight;\n    if (this.autocomplete._keyManager.activeItem) {\n      optionOffset = this.autocomplete._keyManager.activeItem.elementRef.nativeElement.offsetTop;\n    }\n\n    const newScrollPosition = _getOptionScrollPosition(\n      optionOffset,\n      optionHeight,\n      this.autocomplete._getScrollTop(),\n      this.autocomplete.panel.nativeElement.offsetHeight\n    );\n\n    this.autocomplete._setScrollTop(newScrollPosition);\n  }\n\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  private _subscribeToClosingActions(): Subscription {\n    const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n    const optionChanges = this.autocomplete.options.changes.pipe(\n      tap(() =>  this._positionStrategy.reapplyLastPosition()),\n      // Defer emitting to the stream until the next tick, because changing\n      // bindings in here will cause \"changed after checked\" errors.\n      delay(0)\n    );\n\n    // When the zone is stable initially, and when the option list changes...\n    return merge(firstStable, optionChanges)\n      .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n          this._resetActiveItem();\n          this.autocomplete._setVisibility();\n          return this.panelClosingActions;\n        }),\n        // when the first closing event occurs...\n        take(1)\n      )\n      // set the value, close the panel, and complete.\n      .subscribe(event => this._setValueAndClose(event));\n  }\n\n  /** Destroys the autocomplete suggestion panel. */\n  private _destroyPanel(): void {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  private _setTriggerValue(value: any): void {\n\n    const toDisplay = this.autocomplete && this.autocomplete.valueFormatter ?\n      this.autocomplete.valueFormatter(value) :\n      value;\n\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const inputValue = toDisplay != null ? toDisplay : '';\n\n    // If it's used within a `NxFormField` or `NxWord`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = inputValue;\n    } else {\n      this._element.nativeElement.value = inputValue;\n    }\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  private _setValueAndClose(event: NxAutocompleteOptionSelected | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      this._onChange(event.source.value);\n      this._element.nativeElement.focus();\n      this.autocomplete._emitSelectEvent(event.source);\n    }\n\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  private _clearPreviousSelectedOption(skip: NxAutocompleteOptionComponent) {\n    this.autocomplete.options.forEach(option => {\n      if (option !== skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _attachOverlay(): void {\n    if (!this.autocomplete) {\n      throw getNxAutocompleteMissingPanelError();\n    }\n\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n      this._overlayRef = this._overlay.create(this._getOverlayConfig());\n\n      if (this._viewportRuler) {\n        this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n          if (this.panelOpen && this._overlayRef) {\n            this._overlayRef.updateSize({minWidth: this._getHostWidth()});\n          }\n        });\n      }\n    } else {\n      /** Update the panel width, in case the host width has changed */\n      this._overlayRef.updateSize({minWidth: this._getHostWidth()});\n    }\n\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._portal);\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n\n    const wasOpen = this.panelOpen;\n\n    this.autocomplete._setVisibility();\n    this.autocomplete._isOpen = this._overlayAttached = true;\n\n    // We need to do an extra `panelOpen` check in here, because the\n    // autocomplete won't be shown if there are no options.\n    if (this.panelOpen && wasOpen !== this.panelOpen) {\n      this.autocomplete.opened.emit();\n    }\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPosition(),\n      scrollStrategy: this._scrollStrategy(),\n      minWidth: this._getHostWidth(),\n      direction: this._dir ? this._dir.value : 'ltr'\n    });\n  }\n\n  private _getOverlayPosition(): PositionStrategy {\n    this._positionStrategy = this._overlay.position()\n      .flexibleConnectedTo(this._getConnectedElement())\n      .withViewportMargin(16)\n      .withPush(false)\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom',\n        }\n      ]);\n\n    return this._positionStrategy;\n  }\n\n  private _scrollStrategy() {\n    return this._overlay.scrollStrategies.reposition();\n  }\n\n  private _getConnectedElement(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n  }\n\n  /** Returns the width of the input element, so the panel min-width can match it. */\n  private _getHostWidth(): number {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  /**\n   * Resets the active item to -1 so arrow events will activate the\n   * correct options, or to 0 if the consumer opted into it.\n   */\n  private _resetActiveItem(): void {\n    this.autocomplete._keyManager.setActiveItem(-1);\n  }\n\n  /** Determines whether the panel can be opened. */\n  private _isFieldEnabled(): boolean {\n    const element: HTMLInputElement = this._element.nativeElement;\n    return !element.readOnly && !element.disabled;\n  }\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Option offset\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset: number, optionHeight: number,\n  currentScrollPosition: number, panelHeight: number): number {\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAutocompleteComponent } from './autocomplete.component';\nimport { NxAutocompleteOptionComponent } from './autocomplete-option.component';\nimport { NxAutocompleteTriggerDirective } from './autocomplete-trigger.directive';\n\n@NgModule({\n  declarations: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n  exports: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n  imports: [CommonModule, OverlayModule, A11yModule]\n})\nexport class NxAutocompleteModule { }\n","import { NxFormfieldControl, NxFormfieldErrorDirective } from '@allianz/ngx-ndbx/formfield';\nimport { getFontShorthand } from '@allianz/ngx-ndbx/utils';\nimport { Overlay } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subject ,  Subscription } from 'rxjs';\n\nimport { NxPopoverTriggerDirective } from '@allianz/ngx-ndbx/popover';\nimport { NxDropdownComponent } from '@allianz/ngx-ndbx/dropdown';\n\n/** Type to determine the minimal width of a word. */\nexport type SIZES = 'regular' | 'short' | 'long';\n\n@Component({\n  selector: 'nx-word',\n  templateUrl: 'word.component.html',\n  styleUrls: [\n    'word.component.scss'\n  ],\n  host: {\n    '[class.size-short]': 'size == \"short\"',\n    '[class.size-regular]': 'size == \"regular\"',\n    '[class.size-long]': 'size == \"long\"',\n    '[class.has-error]': 'hasErrors',\n    '[class.is-focused]': 'isFocused',\n    '[class.is-filled]': 'isFilled',\n    '[class.has-dropdown]': 'hasDropdown',\n\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class NxWordComponent implements AfterContentInit, OnDestroy {\n  private subscription: Subscription = Subscription.EMPTY;\n  private subscriptionValues: Subscription = Subscription.EMPTY;\n\n  /** @docs-private */\n  public hasErrors: boolean = false;\n\n  private measureCanvas: HTMLCanvasElement;\n\n  /** @docs-private */\n  inputChanges = new Subject<any>();\n\n  @ContentChild(NxFormfieldControl) _control: NxFormfieldControl<any>;\n  @ContentChildren(NxFormfieldErrorDirective) _errorChildren: QueryList<NxFormfieldErrorDirective>;\n  @ViewChild(NxPopoverTriggerDirective) _popover: NxPopoverTriggerDirective;\n  @ContentChild(NxDropdownComponent) _dropdown: NxDropdownComponent;\n\n  /** @docs-private */\n  @HostBinding('style.width.px')\n  currentTextWidth: number = 0;\n\n\n  // this will apply different min-widths to our component through our styles\n  /** Provide a hint for a minimal width. The actual size will be determined for inputs for each change. */\n  @Input('nxSize') size: SIZES = 'regular';\n\n  /**\n   * A word doesn't have a set place to show labels.\n   * In order to be accessible, you have to provide a label with this property.\n   * It will be attached to the given input through `aria-label`.\n   */\n  @Input('nxLabel') label: string;\n\n  constructor(\n    /** @docs-private */\n    public elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _overlay: Overlay\n  ) { }\n\n  ngAfterContentInit() {\n    this._validateControlChild();\n\n    this.subscription = this._control.stateChanges.pipe(startWith(null)).subscribe(() => {\n      this.hasErrors = this._control.errorState;\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // if we have a ngcontrol available stick to its valueChanges subject\n    if (this._control.ngControl) {\n      this.subscriptionValues = this._control.ngControl.valueChanges.subscribe(value => {\n        this.updateCurrentTextWidth();\n        this.inputChanges.next();\n      });\n    // in any other case it is a bre input and input changes are signaled through simple state changes\n    } else {\n      this.subscriptionValues = this._control.stateChanges.subscribe(value => {\n        this.updateCurrentTextWidth();\n        this.inputChanges.next();\n      });\n    }\n\n\n    this._control.setAriaLabel(this.label);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n    @docs-private\n    Calculate the width of the full text given by the input,\n    that value is bound to this component so it can grow.\n\n    The involved input is known to have a width of 100% an will fit the additional space given\n    which completes the auto growing behavior.\n  */\n  updateCurrentTextWidth() {\n    // provide the canvas only lazy\n    if (!this.measureCanvas) {\n      this.measureCanvas = this._renderer.createElement('canvas');\n    }\n\n\n    const ctx = this.measureCanvas.getContext('2d');\n    const inputRef = this._control.elementRef;\n    const styles = window.getComputedStyle(inputRef.nativeElement);\n    ctx.font = getFontShorthand(styles);\n\n    const metrics = ctx.measureText(this._control.value);\n    // add 1px (cursor width) to prevent jumping of the text on blur.\n    const newWidth = metrics.width + parseInt(styles.paddingRight, 10) + parseInt(styles.paddingLeft, 10) + 1;\n\n    // This should be injected via @Host to get an exact reference to NxNaturalLanguageFormComponent\n    // Works as promised as long as there is not other tag around the word. Not expected but possible.\n    const parent: HTMLElement = this.elementRef.nativeElement.parentElement;\n    const parentMeasurement = parent.getBoundingClientRect();\n\n    // Limit to own given minimal width\n    this.currentTextWidth = Math.max(parseInt(styles.minWidth, 10), newWidth);\n\n    // Limit to container width\n    this.currentTextWidth = Math.min(this.currentTextWidth, parentMeasurement.width);\n    this._popover.updatePosition();\n  }\n\n  /** @docs-private */\n  repositionError() {\n    if (this._popover) {\n      this._popover.updatePosition();\n    }\n  }\n\n  // Fail if the required control is missing.\n  protected _validateControlChild() {\n    if (!this._control) {\n      throw new Error('NxWordComponent requires an NxFormfieldControl compatible input.');\n    }\n  }\n\n  /** @docs-private */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this.elementRef;\n  }\n\n  /** @docs-private */\n  get isFocused(): boolean {\n    return this._control.focused;\n  }\n\n  /** @docs-private */\n  get isFilled(): boolean {\n    return !this._control.empty;\n  }\n\n  /** @docs-private */\n  get hasDropdown(): boolean {\n    return Boolean(this._dropdown);\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { delay, throttleTime } from 'rxjs/operators';\n\nimport { NxWordComponent } from './word.component';\n\n/** Size of the NLF. */\nexport type NxNaturalLanguageFormSize = 'small' | 'large';\n\nconst DEFAULT_SIZE = 'large';\n\n@Component({\n  selector: 'nx-natural-language-form',\n  templateUrl: 'natural-language-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['natural-language-form.scss'],\n  host: {\n    '[class.is-negative]': 'negative',\n    '[class.nx-natural-language-form--small]' : 'size === \"small\"',\n    '[class.nx-natural-language-form--large]' : 'size === \"large\"',\n  }\n})\n\nexport class NxNaturalLanguageFormComponent implements AfterContentInit, OnDestroy {\n  private _negative = false;\n\n  /** @docs-private */\n  resizeEvent$: Subject<void> = new Subject<void>();\n\n  /** @docs-private */\n  resizeObservable: Observable<void>;\n\n  @ContentChildren(NxWordComponent) _words: QueryList<NxWordComponent>;\n\n  /** @docs-private */\n  updatePopoversSubscription: Subscription = Subscription.EMPTY;\n\n  /** @docs-private */\n  private _size: NxNaturalLanguageFormSize = DEFAULT_SIZE;\n\n  /** Whether the negative set of stylings should be used. */\n  @Input('nxNegative')\n  set negative(value) {\n    this._negative = coerceBooleanProperty(value);\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  /**\n   * Sets the size of the NLF. Default value: large\n   */\n  @Input()\n  set size(value: NxNaturalLanguageFormSize) {\n    this._size = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get size(): NxNaturalLanguageFormSize {\n    return this._size;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  @HostListener('window:orientationchange', ['$event'])\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.resizeEvent$.next();\n  }\n\n  ngAfterContentInit() {\n    // Collect all words and listen for changes so we can update any open error popover\n    // which would otherwise get wrongly positioned.\n    const subjects = this._words.map((word: NxWordComponent) => word.inputChanges);\n    const source = merge(...subjects);\n\n    this.updatePopoversSubscription = source.subscribe( () => {\n      this.updatePositionPopovers();\n    });\n\n    this.resizeObservable = this.resizeEvent$.pipe(throttleTime(500), delay(100));\n    this.resizeObservable.subscribe(() => this.resizeWords());\n  }\n\n  /** @docs-private */\n  resizeWords() {\n    this._words.forEach((word: NxWordComponent) => {\n      word.updateCurrentTextWidth();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updatePopoversSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  updatePositionPopovers() {\n    if (this._words) {\n      this._words.forEach((word: NxWordComponent) => {\n        word.repositionError();\n      });\n    }\n  }\n}\n","import { NxPopoverModule } from '@allianz/ngx-ndbx/popover';\nimport { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { NxWordComponent } from './word.component';\nimport { NxNaturalLanguageFormComponent } from './natural-language-form.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxInputModule,\n    NxPopoverModule\n  ],\n  declarations: [\n    NxNaturalLanguageFormComponent,\n    NxWordComponent\n  ],\n  exports: [\n    NxNaturalLanguageFormComponent,\n    NxWordComponent\n  ]\n})\nexport class NxNaturalLanguageFormModule {}\n","import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** The contextual type of a message. */\nexport type CONTEXT = 'regular' | 'info' | 'error' | 'success' | 'warning';\n\nconst ICONS = {\n  info: 'info-circle',\n  error: 'exclamation-circle',\n  success: 'check-circle',\n  warning: 'exclamation-triangle'\n};\n\n@Component({\n  selector: 'nx-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'nxMessage',\n  host: {\n    '[class.context-info]': 'context === \"info\"',\n    '[class.context-error]': 'context === \"error\"',\n    '[class.context-success]': 'context === \"success\"',\n    '[class.context-warning]': 'context === \"warning\"',\n    '[class.nx-message--closable]': 'closable'\n\n  }\n})\nexport class NxMessageComponent {\n\n  private _context: CONTEXT = 'regular';\n\n  /**\n   * Sets the context of the message.\n   * The message box will color accordingly. Default: 'regular' */\n  @Input('nxContext')\n  set context(value: CONTEXT) {\n    if (value !== this._context) {\n      this._context = value;\n      this._icon = this.getIconName();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get context(): CONTEXT {\n    return this._context;\n  }\n\n  private _showIcon: boolean = false;\n\n  /**\n   * Whether an icon that belongs to the context of the message should be displayed.\n   * @deprecated The `showIcon` attribute should be always true in future. Messages without an icon are deprecated.\n   * @deletion-target 9.0.0\n   * */\n  @Input()\n  set showIcon(value: boolean) {\n    this._showIcon = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showIcon(): boolean {\n    return this._showIcon;\n  }\n\n  private _closable: boolean = false;\n\n  /** Whether a message should have a close icon in order to be dismissed. */\n  @Input()\n  set closable(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._closable) {\n      this._closable = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closable(): boolean {\n    return this._closable;\n  }\n\n  private _icon: string;\n\n  /** @docs-private */\n  get icon(): string {\n    return this._icon;\n  }\n\n  private _closeButtonLabel: string = 'Close dialog';\n\n  /** Sets the label of the close button of the message. */\n  @Input()\n  set closeButtonLabel(value: string) {\n    if (value !== this._closeButtonLabel) {\n      this._closeButtonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closeButtonLabel(): string {\n    return this._closeButtonLabel;\n  }\n\n\n  /** Event emitted when the close icon of the message has been clicked. */\n  @Output('close') closeEvent = new EventEmitter<void>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  _emitCloseEvent() {\n    this.closeEvent.emit();\n  }\n\n  /** @docs-private */\n  getIconName(): string {\n    if (this._context === 'info') {\n      return ICONS.info;\n    } else if (this._context === 'error') {\n      return ICONS.error;\n    } else if (this._context === 'success') {\n      return ICONS.success;\n    } else if (this._context === 'warning') {\n      return ICONS.warning;\n    }\n    return '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxMessageComponent } from './message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxMessageComponent\n  ],\n  exports: [\n    NxMessageComponent\n  ]\n})\nexport class NxMessageModule {\n\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'nx-page-search',\n  templateUrl: 'page-search.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ 'page-search.component.scss' ],\n})\nexport class NxPageSearchComponent {\n  /** An event emitted when the user clicks the search button. */\n  @Output('nxButtonClick') buttonClick = new EventEmitter();\n\n  private _buttonLabel: string = null;\n\n  /** Sets the text label of the button. */\n  @Input('nxButtonLabel')\n  set buttonLabel(value: string) {\n    if (this._buttonLabel !== value) {\n      this._buttonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get buttonLabel(): string {\n    return this._buttonLabel;\n  }\n\n  private _hideSearchButton = false;\n\n  /** Whether the search button should be hidden. */\n  @Input('nxHideSearchButton')\n  set hideSearchButton(value: boolean) {\n    this._hideSearchButton = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get hideSearchButton(): boolean {\n    return this._hideSearchButton;\n  }\n\n  private _buttonLayout = '12,12,12,2';\n\n  /** Layout of the search button inside of a NxGrid. Default: 12,12,12,2. */\n  @Input('nxButtonLayout')\n  set buttonLayout(value: string) {\n    if (this._buttonLayout !== value) {\n      this._buttonLayout = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get buttonLayout(): string {\n    return this._buttonLayout;\n  }\n\n  private _contentLayout: string = null;\n\n  /** Layout of the content area inside of a NxGrid. Default: 12,12,12,10 | 12 (if search button is hidden). */\n  @Input('nxContentLayout')\n  set contentLayout(value: string) {\n    if (this._contentLayout !== value) {\n      this._contentLayout = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get contentLayout(): string {\n    if (this._contentLayout) {\n      return this._contentLayout;\n    }\n    return !this.hideSearchButton ? '12,12,12,10' : '12';\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  onButtonClick() {\n    this.buttonClick.emit();\n  }\n}\n","import { NxGridModule } from '@allianz/ngx-ndbx/grid';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NxAutocompleteModule} from '@allianz/ngx-ndbx/autocomplete';\nimport {NxFormfieldModule} from '@allianz/ngx-ndbx/formfield';\nimport {NxPageSearchComponent} from './page-search.component';\nimport {NxButtonModule} from '@allianz/ngx-ndbx/button';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxAutocompleteModule,\n    NxFormfieldModule,\n    NxButtonModule,\n    NxGridModule\n  ],\n  declarations: [\n    NxPageSearchComponent\n  ],\n  exports: [\n    NxPageSearchComponent\n  ]\n})\nexport class NxPageSearchModule {\n\n}\n","import { NxIconComponent } from '@allianz/ngx-ndbx/icon';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'nx-rating',\n  templateUrl: './rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./rating.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRatingComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-rating--negative]': 'negative',\n    '[class.nx-rating--disabled]': 'disabled',\n  }\n})\nexport class NxRatingComponent implements ControlValueAccessor {\n\n  private _value: number = 0;\n  /** Sets the selected rating 1 - 5. */\n  @Input('nxValue')\n  set value(newValue: number) {\n    this._value = coerceNumberProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  private _disabled: boolean = false;\n  /** Whether the rating component should be disabled. */\n  @Input('nxDisabled')\n  set disabled( newValue: boolean) {\n    if (this._disabled === newValue) {\n      return;\n    }\n    this._disabled = coerceBooleanProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the negative colors be used. */\n  @Input('nxNegative')\n  set negative(newValue: boolean) {\n    if (this._negative === newValue) {\n      return;\n    }\n    this._negative = coerceBooleanProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _startLabel: string = null;\n  /** Sets the label painted at the start of the rating component. */\n  @Input('nxStartLabel')\n  set startLabel(newValue: string) {\n    this._startLabel = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get startLabel(): string {\n    return this._startLabel;\n  }\n\n  private _endLabel: string = null;\n  /** Sets the label painted at the end of the rating component. */\n  @Input('nxEndLabel')\n  set endLabel(newValue: string) {\n    this._endLabel = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get endLabel(): string {\n    return this._endLabel;\n  }\n\n  private _ariaLabel: string[] = ['1/5', '2/5', '3/5', '4/5', '5/5'];\n  @Input('nxAriaLabel')\n  /** Sets an array of custom aria-describedby attributes for each of the stars in the component. */\n  set ariaLabel(newAriaLabels: string[]) {\n    this._ariaLabel = newAriaLabels;\n    this._changeDetectorRef.markForCheck();\n  }\n  get ariaLabel(): string[] {\n    return this._ariaLabel;\n  }\n  /** An event is dispatched each time when the rating changes. */\n  @Output('nxValueChange') valueChange = new EventEmitter<number>();\n\n  /** @docs-private */\n  @ViewChildren(NxIconComponent, {read: ElementRef}) icons: QueryList<ElementRef>;\n  private onTouchedCallback = () => {};\n  private onChangeCallback = (option: any) => {};\n\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** Whether the given rating is selected. */\n  isSelected(index: number) {\n    return index <= this.value;\n  }\n\n  /** Allows to set the rating. */\n  setSelection(value: number) {\n    if (!this.disabled) {\n      this.value = value;\n      this.valueChange.emit(value);\n      this.onTouchedCallback();\n      this.onChangeCallback(this.value);\n    }\n  }\n\n  /** @docs-private */\n  handleKeyUp(event: KeyboardEvent, rating: number) {\n    const keyCode = event.keyCode;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (keyCode === ENTER) {\n      this.setSelection(rating);\n    }\n\n    if (keyCode === RIGHT_ARROW) {\n      this.value = Math.min(this.value + 1, 5);\n      const elementRef: ElementRef = this.icons.toArray()[this.value - 1];\n      elementRef.nativeElement.focus();\n    }\n\n    if (keyCode === LEFT_ARROW) {\n      this.value = Math.max(this.value - 1, 1);\n      const elementRef: ElementRef = this.icons.toArray()[this.value - 1];\n      elementRef.nativeElement.focus();\n    }\n  }\n\n  writeValue(value: number): void {\n    this.value = value;\n  }\n\n  registerOnChange(callback: any): void {\n    this.onChangeCallback = callback;\n  }\n\n  registerOnTouched(callback: any): void {\n    this.onTouchedCallback = callback;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  getAriaLabel(rating) {\n    return this.ariaLabel[rating - 1];\n  }\n\n  /** @docs-private */\n  getIconName(rating: number) {\n    return 'star' + ((!this.isSelected(rating)) ? '-o' : '');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxRatingComponent} from './rating.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxRatingComponent\n  ],\n  exports: [\n    NxRatingComponent\n  ]\n})\nexport class NxRatingModule {\n\n}\n","import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n\n\n@Injectable()\nexport class NxNumberStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** The aria label for the decrement '-' button */\n  decrementAriaLabel: string = 'Decrement';\n  /** The aria label for the increment '+' button */\n  incrementAriaLabel: string = 'Increment';\n}\n","import { getFontShorthand } from '@allianz/ngx-ndbx/utils';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\n\n/** @docs-private */\n@Directive({\n  selector: 'input[nxAutoResize]'\n})\nexport class NxAutoResizeDirective implements AfterViewInit, OnDestroy {\n\n  @HostBinding('style.width.px') width: number;\n\n  private _resize: boolean = true;\n  @Input('nxAutoResize')\n  set resize(value: boolean) {\n    this._resize = coerceBooleanProperty(value);\n    if (this._resize) {\n      this._addEventListener();\n      this.updateInputWidth();\n    } else {\n      this._removeEventListener();\n    }\n  }\n  get resize(): boolean {\n    return this._resize;\n  }\n\n  constructor(private _element: ElementRef,\n              private _renderer: Renderer2,\n              private _cdr: ChangeDetectorRef) {\n    this.updateInputWidth = this.updateInputWidth.bind(this);\n  }\n\n  ngAfterViewInit() {\n    if (this.resize) {\n      this._addEventListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this._removeEventListener();\n  }\n\n  updateInputWidth() {\n    const measureCanvas = this._renderer.createElement('canvas');\n\n    const ctx = measureCanvas.getContext('2d');\n    const styles = window.getComputedStyle(this._element.nativeElement);\n\n    ctx.font = getFontShorthand(styles);\n\n    const metrics = ctx.measureText(this._element.nativeElement.value);\n\n    const padding = this.sumStyles(styles.paddingLeft, styles.paddingRight);\n    const border = this.sumStyles(styles.borderLeftWidth, styles.borderRightWidth);\n    // the pixels are needed, because despite the correct calculation the last pixels of a number are always cut\n    const newWidth = metrics.width + padding + border + 16;\n\n    // Limit to own given minimal width\n    const parsed = parseFloat(styles.minWidth);\n    this.width = Math.max(Number.isNaN(parsed) ? 0 : parsed, newWidth);\n\n    // needed when the outer component is onPush\n    this._cdr.markForCheck();\n  }\n\n  _addEventListener() {\n    this._element.nativeElement.addEventListener('input', this.updateInputWidth, true);\n    this._element.nativeElement.addEventListener('change', this.updateInputWidth, true);\n  }\n\n  _removeEventListener() {\n    this._element.nativeElement.removeEventListener('input', this.updateInputWidth, true);\n    this._element.nativeElement.removeEventListener('change', this.updateInputWidth, true);\n  }\n\n  sumStyles(left, right) {\n    left = parseInt(left, 10);\n    right = parseInt(right, 10);\n    left = Number.isNaN(left) ? 0 : left;\n    right = Number.isNaN(right) ? 0 : right;\n    return left + right;\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { NxNumberStepperIntl } from './number-stepper-intl';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mapClassNames, numberOfDecimals, pad } from '@allianz/ngx-ndbx/utils';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n  OnDestroy\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\n\nimport { MappedStyles } from '@allianz/ngx-ndbx/core';\nimport { NxAutoResizeDirective } from './auto-resize.directive';\nimport { Decimal } from 'decimal.js';\n\nconst SIZE_MAPPING = {\n  big: 'nx-stepper--big',\n  normal: ''\n};\nconst STYLE_MAPPING = {\n  regular: '',\n  bold: 'nx-stepper__input--bold',\n  light: 'nx-stepper__input--light'\n};\nconst DEFAULT_CLASSES = ['nx-stepper'];\nconst INPUT_CLASSES = ['nx-stepper__input'];\n\nconst ALLOWED_CHARACTERS = new RegExp(/^-?[0-9]\\d*(\\.\\d+)?$/g);\nconst CUSTOM_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NxNumberStepperComponent),\n  multi: true\n};\nconst CUSTOM_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NxNumberStepperComponent),\n  multi: true\n};\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'nx-number-stepper',\n  templateUrl: 'number-stepper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['number-stepper.component.scss'],\n  inputs: ['classNames: nxSize'],\n  host: {\n    '[class.is-negative]': 'negative'\n  },\n  providers: [CUSTOM_VALUE_ACCESSOR, CUSTOM_VALIDATOR]\n})\nexport class NxNumberStepperComponent extends MappedStyles\n  implements OnInit, AfterViewInit, ControlValueAccessor, Validator, OnDestroy {\n  private _step: number = 1;\n  private _min: number = 0;\n  private _max: number = 100;\n  private _value: number = 0;\n  private _label = null;\n  private _resize: boolean = false;\n  private _intlSubscription: Subscription;\n  private _negative: boolean = false;\n  private _leadingZero: boolean = true;\n\n  /**\n   * Defines the size of the number stepper.\n   *\n   * Values: big | normal. Default: normal\n   */\n  classNames: string;\n\n  /** @docs-private */\n  public inputClassNames: string = mapClassNames(\n    'regular',\n    INPUT_CLASSES,\n    STYLE_MAPPING\n  );\n  private _style: string;\n\n  /** @docs-private */\n  public inputId = `nx-number-stepper-${nextUniqueId++}`;\n\n  /** @docs-private */\n  public inputWidth;\n\n  /** @docs-private */\n  public ariaDescribedBy = null;\n\n  /** @docs-private */\n  @ViewChild('numberInput') numberInput: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('customLabel') ngContentWrapper: ElementRef;\n\n  /** @docs-private */\n  @ViewChild(NxAutoResizeDirective) autoResize: NxAutoResizeDirective;\n\n  /** An event emitted on value change. */\n  @Output('nxValueChange') valueChange = new EventEmitter<number>();\n\n  /** Whether the input should be resized. Default: false */\n  @Input('nxResize')\n  set resize(value: boolean) {\n    this._resize = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get resize(): boolean {\n    return this._resize;\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  /** Defines the the label shown above the stepper input. */\n  @Input('nxLabel')\n  set label(value: string) {\n    if (this._label !== value) {\n      this._label = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get style(): string {\n    return this._style;\n  }\n\n  /**\n   * Defines the font weight of the input.\n   *\n   * Possible values: regular, bold, light. Default value: regular\n   *\n   * @deprecated The style input is not available anymore, only default font-weight should be used.\n   * @deletion-target 8.0.0\n   */\n  @Input('nxStyle')\n  set style(value: string) {\n    if (this._style === value) {\n      return;\n    }\n    this._style = value;\n    this.inputClassNames = mapClassNames(value, INPUT_CLASSES, STYLE_MAPPING);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Sets the step size. Default: 1 */\n  @Input('nxStep')\n  set step(value: number) {\n    // only internal changes no need to call markForCheck\n    this._step = Number(value);\n  }\n\n  get step(): number {\n    return this._step;\n  }\n\n  /** Sets the minimum accepted number. Default: 0 */\n  @Input('nxMin')\n  set min(value: number) {\n    this._min = Number(value);\n  }\n\n  get min(): number {\n    return this._min;\n  }\n\n  /** Sets the maximum accepted number. Default: 100 */\n  @Input('nxMax')\n  set max(value: number) {\n    this._max = Number(value);\n  }\n\n  get max(): number {\n    return this._max;\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  /** Sets the value of the number-stepper. */\n  @Input('nxValue')\n  set value(value: number | null) {\n    this._value = value;\n    if (this._value !== null) {\n      this.setInputValue(this._value);\n    } else {\n      this.setInputValue(0);\n    }\n    this.triggerResize();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Whether the negative set of styling should be used. */\n  @Input()\n  set negative(value: boolean) {\n    if (this._negative !== value) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  /** Whether the number stepper value should have a leading zero.\n   *\n   * Default value is true.\n   */\n  @Input()\n  set leadingZero(value: boolean) {\n    if (this._leadingZero !== value) {\n      this._leadingZero = coerceBooleanProperty(value);\n      this.setInputValue(this.value);\n    }\n  }\n  get leadingZero(): boolean {\n    return this._leadingZero;\n  }\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    _renderer: Renderer2,\n    _elementRef: ElementRef,\n    public _intl: NxNumberStepperIntl\n  ) {\n    super(SIZE_MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);\n    this._intlSubscription = this._intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  ngOnInit() {\n    this.setInputValue(this._value);\n  }\n\n  ngAfterViewInit() {\n    // defer to prevent checked after change errors\n    if (this.resize) {\n      setTimeout(() => this.triggerResize());\n    }\n    if (this.ngContentWrapper) {\n      this.ariaDescribedBy = this.ngContentWrapper.nativeElement.children.length > 0 ? `label-for-${this.inputId}` : null;\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  setInputValue(value) {\n    if (this.leadingZero) {\n      this.numberInput.nativeElement.value = pad(value.toString(), 2);\n    } else {\n      this.numberInput.nativeElement.value = value.toString();\n    }\n  }\n\n  /* ControlValueAccessor Implementations */\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  private onChangeCallback = (_: any) => { };\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => { };\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  /** @docs-private */\n  onInputChange(event) {\n    if (!this.validateUserInput(event.target.value)) {\n      this._value = null;\n    } else {\n      this._value = Number(event.target.value);\n    }\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  validateUserInput(input: string) {\n    return !!input.match(ALLOWED_CHARACTERS);\n  }\n\n  /** @docs-private */\n  increment() {\n    let newValue;\n    if (this.isBetweenLimits(this._value)) {\n      newValue = this.getNextGreaterValue(this._value);\n    } else {\n      newValue = this.enforceLimits(this._value);\n    }\n    this.value = newValue;\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  triggerResize() {\n    if (this.resize) {\n      this.autoResize.updateInputWidth();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** @docs-private */\n  decrement() {\n    let newValue;\n    if (this.isBetweenLimits(this._value)) {\n      newValue = this.getNextLowerValue(this._value);\n    } else {\n      newValue = this.enforceLimits(this._value);\n    }\n    this.value = newValue;\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  enforceLimits(value) {\n    if (value > this._max) {\n      return this._max;\n    } else if (value < this._min) {\n      return this._min;\n    }\n    return value;\n  }\n\n  /** @docs-private */\n  getNextLowerValue(start) {\n    // if there is an invalid input start is null\n    if (!start) {\n      start = 0;\n    }\n\n    let next;\n    if (this.isValidStep(start)) {\n      next = (new Decimal(start).minus(new Decimal(this._step))).toNumber();\n    } else {\n      next = new Decimal(start).toNearest(this._step, Decimal.ROUND_DOWN).toNumber();\n    }\n    return this.enforceLimits(next);\n  }\n\n  /** @docs-private */\n  getNextGreaterValue(start) {\n    let next;\n    if (!start) {\n      start = 0;\n    }\n    if (this.isValidStep(start)) {\n      next = (new Decimal(start).plus(new Decimal(this._step))).toNumber();\n    } else {\n      next = new Decimal(start).toNearest(this._step, Decimal.ROUND_UP).toNumber();\n    }\n    return this.enforceLimits(next);\n  }\n\n  /** @docs-private */\n  isBetweenLimits(value) {\n    return value <= this._max && value >= this._min;\n  }\n\n  /** @docs-private */\n  isMinimum() {\n    return this._value === this._min;\n  }\n\n  /** @docs-private */\n  isMaximum() {\n    return this._value === this._max;\n  }\n\n  /** @docs-private */\n  isValidStep(value) {\n    if (value === null) {\n      value = new Decimal(0);\n    }\n    const min = new Decimal(this._min);\n    const valueDec = new Decimal(value);\n    const checkValue = (min.minus(valueDec)).mod(new Decimal(this._step)).toNumber();\n\n    if (\n      this.isBetweenLimits(value) && ((this.isMinimum() || this.isMaximum()) ||\n      checkValue === 0)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /** @docs-private */\n  userInputToNumber(value): number {\n    const current = value === '' ? 0 : value;\n    return parseInt(current, 10);\n  }\n\n  _validateFn() {\n    // the manual user input must match min + n * step, e.g. minimum 1 step 2: 1, 3, 5, 7 etc.\n    if (!this.isValidStep(this._value)) {\n      return { nxNumberStepperStepError: 'Value is not a valid step' };\n    } else if (this._value === null) {\n      return { nxNumberStepperFormatError: 'Not a valid number' };\n    }\n    return null;\n  }\n\n  /** @docs-private */\n  validate(c: FormControl) {\n    return this._validateFn();\n  }\n\n  get _buttonType(): string {\n    return 'secondary' + (this.negative ? ' negative' : '');\n  }\n}\n","import { Directive } from '@angular/core';\n\n/** Directive used to pass a suffix to the number stepper. */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-number-stepper-prefix',\n  host: {\n    'class': 'nx-stepper__prefix'\n  }\n})\nexport class NxNumberStepperPrefixDirective {\n}\n","import { Directive } from '@angular/core';\n\n/** Directive used to pass a suffix to the number stepper. */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-number-stepper-suffix',\n  host: {\n    'class': 'nx-stepper__suffix'\n  }\n})\nexport class NxNumberStepperSuffixDirective {\n}\n","import { NxNumberStepperIntl } from './number-stepper-intl';\nimport { NxAutoResizeDirective } from './auto-resize.directive';\nimport { CommonModule } from '@angular/common';\nimport { NxButtonModule } from '@allianz/ngx-ndbx/button';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { NgModule } from '@angular/core';\n\nimport { NxNumberStepperComponent } from './number-stepper.component';\nimport { FormsModule } from '@angular/forms';\nimport { NxNumberStepperPrefixDirective } from './number-stepper-prefix.directive';\nimport { NxNumberStepperSuffixDirective } from './number-stepper-suffix.directive';\n\n@NgModule({\n  imports: [\n    NxInputModule,\n    FormsModule,\n    NxIconModule,\n    NxButtonModule,\n    CommonModule\n  ],\n  exports: [\n    NxNumberStepperComponent,\n    NxAutoResizeDirective,\n    NxNumberStepperPrefixDirective,\n    NxNumberStepperSuffixDirective\n  ],\n  declarations: [\n    NxNumberStepperComponent,\n    NxAutoResizeDirective,\n    NxNumberStepperPrefixDirective,\n    NxNumberStepperSuffixDirective\n  ],\n  providers: [NxNumberStepperIntl],\n})\nexport class NxNumberStepperModule { }\n","\n\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\n\n/**\n * Interface for providing custom labels in a simple pagination.\n * With an implementation you can localize your pagination with the NX_PAGINATION_TEXTS injection token.\n */\nexport interface IPaginationTexts {\n  /** Label that should replace 'previous'. */\n  previous: string;\n\n  /** Label that should replace 'next'. */\n  next: string;\n\n  /** Label that should replace 'first'.\n   *\n   * Optional attribute needed only for the advanced pagination.\n   */\n  first?: string;\n\n  /** Label that should replace 'last'.\n   *\n   * Optional attribute needed only for the advanced pagination.\n   */\n  last?: string;\n\n  /** Label that should replace 'of'. */\n  ofLabel: string;\n\n  /** Label that should replace the aria label. */\n  ariaLabel: string;\n}\n\nexport const DefaultPaginationTexts =  {\n  previous: 'Previous',\n  next: 'Next',\n  first: 'First',\n  last: 'Last',\n  ofLabel: 'of',\n  ariaLabel: 'Please select your page'\n};\n\n\n/** InjectionToken for pagination that can be used to override default locale code. */\nexport const NX_PAGINATION_TEXTS = new InjectionToken<IPaginationTexts>('nx-pagination-texts');\n","import { Injectable } from '@angular/core';\nimport { Page } from './pagination.component';\n\n/** @docs-private */\n@Injectable()\nexport class NxPaginationUtils  {\n  private _pagesToShow = 3;\n  private _elipsisText: string = '...';\n  private _classExpanded: string = 'expanded-view';\n\n  getPages(currentPage: number, totalPages: number): Page[] {\n\n    let pages = [];\n    let start = [], middle = [], end = [];\n\n    // First array -> start\n    start = this.getStartArray(currentPage, totalPages);\n    // Second array -> middle\n    middle =  this.getMiddleArray(currentPage, totalPages);\n    // Third array -> end\n    end = this.getEndArray(currentPage, totalPages);\n\n    pages = [ ...start, ...middle, ...end ];\n\n    return pages;\n  }\n\n  getMiddleArray(currentPage: number, totalPages: number): Array<any> {\n    let pageNumber = currentPage < 6 ? 4 : currentPage - 1;\n    const middle = [];\n\n    while (\n      middle.length < 3 &&\n      pageNumber >= 2 &&\n      pageNumber <= totalPages - 3 &&\n      (pageNumber <= currentPage + 1 && pageNumber >= currentPage - 1)\n    ) {\n      middle.push(this.createPaginationItem(pageNumber, pageNumber));\n      pageNumber++;\n    }\n    return middle;\n  }\n  getEndArray(currentPage: number, totalPages: number): Array<any> {\n    const end = [];\n    let currentItemToShow: number =\n      totalPages <= 3 ? totalPages + 1 :\n      totalPages <= 6 ? totalPages - (totalPages - 4) : totalPages - 2 ;\n    const showEllipsis = currentPage < totalPages - 4;\n\n    while (currentItemToShow <= totalPages) {\n      const endItem = end.length === 0 && showEllipsis ?\n        this.createPaginationItem(this._elipsisText, currentItemToShow, true) :\n        this.createPaginationItem(currentItemToShow , currentItemToShow, true);\n      end.push(endItem);\n      currentItemToShow++;\n    }\n\n    return end;\n  }\n  getStartArray(currentPage: number, totalPages: number): Array<any> {\n    let counterPages = 0;\n    const start = [];\n    const maxSizeArray = 3;\n\n    while (counterPages < maxSizeArray && counterPages < totalPages) {\n      const startItem = counterPages === 2 && currentPage > 5 ?\n        this.createPaginationItem(this._elipsisText, counterPages, true) :\n        this.createPaginationItem(counterPages + 1 , counterPages + 1, true);\n\n      start.push(startItem);\n      counterPages++;\n    }\n\n    return start;\n  }\n\n\n  private createPaginationItem(label: string | number, value: number, classExpanded?: boolean) {\n    return { label: label, value: value, class: classExpanded ? this._classExpanded : ''  };\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { DefaultPaginationTexts, IPaginationTexts, NX_PAGINATION_TEXTS } from './pagination-texts';\nimport { NxPaginationUtils } from './pagination-utils';\n\n/** @docs-private */\nexport interface Page {\n  label: string;\n  value: any;\n  class: string;\n}\n\n@Component({\n  selector: 'nx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './pagination.component.scss' ],\n})\n\nexport class NxPaginationComponent implements OnInit, AfterContentInit {\n  private _page: number;\n  private _count: number;\n  private _perPage: number;\n  private _type: string = 'simple';\n\n  /** @docs-private */\n  paginationTexts: IPaginationTexts;\n\n  /** @docs-private */\n  totalNumberPages: number = 0;\n\n  get page(): number { return this._page; }\n\n  /** Sets the current page. */\n  @Input('nxPage') // the current page\n  set page(value: number) {\n    this._page = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get count(): number { return this._count; }\n\n  /** Number of total items over all pages. */\n  @Input('nxCount') // how many total items there are in all pages\n  set count(value: number) {\n    this._count = value;\n    this.totalNumberPages =  this.calculateTotalPages();\n    this._changeDetectorRef.markForCheck();\n  }\n  get perPage(): number { return this._perPage; }\n\n  /** Sets the number of items you want to show per page. */\n  @Input('nxPerPage') // how many items we want to show per page\n  set perPage(value: number) {\n    this._perPage = value;\n    this.totalNumberPages =  this.calculateTotalPages();\n    this._changeDetectorRef.markForCheck();\n  }\n  get type(): string { return this._type; }\n\n  /**\n   * Determines the type of pagination.\n   *\n   * Values: simple |Â advanced, default: simple.\n   */\n  @Input('nxType')\n  set type(value: string) { // type advanced or simple\n    this._type = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** An event emitted when the previous page button is clicked. */\n  @Output() nxGoPrev = new EventEmitter<void>();\n\n  /** An event emitted when the next page button is clicked */\n  @Output() nxGoNext = new EventEmitter<void>();\n\n  /**\n   * An event emitted when a page number is clicked.\n   * Provides the number of the page as parameter.\n   */\n  @Output() nxGoPage = new EventEmitter<number>();\n\n  constructor(\n      @Optional() @Inject(NX_PAGINATION_TEXTS) paginationTexts: IPaginationTexts,\n      private paginationUtilsService: NxPaginationUtils,\n      private _changeDetectorRef: ChangeDetectorRef) {\n    this.paginationTexts = paginationTexts || DefaultPaginationTexts;\n   }\n\n  ngOnInit() {\n    this.totalNumberPages =  this.calculateTotalPages();\n  }\n\n  ngAfterContentInit() {\n    if (this.type === 'advanced' && (!this.paginationTexts.last || !this.paginationTexts.first)) {\n      console.warn('Please define aria labels for the last and first arrows.');\n    }\n  }\n\n  /** Returns the number of the first page. */\n  getMin(): number {\n    return ((this._perPage * this._page) - this._perPage) + 1;\n  }\n\n  /** Returns the number of the last page. */\n  getMax(): number {\n    let max = this._perPage * this._page;\n    if (max > this._count) {\n      max = this._count;\n    }\n    return max;\n  }\n\n  /** Returns the total number of pages */\n  calculateTotalPages(): number {\n    return Math.ceil(this._count / this._perPage) || 0;\n  }\n\n  /** Directs to the page with number n. */\n  onPage(n: number): void {\n    this.nxGoPage.emit(n);\n  }\n\n  /** Directs to the previous page. */\n  onPrev(): void {\n    if (!this._isPaginationPreviousDisabled()) {\n      this.nxGoPrev.emit();\n    }\n  }\n\n  /** Directs to the next page. */\n  onNext(): void {\n    if (!this._isPaginationNextDisabled()) {\n      this.nxGoNext.emit();\n    }\n  }\n\n  /** Directs to the first page. */\n  onFirst() {\n    if (!this._isPaginationPreviousDisabled()) {\n      this.onPage(1);\n    }\n  }\n\n  /** Directs to the last page. */\n  onLast() {\n    if (!this._isPaginationNextDisabled()) {\n      this.onPage(this.totalNumberPages);\n    }\n  }\n\n  /** Returns if the current page is the last page. */\n  lastPage(): boolean {\n    return this._perPage * this._page >= this._count;\n  }\n\n  /** @docs-private */\n  getPages(): Page[] {\n    return this.paginationUtilsService.getPages(this._page, this.totalNumberPages);\n  }\n\n  /** @docs-private */\n  getPaginationItemClasses(page: Page): Object {\n    const classes = {\n      'is-ellipsis': page.label === '...',\n      'nx-pagination__item--expanded-view': page.class === 'expanded-view'\n    };\n    return classes;\n  }\n\n  /** @docs-private */\n  getPaginationNumberClasses(page: Page): Object {\n    const classes = {\n      'is-active': page.value === this.page,\n      'nx-pagination__ellipsis': page.label === '...',\n      'nx-pagination__link': page.label !== '...'\n    };\n    return classes;\n  }\n\n  /** Returns true, if `nxCount` is greater than 0, else false. */\n  isPaginationVisible(): boolean {\n    return this.count > 0;\n  }\n\n  /** Returns true, if `nxCount` is greater than 0 and the type of pagination is 'simple', else false. */\n  isPaginationCompactVisible(): boolean {\n    return this.type.includes('simple') && this.count > 0;\n  }\n\n  /** @docs-private */\n  isPaginationContainerVisible(): boolean {\n    return this.type.includes('advanced');\n  }\n\n  _isPaginationPreviousDisabled(): boolean {\n    return this.page === this.getMin();\n  }\n\n  _isPaginationNextDisabled(): boolean {\n    return this.page === this.totalNumberPages;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxPaginationComponent } from './pagination.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxPaginationUtils } from './pagination-utils';\n\n@NgModule({\n  imports: [\n    CommonModule, NxIconModule\n  ],\n  declarations: [\n    NxPaginationComponent\n  ],\n  exports: [\n    NxPaginationComponent\n  ],\n  providers: [\n    NxPaginationUtils\n  ]\n})\nexport class NxPaginationModule { }\n","import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject ,  Observable } from 'rxjs';\n\nexport class TableDataSource extends DataSource<any> {\nconstructor(private _datachange: BehaviorSubject<any[]>) {\nsuper();\n}\n/** @docs-private Connect function called by the table to retrieve one stream containing the data to render. */\nconnect(): Observable<Object[]> {\nreturn this._datachange;\n}\n/** @docs-private */\ndisconnect() { }\n}\n","import { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnInit, Output, ChangeDetectorRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NxDisplayedColumns } from './displayedColumns';\nimport { TableDataSource } from './tabledata-source';\n\nconst MAPPING = {\n  light: 'nx-table--light',\n  border: 'nx-table--light nx-table--with-border'\n};\nconst DEFAULT_CLASSES = [ 'nx-table ' ];\n\n@Component({\n  selector: 'nx-dynamic-table',\n  templateUrl: './dynamic-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './dynamic-table.component.scss' ],\n})\nexport class NxDynamicTableComponent implements OnInit {\n\n  private _tableStyles: string = '';\n  private _dataChange: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  private _dataSource: TableDataSource | null;\n  private _data: any[];\n  private _classNames: string = mapClassNames('', DEFAULT_CLASSES, MAPPING);\n  private _displayedColumns: NxDisplayedColumns[];\n  private _columnKeys: string[];\n\n  /** Sets the data that it will show in the table. */\n  @Input('nxData')\n  set data(value: any[]) {\n    this._data = value\n      .filter(element => element);\n    // If user dont pass displayedColumns the table will show all data and the name of columns will be the key of data\n    if (!this._displayedColumns) {\n      const keys = [], cArray = [];\n      // For catch keys of data Objects and assing title, key and type string by default to displayedColumns\n      this._data\n        .forEach(element => {\n          for (const key in element) {\n            if (keys.indexOf(key) === -1) {\n              keys.push(key);\n              cArray.push({ title: key, key: key, type: 'string' });\n            }\n          }\n        });\n      this._columnKeys = keys;\n      this._displayedColumns = cArray;\n      // need to call markForCheck as the setter changes displayedColumns here\n      // sidenote: isn't needed for the data itself as it gets passed to the cdk-table\n      // by the datasource observable\n      this._changeDetectorRef.markForCheck();\n    }\n    this._dataChange.next(this._data);\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  /** Sets the name order and type of columns. */\n  @Input('nxDisplayedColumns')\n  set displayedColumns(value: NxDisplayedColumns[]) {\n    this._displayedColumns = value;\n    this._columnKeys = value.map(column => column.key);\n    this._changeDetectorRef.markForCheck();\n  }\n  get displayedColumns(): NxDisplayedColumns[] {\n    return this._displayedColumns;\n  }\n\n  /** @deprecated The default and light header styling will be removed.\n   * @deletion-target 8.0.0\n  */\n  @Input('nxType')\n  set styles(value: string) {\n    if (this._tableStyles === value) {\n      return;\n    }\n    this._classNames = mapClassNames(value, DEFAULT_CLASSES, MAPPING);\n    this._tableStyles = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** An event is dispatched when a row is clicked. */\n  @Output() nxRowClick = new EventEmitter();\n\n  /** @docs-private */\n  get dataSource(): TableDataSource {\n    return this._dataSource;\n  }\n  /** @docs-private */\n  get classNames(): string {\n    return this._classNames;\n  }\n  /** @docs-private */\n  get columnKeys(): string[] {\n    return this._columnKeys;\n  }\n\n  constructor(private el: ElementRef, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    if (!this._data) {\n      this._data = [];\n      this._dataChange.next(this._data);\n    }\n    this._dataSource = new TableDataSource(this._dataChange);\n  }\n\n  /** @docs-private */\n  handleRowClick(row: Object): void {\n    this.nxRowClick.emit(row);\n  }\n\n  /** @docs-private */\n  isNumeric(element: NxDisplayedColumns): boolean {\n    if (element.type === 'numeric') {\n      return true;\n    }\n    return false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxDynamicTableComponent } from './dynamic-table.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\n@NgModule({\n  declarations: [ NxDynamicTableComponent ],\n  exports: [ NxDynamicTableComponent ],\n  imports: [ CommonModule, CdkTableModule, ScrollDispatchModule ]\n})\nexport class NxDynamicTableModule { }\n","import { Directive, Input } from '@angular/core';\nimport { CdkAccordion } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AccordionStyle } from './expansion-panel';\n\nconst DEFAULT_TYPE: AccordionStyle = 'regular';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-accordion',\n  host: {\n    '[class.nx-accordion]': 'true',\n    'role': 'presentation'\n  }\n})\nexport class NxAccordionDirective extends CdkAccordion {\n\n  private _style: AccordionStyle = 'regular';\n\n  /**\n   * Value for the styling that should be chosen.\n   * Default value: 'regular'\n   */\n  @Input('nxStyle')\n  set style(value: AccordionStyle) {\n    value = value ? value : DEFAULT_TYPE;\n\n    const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE];\n    this._style = newValue as AccordionStyle;\n  }\n  get style(): AccordionStyle {\n    return this._style;\n  }\n\n  private _negative: boolean = null;\n\n  /** Whether the negative set of styles should be used. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n}\n","import { AnimationTriggerMetadata, trigger, state, style, transition, animate } from '@angular/animations';\n\nexport const nxAccordionAnimations: {\n  readonly bodyExpansion: AnimationTriggerMetadata;\n  readonly indicatorRotate: AnimationTriggerMetadata;\n} = {\n  bodyExpansion: trigger('bodyExpansion', [\n    state('closed', style({height: '0px', visibility: 'hidden'})),\n    state('open', style({height: '*', visibility: 'visible'})),\n    transition('open <=> closed', animate('.5s cubic-bezier(0.86, 0, 0.07, 1)'))\n  ]),\n  indicatorRotate: trigger('indicatorRotate', [\n    state('closed', style({transform: 'rotate(0deg)'})),\n    state('open', style({transform: 'rotate(180deg)'})),\n    transition('open <=> closed', animate('.3s ease')),\n  ])\n};\n","\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[nxExpansionPanelBody]' })\nexport class NxExpansionPanelBodyDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\n\nimport { NxAccordionDirective } from './accordion';\nimport { nxAccordionAnimations } from './accordion-animations';\nimport { NxExpansionPanelBodyDirective } from './expansion-panel-body';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n\nlet nextId = 0;\n\n/** The styling of the accordion. */\nexport type AccordionStyle = 'regular' | 'light';\nconst DEFAULT_TYPE = 'regular';\n\n@Component({\n  selector: 'nx-expansion-panel',\n  exportAs: 'NxExpansionPanelComponent',\n  templateUrl: 'expansion-panel.html',\n  styleUrls: ['expansion-panel.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxAccordionAnimations.bodyExpansion],\n  host: {\n    '[class.nx-expanded]': 'expanded',\n    '[class.nx-expansion-panel--light]': '_accordionStyle === \"light\"',\n    '[class.nx-expansion-panel--regular]': '_accordionStyle === \"regular\"',\n    '[class.nx-expansion-panel--negative]': 'negative'\n  },\n  providers: [\n    // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering\n    // to the same accordion.\n    { provide: NxAccordionDirective, useValue: undefined },\n  ],\n})\nexport class NxExpansionPanelComponent extends CdkAccordionItem implements AfterContentInit, OnChanges, OnDestroy {\n  /** Whether the negative set of styles should be used. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n  private _negative: boolean = null;\n  _accordionStyle: AccordionStyle = DEFAULT_TYPE;\n\n  /**\n   * Value for the styling that should be chosen.\n   * Default value: 'regular'.\n   */\n  @Input('nxStyle')\n  set style(value: AccordionStyle) {\n    value = value ? value : DEFAULT_TYPE;\n\n    const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE];\n    this._style = newValue as AccordionStyle;\n    this._accordionStyle = newValue as AccordionStyle;\n  }\n\n  get style(): AccordionStyle {\n    return this._style;\n  }\n  private _style: AccordionStyle = null;\n\n  /** @docs-private */\n  @ContentChild(NxExpansionPanelBodyDirective) lazyContent;\n\n  private _portal: TemplatePortal;\n\n  /** @docs-private */\n  get portal() {\n    return this._portal;\n  }\n\n  /** @docs-private */\n  accordion: NxAccordionDirective;\n  _headerId = `nx-expansion-panel-header-${nextId++}`;\n\n  /** Stream that emits for changes in `@Input` properties. */\n  readonly _inputChanges = new Subject<SimpleChanges>();\n\n  constructor(@Optional() @SkipSelf() accordion: NxAccordionDirective,\n    _changeDetectorRef: ChangeDetectorRef,\n    _expansionDispatcher: UniqueSelectionDispatcher,\n    private _viewContainerRef: ViewContainerRef\n  ) {\n    super(accordion, _changeDetectorRef, _expansionDispatcher);\n    this.accordion = accordion;\n  }\n\n  ngAfterContentInit() {\n    if (this.lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(\n        startWith(null),\n        filter(() => this.expanded && !this._portal),\n        take(1)\n      ).subscribe(() => {\n        this._portal = new TemplatePortal(this.lazyContent._template, this._viewContainerRef);\n      });\n    }\n\n    // Inherit appearance given by the accordion (if any).\n    if (Boolean(this.accordion)) {\n\n      if (this.style === null && this.accordion.style !== null) {\n        this.style = this.accordion.style;\n      }\n\n      if (this.negative === null && this.accordion.negative !== null) {\n        this.negative = this.accordion.negative;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._inputChanges.complete();\n  }\n\n  /** @docs-private */\n  getOpenState() {\n    return this.expanded ? 'open' : 'closed';\n  }\n}\n","import { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, Host, OnDestroy } from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { nxAccordionAnimations } from './accordion-animations';\nimport { NxExpansionPanelComponent } from './expansion-panel';\n\n\n@Component({\n  selector: 'nx-expansion-panel-header',\n  templateUrl: 'expansion-panel-header.html',\n  styleUrls: ['expansion-panel-header.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxAccordionAnimations.indicatorRotate],\n  host: {\n    '[class.nx-expanded]': 'isExpanded()',\n    'class': 'nx-expansion-panel__header',\n    'role': 'button',\n    '[attr.id]': 'panel._headerId',\n    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n    '[attr.aria-controls]': '_getPanelId()',\n    '[attr.aria-expanded]': 'isExpanded()',\n    '[attr.aria-disabled]': 'panel.disabled',\n    '(keydown)': 'keydown($event)',\n    '(click)': 'toggle()'\n  }\n})\nexport class NxExpansionPanelHeaderComponent implements OnDestroy {\n  private _parentChangeSubscription = Subscription.EMPTY;\n\n  constructor(\n    /** @docs-private */ @Host() public panel: NxExpansionPanelComponent,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this._parentChangeSubscription = merge(\n      panel.opened,\n      panel.closed,\n      panel._inputChanges.pipe(filter(changes => !!(changes.hideToggle || changes.disabled)))\n    )\n    .subscribe(() => this._changeDetectorRef.markForCheck());\n\n  }\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n\n  /** @docs-private */\n  getOpenState(): string {\n    return this.panel.getOpenState();\n  }\n\n  _getPanelId(): string {\n    return this.panel.id;\n  }\n\n  /**\n   * Toggle the expansion panel.\n   */\n  toggle() {\n    this.panel.toggle();\n  }\n\n  /** @docs-private */\n  keydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.toggle();\n        break;\n      default:\n        return;\n    }\n  }\n}\n\n\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-expansion-panel-description',\n  host : {\n    class: 'nx-expansion-panel__header-description'\n  }\n})\nexport class NxExpansionPanelDescriptionDirective {}\n\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-expansion-panel-title',\n  host : {\n    class: 'nx-expansion-panel__header-title'\n  }\n})\nexport class NxExpansionPanelTitleDirective {}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAccordionDirective } from './accordion';\nimport { NxExpansionPanelComponent } from './expansion-panel';\nimport { NxExpansionPanelBodyDirective } from './expansion-panel-body';\nimport {\n  NxExpansionPanelDescriptionDirective,\n  NxExpansionPanelHeaderComponent,\n  NxExpansionPanelTitleDirective,\n} from './expansion-panel-header';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    NxIconModule\n  ],\n  exports: [\n    NxAccordionDirective,\n    NxExpansionPanelComponent,\n    NxExpansionPanelHeaderComponent,\n    NxExpansionPanelDescriptionDirective,\n    NxExpansionPanelTitleDirective,\n    NxExpansionPanelBodyDirective\n  ],\n  declarations: [\n    NxAccordionDirective,\n    NxExpansionPanelComponent,\n    NxExpansionPanelHeaderComponent,\n    NxExpansionPanelDescriptionDirective,\n    NxExpansionPanelTitleDirective,\n    NxExpansionPanelBodyDirective\n  ],\n  providers: [],\n})\nexport class NxAccordionModule { }\n","/** @docs-private */\nexport abstract class NxTabGroupBase {\n\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  Optional,\n  Inject,\n  Host\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'nx-tab',\n  exportAs: 'nxTab',\n  templateUrl: 'tab.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxTabComponent implements OnInit, OnChanges, OnDestroy {\n  private _label: string;\n\n  /** The portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /** Sets the label of the tab shown in the tablist. */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    if (this._label !== value) {\n      this._label = value;\n    }\n  }\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Template inside the NxTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef) _implicitContent: TemplateRef<any>;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    @Inject(NxTabGroupBase) @Optional() @Host() private _tabGroup: NxTabGroupBase) {\n    if (!this._tabGroup) {\n      throw Error(`The nx-tab element has to be wrapped in a nx-tab-group to work.\n      Please provide a nx-tab-group element and place your tabs inside it.`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('label')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._implicitContent, this._viewContainerRef);\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { ChangeDetectionStrategy, Component, Input, ViewChild } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-body',\n  templateUrl: 'tab-body.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./tab-body.scss']\n})\nexport class NxTabBodyComponent {\n\n  @Input() content: TemplatePortal;\n  portal: TemplatePortal;\n\n  private _active: boolean = false;\n\n  @Input()\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n    if (this._active) {\n      this.attach();\n    } else {\n      this.detach();\n    }\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n  attach() {\n    if (!this.portalOutlet.hasAttached()) {\n      this.portalOutlet.attach(this.content);\n    }\n  }\n  detach() {\n    if (this.portalOutlet.hasAttached()) {\n      this.portalOutlet.detach();\n    }\n  }\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  OnInit\n} from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { NxAccordionDirective } from '@allianz/ngx-ndbx/accordion';\nimport { NxExpansionPanelComponent } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabHeaderComponent } from './tab-header';\n\n\nexport class NxTabChangeEvent {\n  /** The index of the selected or focused tab. */\n  index: number;\n\n  /** The component instance of the selected or focused tab. */\n  tab: NxTabComponent;\n}\n\nlet nextId: number = 0;\nconst MOBILE_BREAKPOINT = 480;\n\n@Component({\n  selector: 'nx-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['./tab-group.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative'\n  },\n  providers: [{provide: NxTabGroupBase, useExisting: NxTabGroupComponent}]\n})\nexport class NxTabGroupComponent implements NxTabGroupBase, OnInit, OnDestroy, AfterContentInit, AfterContentChecked {\n  private _selectedIndex: number | null = null;\n  private _groupId: number;\n  private _negative: boolean = false;\n  private _indexToSelect: number | null = 0;\n  private _autoselect: boolean = true;\n  private _mobileAccordion: boolean = true;\n  _showAccordion: boolean = false;\n\n  /** @docs-private */\n  @ContentChildren(NxTabComponent) tabs: QueryList<NxTabComponent>;\n\n  /** @docs-private */\n  @ViewChildren(NxTabBodyComponent) tabBodyChildren: QueryList<NxTabBodyComponent>;\n\n  /** @docs-private */\n  @ViewChild('tabHeader') tabHeader: NxTabHeaderComponent;\n\n  /** @docs-private */\n  @ViewChildren(NxExpansionPanelComponent) panels: QueryList<NxExpansionPanelComponent>;\n\n  /** @docs-private */\n  @ViewChild(NxAccordionDirective) accordion: NxAccordionDirective;\n\n  /** Sets the selected tab. */\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n\n  /** Whether the negative set of styling should be used. */\n  @Input()\n  get negative(): boolean {\n    return this._negative;\n  }\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n    }\n  }\n\n  /** Whether the tab should be immediately selected on focus. */\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = coerceBooleanProperty(value);\n  }\n\n  /** Whether the tabs should to accordion on mobile viewports. */\n  @Input()\n  get mobileAccordion(): boolean {\n    return this._mobileAccordion;\n  }\n  set mobileAccordion(value: boolean) {\n    this._mobileAccordion = coerceBooleanProperty(value);\n  }\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n  /**\n   * An event emitted when focus has changed within a tab group.\n   *\n   * **Note:** is not supported in mobile view.\n   */\n  @Output() readonly focusChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n   /** Subscription to tabs being added/removed. */\n   private _tabsSubscription = Subscription.EMPTY;\n\n   /** Subscription to changes in the tab labels. */\n   private _tabLabelSubscription = Subscription.EMPTY;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    this._groupId = nextId++;\n  }\n\n  ngOnInit() {\n    this._switchAppearance(window.innerWidth);\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this.tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this.tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n    * After the content is checked, this component knows what tabs have been defined\n    * and what the selected index should be.\n    */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex !== indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n   /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the NxTab component, whereas the data binding is inside the NxTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this.tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** @docs-private */\n  focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): NxTabChangeEvent {\n    const event = new NxTabChangeEvent;\n    event.index = index;\n    if (this.tabs && this.tabs.length) {\n      event.tab = this.tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /** @docs-private */\n  handleClick(index: number) {\n    this.selectedIndex = this.tabHeader.focusIndex = index;\n  }\n\n  /**\n   * @docs-private\n   * Returns the tabindex for a tab label\n   */\n  getTabIndex(tab: NxTabComponent, idx: number): number | null {\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `nx-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `nx-tab-content-${this._groupId}-${i}`;\n  }\n\n  /** @docs-private */\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this._switchAppearance(event.target.innerWidth);\n  }\n\n  private _switchAppearance(viewPortWidth) {\n    if (!this._mobileAccordion) {\n      return;\n    }\n    if (viewPortWidth <= MOBILE_BREAKPOINT && !this._showAccordion) {\n      this._showMobileVersion();\n    } else if (viewPortWidth > MOBILE_BREAKPOINT && this._showAccordion) {\n      this._showDesktopVersion();\n    }\n  }\n\n  private _showMobileVersion() {\n    this._showAccordion = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showDesktopVersion() {\n    this._showAccordion = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Emulate the tab change event when an accordion panel is opened in\n   * mobile viewports.\n   */\n  _panelOpened(index: number) {\n    this.selectedIndex = index;\n  }\n}\n","import { FocusableOption } from '@angular/cdk/a11y';\nimport { Directive, ElementRef } from '@angular/core';\n\n/** @docs-private */\n@Directive({ selector: '[nxTabLabel]' })\nexport class NxTabLabelDirective implements FocusableOption {\n  constructor(public elementRef: ElementRef) { }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\n\nimport { NxTabLabelDirective } from './tab-label';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['./tab-header.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxTabHeaderComponent implements OnInit, AfterContentInit {\n\n  private _keyManager: FocusKeyManager<NxTabLabelDirective>;\n\n  private _selectedIndex: number = 0;\n\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._selectedIndex = value;\n    if (this._keyManager) {\n      this._keyManager.updateActiveItemIndex(value);\n    }\n  }\n\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) { return; }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  private _autoselect: boolean = true;\n\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = value;\n  }\n\n  @Output() readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n  @Output() readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  @ContentChildren(NxTabLabelDirective) labels: QueryList<NxTabLabelDirective>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit() { }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<NxTabLabelDirective>(this.labels).withHorizontalOrientation('ltr').withWrap();\n    this._keyManager.updateActiveItemIndex(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _isValidIndex(idx: number) {\n    if (!this.labels) { return true; }\n\n    return !!this.labels.toArray()[idx];\n  }\n\n  /**\n   * Handles keyboard inputs on the labels\n   * If autoselect is enabled the tab gets changed immediately\n   * If autoselect is disabled only the focus changes but the user still has to select the item\n   * by himself\n   */\n  handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n\n    if (this.autoselect) {\n      this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n    } else if (event.keyCode !== ENTER && event.keyCode !== SPACE) {\n      this.indexFocused.emit(this._keyManager.activeItemIndex);\n    }\n  }\n}\n","import { Component, Input, Directive, ChangeDetectionStrategy, Optional, SkipSelf, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'nx-tab-nav-bar',\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['./tab-nav-bar.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative',\n    'role': 'navigation',\n  }\n})\nexport class NxTabNavBarComponent {\n\n  private _negative: boolean = false;\n\n  /** Whether the tab nav bar has negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n}\n\n@Directive({\n  selector: '[nxTabLink]',\n  host: {\n    '[class.nx-tab-link]': 'true',\n    '[class.is-active]': 'active',\n    '[attr.aria-current]': 'active',\n  }\n})\nexport class NxTabLinkDirective {\n\n  private _active: boolean = false;\n\n  /** Whether the tab link is active and has the active styling. */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._active) {\n      this._active = value;\n    }\n  }\n\n  constructor(\n    @Optional() @SkipSelf() private _tabNavBar: NxTabNavBarComponent) {\n    if (!this._tabNavBar) {\n      throw Error(`The nx-tab-link element has to be wrapped in a nx-tab-nav-bar to work.`);\n    }\n  }\n}\n","import { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAccordionModule } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabGroupComponent } from './tab-group';\nimport { NxTabHeaderComponent } from './tab-header';\nimport { NxTabLabelDirective } from './tab-label';\nimport { NxTabNavBarComponent, NxTabLinkDirective } from './tab-nav-bar';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    NxAccordionModule\n  ],\n  exports: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective\n  ],\n  declarations: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective\n  ],\n  providers: [],\n})\nexport class NxTabsModule { }\n","export const BREAKPOINT_MOBILE = '(max-width: 703px)';\nexport const BREAKPOINT_TABLET = '(min-width: 704px) and (max-width: 992px)';\nexport const BREAKPOINT_DESKTOP = '(min-width: 993px)';\n","import { ElementRef, Renderer2, Input } from '@angular/core';\n\nimport { appendClasses, mapClassNames, removeClasses } from '@allianz/ngx-ndbx/utils';\n\nexport type MappingObject = {\n  [key: string]: string;\n};\n\nexport class MappedStyles {\n  private _classNames: string;\n  private _classNamesSanitized: string;\n\n  constructor(\n    private mapping: MappingObject,\n    private baseClasses = [],\n    protected _elementRef: ElementRef,\n    protected _renderer: Renderer2) {\n      this.classNames = '';\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n    removeClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n    this._classNamesSanitized = mapClassNames(value, this.baseClasses, this.mapping);\n    this._classNames = value;\n    appendClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, Attribute} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  template: '<ng-content></ng-content>',\n  styleUrls: ['card.scss'],\n  selector: 'nx-card',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'nx-card',\n    '[class.is-selectable]': 'selectable',\n    '[class.is-selected]': 'selected',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '(click)': '_toggleSelected()',\n    '(keydown.enter)': '_toggleSelected()',\n    '[attr.tabindex]': '_getTabindex()'\n  }\n})\nexport class NxCardComponent {\n  _tabindex: string;\n\n  /** Whether this card is selectable or not.  */\n  @Input()\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  private _selectable: boolean;\n\n  /** Whether this card is selected or not.  */\n  @Input()\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _selected: boolean;\n\n  /** Whether the card is disabled.  */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Event emitted when the selected value has changed.  */\n  @Output() selectedChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Attribute('tabindex') tabindex: string) {\n    this._tabindex = tabindex;\n  }\n\n  _toggleSelected(): void {\n    if (this.selectable && !this.disabled) {\n      this.selected = !this.selected;\n      this.selectedChange.emit(this.selected);\n    }\n  }\n\n  _getTabindex(): string {\n    if (this.disabled) {\n      return '-1';\n    }\n\n    if (this.selectable) {\n      return this._tabindex || '0';\n    }\n\n    return this._tabindex || '';\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxCardComponent} from './card.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxCardComponent ],\n  exports: [ NxCardComponent ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NxCardModule { }\n"],"names":["NgModule","tslib_1.__extends","Component","ChangeDetectionStrategy","ChangeDetectorRef","ElementRef","checkbox","Subject","EventEmitter","coerceBooleanProperty","NgControl","Optional","Self","ContentChildren","forwardRef","ContentChild","NxLabelComponent","Output","Input","NG_VALUE_ACCESSOR","CommonModule","NxIconModule","NxLabelModule","nextId","NgForm","FormGroupDirective","DEFAULT_TYPE","Renderer2","NxIconComponent","MappedStyles","button","startWith","filter","tap","takeUntil","merge","UniqueSelectionDispatcher","ViewChild","HostListener","ViewContainerRef","removeClasses","MAPPING","QueryList","mapClassNames","Inject","FormsModule","DEFAULT_SIZE","Injectable","animation","style","animate","Directive","Subscription","trigger","transition","useAnimation","query","animateChild","EventManager","TemplateRef","A11yModule","overlay","fromEvent","TemplatePortal","OverlayConfig","map","Overlay","OverlayModule","DELETE","BACKSPACE","DomSanitizer","NxFormfieldControl","defer","take","switchMap","SelectionModel","ActiveDescendantKeyManager","isDevMode","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","HOME","END","SHIFT","TAB","NgZone","Attribute","NxFormfieldComponent","CdkConnectedOverlay","NxFormfieldModule","NxCheckboxModule","ObserversModule","Observable","ViewChildren","coerceNumberProperty","of","debounceTime","input","first","ESCAPE","delay","Directionality","Host","NxWordComponent","DOCUMENT","ViewportRuler","getFontShorthand","NxFormfieldErrorDirective","NxPopoverTriggerDirective","NxDropdownComponent","HostBinding","throttleTime","NxInputModule","NxPopoverModule","NxAutocompleteModule","NxButtonModule","NxGridModule","DEFAULT_CLASSES","NG_VALIDATORS","pad","Decimal","InjectionToken","DataSource","BehaviorSubject","CdkTableModule","ScrollDispatchModule","CdkAccordion","state","accordion","SkipSelf","CdkAccordionItem","PortalModule","CdkPortalOutlet","NxExpansionPanelComponent","NxAccordionDirective","FocusKeyManager","NxAccordionModule","appendClasses"],"mappings":"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"}
