{"version":3,"file":"allianz-ngx-ndbx-tree.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/tree/outlet.ts","ng://@allianz/ngx-ndbx/tree/tree.component.ts","ng://@allianz/ngx-ndbx/tree/node.ts","ng://@allianz/ngx-ndbx/tree/padding.ts","ng://@allianz/ngx-ndbx/tree/toggle.ts","ng://@allianz/ngx-ndbx/tree/tree.module.ts","ng://@allianz/ngx-ndbx/tree/data-source/flat-data-source.ts","ng://@allianz/ngx-ndbx/tree/data-source/flat-tree-control.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {CdkTreeNodeOutlet} from '@angular/cdk/tree';\nimport {\n  Directive,\n  ViewContainerRef,\n} from '@angular/core';\n\n/**\n * Outlet for nested CdkNode. Put `[nxTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\n@Directive({\n  selector: '[nxTreeNodeOutlet]'\n})\nexport class NxTreeNodeOutletDirective implements CdkTreeNodeOutlet {\n  constructor(public viewContainer: ViewContainerRef) {}\n}\n","import {CdkTree} from '@angular/cdk/tree';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {NxTreeNodeOutletDirective} from './outlet';\n\n/**\n * Wrapper for the CdkTable with NDBX design styles.\n */\n@Component({\n  selector: 'nx-tree',\n  exportAs: 'nxTree',\n  template: `<ng-container nxTreeNodeOutlet></ng-container>`,\n  host: {\n    'class': 'nx-tree',\n    'role': 'tree',\n  },\n  styleUrls: ['tree.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{provide: CdkTree, useExisting: NxTreeComponent}]\n})\nexport class NxTreeComponent<T> extends CdkTree<T> {\n  // Outlets within the tree's template where the dataNodes will be inserted.\n  @ViewChild(NxTreeNodeOutletDirective) _nodeOutlet: NxTreeNodeOutletDirective;\n}\n","import {CdkTree, CdkTreeNode, CdkTreeNodeDef} from '@angular/cdk/tree';\nimport {\n  Component,\n  Directive,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\n/**\n * Wrapper for the CdkTree node with NDBX design styles.\n */\n@Component({\n  selector: 'nx-tree-node',\n  exportAs: 'nxTreeNode',\n  inputs: ['disabled', 'tabIndex'],\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n    '[attr.role]': 'role',\n    'class': 'nx-tree__node',\n    '[class.is-expanded]': 'isExpanded'\n  },\n  providers: [{provide: CdkTreeNode, useExisting: NxTreeNodeComponent}],\n  templateUrl: './node.html'\n})\nexport class NxTreeNodeComponent<T> extends CdkTreeNode<T> {}\n\n/**\n * Wrapper for the CdkTree node definition with NDBX design styles.\n */\n@Directive({\n  selector: '[nxTreeNodeDef]',\n  inputs: [\n    'when: nxTreeNodeDefWhen'\n  ],\n  providers: [{provide: CdkTreeNodeDef, useExisting: NxTreeNodeDefDirective}]\n})\nexport class NxTreeNodeDefDirective<T> extends CdkTreeNodeDef<T> {\n  @Input('nxTreeNode') data: T;\n}\n","import {CdkTree, CdkTreeNode} from '@angular/cdk/tree';\nimport {Directive, Input, Renderer2, ElementRef, Optional, OnDestroy} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\n@Directive({\n  selector: '[nxTreeNodePadding]',\n})\nexport class NxTreeNodePaddingDirective<T> implements OnDestroy {\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** CSS units used for the indentation value. */\n  indentUnits = 'px';\n\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n  @Input('nxTreeNodePadding')\n  get level(): number { return this._level; }\n  set level(value: number) {\n    this._level = coerceNumberProperty(value);\n    this._setPadding();\n  }\n  _level: number;\n\n  /** The offset is added once on top of each indent. Default number is 0. */\n  @Input('nxTreeNodePaddingOffset')\n  get offset(): number { return this._offset; }\n  set offset(value: number) {\n    this._offset = coerceNumberProperty(value);\n    this._setPadding();\n  }\n  _offset: number = 0;\n\n  /**\n   * The indent for each level. Can be a number or a CSS string.\n   * Default number 24px from material design menu sub-menu spec.\n   */\n  @Input('nxTreeNodePaddingIndent')\n  get indent(): number | string { return this._indent; }\n  set indent(indent: number | string) {\n    let value = indent;\n    let units = 'px';\n\n    if (typeof indent === 'string') {\n      const parts = indent.split(cssUnitPattern);\n      value = parts[0];\n      units = parts[1] || units;\n    }\n\n    this.indentUnits = units;\n    this._indent = coerceNumberProperty(value);\n    this._setPadding();\n  }\n  _indent: number = 24;\n\n  constructor(private _treeNode: CdkTreeNode<T>,\n              private _tree: CdkTree<T>,\n              private _renderer: Renderer2,\n              private _element: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality) {\n    this._setPadding();\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding());\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n  _paddingIndent(): string|null {\n    const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n      ? this._tree.treeControl.getLevel(this._treeNode.data)\n      : null;\n    const level = this._level || nodeLevel;\n    return level ? `${level * this._indent + this._offset}${this.indentUnits}` : null;\n  }\n\n  _setPadding() {\n    const padding = this._paddingIndent();\n    const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n    this._renderer.setStyle(this._element.nativeElement, paddingProp, padding);\n  }\n}\n","import {CdkTreeNodeToggle} from '@angular/cdk/tree';\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Wrapper for the CdkTree's toggle with NDBX design styles.\n */\n@Directive({\n  selector: '[nxTreeNodeToggle]',\n  host: {\n    '(click)': '_toggle($event)',\n  },\n  providers: [{provide: CdkTreeNodeToggle, useExisting: NxTreeNodeToggleDirective}]\n})\nexport class NxTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n  @Input('nxTreeNodeToggleRecursive') recursive: boolean = false;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxTreeComponent } from './tree.component';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { NxTreeNodeComponent, NxTreeNodeDefDirective } from './node';\nimport { NxTreeNodePaddingDirective } from './padding';\nimport { NxTreeNodeToggleDirective } from './toggle';\nimport { NxTreeNodeOutletDirective } from './outlet';\n\n@NgModule({\n  imports: [ CdkTreeModule, CommonModule ],\n  declarations: [ NxTreeComponent, NxTreeNodeComponent, NxTreeNodeDefDirective,\n    NxTreeNodePaddingDirective, NxTreeNodeToggleDirective, NxTreeNodeOutletDirective],\n  exports: [ NxTreeComponent, NxTreeNodeComponent, NxTreeNodeDefDirective,\n    NxTreeNodePaddingDirective, NxTreeNodeToggleDirective, NxTreeNodeOutletDirective]\n})\nexport class NxTreeModule { }\n","import {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, merge, Observable, of} from 'rxjs';\nimport {map, take} from 'rxjs/operators';\nimport { NxTreeNode, NxFlatTreeNode } from './tree-node';\nimport { NxFlatTreeControl } from './flat-tree-control';\nimport { TreeControl, FlatTreeControl } from '@angular/cdk/tree';\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T extends NxTreeNode` to flattened nodes of type `F extends NxFlatTreeNode`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F extends NxFlatTreeNode` with additional information.\n */\nclass NxTreeFlattener<T extends NxTreeNode, F extends NxFlatTreeNode> {\n  transformFunction(node: NxTreeNode, level: number): F {\n    const { children, ...rest } = node;\n    return {\n      ...rest,\n      level,\n      expandable: Array.isArray(children) && children.length > 0\n    } as F;\n  }\n\n  getLevel(node: F): number {\n    return node.level;\n  }\n\n  isExpandable(node: F): boolean {\n    return node.expandable;\n  }\n\n  getChildren(node: T): Observable<T[]> | T[] {\n    return node.children as T[];\n  }\n\n  _flattenNode(node: T, level: number,\n               resultNodes: F[], parentMap: boolean[]): F[] {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n      if (Array.isArray(childrenNodes)) {\n        this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n      } else {\n        childrenNodes.pipe(take(1)).subscribe(children => {\n          this._flattenChildren(children, level, resultNodes, parentMap);\n        });\n      }\n    }\n    return resultNodes;\n  }\n\n  _flattenChildren(children: T[], level: number,\n                   resultNodes: F[], parentMap: boolean[]): void {\n    children.forEach((child, index) => {\n      const childParentMap: boolean[] = parentMap.slice();\n      childParentMap.push(index != children.length - 1); // tslint:disable-line\n      this._flattenNode(child, level + 1, resultNodes, childParentMap);\n    });\n  }\n\n  /**\n   * Flatten a list of node type T to flattened version of node F.\n   * Please note that type T may be nested, and the length of `structuredData` may be different\n   * from that of returned list `F[]`.\n   */\n  flattenNodes(structuredData: T[]): F[] {\n    const resultNodes: F[] = [];\n    structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n    return resultNodes;\n  }\n\n  /**\n   * Expand flattened node with current expansion status.\n   * The returned list may have different length.\n   */\n  expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n    const results: F[] = [];\n    const currentExpand: boolean[] = [];\n    currentExpand[0] = true;\n\n    nodes.forEach(node => {\n      let expand = true;\n      for (let i = 0; i <= this.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n      if (expand) {\n        results.push(node);\n      }\n      if (this.isExpandable(node)) {\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n    return results;\n  }\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `NxTree`.\n * The nested tree nodes of type `T extends NxTreeNode` are flattened through `NxTreeFlattener`, and converted\n * to type `F extends NxFlatTreeNode` for `NxTree` to consume.\n */\nexport class NxTreeFlatDataSource<T extends NxTreeNode, F extends NxFlatTreeNode> extends DataSource<F> {\n  _treeFlattener: NxTreeFlattener<T, F>;\n\n  _flattenedData = new BehaviorSubject<F[]>([]);\n\n  _expandedData = new BehaviorSubject<F[]>([]);\n\n  _data = new BehaviorSubject<T[]>([]);\n\n  get data() { return this._data.value; }\n  set data(value: T[]) {\n    this._data.next(value);\n    this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n    this.treeControl.dataNodes = this._flattenedData.value;\n  }\n\n  constructor(private treeControl: FlatTreeControl<F>,\n              initialData: T[] = []) {\n    super();\n    this._treeFlattener = new NxTreeFlattener();\n    this.data = initialData;\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<F[]> {\n    const changes = [\n      collectionViewer.viewChange,\n      this.treeControl.expansionModel.onChange,\n      this._flattenedData\n    ];\n    return merge(...changes).pipe(map(() => {\n      this._expandedData.next(\n        this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n      return this._expandedData.value;\n    }));\n  }\n\n  disconnect() {\n    // no op\n  }\n}\n\n","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { NxFlatTreeNode } from './tree-node';\n\n\n/** Flat tree control.\n  Able to expand/collapse a subtree recursively for flattened tree.\n*/\nexport class NxFlatTreeControl<F extends NxFlatTreeNode> extends FlatTreeControl<F> {\n  constructor() {\n    super(node => node.level, node => node.expandable);\n  }\n}\n"],"names":["Directive","ViewContainerRef","tslib_1.__extends","Component","ViewEncapsulation","ChangeDetectionStrategy","CdkTree","ViewChild","CdkTreeNode","CdkTreeNodeDef","Input","Subject","takeUntil","coerceNumberProperty","Renderer2","ElementRef","Directionality","Optional","CdkTreeNodeToggle","NgModule","CdkTreeModule","CommonModule","take","BehaviorSubject","merge","map","DataSource","FlatTreeControl"],"mappings":"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"}
