{"version":3,"sources":["ng://@allianz/ngx-ndbx/pagination/pagination-texts.ts","node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/pagination/pagination-utils.ts","ng://@allianz/ngx-ndbx/pagination/pagination.component.ts","ng://@allianz/ngx-ndbx/pagination/pagination.module.ts"],"names":["DefaultPaginationTexts","previous","next","first","last","ofLabel","ariaLabel","NX_PAGINATION_TEXTS","InjectionToken","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","push","value","error","NxPaginationUtils","this","_pagesToShow","_elipsisText","_classExpanded","prototype","getPages","currentPage","totalPages","__spread","arguments","length","concat","getStartArray","getMiddleArray","getEndArray","pageNumber","middle","createPaginationItem","end","currentItemToShow","showEllipsis","endItem","counterPages","start","startItem","label","classExpanded","class","Injectable","NxPaginationComponent","paginationTexts","paginationUtilsService","_changeDetectorRef","_type","totalNumberPages","nxGoPrev","EventEmitter","nxGoNext","nxGoPage","Object","defineProperty","_page","markForCheck","_count","calculateTotalPages","_perPage","ngOnInit","ngAfterContentInit","type","console","warn","getMin","getMax","max","Math","ceil","onPage","emit","onPrev","_isPaginationPreviousDisabled","onNext","_isPaginationNextDisabled","onFirst","onLast","lastPage","getPaginationItemClasses","page","is-ellipsis","nx-pagination__item--expanded-view","getPaginationNumberClasses","is-active","nx-pagination__ellipsis","nx-pagination__link","isPaginationVisible","count","isPaginationCompactVisible","includes","isPaginationContainerVisible","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Optional","Inject","ChangeDetectorRef","Input","Output","NxPaginationModule","NgModule","imports","CommonModule","NxIconModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["\n\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\n\n/**\n * Interface for providing custom labels in a simple pagination.\n * With an implementation you can localize your pagination with the NX_PAGINATION_TEXTS injection token.\n */\nexport interface IPaginationTexts {\n  /** Label that should replace 'previous'. */\n  previous: string;\n\n  /** Label that should replace 'next'. */\n  next: string;\n\n  /** Label that should replace 'first'.\n   *\n   * Optional attribute needed only for the advanced pagination.\n   */\n  first?: string;\n\n  /** Label that should replace 'last'.\n   *\n   * Optional attribute needed only for the advanced pagination.\n   */\n  last?: string;\n\n  /** Label that should replace 'of'. */\n  ofLabel: string;\n\n  /** Label that should replace the aria label. */\n  ariaLabel: string;\n}\n\nexport const DefaultPaginationTexts =  {\n  previous: 'Previous',\n  next: 'Next',\n  first: 'First',\n  last: 'Last',\n  ofLabel: 'of',\n  ariaLabel: 'Please select your page'\n};\n\n\n/** InjectionToken for pagination that can be used to override default locale code. */\nexport const NX_PAGINATION_TEXTS = new InjectionToken<IPaginationTexts>('nx-pagination-texts');\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Page } from './pagination.component';\n\n/** @docs-private */\n@Injectable()\nexport class NxPaginationUtils  {\n  private _pagesToShow = 3;\n  private _elipsisText: string = '...';\n  private _classExpanded: string = 'expanded-view';\n\n  getPages(currentPage: number, totalPages: number): Page[] {\n\n    let pages = [];\n    let start = [], middle = [], end = [];\n\n    // First array -> start\n    start = this.getStartArray(currentPage, totalPages);\n    // Second array -> middle\n    middle =  this.getMiddleArray(currentPage, totalPages);\n    // Third array -> end\n    end = this.getEndArray(currentPage, totalPages);\n\n    pages = [ ...start, ...middle, ...end ];\n\n    return pages;\n  }\n\n  getMiddleArray(currentPage: number, totalPages: number): Array<any> {\n    let pageNumber = currentPage < 6 ? 4 : currentPage - 1;\n    const middle = [];\n\n    while (\n      middle.length < 3 &&\n      pageNumber >= 2 &&\n      pageNumber <= totalPages - 3 &&\n      (pageNumber <= currentPage + 1 && pageNumber >= currentPage - 1)\n    ) {\n      middle.push(this.createPaginationItem(pageNumber, pageNumber));\n      pageNumber++;\n    }\n    return middle;\n  }\n  getEndArray(currentPage: number, totalPages: number): Array<any> {\n    const end = [];\n    let currentItemToShow: number =\n      totalPages <= 3 ? totalPages + 1 :\n      totalPages <= 6 ? totalPages - (totalPages - 4) : totalPages - 2 ;\n    const showEllipsis = currentPage < totalPages - 4;\n\n    while (currentItemToShow <= totalPages) {\n      const endItem = end.length === 0 && showEllipsis ?\n        this.createPaginationItem(this._elipsisText, currentItemToShow, true) :\n        this.createPaginationItem(currentItemToShow , currentItemToShow, true);\n      end.push(endItem);\n      currentItemToShow++;\n    }\n\n    return end;\n  }\n  getStartArray(currentPage: number, totalPages: number): Array<any> {\n    let counterPages = 0;\n    const start = [];\n    const maxSizeArray = 3;\n\n    while (counterPages < maxSizeArray && counterPages < totalPages) {\n      const startItem = counterPages === 2 && currentPage > 5 ?\n        this.createPaginationItem(this._elipsisText, counterPages, true) :\n        this.createPaginationItem(counterPages + 1 , counterPages + 1, true);\n\n      start.push(startItem);\n      counterPages++;\n    }\n\n    return start;\n  }\n\n\n  private createPaginationItem(label: string | number, value: number, classExpanded?: boolean) {\n    return { label: label, value: value, class: classExpanded ? this._classExpanded : ''  };\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { DefaultPaginationTexts, IPaginationTexts, NX_PAGINATION_TEXTS } from './pagination-texts';\nimport { NxPaginationUtils } from './pagination-utils';\n\n/** @docs-private */\nexport interface Page {\n  label: string;\n  value: any;\n  class: string;\n}\n\n@Component({\n  selector: 'nx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './pagination.component.scss' ],\n})\n\nexport class NxPaginationComponent implements OnInit, AfterContentInit {\n  private _page: number;\n  private _count: number;\n  private _perPage: number;\n  private _type: string = 'simple';\n\n  /** @docs-private */\n  paginationTexts: IPaginationTexts;\n\n  /** @docs-private */\n  totalNumberPages: number = 0;\n\n  get page(): number { return this._page; }\n\n  /** Sets the current page. */\n  @Input('nxPage') // the current page\n  set page(value: number) {\n    this._page = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get count(): number { return this._count; }\n\n  /** Number of total items over all pages. */\n  @Input('nxCount') // how many total items there are in all pages\n  set count(value: number) {\n    this._count = value;\n    this.totalNumberPages =  this.calculateTotalPages();\n    this._changeDetectorRef.markForCheck();\n  }\n  get perPage(): number { return this._perPage; }\n\n  /** Sets the number of items you want to show per page. */\n  @Input('nxPerPage') // how many items we want to show per page\n  set perPage(value: number) {\n    this._perPage = value;\n    this.totalNumberPages =  this.calculateTotalPages();\n    this._changeDetectorRef.markForCheck();\n  }\n  get type(): string { return this._type; }\n\n  /**\n   * Determines the type of pagination.\n   *\n   * Values: simple |Â advanced, default: simple.\n   */\n  @Input('nxType')\n  set type(value: string) { // type advanced or simple\n    this._type = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** An event emitted when the previous page button is clicked. */\n  @Output() nxGoPrev = new EventEmitter<void>();\n\n  /** An event emitted when the next page button is clicked */\n  @Output() nxGoNext = new EventEmitter<void>();\n\n  /**\n   * An event emitted when a page number is clicked.\n   * Provides the number of the page as parameter.\n   */\n  @Output() nxGoPage = new EventEmitter<number>();\n\n  constructor(\n      @Optional() @Inject(NX_PAGINATION_TEXTS) paginationTexts: IPaginationTexts,\n      private paginationUtilsService: NxPaginationUtils,\n      private _changeDetectorRef: ChangeDetectorRef) {\n    this.paginationTexts = paginationTexts || DefaultPaginationTexts;\n   }\n\n  ngOnInit() {\n    this.totalNumberPages =  this.calculateTotalPages();\n  }\n\n  ngAfterContentInit() {\n    if (this.type === 'advanced' && (!this.paginationTexts.last || !this.paginationTexts.first)) {\n      console.warn('Please define aria labels for the last and first arrows.');\n    }\n  }\n\n  /** Returns the number of the first page. */\n  getMin(): number {\n    return ((this._perPage * this._page) - this._perPage) + 1;\n  }\n\n  /** Returns the number of the last page. */\n  getMax(): number {\n    let max = this._perPage * this._page;\n    if (max > this._count) {\n      max = this._count;\n    }\n    return max;\n  }\n\n  /** Returns the total number of pages */\n  calculateTotalPages(): number {\n    return Math.ceil(this._count / this._perPage) || 0;\n  }\n\n  /** Directs to the page with number n. */\n  onPage(n: number): void {\n    this.nxGoPage.emit(n);\n  }\n\n  /** Directs to the previous page. */\n  onPrev(): void {\n    if (!this._isPaginationPreviousDisabled()) {\n      this.nxGoPrev.emit();\n    }\n  }\n\n  /** Directs to the next page. */\n  onNext(): void {\n    if (!this._isPaginationNextDisabled()) {\n      this.nxGoNext.emit();\n    }\n  }\n\n  /** Directs to the first page. */\n  onFirst() {\n    if (!this._isPaginationPreviousDisabled()) {\n      this.onPage(1);\n    }\n  }\n\n  /** Directs to the last page. */\n  onLast() {\n    if (!this._isPaginationNextDisabled()) {\n      this.onPage(this.totalNumberPages);\n    }\n  }\n\n  /** Returns if the current page is the last page. */\n  lastPage(): boolean {\n    return this._perPage * this._page >= this._count;\n  }\n\n  /** @docs-private */\n  getPages(): Page[] {\n    return this.paginationUtilsService.getPages(this._page, this.totalNumberPages);\n  }\n\n  /** @docs-private */\n  getPaginationItemClasses(page: Page): Object {\n    const classes = {\n      'is-ellipsis': page.label === '...',\n      'nx-pagination__item--expanded-view': page.class === 'expanded-view'\n    };\n    return classes;\n  }\n\n  /** @docs-private */\n  getPaginationNumberClasses(page: Page): Object {\n    const classes = {\n      'is-active': page.value === this.page,\n      'nx-pagination__ellipsis': page.label === '...',\n      'nx-pagination__link': page.label !== '...'\n    };\n    return classes;\n  }\n\n  /** Returns true, if `nxCount` is greater than 0, else false. */\n  isPaginationVisible(): boolean {\n    return this.count > 0;\n  }\n\n  /** Returns true, if `nxCount` is greater than 0 and the type of pagination is 'simple', else false. */\n  isPaginationCompactVisible(): boolean {\n    return this.type.includes('simple') && this.count > 0;\n  }\n\n  /** @docs-private */\n  isPaginationContainerVisible(): boolean {\n    return this.type.includes('advanced');\n  }\n\n  _isPaginationPreviousDisabled(): boolean {\n    return this.page === this.getMin();\n  }\n\n  _isPaginationNextDisabled(): boolean {\n    return this.page === this.totalNumberPages;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxPaginationComponent } from './pagination.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxPaginationUtils } from './pagination-utils';\n\n@NgModule({\n  imports: [\n    CommonModule, NxIconModule\n  ],\n  declarations: [\n    NxPaginationComponent\n  ],\n  exports: [\n    NxPaginationComponent\n  ],\n  providers: [\n    NxPaginationUtils\n  ]\n})\nexport class NxPaginationModule { }\n"]}