{"version":3,"file":"allianz-ngx-ndbx-sidebar.umd.js.map","sources":["ng://@allianz/ngx-ndbx/sidebar/sidebar.component.ts","ng://@allianz/ngx-ndbx/sidebar/sidebar.module.ts"],"sourcesContent":["import {\n  Input, Component, ChangeDetectorRef, OnDestroy,\n  ChangeDetectionStrategy, Renderer2, ElementRef, OnInit, Output, EventEmitter\n} from '@angular/core';\nimport { SPACE, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\n\nexport const MAX_WIDTH = 400;\nexport const MIN_WIDTH = 56;\nexport const AUTO_COLLAPSE_WIDTH = 168;\nexport const RESIZE_STEP_SIZE = 20;\n\n@Component({\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['sidebar.scss'],\n  selector: 'nx-sidebar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-resizing]': '_resizing',\n    '[class.is-closed]': '!open',\n    '[style.width.px]': `_sidebarElementWidth`\n  },\n})\nexport class NxSidebarComponent implements OnDestroy, OnInit {\n\n  /** Emits the new width of the sidebar on resize or on close/open event.*/\n  @Output() widthChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** If set to `true` this will enable dynamic resizing of the sidebar. */\n  @Input()\n  set resizeable(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._resizeable) {\n      this._resizeable = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get resizeable() {\n    return this._resizeable;\n  }\n  private _resizeable: boolean = false;\n\n  /** Sets the minimal width (in pixel) of the sidebar. */\n  @Input()\n  set minWidth(value: number) {\n    this._minWidth = coerceNumberProperty(value) || MIN_WIDTH;\n  }\n  get minWidth() {\n    return this._minWidth;\n  }\n  private _minWidth: number = MIN_WIDTH;\n\n  /** This sets the accessibility label for the resize handle of the sidebar. */\n  @Input()\n  set resizeHandleAriaLabel(value: string) {\n    if (value !== this._resizeHandleAriaLabel) {\n      this._resizeHandleAriaLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get resizeHandleAriaLabel() {\n    return this._resizeHandleAriaLabel;\n  }\n  private _resizeHandleAriaLabel: string = '';\n\n  /** This reflects the current open state of the sidebar.\n      It will be `true` if the sidebar is expanded and `false` if the sidebar is closed.\n  */\n  set open(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._open) {\n      this._open = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get open(): boolean {\n    return this._open;\n  }\n  private _open: boolean = true;\n\n  /** This sets the width of the sidebar. */\n  set width(value: number) {\n    const newValue = Math.max(value, this.minWidth);\n\n    if (newValue !== this._width) {\n      this._width = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get width(): number {\n    return this._width;\n  }\n  _width: number = 0;\n\n  _resizing: boolean = false;\n\n  _previousWidth: number = 0;\n\n  _isMobile: boolean = false;\n\n  _resizeWidth: number = 0;\n\n  private _resizeStartX: number;\n\n  private _resizeStartWidth: number;\n\n  private _unsubscribeListeners: Array<() => void> = [];\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private renderer: Renderer2,\n    private _element: ElementRef) {\n    this._onResize = this._onResize.bind(this);\n    this._onResizeEnd = this._onResizeEnd.bind(this);\n  }\n\n  ngOnInit() {\n    this.width = this._element.nativeElement.clientWidth;\n  }\n\n  ngOnDestroy() {\n    this._removeDragEventListeners();\n  }\n\n  /** This will expand the sidebar to its full width. */\n  expand() {\n    this.open = true;\n  }\n\n  /** This will close the sidebar to its minimal width. */\n  close() {\n    this.open = false;\n  }\n\n  /** This will close or expand the sidebar depending if its expanded or closed. */\n  toggle() {\n    if (this.open) {\n      this.close();\n    } else {\n      this.expand();\n    }\n    this._emitWidthChange(this._sidebarElementWidth);\n  }\n\n  get _sidebarElementWidth() {\n    if (this._resizing) {\n      return this._resizeWidth;\n    }\n\n    return this.open ? this.width : this.minWidth;\n  }\n\n  _onResizeStart(event) {\n    if (event.type.startsWith('touch')) {\n      event = event.changedTouches[0];\n    }\n\n    this._resizeStartX = event.screenX;\n    this._resizeStartWidth = this.open ? this.width : this.minWidth;\n    this._resizeWidth = this.width;\n\n    this._attachDragEventListeners();\n  }\n\n  _onResize(event) {\n    this._resizing = true;\n\n    if (event.type.startsWith('touch')) {\n      event = event.changedTouches[0];\n    }\n\n    const dx = event.screenX - this._resizeStartX;\n    this._resizeWidth = Math.max(this.minWidth, this._resizeStartWidth + dx);\n    this.open = this._resizeWidth > this.minWidth;\n  }\n\n  _onResizeEnd(event) {\n    this._resizing = false;\n    this._removeDragEventListeners();\n\n    if (this._isMouseDrag(this._resizeStartX, event.screenX)) {\n      if (this._resizeWidth < AUTO_COLLAPSE_WIDTH) {\n        this.open = false;\n        this._emitWidthChange(this._sidebarElementWidth);\n\n      } else {\n        this.open = true;\n        this.width = Math.min(MAX_WIDTH, this._resizeWidth);\n        this._emitWidthChange(this.width);\n      }\n    }\n    this._resizeWidth = 0;\n  }\n\n  _onToggleClick() {\n    this.toggle();\n  }\n\n  _onResizeHandleClick(event) {\n    if (this._isMouseDrag(this._resizeStartX, event.screenX)) {\n      return;\n    }\n\n    this.toggle();\n  }\n\n  _onSidebarKeydown(event) {\n    if (event.which === SPACE) {\n      event.preventDefault();\n      this.toggle();\n    } else if (event.which === LEFT_ARROW) {\n      this.width = this.width - RESIZE_STEP_SIZE;\n\n      if (this.width <= AUTO_COLLAPSE_WIDTH) {\n        this.open = false;\n        this.width = AUTO_COLLAPSE_WIDTH + 1;\n      }\n      this._emitWidthChange(this.width);\n    } else if (event.which === RIGHT_ARROW) {\n      if (this.open) {\n        this.width = Math.min(MAX_WIDTH, this.width + RESIZE_STEP_SIZE);\n      } else {\n        this.open = true;\n        this.width = Math.max(this.width, AUTO_COLLAPSE_WIDTH);\n      }\n      this._emitWidthChange(this.width);\n    }\n  }\n\n  private _emitWidthChange(width: number) {\n    this.widthChange.emit(width);\n  }\n\n  private _isMouseDrag(startX: number, endX: number): boolean {\n    return Math.abs(endX - startX) > 5;\n  }\n\n  private _attachDragEventListeners() {\n    this._unsubscribeListeners.push(this.renderer.listen('document', 'mousemove', this._onResize));\n    this._unsubscribeListeners.push(this.renderer.listen('document', 'mouseup', this._onResizeEnd));\n    this._unsubscribeListeners.push(this.renderer.listen('document', 'touchmove', this._onResize));\n    this._unsubscribeListeners.push(this.renderer.listen('document', 'touchend', this._onResizeEnd));\n  }\n\n  private _removeDragEventListeners() {\n    this._unsubscribeListeners.forEach(unsubscribe => unsubscribe());\n  }\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxSidebarComponent } from './sidebar.component';\n\n@NgModule({\n  imports: [ CommonModule, NxIconModule ],\n  declarations: [ NxSidebarComponent ],\n  exports: [ NxSidebarComponent ]\n})\nexport class NxSidebarModule { }\n"],"names":["EventEmitter","coerceBooleanProperty","coerceNumberProperty","SPACE","LEFT_ARROW","RIGHT_ARROW","Component","ChangeDetectionStrategy","ChangeDetectorRef","Renderer2","ElementRef","Output","Input","NgModule","CommonModule","NxIconModule"],"mappings":"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"}
