(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@allianz/ngx-ndbx/grid'), require('@angular/common'), require('@allianz/ngx-ndbx/autocomplete'), require('@allianz/ngx-ndbx/formfield'), require('@angular/cdk/coercion'), require('@angular/core'), require('@allianz/ngx-ndbx/button')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/page-search', ['exports', '@allianz/ngx-ndbx/grid', '@angular/common', '@allianz/ngx-ndbx/autocomplete', '@allianz/ngx-ndbx/formfield', '@angular/cdk/coercion', '@angular/core', '@allianz/ngx-ndbx/button'], factory) :
    (factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx']['page-search'] = {}),global.allianz['ngx-ndbx'].grid,global.ng.common,global.allianz['ngx-ndbx'].autocomplete,global.allianz['ngx-ndbx'].formfield,global.ng.cdk.coercion,global.ng.core,global.allianz['ngx-ndbx'].button));
}(this, (function (exports,grid,common,autocomplete,formfield,coercion,core,button) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxPageSearchComponent = /** @class */ (function () {
        function NxPageSearchComponent(_changeDetectorRef) {
            this._changeDetectorRef = _changeDetectorRef;
            /**
             * An event emitted when the user clicks the search button.
             */
            this.buttonClick = new core.EventEmitter();
            this._buttonLabel = null;
            this._hideSearchButton = false;
            this._buttonLayout = '12,12,12,2';
            this._contentLayout = null;
        }
        Object.defineProperty(NxPageSearchComponent.prototype, "buttonLabel", {
            get: /**
             * @return {?}
             */ function () {
                return this._buttonLabel;
            },
            /** Sets the text label of the button. */
            set: /**
             * Sets the text label of the button.
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (this._buttonLabel !== value) {
                    this._buttonLabel = value;
                    this._changeDetectorRef.markForCheck();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxPageSearchComponent.prototype, "hideSearchButton", {
            get: /**
             * @return {?}
             */ function () {
                return this._hideSearchButton;
            },
            /** Whether the search button should be hidden. */
            set: /**
             * Whether the search button should be hidden.
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._hideSearchButton = coercion.coerceBooleanProperty(value);
                this._changeDetectorRef.markForCheck();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxPageSearchComponent.prototype, "buttonLayout", {
            get: /**
             * @return {?}
             */ function () {
                return this._buttonLayout;
            },
            /** Layout of the search button inside of a NxGrid. Default: 12,12,12,2. */
            set: /**
             * Layout of the search button inside of a NxGrid. Default: 12,12,12,2.
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (this._buttonLayout !== value) {
                    this._buttonLayout = value;
                    this._changeDetectorRef.markForCheck();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxPageSearchComponent.prototype, "contentLayout", {
            get: /**
             * @return {?}
             */ function () {
                if (this._contentLayout) {
                    return this._contentLayout;
                }
                return !this.hideSearchButton ? '12,12,12,10' : '12';
            },
            /** Layout of the content area inside of a NxGrid. Default: 12,12,12,10 | 12 (if search button is hidden). */
            set: /**
             * Layout of the content area inside of a NxGrid. Default: 12,12,12,10 | 12 (if search button is hidden).
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (this._contentLayout !== value) {
                    this._contentLayout = value;
                    this._changeDetectorRef.markForCheck();
                }
            },
            enumerable: true,
            configurable: true
        });
        /** @docs-private */
        /**
         * \@docs-private
         * @return {?}
         */
        NxPageSearchComponent.prototype.onButtonClick = /**
         * \@docs-private
         * @return {?}
         */
            function () {
                this.buttonClick.emit();
            };
        NxPageSearchComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'nx-page-search',
                        template: "<div class=\"nx-pagesearch\">\n  <div nxLayout=\"grid\">\n    <div nxRow>\n      <div [nxCol]=\"contentLayout\" class=\"nx-pagesearch--content\">\n        <ng-content></ng-content>\n      </div>\n      <div [nxCol]=\"buttonLayout\" *ngIf=\"!hideSearchButton\" class=\"nx-pagesearch__actions\">\n        <button nxButton=\"primary medium\" (click)=\"onButtonClick()\">{{buttonLabel}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        styles: [".nx-pagesearch{padding:32px 0;background-color:#fff;box-shadow:0 2px 4px rgba(65,65,65,.5)}.nx-pagesearch ::ng-deep .nx-formfield__wrapper{padding-bottom:0}.nx-pagesearch ::ng-deep .c-input{font-size:30px;font-weight:300;line-height:32px;height:auto}.nx-pagesearch ::ng-deep .nx-formfield__prefix{color:#007ab3}.nx-pagesearch ::ng-deep button{margin:0}.nx-pagesearch ::ng-deep .nx-icon--auto{font-size:24px}.nx-pagesearch .nx-pagesearch__actions{display:flex;align-items:center}"]
                    }] }
        ];
        /** @nocollapse */
        NxPageSearchComponent.ctorParameters = function () {
            return [
                { type: core.ChangeDetectorRef }
            ];
        };
        NxPageSearchComponent.propDecorators = {
            buttonClick: [{ type: core.Output, args: ['nxButtonClick',] }],
            buttonLabel: [{ type: core.Input, args: ['nxButtonLabel',] }],
            hideSearchButton: [{ type: core.Input, args: ['nxHideSearchButton',] }],
            buttonLayout: [{ type: core.Input, args: ['nxButtonLayout',] }],
            contentLayout: [{ type: core.Input, args: ['nxContentLayout',] }]
        };
        return NxPageSearchComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxPageSearchModule = /** @class */ (function () {
        function NxPageSearchModule() {
        }
        NxPageSearchModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            autocomplete.NxAutocompleteModule,
                            formfield.NxFormfieldModule,
                            button.NxButtonModule,
                            grid.NxGridModule
                        ],
                        declarations: [
                            NxPageSearchComponent
                        ],
                        exports: [
                            NxPageSearchComponent
                        ]
                    },] }
        ];
        return NxPageSearchModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NxPageSearchModule = NxPageSearchModule;
    exports.NxPageSearchComponent = NxPageSearchComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=allianz-ngx-ndbx-page-search.umd.js.map