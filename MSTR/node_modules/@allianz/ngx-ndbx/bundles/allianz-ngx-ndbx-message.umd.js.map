{"version":3,"file":"allianz-ngx-ndbx-message.umd.js.map","sources":["ng://@allianz/ngx-ndbx/message/message.component.ts","ng://@allianz/ngx-ndbx/message/message.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** The contextual type of a message. */\nexport type CONTEXT = 'regular' | 'info' | 'error' | 'success' | 'warning';\n\nconst ICONS = {\n  info: 'info-circle',\n  error: 'exclamation-circle',\n  success: 'check-circle',\n  warning: 'exclamation-triangle'\n};\n\n@Component({\n  selector: 'nx-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'nxMessage',\n  host: {\n    '[class.context-info]': 'context === \"info\"',\n    '[class.context-error]': 'context === \"error\"',\n    '[class.context-success]': 'context === \"success\"',\n    '[class.context-warning]': 'context === \"warning\"',\n    '[class.nx-message--closable]': 'closable'\n\n  }\n})\nexport class NxMessageComponent {\n\n  private _context: CONTEXT = 'regular';\n\n  /**\n   * Sets the context of the message.\n   * The message box will color accordingly. Default: 'regular' */\n  @Input('nxContext')\n  set context(value: CONTEXT) {\n    if (value !== this._context) {\n      this._context = value;\n      this._icon = this.getIconName();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get context(): CONTEXT {\n    return this._context;\n  }\n\n  private _showIcon: boolean = false;\n\n  /**\n   * Whether an icon that belongs to the context of the message should be displayed.\n   * @deprecated The `showIcon` attribute should be always true in future. Messages without an icon are deprecated.\n   * @deletion-target 9.0.0\n   * */\n  @Input()\n  set showIcon(value: boolean) {\n    this._showIcon = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showIcon(): boolean {\n    return this._showIcon;\n  }\n\n  private _closable: boolean = false;\n\n  /** Whether a message should have a close icon in order to be dismissed. */\n  @Input()\n  set closable(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._closable) {\n      this._closable = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closable(): boolean {\n    return this._closable;\n  }\n\n  private _icon: string;\n\n  /** @docs-private */\n  get icon(): string {\n    return this._icon;\n  }\n\n  private _closeButtonLabel: string = 'Close dialog';\n\n  /** Sets the label of the close button of the message. */\n  @Input()\n  set closeButtonLabel(value: string) {\n    if (value !== this._closeButtonLabel) {\n      this._closeButtonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closeButtonLabel(): string {\n    return this._closeButtonLabel;\n  }\n\n\n  /** Event emitted when the close icon of the message has been clicked. */\n  @Output('close') closeEvent = new EventEmitter<void>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  _emitCloseEvent() {\n    this.closeEvent.emit();\n  }\n\n  /** @docs-private */\n  getIconName(): string {\n    if (this._context === 'info') {\n      return ICONS.info;\n    } else if (this._context === 'error') {\n      return ICONS.error;\n    } else if (this._context === 'success') {\n      return ICONS.success;\n    } else if (this._context === 'warning') {\n      return ICONS.warning;\n    }\n    return '';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxMessageComponent } from './message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxMessageComponent\n  ],\n  exports: [\n    NxMessageComponent\n  ]\n})\nexport class NxMessageModule {\n\n}\n"],"names":["EventEmitter","coerceBooleanProperty","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","Output","NgModule","CommonModule","NxIconModule"],"mappings":"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"}
