{"version":3,"sources":["ng://@allianz/ngx-ndbx/tooltip/tooltip-animations.ts","ng://@allianz/ngx-ndbx/tooltip/tooltip.component.ts","node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/tooltip/tooltip.directive.ts","ng://@allianz/ngx-ndbx/tooltip/tooltip.module.ts"],"names":["nxTooltipAnimations","tooltipState","trigger","state","style","opacity","transition","animate","NxTooltipComponent","_changeDetectorRef","elementRef","this","_showTimeoutId","_hideTimeoutId","_visibility","_position","_arrowStyle","_closeOnInteraction","_onHide","Subject","Object","defineProperty","prototype","_message","value","markForCheck","position","show","delay","_this","clearTimeout","window","setTimeout","hide","afterHidden","asObservable","isVisible","visibility","isDelayed","ngOnDestroy","complete","_animationStart","_animationDone","event","toState","next","_handleBodyInteraction","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","animations","host","[style.zoom]","(body:click)","aria-hidden","ChangeDetectorRef","ElementRef","__assign","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","e","ar","done","push","error","NX_TOOLTIP_PANEL_CLASS","getNxTooltipInvalidPositionError","Error","NX_TOOLTIP_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","fallbacks","originX","originY","overlayX","overlayY","NxTooltipDirective","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","platform","_ariaDescriber","_focusMonitor","_dir","_defaultOptions","_disabled","_manualListeners","Map","_destroyed","_scrollStrategy","scrollStrategies","reposition","element","nativeElement","IOS","ANDROID","set","forEach","listener","addEventListener","monitor","pipe","takeUntil","subscribe","origin","run","_overlayRef","_updatePosition","_tooltipInstance","updatePosition","coerceBooleanProperty","removeDescription","trim","_isTooltipVisible","_updateTooltipMessage","describe","message","ngOnInit","elementStyle","userSelect","nodeName","webkitUserSelect","msUserSelect","dispose","removeEventListener","clear","stopMonitoring","disabled","overlayRef","_createOverlay","_detach","_portal","ComponentPortal","_embeddedViewRef","attach","instance","toggle","_handleKeydown","keyCode","ESCAPE","stopPropagation","_handleTouchend","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withLockedPosition","withFlexibleDimensions","withPush","withScrollableContainers","positionChanges","change","pair_1","connectionPair","_positionArrow","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","panelClass","scrollStrategy","disposeOnNavigation","detachments","hasAttached","detach","getConfig","_getOrigin","overlay","_getOverlayPosition","withPositions","__spread","concat","originPosition","isLtr","overlayPosition","onMicrotaskEmpty","take","pair","targetPosition","getBoundingClientRect","left","width","overlayElement","arrowStyle","top","Directive","exportAs","(keydown)","(touchend)","Overlay","ScrollDispatcher","ViewContainerRef","NgZone","Platform","AriaDescriber","FocusMonitor","Directionality","decorators","type","Optional","Inject","Input","NxTooltipModule","NgModule","imports","A11yModule","CommonModule","OverlayModule","exports","declarations","entryComponents"],"mappings":"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","sourcesContent":["import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * Animations used by NxTooltip.\n * @docs-private\n */\nexport const nxTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({ opacity: 0 })),\n    state('visible', style({ opacity: 1 })),\n    transition('* => visible', animate('70ms cubic-bezier(0, 0, 0.2, 1)',\n      style({ opacity: 1 })\n    )),\n    transition('* => hidden', animate('70ms cubic-bezier(0, 0, 0.2, 1)',\n      style({ opacity: 0 })\n    )),\n  ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { nxTooltipAnimations } from './tooltip-animations';\nimport { TooltipPosition } from './tooltip.directive';\n\ntype TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  selector: 'nx-tooltip-component',\n  templateUrl: 'tooltip.component.html',\n  styleUrls: ['tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the aninxions are disabled or there is no web aninxions polyfill.\n    '[style.zoom]': 'visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class NxTooltipComponent implements OnDestroy {\n  /** The timeout ID of any current timer set to show the tooltip */\n  private _showTimeoutId: number = null;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  private _hideTimeoutId: number = null;\n\n  /** Message to display in the tooltip */\n  private _message: string;\n\n  set message(value: string) {\n    this._message = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get message(): string {\n    return this._message;\n  }\n\n  private _visibility: TooltipVisibility = 'initial';\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  get visibility(): TooltipVisibility {\n    return this._visibility;\n  }\n\n  private _position: TooltipPosition = 'bottom';\n\n  /* @docs-private */\n  set position(value: TooltipPosition) {\n    this._position = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /* @docs-private */\n  get position() {\n    return this._position;\n  }\n\n  _arrowStyle: { [key: string]: string } = {};\n\n  /* @docs-private */\n  set arrowStyle(value) {\n    this._arrowStyle = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /* @docs-private */\n  get arrowStyle() {\n    return this._arrowStyle;\n  }\n\n  /* @docs-private */\n  get arrowClass(): string {\n    return `nx-tooltip__arrow--${this.position}`;\n  }\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<any> = new Subject();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    public elementRef: ElementRef) {}\n\n  /**\n   * Shows the tooltip with an aninxion originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n      this._hideTimeoutId = null;\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._showTimeoutId = window.setTimeout(() => {\n      this._visibility = 'visible';\n      this._showTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._changeDetectorRef.markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    if (this._hideTimeoutId) {\n      return;\n    }\n\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n      this._showTimeoutId = null;\n    }\n\n    this._hideTimeoutId = window.setTimeout(() => {\n      this._visibility = 'hidden';\n      this._hideTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._changeDetectorRef.markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this.visibility === 'visible';\n  }\n\n  /** Whether the tooltip started a delay to be shown/hidden */\n  isDelayed(): boolean {\n    return this._showTimeoutId !== null || this._hideTimeoutId !== null;\n  }\n\n  ngOnDestroy() {\n    this._onHide.complete();\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately.\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  ScrollStrategy,\n  ConnectionPositionPair,\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ComponentRef,\n  OnInit,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { NxTooltipComponent } from './tooltip.component';\n\n/**\n * Possible positions of the tooltip.\n */\nexport type TooltipPosition = 'left' | 'right' | 'top' | 'bottom';\n\n/**\n * CSS class that will be attached to the overlay panel.\n * @docs-private\n */\nexport const NX_TOOLTIP_PANEL_CLASS = 'nx-tooltip-panel';\n\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nexport function getNxTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Default `nxTooltip` options that can be overridden. */\nexport interface NxTooltipDefaultOptions {\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  showDelay: number;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  hideDelay: number;\n\n  /** The default delay in ms before hiding the tooltip on touch devices */\n  touchendHideDelay: number;\n\n  /** The default position of the tooltip */\n  position?: TooltipPosition;\n}\n\n/** Injection token to be used to override the default options for `nxTooltip`. */\nexport const NX_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<NxTooltipDefaultOptions>('nx-tooltip-default-options', {\n      providedIn: 'root',\n      factory: NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n    });\n\nexport function NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): NxTooltipDefaultOptions {\n  return {\n    showDelay: 200,\n    hideDelay: 200,\n    touchendHideDelay: 1500,\n  };\n}\n\nconst fallbacks: ConnectionPositionPair[] = [\n  {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top',\n  },\n  {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center',\n  },\n  {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center',\n  },\n  {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom',\n\n  }\n];\n\n/**\n * Directive that attaches a tooltip to the host element.\n *\n */\n@Directive({\n  selector: '[nxTooltip]',\n  exportAs: 'nxTooltip',\n  host: {\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class NxTooltipDirective implements OnDestroy, OnInit {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: NxTooltipComponent | null;\n\n  private _portal: ComponentPortal<NxTooltipComponent>;\n  private _position: TooltipPosition = 'bottom';\n  private _disabled: boolean = false;\n  private _scrollStrategy: () => ScrollStrategy;\n  private _embeddedViewRef: ComponentRef<NxTooltipComponent>;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('nxTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this._updatePosition();\n\n        if (this._tooltipInstance) {\n          this._tooltipInstance.position = this._position;\n          this._tooltipInstance.show(0);\n        }\n\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('nxTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('nxTooltipShowDelay') showDelay: number = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('nxTooltipHideDelay') hideDelay: number = this._defaultOptions.hideDelay;\n\n  private _message: string = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('nxTooltip')\n  get message(): string {\n    return this._message;\n  }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(NX_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions: NxTooltipDefaultOptions) {\n\n    this._scrollStrategy = this._overlay.scrollStrategies.reposition;\n    const element: HTMLElement = _elementRef.nativeElement;\n\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (!platform.IOS && !platform.ANDROID) {\n      this._manualListeners\n        .set('mouseenter', () => this.show())\n        .set('mouseleave', () => this.hide());\n    } else {\n      // Fall back to showing on `touchstart`, otherwise\n      // there's no way for the user to trigger the tooltip on a touch device.\n      this._manualListeners.set('touchstart', () => this.show());\n    }\n\n    this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n    _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin === 'keyboard') {\n        _ngZone.run(() => this.show());\n      }\n    });\n\n    if (_defaultOptions && _defaultOptions.position) {\n      this.position = _defaultOptions.position;\n    }\n  }\n\n  /**\n   * Setup styling-specific things\n   */\n  ngOnInit() {\n    const element = this._elementRef.nativeElement;\n    const elementStyle = element.style as CSSStyleDeclaration & {webkitUserDrag: string};\n    const userSelect = element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA' ? '' : 'none';\n    elementStyle.webkitUserSelect = elementStyle.userSelect = elementStyle.msUserSelect = userSelect;\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    this._manualListeners.forEach((listener, event) => {\n      this._elementRef.nativeElement.removeEventListener(event, listener);\n    });\n    this._manualListeners.clear();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message || (this._isTooltipVisible() &&\n      !this._tooltipInstance.isDelayed())) {\n        return;\n    }\n\n    const overlayRef = this._createOverlay();\n\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(NxTooltipComponent, this._viewContainerRef);\n    this._embeddedViewRef = overlayRef.attach(this._portal);\n    this._tooltipInstance = this._embeddedViewRef.instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._updateTooltipMessage();\n    this._tooltipInstance.show(delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions.touchendHideDelay);\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef) {\n      return this._overlayRef;\n    }\n\n    const scrollableAncestors =\n        this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n                         .flexibleConnectedTo(this._elementRef)\n                         .withLockedPosition(true)\n                         .withFlexibleDimensions(false)\n                         .withPush(true);\n\n    strategy.withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      if (this._tooltipInstance) {\n\n        const pair = change.connectionPair;\n\n        this._ngZone.run(() => this._positionArrow(pair));\n\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: NX_TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy(),\n      disposeOnNavigation: true\n    });\n\n    this._updatePosition();\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition() {\n    const position =\n        this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position.withPositions([\n      {\n        ...origin,\n        ...overlay\n      },\n      ...fallbacks\n    ]);\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'left' -> 'right'`).\n   */\n  _getOrigin(): OriginConnectionPosition {\n    const isLtr = !this._dir || this._dir.value === 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position === 'top' || position === 'bottom') {\n      originPosition = {\n        originX: 'center',\n        originY: position\n      };\n    } else if (\n      (position === 'left' && isLtr) ||\n      (position === 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      (position === 'right' && isLtr) ||\n      (position === 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else {\n      throw getNxTooltipInvalidPositionError(position);\n    }\n\n    return originPosition;\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): OverlayConnectionPosition {\n    const isLtr = !this._dir || this._dir.value === 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position === 'top') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position === 'bottom') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      (position === 'left' && isLtr) ||\n      (position === 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      (position === 'right' && isLtr) ||\n      (position === 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getNxTooltipInvalidPositionError(position);\n    }\n\n    return overlayPosition;\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef.updatePosition();\n        }\n      });\n    }\n  }\n\n  private _positionArrow(pair: ConnectionPositionPair) {\n    const parentElementPositionX = this._elementRef.nativeElement.getBoundingClientRect().left;\n    const parentElementWidth = this._elementRef.nativeElement.getBoundingClientRect().width / 2;\n    const overlayElementLeftOffset = this._overlayRef\n      .overlayElement\n      .getBoundingClientRect()\n      .left;\n\n    // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n    const targetPosition = (parentElementPositionX + parentElementWidth) - (overlayElementLeftOffset);\n\n    if (pair.originX === pair.overlayX) {\n      const direction = 'left';\n      const arrowStyle = {};\n\n      arrowStyle[direction] = targetPosition + 'px';\n      this._tooltipInstance.arrowStyle = arrowStyle;\n    }\n\n    if (pair.originX === 'end' && pair.overlayX === 'start') {\n      this._tooltipInstance.arrowStyle = {\n        top: '50%',\n      };\n      this._tooltipInstance.position = 'right';\n    } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n      this._tooltipInstance.arrowStyle = {\n        left: targetPosition + 'px',\n      };\n      this._tooltipInstance.position = 'bottom';\n    } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n      this._tooltipInstance.arrowStyle = {\n        top: '50%',\n      };\n      this._tooltipInstance.position = 'left';\n    } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n      this._tooltipInstance.arrowStyle = {\n        left: targetPosition + 'px',\n      };\n      this._tooltipInstance.position = 'top';\n    }\n  }\n}\n","import {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport { NxTooltipComponent } from './tooltip.component';\nimport { NxTooltipDirective } from './tooltip.directive';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule\n  ],\n  exports: [NxTooltipDirective, NxTooltipComponent],\n  declarations: [NxTooltipDirective, NxTooltipComponent],\n  entryComponents: [NxTooltipComponent]\n})\nexport class NxTooltipModule {}\n"]}