{"version":3,"sources":["ng://@allianz/ngx-ndbx/natural-language-form/word.component.ts","node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/natural-language-form/natural-language-form.component.ts","ng://@allianz/ngx-ndbx/natural-language-form/natural-language-form.module.ts"],"names":["NxWordComponent","elementRef","_changeDetectorRef","_renderer","_overlay","this","subscription","Subscription","EMPTY","subscriptionValues","hasErrors","inputChanges","Subject","currentTextWidth","size","prototype","ngAfterContentInit","_this","_validateControlChild","_control","stateChanges","pipe","startWith","subscribe","errorState","markForCheck","ngControl","valueChanges","value","updateCurrentTextWidth","next","setAriaLabel","label","ngOnDestroy","unsubscribe","measureCanvas","createElement","ctx","getContext","inputRef","styles","window","getComputedStyle","nativeElement","font","getFontShorthand","newWidth","measureText","width","parseInt","paddingRight","paddingLeft","parentMeasurement","parentElement","getBoundingClientRect","Math","max","minWidth","min","_popover","updatePosition","repositionError","Error","getConnectedOverlayOrigin","Object","defineProperty","focused","empty","Boolean","_dropdown","Component","args","selector","template","host","[class.size-short]","[class.size-regular]","[class.size-long]","[class.has-error]","[class.is-focused]","[class.is-filled]","[class.has-dropdown]","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","Renderer2","Overlay","ContentChild","NxFormfieldControl","ContentChildren","NxFormfieldErrorDirective","ViewChild","NxPopoverTriggerDirective","NxDropdownComponent","HostBinding","Input","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","push","error","NxNaturalLanguageFormComponent","_negative","resizeEvent$","updatePopoversSubscription","_size","coerceBooleanProperty","onResize","event","subjects","_words","map","word","source","merge","apply","__spread","arguments","length","concat","updatePositionPopovers","resizeObservable","throttleTime","delay","resizeWords","forEach","[class.is-negative]","[class.nx-natural-language-form--small]","[class.nx-natural-language-form--large]","HostListener","type","NxNaturalLanguageFormModule","NgModule","imports","CommonModule","NxInputModule","NxPopoverModule","declarations","exports"],"mappings":"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","sourcesContent":["import { NxFormfieldControl, NxFormfieldErrorDirective } from '@allianz/ngx-ndbx/formfield';\nimport { getFontShorthand } from '@allianz/ngx-ndbx/utils';\nimport { Overlay } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subject ,  Subscription } from 'rxjs';\n\nimport { NxPopoverTriggerDirective } from '@allianz/ngx-ndbx/popover';\nimport { NxDropdownComponent } from '@allianz/ngx-ndbx/dropdown';\n\n/** Type to determine the minimal width of a word. */\nexport type SIZES = 'regular' | 'short' | 'long';\n\n@Component({\n  selector: 'nx-word',\n  templateUrl: 'word.component.html',\n  styleUrls: [\n    'word.component.scss'\n  ],\n  host: {\n    '[class.size-short]': 'size == \"short\"',\n    '[class.size-regular]': 'size == \"regular\"',\n    '[class.size-long]': 'size == \"long\"',\n    '[class.has-error]': 'hasErrors',\n    '[class.is-focused]': 'isFocused',\n    '[class.is-filled]': 'isFilled',\n    '[class.has-dropdown]': 'hasDropdown',\n\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class NxWordComponent implements AfterContentInit, OnDestroy {\n  private subscription: Subscription = Subscription.EMPTY;\n  private subscriptionValues: Subscription = Subscription.EMPTY;\n\n  /** @docs-private */\n  public hasErrors: boolean = false;\n\n  private measureCanvas: HTMLCanvasElement;\n\n  /** @docs-private */\n  inputChanges = new Subject<any>();\n\n  @ContentChild(NxFormfieldControl) _control: NxFormfieldControl<any>;\n  @ContentChildren(NxFormfieldErrorDirective) _errorChildren: QueryList<NxFormfieldErrorDirective>;\n  @ViewChild(NxPopoverTriggerDirective) _popover: NxPopoverTriggerDirective;\n  @ContentChild(NxDropdownComponent) _dropdown: NxDropdownComponent;\n\n  /** @docs-private */\n  @HostBinding('style.width.px')\n  currentTextWidth: number = 0;\n\n\n  // this will apply different min-widths to our component through our styles\n  /** Provide a hint for a minimal width. The actual size will be determined for inputs for each change. */\n  @Input('nxSize') size: SIZES = 'regular';\n\n  /**\n   * A word doesn't have a set place to show labels.\n   * In order to be accessible, you have to provide a label with this property.\n   * It will be attached to the given input through `aria-label`.\n   */\n  @Input('nxLabel') label: string;\n\n  constructor(\n    /** @docs-private */\n    public elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _overlay: Overlay\n  ) { }\n\n  ngAfterContentInit() {\n    this._validateControlChild();\n\n    this.subscription = this._control.stateChanges.pipe(startWith(null)).subscribe(() => {\n      this.hasErrors = this._control.errorState;\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // if we have a ngcontrol available stick to its valueChanges subject\n    if (this._control.ngControl) {\n      this.subscriptionValues = this._control.ngControl.valueChanges.subscribe(value => {\n        this.updateCurrentTextWidth();\n        this.inputChanges.next();\n      });\n    // in any other case it is a bre input and input changes are signaled through simple state changes\n    } else {\n      this.subscriptionValues = this._control.stateChanges.subscribe(value => {\n        this.updateCurrentTextWidth();\n        this.inputChanges.next();\n      });\n    }\n\n\n    this._control.setAriaLabel(this.label);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n    @docs-private\n    Calculate the width of the full text given by the input,\n    that value is bound to this component so it can grow.\n\n    The involved input is known to have a width of 100% an will fit the additional space given\n    which completes the auto growing behavior.\n  */\n  updateCurrentTextWidth() {\n    // provide the canvas only lazy\n    if (!this.measureCanvas) {\n      this.measureCanvas = this._renderer.createElement('canvas');\n    }\n\n\n    const ctx = this.measureCanvas.getContext('2d');\n    const inputRef = this._control.elementRef;\n    const styles = window.getComputedStyle(inputRef.nativeElement);\n    ctx.font = getFontShorthand(styles);\n\n    const metrics = ctx.measureText(this._control.value);\n    // add 1px (cursor width) to prevent jumping of the text on blur.\n    const newWidth = metrics.width + parseInt(styles.paddingRight, 10) + parseInt(styles.paddingLeft, 10) + 1;\n\n    // This should be injected via @Host to get an exact reference to NxNaturalLanguageFormComponent\n    // Works as promised as long as there is not other tag around the word. Not expected but possible.\n    const parent: HTMLElement = this.elementRef.nativeElement.parentElement;\n    const parentMeasurement = parent.getBoundingClientRect();\n\n    // Limit to own given minimal width\n    this.currentTextWidth = Math.max(parseInt(styles.minWidth, 10), newWidth);\n\n    // Limit to container width\n    this.currentTextWidth = Math.min(this.currentTextWidth, parentMeasurement.width);\n    this._popover.updatePosition();\n  }\n\n  /** @docs-private */\n  repositionError() {\n    if (this._popover) {\n      this._popover.updatePosition();\n    }\n  }\n\n  // Fail if the required control is missing.\n  protected _validateControlChild() {\n    if (!this._control) {\n      throw new Error('NxWordComponent requires an NxFormfieldControl compatible input.');\n    }\n  }\n\n  /** @docs-private */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this.elementRef;\n  }\n\n  /** @docs-private */\n  get isFocused(): boolean {\n    return this._control.focused;\n  }\n\n  /** @docs-private */\n  get isFilled(): boolean {\n    return !this._control.empty;\n  }\n\n  /** @docs-private */\n  get hasDropdown(): boolean {\n    return Boolean(this._dropdown);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { delay, throttleTime } from 'rxjs/operators';\n\nimport { NxWordComponent } from './word.component';\n\n/** Size of the NLF. */\nexport type NxNaturalLanguageFormSize = 'small' | 'large';\n\nconst DEFAULT_SIZE = 'large';\n\n@Component({\n  selector: 'nx-natural-language-form',\n  templateUrl: 'natural-language-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['natural-language-form.scss'],\n  host: {\n    '[class.is-negative]': 'negative',\n    '[class.nx-natural-language-form--small]' : 'size === \"small\"',\n    '[class.nx-natural-language-form--large]' : 'size === \"large\"',\n  }\n})\n\nexport class NxNaturalLanguageFormComponent implements AfterContentInit, OnDestroy {\n  private _negative = false;\n\n  /** @docs-private */\n  resizeEvent$: Subject<void> = new Subject<void>();\n\n  /** @docs-private */\n  resizeObservable: Observable<void>;\n\n  @ContentChildren(NxWordComponent) _words: QueryList<NxWordComponent>;\n\n  /** @docs-private */\n  updatePopoversSubscription: Subscription = Subscription.EMPTY;\n\n  /** @docs-private */\n  private _size: NxNaturalLanguageFormSize = DEFAULT_SIZE;\n\n  /** Whether the negative set of stylings should be used. */\n  @Input('nxNegative')\n  set negative(value) {\n    this._negative = coerceBooleanProperty(value);\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  /**\n   * Sets the size of the NLF. Default value: large\n   */\n  @Input()\n  set size(value: NxNaturalLanguageFormSize) {\n    this._size = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get size(): NxNaturalLanguageFormSize {\n    return this._size;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  @HostListener('window:orientationchange', ['$event'])\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.resizeEvent$.next();\n  }\n\n  ngAfterContentInit() {\n    // Collect all words and listen for changes so we can update any open error popover\n    // which would otherwise get wrongly positioned.\n    const subjects = this._words.map((word: NxWordComponent) => word.inputChanges);\n    const source = merge(...subjects);\n\n    this.updatePopoversSubscription = source.subscribe( () => {\n      this.updatePositionPopovers();\n    });\n\n    this.resizeObservable = this.resizeEvent$.pipe(throttleTime(500), delay(100));\n    this.resizeObservable.subscribe(() => this.resizeWords());\n  }\n\n  /** @docs-private */\n  resizeWords() {\n    this._words.forEach((word: NxWordComponent) => {\n      word.updateCurrentTextWidth();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updatePopoversSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  updatePositionPopovers() {\n    if (this._words) {\n      this._words.forEach((word: NxWordComponent) => {\n        word.repositionError();\n      });\n    }\n  }\n}\n","import { NxPopoverModule } from '@allianz/ngx-ndbx/popover';\nimport { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { NxWordComponent } from './word.component';\nimport { NxNaturalLanguageFormComponent } from './natural-language-form.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxInputModule,\n    NxPopoverModule\n  ],\n  declarations: [\n    NxNaturalLanguageFormComponent,\n    NxWordComponent\n  ],\n  exports: [\n    NxNaturalLanguageFormComponent,\n    NxWordComponent\n  ]\n})\nexport class NxNaturalLanguageFormModule {}\n"]}