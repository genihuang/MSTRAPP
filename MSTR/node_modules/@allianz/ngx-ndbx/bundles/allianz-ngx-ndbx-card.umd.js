(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/coercion'), require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/card', ['exports', '@angular/cdk/coercion', '@angular/core', '@angular/common'], factory) :
    (factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx'].card = {}),global.ng.cdk.coercion,global.ng.core,global.ng.common));
}(this, (function (exports,coercion,core,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxCardComponent = /** @class */ (function () {
        function NxCardComponent(_changeDetectorRef, tabindex) {
            this._changeDetectorRef = _changeDetectorRef;
            this._disabled = false;
            /**
             * Event emitted when the selected value has changed.
             */
            this.selectedChange = new core.EventEmitter();
            this._tabindex = tabindex;
        }
        Object.defineProperty(NxCardComponent.prototype, "selectable", {
            get: /**
             * @return {?}
             */ function () {
                return this._selectable;
            },
            /** Whether this card is selectable or not.  */
            set: /**
             * Whether this card is selectable or not.
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._selectable = coercion.coerceBooleanProperty(value);
                this._changeDetectorRef.markForCheck();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxCardComponent.prototype, "selected", {
            get: /**
             * @return {?}
             */ function () {
                return this._selected;
            },
            /** Whether this card is selected or not.  */
            set: /**
             * Whether this card is selected or not.
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._selected = coercion.coerceBooleanProperty(value);
                this._changeDetectorRef.markForCheck();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxCardComponent.prototype, "disabled", {
            get: /**
             * @return {?}
             */ function () {
                return this._disabled;
            },
            /** Whether the card is disabled.  */
            set: /**
             * Whether the card is disabled.
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._disabled = coercion.coerceBooleanProperty(value);
                this._changeDetectorRef.markForCheck();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        NxCardComponent.prototype._toggleSelected = /**
         * @return {?}
         */
            function () {
                if (this.selectable && !this.disabled) {
                    this.selected = !this.selected;
                    this.selectedChange.emit(this.selected);
                }
            };
        /**
         * @return {?}
         */
        NxCardComponent.prototype._getTabindex = /**
         * @return {?}
         */
            function () {
                if (this.disabled) {
                    return '-1';
                }
                if (this.selectable) {
                    return this._tabindex || '0';
                }
                return this._tabindex || '';
            };
        NxCardComponent.decorators = [
            { type: core.Component, args: [{
                        template: '<ng-content></ng-content>',
                        selector: 'nx-card',
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: {
                            'class': 'nx-card',
                            '[class.is-selectable]': 'selectable',
                            '[class.is-selected]': 'selected',
                            '[class.is-disabled]': 'disabled',
                            '[attr.aria-disabled]': 'disabled',
                            '(click)': '_toggleSelected()',
                            '(keydown.enter)': '_toggleSelected()',
                            '[attr.tabindex]': '_getTabindex()'
                        },
                        styles: [":host{background:#fff;border:1px solid #d9d9d9;border-radius:4px;box-shadow:none;display:inline-block;margin-bottom:24px;padding:24px;transition:background-color .2s,box-shadow .2s}:host.is-selectable{cursor:pointer}:host.is-selectable:hover{background-color:#f5f5f5}:host.is-selectable:focus,:host.is-selectable:hover{outline:0}:host.is-selected{box-shadow:0 8px 24px rgba(65,65,65,.35);background-color:#f5f5f5}:host.is-disabled{cursor:not-allowed;opacity:.4}:host.is-disabled:hover{background-color:#fff}:host.is-disabled:focus{outline:0}:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}@media screen and (-ms-high-contrast:active){:host.is-selectable:focus,:host.is-selectable:hover{border-color:highlight}:host.is-selected{box-shadow:0 0 0 2px windowText}:host.is-selected:focus,:host.is-selected:hover{box-shadow:0 0 0 2px highlight}}"]
                    }] }
        ];
        /** @nocollapse */
        NxCardComponent.ctorParameters = function () {
            return [
                { type: core.ChangeDetectorRef },
                { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] }
            ];
        };
        NxCardComponent.propDecorators = {
            selectable: [{ type: core.Input }],
            selected: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            selectedChange: [{ type: core.Output }]
        };
        return NxCardComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxCardModule = /** @class */ (function () {
        function NxCardModule() {
        }
        NxCardModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [NxCardComponent],
                        exports: [NxCardComponent],
                        imports: [
                            common.CommonModule
                        ]
                    },] }
        ];
        return NxCardModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NxCardComponent = NxCardComponent;
    exports.NxCardModule = NxCardModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=allianz-ngx-ndbx-card.umd.js.map