{"version":3,"sources":["ng://@allianz/ngx-ndbx/card/card.component.ts","ng://@allianz/ngx-ndbx/card/card.module.ts"],"names":["NxCardComponent","_changeDetectorRef","tabindex","this","_disabled","selectedChange","EventEmitter","_tabindex","Object","defineProperty","prototype","_selectable","value","coerceBooleanProperty","markForCheck","_selected","_toggleSelected","selectable","disabled","selected","emit","_getTabindex","Component","args","template","selector","changeDetection","ChangeDetectionStrategy","OnPush","host","class","[class.is-selectable]","[class.is-selected]","[class.is-disabled]","[attr.aria-disabled]","(click)","(keydown.enter)","[attr.tabindex]","ChangeDetectorRef","Attribute","Input","Output","NxCardModule","NgModule","declarations","exports","imports","CommonModule"],"mappings":"2eAAA,IAAAA,EAAA,WAgEE,SAAAA,EACYC,EACeC,GADfC,KAAAF,mBAAAA,EANJE,KAAAC,WAAqB,EAGnBD,KAAAE,eAAiB,IAAIC,EAAAA,aAK7BH,KAAKI,UAAYL,EAqBrB,OAjEEM,OAAAC,eACIT,EAAAU,UAAA,aAAU,KAKd,WACE,OAAOP,KAAKQ,iBAPd,SACeC,GACbT,KAAKQ,YAAcE,EAAAA,sBAAsBD,GACzCT,KAAKF,mBAAmBa,gDAU1BN,OAAAC,eACIT,EAAAU,UAAA,WAAQ,KAKZ,WACE,OAAOP,KAAKY,eAPd,SACaH,GACXT,KAAKY,UAAYF,EAAAA,sBAAsBD,GACvCT,KAAKF,mBAAmBa,gDAU1BN,OAAAC,eACIT,EAAAU,UAAA,WAAQ,KAKZ,WACE,OAAOP,KAAKC,eAPd,SACaQ,GACXT,KAAKC,UAAYS,EAAAA,sBAAsBD,GACvCT,KAAKF,mBAAmBa,gDAkB1Bd,EAAAU,UAAAM,gBAAA,WACMb,KAAKc,aAAed,KAAKe,WAC3Bf,KAAKgB,UAAYhB,KAAKgB,SACtBhB,KAAKE,eAAee,KAAKjB,KAAKgB,YAIlCnB,EAAAU,UAAAW,aAAA,WACE,OAAIlB,KAAKe,SACA,KAGLf,KAAKc,WACAd,KAAKI,WAAa,IAGpBJ,KAAKI,WAAa,wBAnF5Be,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4BAEVC,SAAU,UACVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,KAAM,CACJC,QAAS,UACTC,wBAAyB,aACzBC,sBAAuB,WACvBC,sBAAuB,WACvBC,uBAAwB,WACxBC,UAAW,oBACXC,kBAAmB,oBACnBC,kBAAmB,67BAhBkDC,EAAAA,kDAkElEC,EAAAA,UAAShB,KAAA,CAAC,qDA3CdiB,EAAAA,wBAaAA,EAAAA,wBAaAA,EAAAA,8BAaAC,EAAAA,UA0BHzC,EAxFA,GCAA0C,EAAA,WAIA,SAAAA,KAO4B,2BAP3BC,EAAAA,SAAQpB,KAAA,CAAC,CACRqB,aAAc,CAAE5C,GAChB6C,QAAS,CAAE7C,GACX8C,QAAS,CACPC,EAAAA,kBAGwBL,EAX5B","sourcesContent":["import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, Attribute} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  template: '<ng-content></ng-content>',\n  styleUrls: ['card.scss'],\n  selector: 'nx-card',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'nx-card',\n    '[class.is-selectable]': 'selectable',\n    '[class.is-selected]': 'selected',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '(click)': '_toggleSelected()',\n    '(keydown.enter)': '_toggleSelected()',\n    '[attr.tabindex]': '_getTabindex()'\n  }\n})\nexport class NxCardComponent {\n  _tabindex: string;\n\n  /** Whether this card is selectable or not.  */\n  @Input()\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  private _selectable: boolean;\n\n  /** Whether this card is selected or not.  */\n  @Input()\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _selected: boolean;\n\n  /** Whether the card is disabled.  */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Event emitted when the selected value has changed.  */\n  @Output() selectedChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Attribute('tabindex') tabindex: string) {\n    this._tabindex = tabindex;\n  }\n\n  _toggleSelected(): void {\n    if (this.selectable && !this.disabled) {\n      this.selected = !this.selected;\n      this.selectedChange.emit(this.selected);\n    }\n  }\n\n  _getTabindex(): string {\n    if (this.disabled) {\n      return '-1';\n    }\n\n    if (this.selectable) {\n      return this._tabindex || '0';\n    }\n\n    return this._tabindex || '';\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxCardComponent} from './card.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxCardComponent ],\n  exports: [ NxCardComponent ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NxCardModule { }\n"]}