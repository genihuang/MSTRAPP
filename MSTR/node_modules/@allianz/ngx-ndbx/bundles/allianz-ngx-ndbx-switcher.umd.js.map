{"version":3,"file":"allianz-ngx-ndbx-switcher.umd.js.map","sources":["ng://@allianz/ngx-ndbx/switcher/switcher.component.ts","ng://@allianz/ngx-ndbx/switcher/switcher.module.ts"],"sourcesContent":["import { Component, EventEmitter, forwardRef, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nlet nextId = 0;\n/** Options for placement of the label */\nexport type POSITION = 'left' | 'right';\n/** Options for sizing of the label */\nexport type LABEL_SIZE = 'small' | 'large';\n\n@Component({\n  selector: 'nx-switcher',\n  templateUrl: 'switcher.component.html',\n  styleUrls: ['./switcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxSwitcherComponent),\n      multi: true\n    }\n  ],\n  host: {\n    /* the host id should be set to null, otherwise nx-switcher and its <input> get the same id\n    and on label click the input click is not triggered (double id problem) */\n    '[attr.id]': 'null',\n    '[class.is-negative]': 'negative',\n    '[class.is-checked]': 'checked',\n    '[class.is-big]': 'big',\n    '[class.nx-switcher--small-label]': 'labelSize === \"small\"',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-swapped]': 'labelPosition === \"left\"'\n  }\n})\n\nexport class NxSwitcherComponent implements ControlValueAccessor {\n\n  private _id: string = `nx-switcher-${nextId++}`;\n  /** Sets the id of the switcher */\n  @Input()\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  private _labelPosition: POSITION = 'right';\n  /** Specifies the placement of the label */\n  @Input()\n  set labelPosition(value: POSITION) {\n    this._labelPosition = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get labelPosition(): POSITION {\n    return this._labelPosition;\n  }\n\n  private _name: string = null;\n  /** Sets the label text of the switcher */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  private _checked: boolean = false;\n  /** Whether the switcher is checked (on) or unchecked (off) */\n  @Input()\n  set checked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _big: boolean = false;\n  /** Whether the big switcher is used */\n  @Input('nxBig')\n  set big(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._big = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get big(): boolean {\n    return this._big;\n  }\n\n  private _labelSize: LABEL_SIZE = 'large';\n  /** Sets the size of the label */\n  @Input()\n  set labelSize(value: LABEL_SIZE) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get labelSize(): LABEL_SIZE {\n    return this._labelSize;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the style for a dark background is used */\n  @Input('nxNegative')\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._negative = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _disabled: boolean = false;\n  /** Whether the switcher is in the disabled state */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._disabled = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** An event is dispatched each time the switcher value is changed */\n  @Output('checkedChange') checkedChange = new EventEmitter<boolean>();\n\n  private onChangeCallback = (_: any) => {};\n  private onTouchedCallback = () => {};\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** Allows to toggle between the states */\n  toggle() {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this.checkedChange.emit(this.checked);\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxSwitcherComponent } from './switcher.component';\nimport { CommonModule } from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxSwitcherComponent ],\n  exports: [ NxSwitcherComponent ],\n  imports: [ CommonModule, NxIconModule ]\n})\nexport class NxSwitcherModule {}\n"],"names":["EventEmitter","coerceBooleanProperty","Component","ChangeDetectionStrategy","NG_VALUE_ACCESSOR","forwardRef","ChangeDetectorRef","Input","Output","NgModule","CommonModule","NxIconModule"],"mappings":"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"}
