(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/cdk/coercion')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/badge', ['exports', '@angular/common', '@angular/core', '@angular/cdk/coercion'], factory) :
    (factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx'].badge = {}),global.ng.common,global.ng.core,global.ng.cdk.coercion));
}(this, (function (exports,common,core,coercion) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxBadgeComponent = /** @class */ (function () {
        function NxBadgeComponent(_changeDetRef) {
            this._changeDetRef = _changeDetRef;
            this._vibrant = false;
        }
        Object.defineProperty(NxBadgeComponent.prototype, "type", {
            get: /**
             * @return {?}
             */ function () {
                return this._type;
            },
            /** Sets the class name for the badge element.  */
            set: /**
             * Sets the class name for the badge element.
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (value !== this._type) {
                    this._type = value;
                    this._changeDetRef.markForCheck();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxBadgeComponent.prototype, "vibrant", {
            get: /**
             * @return {?}
             */ function () {
                return this._vibrant;
            },
            /** Change badge style to vibrant. */
            set: /**
             * Change badge style to vibrant.
             * @param {?} value
             * @return {?}
             */ function (value) {
                /** @type {?} */
                var newValue = coercion.coerceBooleanProperty(value);
                if (value !== this._vibrant) {
                    this._vibrant = newValue;
                    this._changeDetRef.markForCheck();
                }
            },
            enumerable: true,
            configurable: true
        });
        NxBadgeComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'nx-badge',
                        template: '<ng-content></ng-content>',
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: {
                            '[class.nx-badge--active]': 'type === "active"',
                            '[class.nx-badge--positive]': 'type === "positive"',
                            '[class.nx-badge--critical]': 'type === "critical"',
                            '[class.nx-badge--negative]': 'type === "negative"',
                            '[class.nx-badge--vibrant]': 'vibrant'
                        },
                        styles: [":host{display:inline-block;padding:0 8px;font-size:16px;font-weight:400;line-height:24px;white-space:nowrap;border-radius:12px;color:#414141;background-color:#d9d9d9;min-width:24px}@media screen and (-ms-high-contrast:active){:host{box-shadow:0 0 0 1px windowText}}:host.nx-badge--active{background-color:#cfe9ee}:host.nx-badge--positive{background-color:#e3ebaf}:host.nx-badge--critical{background-color:#f7c7c3}:host.nx-badge--negative{background-color:#ffe8b0}:host(.nx-badge--vibrant){color:#fff;background-color:#414141}:host(.nx-badge--vibrant).nx-badge--active{background-color:#007ab3}:host(.nx-badge--vibrant).nx-badge--positive{background-color:#1e8927}:host(.nx-badge--vibrant).nx-badge--critical{background-color:#dc3149}:host(.nx-badge--vibrant).nx-badge--negative{color:#414141;background-color:#efbe25}"]
                    }] }
        ];
        /** @nocollapse */
        NxBadgeComponent.ctorParameters = function () {
            return [
                { type: core.ChangeDetectorRef }
            ];
        };
        NxBadgeComponent.propDecorators = {
            type: [{ type: core.Input }],
            vibrant: [{ type: core.Input }]
        };
        return NxBadgeComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxBadgeModule = /** @class */ (function () {
        function NxBadgeModule() {
        }
        NxBadgeModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [common.CommonModule],
                        declarations: [NxBadgeComponent],
                        exports: [NxBadgeComponent]
                    },] }
        ];
        return NxBadgeModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NxBadgeModule = NxBadgeModule;
    exports.NxBadgeComponent = NxBadgeComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=allianz-ngx-ndbx-badge.umd.js.map