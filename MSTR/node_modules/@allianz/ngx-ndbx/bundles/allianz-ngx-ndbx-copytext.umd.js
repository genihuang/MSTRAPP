(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/copytext', ['exports', '@angular/core'], factory) :
    (factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx'].copytext = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var DEFAULT_TYPE = 'normal';
    var NxCopytextComponent = /** @class */ (function () {
        function NxCopytextComponent() {
            /**
             * \@docs-private
             */
            this.type = DEFAULT_TYPE;
            /**
             * \@docs-private
             */
            this.negative = false;
        }
        Object.defineProperty(NxCopytextComponent.prototype, "classNames", {
            get: /**
             * @return {?}
             */ function () {
                return this._classNames;
            },
            /**
             * Sets the type and whether the negative set of styling should be used.
             *
             * You can combine the values of type NxCopytextType and 'negative'.
             *
             * Default type: 'normal'
             */
            set: /**
             * Sets the type and whether the negative set of styling should be used.
             *
             * You can combine the values of type NxCopytextType and 'negative'.
             *
             * Default type: 'normal'
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (this._classNames === value) {
                    return;
                }
                this._classNames = value;
                var _a = __read(this._classNames.match(/small|medium|normal|large/) || [DEFAULT_TYPE], 1), _b = _a[0], type = _b === void 0 ? null : _b;
                this.type = ( /** @type {?} */(type));
                this.negative = !!this._classNames.match(/negative/);
            },
            enumerable: true,
            configurable: true
        });
        NxCopytextComponent.decorators = [
            { type: core.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'p[nxCopytext]',
                        template: "<ng-content></ng-content>",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: {
                            '[class.nx-copy]': 'true',
                            '[class.nx-copy--small]': 'type === "small"',
                            '[class.nx-copy--medium]': 'type === "medium"',
                            '[class.nx-copy--normal]': 'type === "normal"',
                            '[class.nx-copy--large]': 'type === "large"',
                            '[class.nx-copy--negative]': 'negative',
                        },
                        styles: [":host{margin:0 0 32px;font-size:16px;font-size:var(--body-03-font-size,16px);line-height:24px;line-height:var(--body-03-line-height,24px);font-weight:400;font-weight:var(--body-03-font-weight,400);letter-spacing:0;letter-spacing:var(--body-03-letter-spacing,0)}:host.nx-copy.nx-copy{font-weight:400}:host(.nx-copy--negative){color:#fff}:host(.nx-copy--small){font-size:12px;font-size:var(--body-05-font-size,12px);line-height:16px;line-height:var(--body-05-line-height,16px);font-weight:600;font-weight:var(--body-05-font-weight,600);letter-spacing:.5px;letter-spacing:var(--body-05-letter-spacing,.5px)}:host(.nx-copy--medium){font-size:14px;font-size:var(--body-04-font-size,14px);line-height:20px;line-height:var(--body-04-line-height,20px);font-weight:600;font-weight:var(--body-04-font-weight,600);letter-spacing:.2px;letter-spacing:var(--body-04-letter-spacing,.2px)}:host(.nx-copy--large){font-size:18px;font-size:var(--body-02-font-size,18px);line-height:24px;line-height:var(--body-02-line-height,24px);font-weight:400;font-weight:var(--body-02-font-weight,400);letter-spacing:.2px;letter-spacing:var(--body-02-letter-spacing,.2px)}"]
                    }] }
        ];
        NxCopytextComponent.propDecorators = {
            classNames: [{ type: core.Input, args: ['nxCopytext',] }]
        };
        return NxCopytextComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxCopytextModule = /** @class */ (function () {
        function NxCopytextModule() {
        }
        NxCopytextModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [NxCopytextComponent],
                        exports: [NxCopytextComponent]
                    },] }
        ];
        return NxCopytextModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NxCopytextModule = NxCopytextModule;
    exports.NxCopytextComponent = NxCopytextComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=allianz-ngx-ndbx-copytext.umd.js.map