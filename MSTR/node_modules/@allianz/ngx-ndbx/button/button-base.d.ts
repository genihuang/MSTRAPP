import { ElementRef, ChangeDetectorRef } from '@angular/core';
/** Type of a button. */
export declare type NxButtonType = 'primary' | 'secondary' | 'tertiary' | 'cta' | 'emphasis';
/** Size of a button. */
export declare type NxButtonSize = 'small' | 'small-medium' | 'medium' | 'large';
export declare const NX_BUTTON_HOST_BINDINGS: {
    '[class.nx-button--primary]': string;
    '[class.nx-button--secondary]': string;
    '[class.nx-button--tertiary]': string;
    '[class.nx-button--cta]': string;
    '[class.nx-button--emphasis]': string;
    '[class.nx-button--large]': string;
    '[class.nx-button--medium]': string;
    '[class.nx-button--small-medium]': string;
    '[class.nx-button--small]': string;
    '[class.nx-button--block]': string;
    '[class.nx-button--negative]': string;
};
/** @docs-private */
export declare class NxButtonBase {
    private _changeDetectorRef;
    private _elementRef;
    private _classNames;
    /** @docs-private */
    type: NxButtonType;
    /** @docs-private */
    size: NxButtonSize;
    /** @docs-private */
    negative: boolean;
    /** @docs-private */
    block: boolean;
    constructor(_changeDetectorRef: ChangeDetectorRef, _elementRef: ElementRef);
    classNames: string;
    /**
     * @docs-private
     * getter used for the modal component as a quickfix
     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
     * way to reach the elementRef of the component until the modal gets refactored.
     */
    readonly elementRef: ElementRef<any>;
}
