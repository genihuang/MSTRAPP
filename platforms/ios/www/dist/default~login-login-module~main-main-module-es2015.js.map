{"version":3,"sources":["./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-accordion.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-autocomplete.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-base.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-button.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-checkbox.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-core.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-dropdown.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-formfield.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-grid.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-input.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-message.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-natural-language-form.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-popover.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx-utils.js","./node_modules/@allianz/ngx-ndbx/fesm2015/allianz-ngx-ndbx.js","./node_modules/@angular/cdk/esm2015/accordion.js","./node_modules/@angular/cdk/esm2015/bidi.js","./node_modules/@angular/cdk/esm2015/collections.js","./node_modules/@angular/cdk/esm2015/overlay.js","./node_modules/@angular/cdk/esm2015/portal.js","./node_modules/@angular/cdk/esm2015/scrolling.js","./node_modules/@angular/cdk/esm2015/table.js","./node_modules/decimal.js/decimal.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AACG;AACS;AACnB;AACR;AACa;AACpB;AACM;AACoI;AACrI;AACK;;AAEzD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,mCAAmC,mEAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,sBAAsB;AAC/C,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,mBAAmB,mEAAO;AAC1B,QAAQ,iEAAK,WAAW,iEAAK,EAAE,sCAAsC;AACrE,QAAQ,iEAAK,SAAS,iEAAK,EAAE,qCAAqC;AAClE,QAAQ,sEAAU,oBAAoB,mEAAO;AAC7C;AACA,qBAAqB,mEAAO;AAC5B,QAAQ,iEAAK,WAAW,iEAAK,EAAE,4BAA4B;AAC3D,QAAQ,iEAAK,SAAS,iEAAK,EAAE,8BAA8B;AAC3D,QAAQ,sEAAU,oBAAoB,mEAAO;AAC7C;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,qCAAqC;AACpE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,wCAAwC,uEAAgB;AACxD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,SAAS;AAC/D;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC,2CAA2C,EAAE;AAC7C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA6B,iEAAS,QAAQ,8DAAM;AACpD,wBAAwB;AACxB;AACA,oDAAoD,4DAAI;AACxD,wBAAwB;AACxB;AACA;AACA,mCAAmC,kEAAc;AACjD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,8CAA8C;AACnE;AACA,gCAAgC,cAAc,8EAA8E,WAAW,6BAA6B,gBAAgB,cAAc,0BAA0B,eAAe,iBAAiB,4BAA4B,yBAAyB,0BAA0B,uBAAuB,8HAA8H,iCAAiC,gFAAgF,6BAA6B,mBAAmB,sEAAsE,cAAc,4FAA4F,gBAAgB;AACj0B,aAAa;AACb;AACA;AACA;AACA,KAAK,2CAA2C,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AACxF,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,kFAAyB,EAAE;AACvC,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,mDAAK,sBAAsB;AAC/C,mBAAmB,OAAO,0DAAY,0CAA0C;AAChF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,yCAAyC,iDAAY;AACrD,yCAAyC,kDAAK,sDAAsD,8DAAM;AAC1G,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sCAAsC,UAAU,oCAAoC,WAAW,eAAe,mBAAmB,cAAc,aAAa,8BAA8B,kBAAkB,kBAAkB,gBAAgB,mBAAmB,UAAU,YAAY,4CAA4C,eAAe,gBAAgB,iBAAiB,oBAAoB,gBAAgB,kBAAkB,iFAAiF,sBAAsB,6BAA6B,cAAc,oBAAoB,eAAe,8EAA8E,aAAa,eAAe,sFAAsF,cAAc,oBAAoB,gBAAgB,eAAe,iBAAiB,yBAAyB,oCAAoC,aAAa,aAAa,6BAA6B,4CAA4C,eAAe,iBAAiB,kBAAkB,gBAAgB,wDAAwD,gCAAgC,sFAAsF,iBAAiB,eAAe,0FAA0F,oBAAoB,8DAA8D,mBAAmB,uIAAuI,cAAc,2GAA2G,kBAAkB,mHAAmH,WAAW,8GAA8G,WAAW,mFAAmF,4CAA4C,6BAA6B,UAAU;AAC9oE,aAAa;AACb;AACA;AACA;AACA,KAAK,gDAAgD,OAAO,kDAAI,EAAE,GAAG;AACrE,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,gEAAY;AAChC,oBAAoB,mEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEyQ;;AAEzQ,sD;;;;;;;;;;;;AChbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AACR;AAChB;AACiC;AACI;AACI;AACvC;AACI;AACgN;AACtN;AACmC;AACI;AAChB;;AAE1E;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,6CAA6C,mBAAmB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,2DAAK,sBAAsB,2DAAK;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,sCAAsC,UAAU,wBAAwB,eAAe,iBAAiB,oBAAoB,wBAAwB,eAAe,kBAAkB,aAAa,eAAe,mBAAmB,gEAAgE,cAAc,6CAA6C,gEAAgE,qBAAqB,+BAA+B,gBAAgB,uBAAuB,eAAe,eAAe,0GAA0G,kBAAkB,4CAA4C;AAChsB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,mDAAK,EAAE;AAC3B,yBAAyB,OAAO,oDAAM,EAAE;AACxC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,qCAAqC,+BAA+B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,uCAAuC;AACzD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAU;AAC1C;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+QAA+Q,MAAM;AACrR,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA,iBAAiB;AACjB,8DAA8D,QAAQ,SAAS,uBAAuB,sBAAsB,uCAAuC,aAAa,gBAAgB,kBAAkB,iBAAiB,WAAW,kBAAkB,+CAA+C,mBAAmB,8CAA8C,kBAAkB,6CAA6C,uBAAuB,iCAAiC;AACve,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,gBAAgB,OAAO,uDAAS,SAAS,yDAAW,IAAI;AACxD,aAAa,OAAO,uDAAS,oBAAoB;AACjD,aAAa,OAAO,mDAAK,EAAE;AAC3B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B,iBAAiB,OAAO,0DAAY,0CAA0C;AAC9E,iBAAiB,OAAO,6DAAe,yCAAyC,oBAAoB,IAAI;AACxG,iBAAiB,OAAO,mDAAK,oBAAoB;AACjD,sBAAsB,OAAO,mDAAK,+BAA+B;AACjE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kDAAY;AACjD;AACA;AACA;AACA,wCAAwC,6CAAO;AAC/C;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAK;AACrC,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,mDAAK;AAC5B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,kFAAoB;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA,eAAe,mDAAK,CAAC,uDAAS,2BAA2B,uDAAS;AAClE,kBAAkB,8DAAM;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,4CAA4C,EAAE;AAC9C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,6CAAO;AAC5C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,sEAAsE,oEAAY;AAClF;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,oEAAoE,6DAAK;AACzE,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,mDAAK,kEAAkE,8DAAM;AAC5F,oBAAoB;AACpB;AACA;AACA,gDAAgD,8DAAM;AACtD,wBAAwB;AACxB;AACA;AACA,YAAY,gDAAE;AACd;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAM;AAC9B;AACA;AACA;AACA;AACA,2CAA2C,4DAAM,iBAAiB,8DAAQ;AAC1E;AACA;AACA;AACA;AACA,kDAAkD,2DAAK;AACvD;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,2CAA2C,8DAAQ,gBAAgB,gEAAU;AAC7E,8CAA8C,yDAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oEAAoE,4DAAI;AACxE,mBAAmB,EAAE;AACrB,qEAAqE,2DAAG;AACxE,oBAAoB;AACpB;AACA;AACA;AACA;AACA,QAAQ,6DAAK;AACb;AACA,eAAe,mDAAK;AACpB;AACA;AACA;AACA,QAAQ,iEAAS;AACjB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,4DAAI;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kEAAc;AAC7C;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,kEAAa;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,gFAAoB,gBAAgB,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG;AACpF,KAAK,OAAO,wFAAe,gBAAgB,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG;AAC/E,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9F,KAAK,OAAO,kEAAa;AACzB;AACA;AACA,oBAAoB,OAAO,mDAAK,6BAA6B;AAC7D,eAAe,OAAO,mDAAK,kCAAkC;AAC7D,gBAAgB,OAAO,mDAAK,qCAAqC;AACjE,4BAA4B,OAAO,mDAAK,qCAAqC;AAC7E;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,0BAA0B,4DAAY,EAAE,kEAAa,EAAE,4DAAU;AACjE,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEuP;;AAEvP,yD;;;;;;;;;;;;AC1vCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACM;AAC6E;AAC3E;AAC/B;AACgB;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,kCAAkC,4DAAc;AAChD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA,iBAAiB;AACjB,gCAAgC,eAAe,iBAAiB,cAAc,WAAW,cAAc,yBAAyB,iBAAiB,sBAAsB,eAAe,iBAAiB,cAAc,iBAAiB,WAAW;AACjP,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,kCAAkC;AACxG;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,mEAAY;AAChC,oBAAoB,yEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,kCAAkC,4DAAc;AAChD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,cAAc,sBAAsB,eAAe,iBAAiB,gBAAgB,sBAAsB,eAAe,iBAAiB,oBAAoB,gBAAgB,2BAA2B,mBAAmB,yBAAyB,WAAW;AAC9S,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,kCAAkC;AACxG;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,UAAU,OAAO,mDAAK,EAAE;AACxB,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE0H;;AAE1H,iD;;;;;;;;;;;;ACzPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4G;;AAE5G;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA,gCAAgC,6BAA6B,kBAAkB,eAAe,eAAe,gBAAgB,mBAAmB,iBAAiB,gBAAgB,kBAAkB,yBAAyB,0EAA0E,yBAAyB,sBAAsB,qBAAqB,iBAAiB,WAAW,qBAAqB,iBAAiB,aAAa,gBAAgB,eAAe,mBAAmB,YAAY,8BAA8B,wBAAwB,SAAS,kHAAkH,4CAA4C,2BAA2B,WAAW,yBAAyB,6DAA6D,yBAAyB,qBAAqB,WAAW,kCAAkC,yBAAyB,qBAAqB,gBAAgB,WAAW,oCAAoC,oCAAoC,yBAAyB,2BAA2B,+CAA+C,sBAAsB,kBAAkB,cAAc,iFAAiF,yBAAyB,qBAAqB,cAAc,sDAAsD,yBAAyB,qBAAqB,cAAc,wDAAwD,sCAAsC,yBAAyB,wBAAwB,6BAA6B,6BAA6B,qBAAqB,cAAc,+DAA+D,yBAAyB,qBAAqB,WAAW,oCAAoC,yBAAyB,qBAAqB,gBAAgB,WAAW,sCAAsC,6BAA6B,gCAAgC,wBAAwB,iDAAiD,WAAW,kBAAkB,mFAAmF,yBAAyB,qBAAqB,cAAc,wDAAwD,yBAAyB,qBAAqB,cAAc,0DAA0D,6BAA6B,kCAAkC,2BAA2B,4BAA4B,6BAA6B,cAAc,kCAAkC,yBAAyB,mCAAmC,yBAAyB,gBAAgB,qCAAqC,6BAA6B,wBAAwB,gDAAgD,WAAW,sDAAsD,yBAAyB,cAAc,uDAAuD,yBAAyB,cAAc,yDAAyD,6BAA6B,2BAA2B,yBAAyB,eAAe,gBAAgB,kBAAkB,iBAAiB,yBAAyB,MAAM,cAAc,WAAW,yBAAyB,mBAAmB,gCAAgC,qBAAqB,eAAe,iBAAiB,oBAAoB,iBAAiB,gBAAgB,WAAW,yBAAyB,qBAAqB,eAAe,iBAAiB,oBAAoB,iBAAiB,gBAAgB,WAAW,uBAAuB,yBAAyB,WAAW,6BAA6B,yBAAyB,8BAA8B,yBAAyB,gCAAgC,oCAAoC,4BAA4B,yBAAyB,WAAW,kCAAkC,yBAAyB,mCAAmC,yBAAyB,qCAAqC,mCAAmC,yBAAyB,yBAAyB,cAAc,YAAY,kCAAkC,aAAa,mBAAmB,uBAAuB,sBAAsB,UAAU,eAAe,cAAc,uCAAuC,WAAW,eAAe,8CAA8C,WAAW,wCAAwC,WAAW,uCAAuC,WAAW;AACliJ,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA,gCAAgC,6BAA6B,kBAAkB,eAAe,eAAe,gBAAgB,mBAAmB,iBAAiB,gBAAgB,kBAAkB,yBAAyB,0EAA0E,yBAAyB,sBAAsB,qBAAqB,iBAAiB,WAAW,qBAAqB,iBAAiB,aAAa,gBAAgB,eAAe,mBAAmB,YAAY,8BAA8B,wBAAwB,SAAS,kHAAkH,4CAA4C,2BAA2B,WAAW,yBAAyB,6DAA6D,yBAAyB,qBAAqB,WAAW,kCAAkC,yBAAyB,qBAAqB,gBAAgB,WAAW,oCAAoC,oCAAoC,yBAAyB,2BAA2B,+CAA+C,sBAAsB,kBAAkB,cAAc,iFAAiF,yBAAyB,qBAAqB,cAAc,sDAAsD,yBAAyB,qBAAqB,cAAc,wDAAwD,sCAAsC,yBAAyB,wBAAwB,6BAA6B,6BAA6B,qBAAqB,cAAc,+DAA+D,yBAAyB,qBAAqB,WAAW,oCAAoC,yBAAyB,qBAAqB,gBAAgB,WAAW,sCAAsC,6BAA6B,gCAAgC,wBAAwB,iDAAiD,WAAW,kBAAkB,mFAAmF,yBAAyB,qBAAqB,cAAc,wDAAwD,yBAAyB,qBAAqB,cAAc,0DAA0D,6BAA6B,kCAAkC,2BAA2B,4BAA4B,6BAA6B,cAAc,kCAAkC,yBAAyB,mCAAmC,yBAAyB,gBAAgB,qCAAqC,6BAA6B,wBAAwB,gDAAgD,WAAW,sDAAsD,yBAAyB,cAAc,uDAAuD,yBAAyB,cAAc,yDAAyD,6BAA6B,2BAA2B,yBAAyB,eAAe,gBAAgB,kBAAkB,iBAAiB,yBAAyB,MAAM,cAAc,WAAW,yBAAyB,mBAAmB,gCAAgC,qBAAqB,eAAe,iBAAiB,oBAAoB,iBAAiB,gBAAgB,WAAW,yBAAyB,qBAAqB,eAAe,iBAAiB,oBAAoB,iBAAiB,gBAAgB,WAAW,uBAAuB,yBAAyB,WAAW,6BAA6B,yBAAyB,8BAA8B,yBAAyB,gCAAgC,oCAAoC,4BAA4B,yBAAyB,WAAW,kCAAkC,yBAAyB,mCAAmC,yBAAyB,qCAAqC,mCAAmC,yBAAyB,yBAAyB,cAAc,YAAY,kCAAkC,aAAa,mBAAmB,uBAAuB,sBAAsB,UAAU,eAAe,cAAc,uCAAuC,WAAW,eAAe,8CAA8C,WAAW,wCAAwC,WAAW,uCAAuC,WAAW;AACliJ,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEuH;;AAEvH,mD;;;;;;;;;;;;AC7KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACe;AAC0H;AAC1H;AAC/B;AACuB;AACmB;;AAEzE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC,mCAAmC,0DAAY;AAC/C,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mDAAmD,kBAAkB,yBAAyB,mBAAmB,cAAc,6KAA6K,WAAW;AACvT,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAS,gBAAgB,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE;AACtE;AACA;AACA,mBAAmB,OAAO,6DAAe,SAAS,gEAAU;AAC5D,4BAA4B;AAC5B;AACA,8CAA8C,oBAAoB,IAAI;AACtE,cAAc,OAAO,0DAAY,SAAS,gEAAU;AACpD,4BAA4B;AAC5B;AACA,sBAAsB,uEAAgB,MAAM,IAAI;AAChD,uBAAuB,OAAO,oDAAM,EAAE;AACtC,UAAU,OAAO,mDAAK,EAAE;AACxB,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,gEAAiB;AAClD,qCAAqC,gEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc,kBAAkB,mBAAmB,6KAA6K,yBAAyB,qBAAqB,6EAA6E,qBAAqB,6GAA6G,yBAAyB,oBAAoB,UAAU,kBAAkB,oBAAoB,eAAe,iBAAiB,eAAe,aAAa,qDAAqD,eAAe,iBAAiB,oBAAoB,yBAAyB,UAAU,iBAAiB,sBAAsB,sBAAsB,yBAAyB,kBAAkB,WAAW,eAAe,YAAY,WAAW,eAAe,aAAa,uBAAuB,mBAAmB,UAAU,eAAe,oEAAoE,kBAAkB,sCAAsC,yBAAyB,WAAW,WAAW,sEAAsE,yBAAyB,qBAAqB,uEAAuE,yBAAyB,qBAAqB,mBAAmB,+EAA+E,yBAAyB,iDAAiD,mBAAmB,cAAc,uFAAuF,yBAAyB,oDAAoD,kBAAkB,6BAA6B,kDAAkD,WAAW,oGAAoG,WAAW,sBAAsB,kBAAkB,6GAA6G,2BAA2B,yBAAyB,sCAAsC,+EAA+E,2BAA2B,qGAAqG,sCAAsC,kCAAkC,qHAAqH,sCAAsC,6CAA6C,8CAA8C,WAAW,2EAA2E,sBAAsB,oEAAoE,kBAAkB,sEAAsE,kBAAkB,WAAW,4EAA4E,sBAAsB,kBAAkB,WAAW,oBAAoB,WAAW,4FAA4F,sBAAsB,kGAAkG,uBAAuB,+JAA+J,yBAAyB,+KAA+K,yBAAyB,uJAAuJ,qBAAqB,+HAA+H,yBAAyB,+IAA+I,yBAAyB,uHAAuH,qBAAqB,6GAA6G,4CAA4C;AACrjJ,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,+CAA+C,OAAO,sDAAQ,EAAE;AACrE;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,mDAAK,EAAE;AAC3B,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,qBAAqB,OAAO,oDAAM,EAAE;AACpC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,mEAAY;AAChC,oBAAoB,oEAAa;AACjC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEkG;;AAElG,qD;;;;;;;;;;;;AC1sBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsF;;AAEtF;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB,oCAAoC,6EAAa;AACjD;AACA,QAAQ,6EAAa;AACrB;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEkF;;AAElF,iD;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACP;AACe;AACa;AACjB;AACiE;AACjD;AACH;AACmC;AAC7D;AACuC;AAC6K;AACxM;;AAEzD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,gCAAgC,8EAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO,oDAAK,8BAA8B;AAC/D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,2HAA2H,OAAO;AAClI,iCAAiC,sEAAuB;AACxD,gCAAgC,cAAc,8CAA8C,sCAAsC,oDAAoD,iBAAiB,kCAAkC,kBAAkB,uBAAuB,gBAAgB,eAAe,iBAAiB;AAClU,aAAa;AACb;AACA;AACA,aAAa,OAAO,oDAAK,sBAAsB;AAC/C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA,qCAAqC,2DAAY;AACjD;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC,qBAAqB,EAAE,0CAA0C,iEAAS;AAC1E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,EAAE,0CAA0C,iEAAS;AAC1E,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,oGAAoG,kDAAkD,+tBAA+tB,iBAAiB;AACt4B,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,kBAAkB,aAAa,+CAA+C,iBAAiB,YAAY,gBAAgB,6BAA6B,eAAe,iBAAiB,oBAAoB,wBAAwB,eAAe,kBAAkB,aAAa,eAAe,mBAAmB,mCAAmC,gBAAgB,uBAAuB,eAAe,eAAe,oDAAoD,cAAc,kBAAkB,qDAAqD,YAAY,aAAa,mBAAmB,6CAA6C,cAAc,6CAA6C,6CAA6C,qBAAqB,2DAA2D,UAAU,uCAAuC,UAAU,WAAW,YAAY,iBAAiB,+CAA+C,eAAe,kIAAkI,kBAAkB,4CAA4C,iJAAiJ,gBAAgB,+GAA+G,kBAAkB,4CAA4C,gFAAgF,kBAAkB,kBAAkB,oCAAoC,cAAc,cAAc;AACvsD,aAAa;AACb;AACA;AACA;AACA,KAAK,wCAAwC,OAAO,qDAAM,8BAA8B,GAAG;AAC3F,KAAK,+CAA+C,OAAO,uDAAQ,EAAE,GAAG;AACxE,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAU;AACtB;AACA;AACA,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,yBAAyB,OAAO,qDAAM,EAAE;AACxC,wBAAwB,OAAO,wDAAS,wBAAwB;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAW;AACvB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA,oDAAoD,8DAAM;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kBAAkB,2DAAG;AACrB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,oDAAoD,8DAAM;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mBAAmB,2DAAG;AACtB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA,mCAAmC,2DAAY;AAC/C;AACA;AACA;AACA,sCAAsC,kDAAK;AAC3C,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,kDAAK;AAC5B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,4CAA4C;AAChE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2CAA2C,iEAAS;AACpD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT,kCAAkC,iEAAS,QAAQ,iEAAS;AAC5D,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qDAAqD,EAAE;AACvD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,iEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,iEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAI;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,kDAAK;AACxC,yCAAyC,iEAAS;AAClD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,kDAAK;AACb,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uCAAuC,EAAE;AACzC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,uCAAuC,gEAAU,gBAAgB,8DAAQ;AACzE,wBAAwB,gEAAU,gBAAgB,iEAAW;AAC7D,mBAAmB,EAAE;AACrB,sCAAsC,2DAAK,gBAAgB,2DAAK;AAChE;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,eAAe,gEAAU,EAAE,8DAAQ,EAAE,0DAAI,EAAE,yDAAG,EAAE,2DAAK,EAAE,gEAAU,EAAE,iEAAW,EAAE,2DAAK,EAAE,2DAAK,EAAE,yDAAG;AACjG;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC,gEAAU,gBAAgB,8DAAQ;AACzE,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,wBAAwB,0DAAI,gBAAgB,yDAAG;AAC/C;AACA,wBAAwB,0DAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAK;AAClC;AACA;AACA;AACA,6BAA6B,2DAAK;AAClC;AACA;AACA;AACA,iDAAiD,2DAAK;AACtD;AACA;AACA;AACA,6BAA6B,yDAAG;AAChC;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4CAA4C,4DAAI;AAChD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,sfAAsf,gBAAgB,gyBAAgyB,SAAS;AAC/yC,iCAAiC,sEAAuB;AACxD;AACA,qBAAqB,+DAA+D;AACpF,qBAAqB,UAAU,8EAAkB,oCAAoC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,YAAY,UAAU,oCAAoC,gBAAgB,8BAA8B,WAAW,wBAAwB,aAAa,yBAAyB,eAAe,sDAAsD,mBAAmB,uBAAuB,SAAS,gBAAgB,uBAAuB,mBAAmB,oBAAoB,uCAAuC,kBAAkB,sBAAsB,eAAe,kDAAkD,eAAe,0BAA0B,UAAU,mBAAmB,eAAe,cAAc,2BAA2B,iBAAiB,eAAe,iBAAiB,yBAAyB,2BAA2B,4BAA4B,UAAU,gBAAgB,yBAAyB,iBAAiB,gBAAgB,UAAU,qBAAqB,kBAAkB,uBAAuB,2BAA2B,eAAe,SAAS,gCAAgC,cAAc,WAAW,UAAU,6BAA6B,gBAAgB,0BAA0B,kBAAkB,WAAW,SAAS,eAAe,kCAAkC,eAAe,2CAA2C,cAAc,gBAAgB,gCAAgC,kBAAkB,qEAAqE,cAAc,6CAA6C,oBAAoB,iCAAiC;AACniD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,qDAAM,EAAE;AACpB,KAAK,6BAA6B,OAAO,wDAAS,uBAAuB,GAAG;AAC5E,KAAK,OAAO,gFAAoB,gBAAgB,OAAO,uDAAQ,EAAE,GAAG;AACpE,KAAK,OAAO,wDAAS,gBAAgB,OAAO,mDAAI,EAAE,GAAG,OAAO,uDAAQ,EAAE,GAAG;AACzE,KAAK,OAAO,qDAAM,gBAAgB,OAAO,uDAAQ,EAAE,GAAG;AACtD,KAAK,OAAO,iEAAkB,gBAAgB,OAAO,uDAAQ,EAAE;AAC/D;AACA;AACA,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,kBAAkB,OAAO,oDAAK,0BAA0B;AACxD,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,cAAc,OAAO,oDAAK,sBAAsB;AAChD,kBAAkB,OAAO,oDAAK,2BAA2B;AACzD,yBAAyB,OAAO,oDAAK,kCAAkC;AACvE,oBAAoB,OAAO,qDAAM,EAAE;AACnC,qBAAqB,OAAO,qDAAM,qBAAqB;AACvD,qBAAqB,OAAO,qDAAM,qBAAqB;AACvD,qBAAqB,OAAO,qDAAM,0BAA0B;AAC5D,mBAAmB,OAAO,qDAAM,4BAA4B;AAC5D,uBAAuB,OAAO,qDAAM,EAAE;AACtC,aAAa,OAAO,wDAAS,oBAAoB;AACjD,iBAAiB,OAAO,wDAAS,wBAAwB;AACzD,eAAe,OAAO,wDAAS,sBAAsB;AACrD,mBAAmB,OAAO,wDAAS,0BAA0B;AAC7D,kBAAkB,OAAO,wDAAS,SAAS,wEAAmB,IAAI;AAClE,eAAe,OAAO,8DAAe,mCAAmC,oBAAoB,IAAI;AAChG,cAAc,OAAO,8DAAe,qCAAqC;AACzE,kCAAkC,OAAO,2DAAY,2CAA2C;AAChG,mCAAmC,OAAO,wDAAS,yCAAyC;AAC5F,sBAAsB,OAAO,oDAAK,+BAA+B;AACjE,mBAAmB,OAAO,oDAAK,EAAE;AACjC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,6EAAiB;AACrC,oBAAoB,2EAAgB;AACpC,oBAAoB,kEAAa;AACjC,oBAAoB,4DAAU;AAC9B,oBAAoB,mEAAY;AAChC,oBAAoB,uEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE0O;;AAE1O,qD;;;;;;;;;;;;AC3oDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACJ;AACgB;AAC6K;;AAExO;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,aAAa;AACxD;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb,sCAAsC,4DAAc;AACpD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B,gFAAgB;AAC3C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uDAAuD,gEAAS;AAChE,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uDAAuD,gEAAS;AAChE,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wDAAwD,gEAAS;AACjE,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,g3CAAg3C,SAAS;AACz3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,wCAAwC,cAAc,eAAe,cAAc,gBAAgB,uBAAuB,oBAAoB,qBAAqB,kBAAkB,iBAAiB,oBAAoB,UAAU,YAAY,4BAA4B,kBAAkB,OAAO,uBAAuB,WAAW,YAAY,oBAAoB,WAAW,UAAU,iBAAiB,qBAAqB,cAAc,cAAc,kBAAkB,OAAO,oBAAoB,WAAW,mBAAmB,uBAAuB,gBAAgB,6BAA6B,qBAAqB,2FAA2F,gBAAgB,8BAA8B,2BAA2B,0BAA0B,sBAAsB,oBAAoB,yBAAyB,oBAAoB,qBAAqB,WAAW,qCAAqC,gBAAgB,mBAAmB,mBAAmB,aAAa,mBAAmB,WAAW,uCAAuC,sBAAsB,oEAAoE,UAAU,mBAAmB,cAAc,gBAAgB,oBAAoB,sIAAsI,eAAe,gBAAgB,4FAA4F,cAAc,cAAc,YAAY,qJAAqJ,cAAc,4CAA4C,iBAAiB,YAAY,oBAAoB,mBAAmB,wBAAwB,gBAAgB,gBAAgB,aAAa,oCAAoC,mBAAmB,mBAAmB,sBAAsB,iBAAiB,sBAAsB,gBAAgB,qBAAqB,iBAAiB,cAAc,eAAe,iBAAiB,oBAAoB,gBAAgB,wBAAwB,eAAe,8CAA8C,uBAAuB,gBAAgB,eAAe,sEAAsE,cAAc,2FAA2F,cAAc,+FAA+F,4BAA4B,6FAA6F,WAAW,iGAAiG,cAAc,2FAA2F,qBAAqB,6BAA6B,qGAAqG,qBAAqB,6FAA6F,cAAc,0BAA0B,eAAe,iBAAiB,mDAAmD,yBAAyB,kBAAkB,gBAAgB,gBAAgB,mBAAmB,iBAAiB,+CAA+C,iBAAiB,kBAAkB,+CAA+C,aAAa,iBAAiB,iBAAiB,+HAA+H,gBAAgB,iEAAiE,gBAAgB,iBAAiB,YAAY,8DAA8D,kBAAkB,iBAAiB,mBAAmB,yDAAyD,aAAa,8DAA8D,iBAAiB,YAAY,4EAA4E,UAAU,kJAAkJ,gBAAgB,gGAAgG,YAAY,iBAAiB,gDAAgD,gBAAgB,eAAe,gDAAgD,iBAAiB,cAAc,kDAAkD,gBAAgB,aAAa,gBAAgB,iCAAiC,oCAAoC,iBAAiB,+CAA+C,gBAAgB,eAAe,+DAA+D,qBAAqB,yBAAyB,+CAA+C,oCAAoC,4BAA4B,eAAe,gBAAgB,oBAAoB,kEAAkE,UAAU,iBAAiB,2DAA2D,cAAc,qDAAqD,6CAA6C,eAAe,iBAAiB,sGAAsG,oCAAoC,4BAA4B,wBAAwB,cAAc,6CAA6C,gBAAgB,yDAAyD,cAAc,gBAAgB,oCAAoC,cAAc,6DAA6D,qBAAqB,mDAAmD,cAAc,0BAA0B,cAAc,mBAAmB,gCAAgC,+CAA+C,cAAc,mDAAmD,4BAA4B,+DAA+D,qBAAqB,wBAAwB,WAAW,6CAA6C,cAAc,6DAA6D,kBAAkB,mDAAmD,WAAW,aAAa,mBAAmB,kBAAkB,eAAe,cAAc,YAAY,UAAU,UAAU,SAAS,WAAW,eAAe,iBAAiB,YAAY,oBAAoB,aAAa,+JAA+J,aAAa,wBAAwB,iBAAiB,gBAAgB,YAAY,oBAAoB,oBAAoB,YAAY,UAAU,gBAAgB,mBAAmB,gBAAgB,qBAAqB,mBAAmB,0BAA0B,gBAAgB,cAAc,mCAAmC,gBAAgB;AACpoO,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,sCAAsC;AAC5G;AACA;AACA,gBAAgB,OAAO,0DAAY,+BAA+B;AAClE,aAAa,OAAO,mDAAK,sBAAsB;AAC/C,mBAAmB,OAAO,0DAAY,sCAAsC;AAC5E,qBAAqB,OAAO,6DAAe,qCAAqC;AAChF,qBAAqB,OAAO,6DAAe,qCAAqC;AAChF,sBAAsB,OAAO,6DAAe,sCAAsC;AAClF,uBAAuB,OAAO,6DAAe,uCAAuC;AACpF,uBAAuB,OAAO,6DAAe,uCAAuC;AACpF,yBAAyB,OAAO,6DAAe,yCAAyC;AACxF,+BAA+B,OAAO,uDAAS,kCAAkC;AACjF,kBAAkB,OAAO,mDAAK,2BAA2B;AACzD,cAAc,OAAO,mDAAK,sBAAsB;AAChD,kBAAkB,OAAO,mDAAK,EAAE;AAChC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEgU;;AAEhU,sD;;;;;;;;;;;;ACtdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACwC;AACjD;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,iBAAiB,6EAAa;AAC9B;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB,0DAA0D,KAAK;AAC/D,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,4DAA4D,KAAK;AACjE,6DAA6D,KAAK;AAClE,4DAA4D,KAAK;AACjE;AACA;AACA,4DAA4D,KAAK;AACjE,6DAA6D,KAAK;AAClE,4DAA4D,KAAK;AACjE;AACA;AACA,4DAA4D,KAAK;AACjE,6DAA6D,KAAK;AAClE,4DAA4D,KAAK;AACjE;AACA;AACA,4DAA4D,KAAK;AACjE,6DAA6D,KAAK;AAClE,4DAA4D,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,4BAA4B,KAAK;AACjC,6BAA6B,KAAK;AAClC,2BAA2B,KAAK;AAChC,8BAA8B,KAAK;AACnC,gCAAgC,KAAK;AACrC,+BAA+B,KAAK;AACpC;AACA,WAAW,EAAE;AACb;AACA,uBAAuB,KAAK;AAC5B,sBAAsB,KAAK;AAC3B,2BAA2B,KAAK;AAChC;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,qCAAqC,6EAAa;AAClD;AACA;AACA;AACA;AACA,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA,qCAAqC,6EAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,kFAAkF,MAAM;AACxF;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,8GAA8G,IAAI,OAAO,IAAI;AAC7H;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA,iBAAiB;AACjB,guDAAguD,kBAAkB,WAAW,eAAe,kBAAkB,iBAAiB,wBAAwB,aAAa,YAAY,eAAe,4BAA4B,cAAc,WAAW,0BAA0B,kBAAkB,mBAAmB,0BAA0B,mBAAmB,oBAAoB,0BAA0B,aAAa,cAAc,0BAA0B,mBAAmB,oBAAoB,0BAA0B,mBAAmB,oBAAoB,0BAA0B,aAAa,cAAc,0BAA0B,mBAAmB,oBAAoB,0BAA0B,mBAAmB,oBAAoB,0BAA0B,aAAa,cAAc,2BAA2B,mBAAmB,oBAAoB,2BAA2B,mBAAmB,oBAAoB,2BAA2B,cAAc,eAAe,QAAQ,WAAW,QAAQ,eAAe,QAAQ,gBAAgB,QAAQ,UAAU,QAAQ,gBAAgB,QAAQ,gBAAgB,QAAQ,UAAU,QAAQ,gBAAgB,QAAQ,gBAAgB,QAAQ,UAAU,SAAS,gBAAgB,SAAS,gBAAgB,SAAS,WAAW,QAAQ,UAAU,QAAQ,cAAc,QAAQ,eAAe,QAAQ,SAAS,QAAQ,eAAe,QAAQ,eAAe,QAAQ,SAAS,QAAQ,eAAe,QAAQ,eAAe,QAAQ,SAAS,SAAS,eAAe,SAAS,eAAe,SAAS,UAAU,0BAA0B,qBAAqB,0BAA0B,sBAAsB,0BAA0B,gBAAgB,0BAA0B,sBAAsB,0BAA0B,sBAAsB,0BAA0B,gBAAgB,0BAA0B,sBAAsB,0BAA0B,sBAAsB,0BAA0B,gBAAgB,2BAA2B,sBAAsB,2BAA2B,sBAAsB,sBAAsB,SAAS,qBAAqB,QAAQ,0BAA0B,QAAQ,2BAA2B,kCAAkC,0BAA0B,4BAA4B,gCAAgC,0BAA0B,8BAA8B,6BAA6B,oCAAoC,4BAA4B,+BAA+B,8BAA8B,8BAA8B,qCAAqC,6BAA6B,yBAAyB,ssDAAssD,kBAAkB,iBAAiB,8BAA8B,aAAa,YAAY,eAAe,kCAAkC,cAAc,WAAW,gCAAgC,kBAAkB,mBAAmB,gCAAgC,mBAAmB,oBAAoB,gCAAgC,aAAa,cAAc,gCAAgC,mBAAmB,oBAAoB,gCAAgC,mBAAmB,oBAAoB,gCAAgC,aAAa,cAAc,gCAAgC,mBAAmB,oBAAoB,gCAAgC,mBAAmB,oBAAoB,gCAAgC,aAAa,cAAc,iCAAiC,mBAAmB,oBAAoB,iCAAiC,mBAAmB,oBAAoB,iCAAiC,cAAc,eAAe,cAAc,WAAW,cAAc,eAAe,cAAc,gBAAgB,cAAc,UAAU,cAAc,gBAAgB,cAAc,gBAAgB,cAAc,UAAU,cAAc,gBAAgB,cAAc,gBAAgB,cAAc,UAAU,eAAe,gBAAgB,eAAe,gBAAgB,eAAe,WAAW,cAAc,UAAU,cAAc,cAAc,cAAc,eAAe,cAAc,SAAS,cAAc,eAAe,cAAc,eAAe,cAAc,SAAS,cAAc,eAAe,cAAc,eAAe,cAAc,SAAS,eAAe,eAAe,eAAe,eAAe,eAAe,UAAU,gCAAgC,cAAc,gCAAgC,qBAAqB,gCAAgC,sBAAsB,gCAAgC,gBAAgB,gCAAgC,sBAAsB,gCAAgC,sBAAsB,gCAAgC,gBAAgB,gCAAgC,sBAAsB,gCAAgC,sBAAsB,gCAAgC,gBAAgB,iCAAiC,sBAAsB,iCAAiC,sBAAsB,4BAA4B,SAAS,2BAA2B,QAAQ,gCAAgC,QAAQ,iCAAiC,kCAAkC,0BAA0B,kCAAkC,gCAAgC,gCAAgC,8BAA8B,mCAAmC,oCAAoC,4BAA4B,qCAAqC,8BAA8B,oCAAoC,qCAAqC,8BAA8B,yBAAyB,ssDAAssD,mBAAmB,kBAAkB,+BAA+B,aAAa,YAAY,eAAe,mCAAmC,cAAc,WAAW,iCAAiC,kBAAkB,mBAAmB,iCAAiC,mBAAmB,oBAAoB,iCAAiC,aAAa,cAAc,iCAAiC,mBAAmB,oBAAoB,iCAAiC,mBAAmB,oBAAoB,iCAAiC,aAAa,cAAc,iCAAiC,mBAAmB,oBAAoB,iCAAiC,mBAAmB,oBAAoB,iCAAiC,aAAa,cAAc,kCAAkC,mBAAmB,oBAAoB,kCAAkC,mBAAmB,oBAAoB,kCAAkC,cAAc,eAAe,eAAe,WAAW,eAAe,eAAe,eAAe,gBAAgB,eAAe,UAAU,eAAe,gBAAgB,eAAe,gBAAgB,eAAe,UAAU,eAAe,gBAAgB,eAAe,gBAAgB,eAAe,UAAU,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,WAAW,eAAe,UAAU,eAAe,cAAc,eAAe,eAAe,eAAe,SAAS,eAAe,eAAe,eAAe,eAAe,eAAe,SAAS,eAAe,eAAe,eAAe,eAAe,eAAe,SAAS,gBAAgB,eAAe,gBAAgB,eAAe,gBAAgB,UAAU,iCAAiC,cAAc,iCAAiC,qBAAqB,iCAAiC,sBAAsB,iCAAiC,gBAAgB,iCAAiC,sBAAsB,iCAAiC,sBAAsB,iCAAiC,gBAAgB,iCAAiC,sBAAsB,iCAAiC,sBAAsB,iCAAiC,gBAAgB,kCAAkC,sBAAsB,kCAAkC,sBAAsB,6BAA6B,SAAS,4BAA4B,QAAQ,iCAAiC,QAAQ,kCAAkC,kCAAkC,0BAA0B,mCAAmC,gCAAgC,iCAAiC,8BAA8B,oCAAoC,oCAAoC,4BAA4B,sCAAsC,8BAA8B,qCAAqC,qCAAqC,8BAA8B,yBAAyB,ssDAAssD,mBAAmB,kBAAkB,8BAA8B,aAAa,YAAY,eAAe,kCAAkC,cAAc,WAAW,gCAAgC,kBAAkB,mBAAmB,gCAAgC,mBAAmB,oBAAoB,gCAAgC,aAAa,cAAc,gCAAgC,mBAAmB,oBAAoB,gCAAgC,mBAAmB,oBAAoB,gCAAgC,aAAa,cAAc,gCAAgC,mBAAmB,oBAAoB,gCAAgC,mBAAmB,oBAAoB,gCAAgC,aAAa,cAAc,iCAAiC,mBAAmB,oBAAoB,iCAAiC,mBAAmB,oBAAoB,iCAAiC,cAAc,eAAe,cAAc,WAAW,cAAc,eAAe,cAAc,gBAAgB,cAAc,UAAU,cAAc,gBAAgB,cAAc,gBAAgB,cAAc,UAAU,cAAc,gBAAgB,cAAc,gBAAgB,cAAc,UAAU,eAAe,gBAAgB,eAAe,gBAAgB,eAAe,WAAW,cAAc,UAAU,cAAc,cAAc,cAAc,eAAe,cAAc,SAAS,cAAc,eAAe,cAAc,eAAe,cAAc,SAAS,cAAc,eAAe,cAAc,eAAe,cAAc,SAAS,eAAe,eAAe,eAAe,eAAe,eAAe,UAAU,gCAAgC,cAAc,gCAAgC,qBAAqB,gCAAgC,sBAAsB,gCAAgC,gBAAgB,gCAAgC,sBAAsB,gCAAgC,sBAAsB,gCAAgC,gBAAgB,gCAAgC,sBAAsB,gCAAgC,sBAAsB,gCAAgC,gBAAgB,iCAAiC,sBAAsB,iCAAiC,sBAAsB,4BAA4B,SAAS,2BAA2B,QAAQ,gCAAgC,QAAQ,iCAAiC,kCAAkC,0BAA0B,kCAAkC,gCAAgC,gCAAgC,8BAA8B,mCAAmC,oCAAoC,4BAA4B,qCAAqC,8BAA8B,oCAAoC,qCAAqC,8BAA8B;AAC/8jB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,WAAW,OAAO,mDAAK,oBAAoB;AAC3C,cAAc,OAAO,mDAAK,0BAA0B;AACpD,gBAAgB,OAAO,mDAAK,0BAA0B;AACtD,aAAa,OAAO,mDAAK,yBAAyB;AAClD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,0CAA0C,kBAAkB,iBAAiB,kBAAkB,kBAAkB,iBAAiB,yBAAyB,gBAAgB,mBAAmB,mBAAmB,sCAAsC,eAAe,gBAAgB,oDAAoD,cAAc,eAAe,6EAA6E,eAAe,gBAAgB,2BAA2B,WAAW,yBAAyB,2BAA2B,aAAa,gBAAgB;AAC1kB,aAAa;AACb;AACA;AACA,kBAAkB,OAAO,mDAAK,uBAAuB;AACrD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,kCAAkC,KAAK;AACvC,gCAAgC,KAAK;AACrC,mCAAmC,KAAK;AACxC,oCAAoC,KAAK;AACzC,mCAAmC,KAAK;AACxC;AACA,WAAW,EAAE;AACb;AACA,8BAA8B,KAAK;AACnC,4BAA4B,KAAK;AACjC,+BAA+B,KAAK;AACpC,iCAAiC,KAAK;AACtC,gCAAgC,KAAK;AACrC;AACA,WAAW,EAAE;AACb;AACA,gCAAgC,KAAK;AACrC,8BAA8B,KAAK;AACnC,iCAAiC,KAAK;AACtC,kCAAkC,KAAK;AACvC,iCAAiC,KAAK;AACtC,kCAAkC,KAAK;AACvC;AACA,WAAW,EAAE;AACb;AACA,sBAAsB,KAAK;AAC3B,wBAAwB,KAAK;AAC7B,yBAAyB,KAAK;AAC9B;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,6EAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA,iBAAiB;AACjB,gCAAgC,aAAa,eAAe,kBAAkB,iBAAiB,kBAAkB,oBAAoB,6BAA6B,uBAAuB,gCAAgC,4BAA4B,qCAAqC,+BAA+B,wCAAwC,qBAAqB,yBAAyB,uBAAuB,2BAA2B,6BAA6B,iCAAiC,iCAAiC,qCAAqC,+BAA+B,mCAAmC,kCAAkC,iCAAiC,mCAAmC,wCAAwC,kCAAkC,uCAAuC,6BAA6B,iCAAiC,2BAA2B,+BAA+B,8BAA8B,6BAA6B,gCAAgC,+BAA+B,+BAA+B,8BAA8B,+BAA+B,mCAAmC,6BAA6B,iCAAiC,gCAAgC,+BAA+B,iCAAiC,sCAAsC,gCAAgC,qCAAqC,iCAAiC,gCAAgC,yBAAyB,MAAM,kBAAkB,iBAAiB,kBAAkB,0BAA0B,6BAA6B,6BAA6B,gCAAgC,kCAAkC,qCAAqC,qCAAqC,wCAAwC,2BAA2B,yBAAyB,6BAA6B,2BAA2B,mCAAmC,iCAAiC,uCAAuC,qCAAqC,qCAAqC,mCAAmC,wCAAwC,iCAAiC,yCAAyC,wCAAwC,wCAAwC,uCAAuC,mCAAmC,iCAAiC,iCAAiC,+BAA+B,oCAAoC,6BAA6B,sCAAsC,+BAA+B,qCAAqC,8BAA8B,qCAAqC,mCAAmC,mCAAmC,iCAAiC,sCAAsC,+BAA+B,uCAAuC,sCAAsC,sCAAsC,qCAAqC,uCAAuC,iCAAiC,yBAAyB,MAAM,mBAAmB,kBAAkB,kBAAkB,2BAA2B,6BAA6B,8BAA8B,gCAAgC,mCAAmC,qCAAqC,sCAAsC,wCAAwC,4BAA4B,yBAAyB,8BAA8B,2BAA2B,oCAAoC,iCAAiC,wCAAwC,qCAAqC,sCAAsC,mCAAmC,yCAAyC,iCAAiC,0CAA0C,wCAAwC,yCAAyC,uCAAuC,oCAAoC,iCAAiC,kCAAkC,+BAA+B,qCAAqC,6BAA6B,uCAAuC,+BAA+B,sCAAsC,8BAA8B,sCAAsC,mCAAmC,oCAAoC,iCAAiC,uCAAuC,+BAA+B,wCAAwC,sCAAsC,uCAAuC,qCAAqC,wCAAwC,iCAAiC,yBAAyB,MAAM,mBAAmB,kBAAkB,kBAAkB,0BAA0B,6BAA6B,6BAA6B,gCAAgC,kCAAkC,qCAAqC,qCAAqC,wCAAwC,2BAA2B,yBAAyB,6BAA6B,2BAA2B,mCAAmC,iCAAiC,uCAAuC,qCAAqC,qCAAqC,mCAAmC,wCAAwC,iCAAiC,yCAAyC,wCAAwC,wCAAwC,uCAAuC,mCAAmC,iCAAiC,iCAAiC,+BAA+B,oCAAoC,6BAA6B,sCAAsC,+BAA+B,qCAAqC,8BAA8B,qCAAqC,mCAAmC,mCAAmC,iCAAiC,sCAAsC,+BAA+B,uCAAuC,sCAAsC,sCAAsC,qCAAqC,uCAAuC,iCAAiC;AACz8M,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,oBAAoB,OAAO,mDAAK,2BAA2B;AAC3D,yBAAyB,OAAO,mDAAK,gCAAgC;AACrE,uBAAuB,OAAO,mDAAK,8BAA8B;AACjE,iBAAiB,OAAO,mDAAK,wBAAwB;AACrD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE2E;;AAE3E,iD;;;;;;;;;;;;AC5lBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACe;AACC;AACQ;AACxC;AACqD;AACxB;AAC0G;AACjH;AACC;;AAEtD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,oCAAoC,4DAAc;AAClD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,KAAK,oFAAsB;AAC3B,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,uCAAuC;AACxD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oFAAsB;AACzD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qDAAqD,EAAE;AACvD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8CAA8C,WAAW;AACzD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,UAAU,8EAAkB,iCAAiC;AAC1F,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,wDAAS,gBAAgB,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG;AACzE,KAAK,OAAO,qDAAM,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AACtD,KAAK,OAAO,iEAAkB,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,KAAK,OAAO,yEAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG,OAAO,oDAAM,oCAAoC;AAC1H;AACA;AACA,kBAAkB,OAAO,mDAAK,0BAA0B;AACxD,UAAU,OAAO,mDAAK,EAAE;AACxB,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0CAA0C,2DAAK,uBAAuB,2DAAK;AAC3E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,gCAAgC,kBAAkB,qBAAqB,YAAY,WAAW,eAAe,YAAY,UAAU,iEAAiE,4CAA4C,kBAAkB,4BAA4B,oBAAoB;AAClT,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,6EAAiB;AACrC,oBAAoB,mEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAiB;AACrC;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE+F;;AAE/F,kD;;;;;;;;;;;;ACphBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACO;AACuE;AAC/D;;AAE9D;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,WAAW,cAAc,aAAa,uBAAuB,kBAAkB,sBAAsB,iBAAiB,kBAAkB,uCAAuC,aAAa,cAAc,eAAe,iBAAiB,6BAA6B,eAAe,8BAA8B,qBAAqB,qBAAqB,qBAAqB,uCAAuC,cAAc,sBAAsB,qBAAqB,wCAAwC,cAAc,wBAAwB,qBAAqB,0CAA0C,cAAc,wBAAwB,qBAAqB,0CAA0C,cAAc,kBAAkB,kBAAkB,yBAAyB,MAAM,aAAa,cAAc,2WAA2W,eAAe,iBAAiB,kBAAkB,mBAAmB,6BAA6B,mBAAmB,yBAAyB,6BAA6B,oBAAoB,wBAAwB,kBAAkB,SAAS,WAAW,eAAe,6BAA6B,YAAY,UAAU,UAAU,aAAa,mBAAmB,gCAAgC,eAAe,wCAAwC,uEAAuE,4CAA4C,kBAAkB;AACjwD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,eAAe,OAAO,mDAAK,wBAAwB;AACnD,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,wBAAwB,OAAO,mDAAK,EAAE;AACtC,kBAAkB,OAAO,oDAAM,oBAAoB;AACnD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,mEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE+C;;AAE/C,oD;;;;;;;;;;;;ACvMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACoC;AACjC;AACZ;AACwC;AACtB;AACH;AACV;AACY;AACmI;AACpJ;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAY;AACxC,kCAAkC,iDAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4DAA4D,gEAAS;AACrE,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,gFAAgB;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,gCAAgC,qBAAqB,kBAAkB,gBAAgB,kBAAkB,qBAAqB,iBAAiB,aAAa,WAAW,8BAA8B,gCAAgC,iBAAiB,eAAe,mBAAmB,gBAAgB,gBAAgB,gBAAgB,yBAAyB,gBAAgB,iBAAiB,yBAAyB,gBAAgB,iBAAiB,yBAAyB,qBAAqB,mBAAmB,kBAAkB,oBAAoB,eAAe,cAAc,YAAY,UAAU,SAAS,WAAW,eAAe,YAAY,gBAAgB,cAAc,oCAAoC,UAAU,gBAAgB,wBAAwB,uEAAuE,cAAc,gBAAgB,qCAAqC,mBAAmB,oCAAoC,aAAa,4BAA4B,kBAAkB,gCAAgC,oDAAoD,kBAAkB,mBAAmB,sCAAsC,qBAAqB,cAAc,+CAA+C,oBAAoB,wCAAwC,WAAW,qFAAqF,qBAAqB,0CAA0C,qBAAqB,sCAAsC,cAAc,qBAAqB,6CAA6C,cAAc,iKAAiK,kBAAkB,WAAW,+CAA+C,WAAW,oDAAoD,kBAAkB,wBAAwB,YAAY,yBAAyB,oDAAoD,eAAe,wBAAwB,aAAa,wEAAwE,YAAY,8FAA8F,kBAAkB;AACjwE,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,4DAAO;AACnB;AACA;AACA,gBAAgB,OAAO,0DAAY,SAAS,8EAAkB,IAAI;AAClE,sBAAsB,OAAO,6DAAe,SAAS,qFAAyB,IAAI;AAClF,gBAAgB,OAAO,uDAAS,SAAS,mFAAyB,IAAI;AACtE,iBAAiB,OAAO,0DAAY,SAAS,8EAAmB,IAAI;AACpE,wBAAwB,OAAO,yDAAW,6BAA6B;AACvE,YAAY,OAAO,mDAAK,qBAAqB;AAC7C,aAAa,OAAO,mDAAK,sBAAsB;AAC/C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA,0CAA0C,iDAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB,kDAAK;AAC5B;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,uDAAuD,mEAAY,OAAO,4DAAK;AAC/E;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,iBAAiB,oBAAoB,cAAc,gBAAgB,eAAe,iBAAiB,yBAAyB,kBAAkB,oBAAoB,gCAAgC,gBAAgB,kBAAkB,WAAW,yBAAyB,MAAM,eAAe,kBAAkB,yBAAyB,MAAM,gBAAgB,mCAAmC,aAAa,eAAe,+CAA+C,kBAAkB,wCAAwC,eAAe,iBAAiB,oBAAoB,2DAA2D,kBAAkB,oBAAoB;AACzsB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,cAAc,OAAO,6DAAe,4BAA4B;AAChE,gBAAgB,OAAO,mDAAK,yBAAyB;AACrD,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,0DAAY,mDAAmD,GAAG,OAAO,0DAAY,wCAAwC;AACpJ;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,qEAAa;AACjC,oBAAoB,yEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEwF;;AAExF,kE;;;;;;;;;;;;ACzYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACT;AACI;AACD;AACd;AAC6J;AAC1H;AAC9B;AACO;;AAEtD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA,+CAA+C,sBAAsB,yBAAyB,kBAAkB,uCAAuC,aAAa,qBAAqB,eAAe,wBAAwB,kBAAkB,QAAQ,UAAU,eAAe,eAAe,iBAAiB,mDAAmD,UAAU,mBAAmB,WAAW,YAAY,yBAAyB,kBAAkB,oCAAoC,4BAA4B,6BAA6B,8BAA8B,oCAAoC,mDAAmD,2CAA2C,YAAY,gEAAgE,sCAAsC,mDAAmD,2CAA2C,UAAU,uCAAuC,kDAAkD,0CAA0C,SAAS,qCAAqC,mDAAmD,2CAA2C,WAAW;AACtrC,aAAa;AACb;AACA;AACA;AACA;AACA,mBAAmB,OAAO,uDAAS,SAAS,yDAAW,IAAI;AAC3D,oBAAoB,OAAO,0DAAY,sCAAsC;AAC7E,cAAc,OAAO,oDAAM,uBAAuB;AAClD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sDAAS;AACjD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB,mFAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,mFAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,2CAA2C,gEAAS;AACpD,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,kEAAc;AAC5C,uBAAuB,EAAE;AACzB,qCAAqC,kEAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC,gEAAS;AAC/C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,6CAA6C,gEAAS;AACtD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2CAA2C,gEAAS;AACpD,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iCAAiC,6DAAM;AACvC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,qEAAqE,gEAAS;AAC9E;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,sEAAY;AACxB;AACA;AACA,kBAAkB,OAAO,oDAAM,kCAAkC;AACjE,YAAY,OAAO,mDAAK,4BAA4B;AACpD,iBAAiB,OAAO,mDAAK,iCAAiC;AAC9D,eAAe,OAAO,mDAAK,kCAAkC;AAC7D,iBAAiB,OAAO,mDAAK,iCAAiC;AAC9D,6BAA6B,OAAO,mDAAK,sCAAsC;AAC/E,qBAAqB,OAAO,mDAAK,qCAAqC;AACtE,aAAa,OAAO,mDAAK,6BAA6B;AACtD,eAAe,OAAO,mDAAK,+BAA+B;AAC1D,sBAAsB,OAAO,mDAAK,sCAAsC;AACxE,oBAAoB,OAAO,0DAAY,yBAAyB;AAChE,mBAAmB,OAAO,0DAAY,yBAAyB,GAAG,OAAO,0DAAY,yBAAyB;AAC9G;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,kEAAa;AACjC,oBAAoB,mEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEqG;;AAErG,oD;;;;;;;;;;;;ACrrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;AAE7D;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA,yDAAyD;AACzD,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA,6CAA6C;AAC7C,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,6EAA6E;AACxF;AACA;AACA;AACA,cAAc,UAAU,GAAG,YAAY,GAAG,WAAW,GAAG,SAAS,GAAG,WAAW,GAAG,WAAW;AAC7F;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,uDAAuD,sEAAgB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;;AAE3M;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE8L;;AAE9L,kyE;AACF;AACT;AACL;AACN;AACuB;AACuC;AAC1B;AACtB;AACX;AACgB;AAC+D;AAC3E;AACF;AACF;AACjB;AACiF;AAClE;AACU;AACmC;AACzB;AACuD;AACxD;AAC4D;AAC/C;AACmB;AACU;AACrB;AAC0D;AACzC;AACzB;AACsT;AACjV;;AAEzD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ,WAAW;AAC/B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA,gCAAgC,6BAA6B,kBAAkB,eAAe,eAAe,gBAAgB,mBAAmB,iBAAiB,gBAAgB,kBAAkB,yBAAyB,0EAA0E,yBAAyB,sBAAsB,qBAAqB,iBAAiB,WAAW,qBAAqB,iBAAiB,aAAa,gBAAgB,eAAe,mBAAmB,YAAY,8BAA8B,wBAAwB,SAAS,kHAAkH,4CAA4C,2BAA2B,WAAW,yBAAyB,6DAA6D,yBAAyB,qBAAqB,WAAW,kCAAkC,yBAAyB,qBAAqB,gBAAgB,WAAW,oCAAoC,oCAAoC,yBAAyB,2BAA2B,+CAA+C,sBAAsB,kBAAkB,cAAc,iFAAiF,yBAAyB,qBAAqB,cAAc,sDAAsD,yBAAyB,qBAAqB,cAAc,wDAAwD,sCAAsC,yBAAyB,wBAAwB,6BAA6B,6BAA6B,qBAAqB,cAAc,+DAA+D,yBAAyB,qBAAqB,WAAW,oCAAoC,yBAAyB,qBAAqB,gBAAgB,WAAW,sCAAsC,6BAA6B,gCAAgC,wBAAwB,iDAAiD,WAAW,kBAAkB,mFAAmF,yBAAyB,qBAAqB,cAAc,wDAAwD,yBAAyB,qBAAqB,cAAc,0DAA0D,6BAA6B,kCAAkC,2BAA2B,4BAA4B,6BAA6B,cAAc,kCAAkC,yBAAyB,mCAAmC,yBAAyB,gBAAgB,qCAAqC,6BAA6B,wBAAwB,gDAAgD,WAAW,sDAAsD,yBAAyB,cAAc,uDAAuD,yBAAyB,cAAc,yDAAyD,6BAA6B,2BAA2B,yBAAyB,eAAe,gBAAgB,kBAAkB,iBAAiB,yBAAyB,MAAM,cAAc,WAAW,yBAAyB,mBAAmB,gCAAgC,qBAAqB,eAAe,iBAAiB,oBAAoB,iBAAiB,gBAAgB,WAAW,yBAAyB,qBAAqB,eAAe,iBAAiB,oBAAoB,iBAAiB,gBAAgB,WAAW,uBAAuB,yBAAyB,WAAW,6BAA6B,yBAAyB,8BAA8B,yBAAyB,gCAAgC,oCAAoC,4BAA4B,yBAAyB,WAAW,kCAAkC,yBAAyB,mCAAmC,yBAAyB,qCAAqC,mCAAmC,yBAAyB,yBAAyB,cAAc,YAAY,kCAAkC,aAAa,mBAAmB,uBAAuB,sBAAsB,UAAU,eAAe,cAAc,uCAAuC,WAAW,eAAe,8CAA8C,WAAW,wCAAwC,WAAW,uCAAuC,WAAW;AACliJ,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA,gCAAgC,6BAA6B,kBAAkB,eAAe,eAAe,gBAAgB,mBAAmB,iBAAiB,gBAAgB,kBAAkB,yBAAyB,0EAA0E,yBAAyB,sBAAsB,qBAAqB,iBAAiB,WAAW,qBAAqB,iBAAiB,aAAa,gBAAgB,eAAe,mBAAmB,YAAY,8BAA8B,wBAAwB,SAAS,kHAAkH,4CAA4C,2BAA2B,WAAW,yBAAyB,6DAA6D,yBAAyB,qBAAqB,WAAW,kCAAkC,yBAAyB,qBAAqB,gBAAgB,WAAW,oCAAoC,oCAAoC,yBAAyB,2BAA2B,+CAA+C,sBAAsB,kBAAkB,cAAc,iFAAiF,yBAAyB,qBAAqB,cAAc,sDAAsD,yBAAyB,qBAAqB,cAAc,wDAAwD,sCAAsC,yBAAyB,wBAAwB,6BAA6B,6BAA6B,qBAAqB,cAAc,+DAA+D,yBAAyB,qBAAqB,WAAW,oCAAoC,yBAAyB,qBAAqB,gBAAgB,WAAW,sCAAsC,6BAA6B,gCAAgC,wBAAwB,iDAAiD,WAAW,kBAAkB,mFAAmF,yBAAyB,qBAAqB,cAAc,wDAAwD,yBAAyB,qBAAqB,cAAc,0DAA0D,6BAA6B,kCAAkC,2BAA2B,4BAA4B,6BAA6B,cAAc,kCAAkC,yBAAyB,mCAAmC,yBAAyB,gBAAgB,qCAAqC,6BAA6B,wBAAwB,gDAAgD,WAAW,sDAAsD,yBAAyB,cAAc,uDAAuD,yBAAyB,cAAc,yDAAyD,6BAA6B,2BAA2B,yBAAyB,eAAe,gBAAgB,kBAAkB,iBAAiB,yBAAyB,MAAM,cAAc,WAAW,yBAAyB,mBAAmB,gCAAgC,qBAAqB,eAAe,iBAAiB,oBAAoB,iBAAiB,gBAAgB,WAAW,yBAAyB,qBAAqB,eAAe,iBAAiB,oBAAoB,iBAAiB,gBAAgB,WAAW,uBAAuB,yBAAyB,WAAW,6BAA6B,yBAAyB,8BAA8B,yBAAyB,gCAAgC,oCAAoC,4BAA4B,yBAAyB,WAAW,kCAAkC,yBAAyB,mCAAmC,yBAAyB,qCAAqC,mCAAmC,yBAAyB,yBAAyB,cAAc,YAAY,kCAAkC,aAAa,mBAAmB,uBAAuB,sBAAsB,UAAU,eAAe,cAAc,uCAAuC,WAAW,eAAe,8CAA8C,WAAW,wCAAwC,WAAW,uCAAuC,WAAW;AACliJ,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC,mCAAmC,2DAAY;AAC/C,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mDAAmD,kBAAkB,yBAAyB,mBAAmB,cAAc,6KAA6K,WAAW;AACvT,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAS,gBAAgB,OAAO,uDAAQ,EAAE,GAAG,OAAO,mDAAI,EAAE;AACtE;AACA;AACA,mBAAmB,OAAO,8DAAe,SAAS,iEAAU;AAC5D,4BAA4B;AAC5B;AACA,8CAA8C,oBAAoB,IAAI;AACtE,cAAc,OAAO,2DAAY,SAAS,iEAAU;AACpD,4BAA4B;AAC5B;AACA,sBAAsB,uEAAgB,MAAM,IAAI;AAChD,uBAAuB,OAAO,qDAAM,EAAE;AACtC,UAAU,OAAO,oDAAK,EAAE;AACxB,YAAY,OAAO,oDAAK,EAAE;AAC1B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,iBAAiB,OAAO,oDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2DAAY;AACnD;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc,kBAAkB,mBAAmB,6KAA6K,yBAAyB,qBAAqB,6EAA6E,qBAAqB,6GAA6G,yBAAyB,oBAAoB,UAAU,kBAAkB,oBAAoB,eAAe,iBAAiB,eAAe,aAAa,qDAAqD,eAAe,iBAAiB,oBAAoB,yBAAyB,UAAU,iBAAiB,sBAAsB,sBAAsB,yBAAyB,kBAAkB,WAAW,eAAe,YAAY,WAAW,eAAe,aAAa,uBAAuB,mBAAmB,UAAU,eAAe,oEAAoE,kBAAkB,sCAAsC,yBAAyB,WAAW,WAAW,sEAAsE,yBAAyB,qBAAqB,uEAAuE,yBAAyB,qBAAqB,mBAAmB,+EAA+E,yBAAyB,iDAAiD,mBAAmB,cAAc,uFAAuF,yBAAyB,oDAAoD,kBAAkB,6BAA6B,kDAAkD,WAAW,oGAAoG,WAAW,sBAAsB,kBAAkB,6GAA6G,2BAA2B,yBAAyB,sCAAsC,+EAA+E,2BAA2B,qGAAqG,sCAAsC,kCAAkC,qHAAqH,sCAAsC,6CAA6C,8CAA8C,WAAW,2EAA2E,sBAAsB,oEAAoE,kBAAkB,sEAAsE,kBAAkB,WAAW,4EAA4E,sBAAsB,kBAAkB,WAAW,oBAAoB,WAAW,4FAA4F,sBAAsB,kGAAkG,uBAAuB,+JAA+J,yBAAyB,+KAA+K,yBAAyB,uJAAuJ,qBAAqB,+HAA+H,yBAAyB,+IAA+I,yBAAyB,uHAAuH,qBAAqB,6GAA6G,4CAA4C;AACrjJ,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,+CAA+C,OAAO,uDAAQ,EAAE;AACrE;AACA;AACA,UAAU,OAAO,oDAAK,EAAE;AACxB,YAAY,OAAO,oDAAK,EAAE;AAC1B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,iBAAiB,OAAO,oDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,eAAe,OAAO,oDAAK,EAAE;AAC7B,qBAAqB,OAAO,oDAAK,EAAE;AACnC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,aAAa,OAAO,oDAAK,EAAE;AAC3B,2BAA2B,OAAO,qDAAM,EAAE;AAC1C,qBAAqB,OAAO,qDAAM,EAAE;AACpC,sBAAsB,OAAO,qDAAM,EAAE;AACrC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,oEAAY;AAChC,oBAAoB,oEAAa;AACjC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,2DAAY;AAChD,uCAAuC,WAAW;AAClD;AACA,+CAA+C;AAC/C;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mDAAmD,kBAAkB,yBAAyB,mBAAmB,cAAc;AAC/H,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAS,gBAAgB,OAAO,uDAAQ,EAAE,GAAG,OAAO,mDAAI,EAAE,GAAG;AACzE,KAAK,OAAO,sDAAM,gBAAgB,OAAO,uDAAQ,EAAE,GAAG;AACtD,KAAK,OAAO,kEAAkB,gBAAgB,OAAO,uDAAQ,EAAE;AAC/D;AACA;AACA,cAAc,OAAO,2DAAY,SAAS,iEAAU;AACpD,4BAA4B;AAC5B;AACA,sBAAsB,uEAAgB,MAAM,IAAI;AAChD,UAAU,OAAO,oDAAK,iBAAiB;AACvC,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,wBAAwB,OAAO,qDAAM,iCAAiC;AACtE,eAAe,OAAO,8DAAe,SAAS,iEAAU;AACxD,4BAA4B;AAC5B;AACA,2CAA2C,oBAAoB,IAAI;AACnE,YAAY,OAAO,oDAAK,EAAE;AAC1B,aAAa,OAAO,oDAAK,sBAAsB;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,kBAAkB,qEAAqE,qBAAqB,mJAAmJ,yBAAyB,iBAAiB,UAAU,kBAAkB,sDAAsD,eAAe,iBAAiB,oDAAoD,eAAe,iBAAiB,gDAAgD,WAAW,2CAA2C,kBAAkB,kFAAkF,gBAAgB,oEAAoE,WAAW,iBAAiB,cAAc,eAAe,oBAAoB,kBAAkB,mBAAmB,kBAAkB,yBAAyB,kBAAkB,WAAW,eAAe,YAAY,kBAAkB,kBAAkB,aAAa,uBAAuB,mBAAmB,eAAe,UAAU,WAAW,6BAA6B,kBAAkB,gCAAgC,yDAAyD,yBAAyB,2CAA2C,mBAAmB,cAAc,6DAA6D,qBAAqB,kEAAkE,yBAAyB,mGAAmG,4CAA4C,0IAA0I,qBAAqB,+IAA+I,yBAAyB,2IAA2I,qBAAqB,gJAAgJ,yBAAyB,6CAA6C,yDAAyD,4BAA4B,wCAAwC,oBAAoB,uDAAuD,gCAAgC;AAC7lF,aAAa;AACb;AACA;AACA;AACA,KAAK,4CAA4C,OAAO,uDAAQ,EAAE,GAAG;AACrE,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,UAAU,OAAO,oDAAK,iBAAiB;AACvC,YAAY,OAAO,oDAAK,mBAAmB;AAC3C,iBAAiB,OAAO,oDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,mBAAmB,OAAO,qDAAM,4BAA4B;AAC5D,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,eAAe,OAAO,oDAAK,wBAAwB;AACnD,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,gBAAgB,OAAO,oDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA,oBAAoB,oEAAY;AAChC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,gBAAgB,eAAe,wCAAwC,iBAAiB,4CAA4C,gBAAgB,2CAA2C,iBAAiB,+CAA+C,sBAAsB,gBAAgB,0BAA0B,WAAW,uBAAuB,eAAe,wCAAwC,iBAAiB,4CAA4C,gBAAgB,2CAA2C,oBAAoB,kDAAkD,wBAAwB,eAAe,wCAAwC,iBAAiB,4CAA4C,gBAAgB,2CAA2C,oBAAoB,kDAAkD,uBAAuB,eAAe,wCAAwC,iBAAiB,4CAA4C,gBAAgB,2CAA2C,oBAAoB,kDAAkD;AAC/oC,aAAa;AACb;AACA;AACA,kBAAkB,OAAO,oDAAK,yBAAyB;AACvD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,SAAS,0DAA0D,cAAc,kBAAkB,gBAAgB,uBAAuB,qBAAqB,mCAAmC,eAAe,2CAA2C,iBAAiB,+CAA+C,8CAA8C,oBAAoB,qDAAqD,gBAAgB,yBAAyB,kBAAkB,yBAAyB,mCAAmC,eAAe,iDAAiD,iBAAiB,sDAAsD,yBAAyB,eAAe,2CAA2C,iBAAiB,+CAA+C,gBAAgB,8CAA8C,oBAAoB,qDAAqD,mBAAmB,yBAAyB,yBAAyB,eAAe,iDAAiD,iBAAiB,sDAAsD,4BAA4B,eAAe,2CAA2C,iBAAiB,+CAA+C,gBAAgB,8CAA8C,oBAAoB,qDAAqD,mBAAmB,yBAAyB,4BAA4B,eAAe,iDAAiD,iBAAiB,sDAAsD,qCAAqC,eAAe,2CAA2C,iBAAiB,+CAA+C,gBAAgB,8CAA8C,oBAAoB,qDAAqD,mBAAmB,yBAAyB,qCAAqC,eAAe,iDAAiD,iBAAiB,sDAAsD,sCAAsC,eAAe,2CAA2C,iBAAiB,+CAA+C,gBAAgB,8CAA8C,oBAAoB,qDAAqD,mBAAmB,yBAAyB,sCAAsC,eAAe,iDAAiD,iBAAiB,sDAAsD,qCAAqC,eAAe,2CAA2C,iBAAiB,+CAA+C,gBAAgB,8CAA8C,oBAAoB,qDAAqD,mBAAmB,yBAAyB,qCAAqC,eAAe,iDAAiD,iBAAiB,sDAAsD,sCAAsC,eAAe,2CAA2C,iBAAiB,+CAA+C,gBAAgB,8CAA8C,oBAAoB,qDAAqD,mBAAmB,yBAAyB,sCAAsC,eAAe,iDAAiD,iBAAiB,sDAAsD,6BAA6B,WAAW,yCAAyC,WAAW;AAC3vH,aAAa;AACb;AACA;AACA,kBAAkB,OAAO,oDAAK,yBAAyB;AACvD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,8BAA8B,oEAAY;AAC1C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA,gCAAgC,qBAAqB,cAAc,eAAe,eAAe,gBAAgB,mBAAmB,kBAAkB,qBAAqB,oCAAoC,qBAAqB,iBAAiB,aAAa,iBAAiB,YAAY,cAAc,wBAAwB,cAAc,iBAAiB,aAAa,0DAA0D,kBAAkB,UAAU,4CAA4C,0BAA0B,WAAW,gCAAgC,cAAc,4CAA4C,WAAW,mGAAmG,2BAA2B,uBAAuB,cAAc,6BAA6B,WAAW,yCAAyC,cAAc,6FAA6F,cAAc,eAAe,gBAAgB,oBAAoB,sBAAsB,kBAAkB,4DAA4D,iBAAiB,eAAe,iBAAiB,4EAA4E,oBAAoB,kBAAkB,WAAW,YAAY,wGAAwG,QAAQ,iBAAiB,2DAA2D,mBAAmB,wBAAwB,yEAAyE,cAAc,uEAAuE,UAAU,gBAAgB;AAC1tD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,YAAY,OAAO,2DAAY,SAAS,uEAAe,IAAI;AAC3D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,6CAA6C,WAAW;AACxD,8BAA8B,6CAAO;AACrC;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C,qCAAqC,WAAW;AAChD;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,oBAAoB,EAAE;AACtB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS,gBAAgB,8DAAM;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yCAAyC,2DAAG;AAC5C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,SAAS,MAAM,iEAAS;AACxB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,mDAAK;AACxC,QAAQ,mDAAK;AACb,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,aAAa,eAAe,sBAAsB,6BAA6B,yBAAyB,MAAM,oBAAoB,sBAAsB,sBAAsB,yBAAyB,sBAAsB,oBAAoB;AACjR,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,gBAAgB,OAAO,8DAAe,yBAAyB;AAC/D,mBAAmB,OAAO,qDAAM,EAAE;AAClC,YAAY,OAAO,oDAAK,EAAE;AAC1B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,aAAa,OAAO,oDAAK,EAAE;AAC3B,kBAAkB,OAAO,oDAAK,EAAE;AAChC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,4KAA4K,OAAO,wEAAwE,MAAM;AACjQ,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,aAAa,kBAAkB,2DAA2D,mBAAmB,qBAAqB,qBAAqB,mBAAmB,kBAAkB,WAAW,uBAAuB,mBAAmB,yBAAyB,8BAA8B,cAAc,8BAA8B,cAAc,mCAAmC,iBAAiB,eAAe,8BAA8B,cAAc,kBAAkB,gBAAgB,cAAc,gCAAgC,eAAe,YAAY,qBAAqB,UAAU,iBAAiB,WAAW,kDAAkD,UAAU,iBAAiB,qBAAqB,0BAA0B,gBAAgB,wBAAwB,0BAA0B,mBAAmB,mBAAmB,kGAAkG,WAAW,oBAAoB,kBAAkB,wJAAwJ,WAAW,+BAA+B,sBAAsB,yLAAyL,cAAc,oBAAoB,WAAW,mBAAmB;AAC/9C,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,eAAe,OAAO,oDAAK,EAAE;AAC7B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,YAAY,OAAO,oDAAK,EAAE;AAC1B,aAAa,OAAO,oDAAK,EAAE;AAC3B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA;AACA;AACA;AACA,mCAAmC,2DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,WAAW;AACtE,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,qBAAqB,mBAAmB,kBAAkB,0BAA0B,cAAc,+BAA+B,UAAU,kBAAkB,qBAAqB,kBAAkB,yBAAyB,qBAAqB,mBAAmB,qRAAqR,4CAA4C,mIAAmI,4CAA4C,UAAU;AAC/xB,aAAa;AACb;AACA;AACA;AACA,KAAK,mDAAmD,OAAO,uDAAQ,EAAE,GAAG;AAC5E,KAAK,OAAO,mFAAyB,EAAE;AACvC,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,YAAY,OAAO,oDAAK,EAAE;AAC1B,qBAAqB,OAAO,qDAAM,EAAE;AACpC,uBAAuB,OAAO,qDAAM,EAAE;AACtC,eAAe,OAAO,oDAAK,EAAE;AAC7B,aAAa,OAAO,oDAAK,EAAE;AAC3B,gBAAgB,OAAO,oDAAK,mBAAmB;AAC/C,WAAW,OAAO,oDAAK,EAAE;AACzB,kBAAkB,OAAO,oDAAK,EAAE;AAChC,aAAa,OAAO,oDAAK,EAAE;AAC3B,YAAY,OAAO,oDAAK,EAAE;AAC1B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,kBAAkB,OAAO,oDAAK,EAAE;AAChC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,oBAAoB,OAAO,wDAAS,0CAA0C;AAC9E,oBAAoB,OAAO,2DAAY,yBAAyB;AAChE,oBAAoB,OAAO,2DAAY,yBAAyB;AAChE,oBAAoB,OAAO,2DAAY,yBAAyB;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,2kBAA2kB,OAAO,uEAAuE,MAAM;AAC/pB,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mDAAmD,8BAA8B,cAAc,MAAM,aAAa,sBAAsB,UAAU,mBAAmB,eAAe,oCAAoC,kBAAkB,qBAAqB,iBAAiB,iBAAiB,eAAe,gBAAgB,UAAU,cAAc,6CAA6C,oCAAoC,YAAY,qBAAqB,gBAAgB,sCAAsC,YAAY,WAAW,kBAAkB,yBAAyB,aAAa,mBAAmB,uBAAuB,gEAAgE,oCAAoC,yBAAyB,kBAAkB,sBAAsB,WAAW,eAAe,WAAW,YAAY,iBAAiB,kBAAkB,SAAS,uBAAuB,uBAAuB,UAAU,UAAU,aAAa,uBAAuB,qBAAqB,qCAAqC,kBAAkB,WAAW,YAAY,kBAAkB,SAAS,6BAA6B,WAAW,UAAU,0BAA0B,oCAAoC,cAAc,qBAAqB,iBAAiB,eAAe,qBAAqB,UAAU,6CAA6C,oCAAoC,YAAY,yBAAyB,qBAAqB,gBAAgB,oCAAoC,gBAAgB,oEAAoE,WAAW,YAAY,oEAAoE,eAAe,kEAAkE,uBAAuB,kEAAkE,WAAW,aAAa,8BAA8B,aAAa,uBAAuB,qBAAqB,sCAAsC,cAAc,oCAAoC,oBAAoB,kBAAkB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,mDAAmD,mBAAmB,mDAAmD,WAAW,mGAAmG,UAAU,iGAAiG,qBAAqB,mBAAmB,kHAAkH,qBAAqB,mBAAmB,iGAAiG,WAAW,2CAA2C,YAAY,oBAAoB,WAAW,mBAAmB,oDAAoD,kBAAkB,6BAA6B,wJAAwJ,WAAW,4JAA4J,kBAAkB,sBAAsB,4JAA4J,cAAc;AACx+G,aAAa;AACb;AACA;AACA,eAAe,OAAO,oDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAK,EAAE;AAC1B,aAAa,OAAO,oDAAK,EAAE;AAC3B,eAAe,OAAO,oDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAK,EAAE;AAC1B,cAAc,OAAO,oDAAK,kBAAkB;AAC5C,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,eAAe,OAAO,oDAAK,EAAE;AAC7B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,oEAAY;AAChC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,gBAAgB,mBAAmB,UAAU,mBAAmB,wBAAwB,eAAe,iBAAiB,oBAAoB,uBAAuB,eAAe,iBAAiB,wBAAwB,eAAe,iBAAiB,oBAAoB,sEAAsE,QAAQ,iDAAiD,SAAS,yFAAyF,SAAS,wFAAwF,SAAS,0BAA0B,WAAW,mDAAmD,WAAW,+BAA+B,kBAAkB,OAAO,MAAM,eAAe,cAAc,mBAAmB,mBAAmB,kBAAkB,kBAAkB,gDAAgD,yBAAyB,kBAAkB,aAAa,qBAAqB,WAAW,UAAU,kBAAkB,kBAAkB,SAAS,QAAQ,gDAAgD,uBAAuB,sBAAsB,kBAAkB,kBAAkB,gBAAgB,qBAAqB,WAAW,kBAAkB,SAAS,gEAAgE,mBAAmB,gBAAgB,wEAAwE,WAAW,eAAe,iBAAiB,WAAW,gBAAgB,OAAO,UAAU,uEAAuE,kBAAkB,WAAW,YAAY,yBAAyB,OAAO,MAAM,WAAW,kBAAkB,wFAAwF,sBAAsB,yFAAyF,cAAc,kEAAkE,sBAAsB;AACrgE,aAAa;AACb;AACA;AACA,kBAAkB,OAAO,oDAAK,qBAAqB;AACnD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qBAAqB,OAAO,wDAAS,2BAA2B,OAAO,+DAAgB,EAAE,IAAI;AAC7F,YAAY,OAAO,oDAAK,yBAAyB;AACjD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,0BAA0B,oEAAY;AACtC;AACA,4BAA4B,uEAAe;AAC3C,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,8EAAa;AACrB;AACA;AACA;AACA,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,sBAAsB,OAAO,wDAAS,yCAAyC;AAC/E,mBAAmB,OAAO,wDAAS,0BAA0B;AAC7D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,8BAA8B,6CAAO;AACrC;AACA;AACA,kCAAkC,6CAAO;AACzC;AACA;AACA;AACA,iCAAiC,wDAAS;AAC1C;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,oFAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,mDAAK;AACxC,QAAQ,mDAAK;AACb,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,iEAAS,sBAAsB,8DAAM;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yCAAyC,iEAAS;AAClD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,gCAAgC,8EAAa;AAC7C;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,2CAA2C,aAAa,YAAY,yDAAyD,sBAAsB,kBAAkB,cAAc,yDAAyD,sBAAsB,kBAAkB,cAAc,yBAAyB,iBAAiB,sBAAsB,kBAAkB,WAAW,uBAAuB,oBAAoB;AAC1a,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAS,EAAE;AACvB,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,uBAAuB,OAAO,wDAAS,8BAA8B;AACrE,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,qBAAqB,OAAO,8DAAe,6CAA6C;AACxF,kBAAkB,OAAO,oDAAK,0BAA0B;AACxD,aAAa,OAAO,oDAAK,sBAAsB;AAC/C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6CAAO;AACpC,8BAA8B,6CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6CAA6C,iEAAS;AACtD,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA,gFAAgF,iEAAU;AAC1F,oCAAoC;AACpC;AACA;AACA;AACA;AACA,gCAAgC,aAAa,kBAAkB,mBAAmB,wBAAwB,UAAU,kBAAkB,iEAAiE,yBAAyB,qBAAqB,WAAW,mEAAmE,yBAAyB,qBAAqB,WAAW,mBAAmB,2FAA2F,mBAAmB,kEAAkE,yBAAyB,qBAAqB,WAAW,eAAe,0FAA0F,eAAe,6CAA6C,kEAAkE,sBAAsB,eAAe,qBAAqB,0FAA0F,uBAAuB,gCAAgC,aAAa,eAAe,iBAAiB,YAAY,yEAAyE,eAAe,gBAAgB,YAAY,oBAAoB,iBAAiB,iBAAiB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,0EAA0E,0BAA0B,2BAA2B,yBAAyB,MAAM,WAAW,kGAAkG,qBAAqB,yEAAyE,iBAAiB,kBAAkB,0EAA0E,yBAAyB,2BAA2B,yEAAyE,0BAA0B,iBAAiB,yBAAyB,yEAAyE,yBAAyB,2BAA2B,kCAAkC,kBAAkB,yBAAyB,gBAAgB,2BAA2B,cAAc,eAAe,YAAY,eAAe,gBAAgB,iBAAiB,kBAAkB,yBAAyB,2DAA2D,aAAa,mBAAmB,YAAY,gBAAgB,yBAAyB,kCAAkC,qBAAqB,uBAAuB,mBAAmB,wCAAwC,yBAAyB,qBAAqB,WAAW,0GAA0G,yBAAyB,qBAAqB,cAAc,2GAA2G,yBAAyB,qBAAqB,cAAc,6GAA6G,sBAAsB,kBAAkB,cAAc,4GAA4G,sBAAsB,kBAAkB,cAAc,4EAA4E,kBAAkB,WAAW,kFAAkF,yBAAyB,qBAAqB,cAAc,wBAAwB,aAAa,mBAAmB,eAAe,yGAAyG,4CAA4C,UAAU;AACl0H,aAAa;AACb;AACA;AACA;AACA,KAAK,6CAA6C,OAAO,qDAAM,SAAS,iEAAU;AAClF,gCAAgC;AAChC;AACA,sDAAsD,GAAG;AACzD,KAAK,OAAO,wDAAS,EAAE;AACvB,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,mFAAyB;AACrC;AACA;AACA,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,oBAAoB,OAAO,2DAAY,0BAA0B;AACjE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,0BAA0B,6DAAY,EAAE,2DAAW,EAAE,oEAAY;AACjE,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,iqBAAiqB,OAAO;AACxqB;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,qBAAqB,kBAAkB,mBAAmB,kBAAkB,gCAAgC,YAAY,gCAAgC,qBAAqB,gBAAgB,2BAA2B,UAAU,kBAAkB,gCAAgC,yBAAyB,kBAAkB,cAAc,cAAc,eAAe,kBAAkB,cAAc,WAAW,YAAY,mBAAmB,UAAU,kBAAkB,MAAM,SAAS,UAAU,uBAAuB,UAAU,yBAAyB,MAAM,kBAAkB,gCAAgC,WAAW,YAAY,eAAe,UAAU,mDAAmD,UAAU,uBAAuB,0BAA0B,yBAAyB,kBAAkB,aAAa,cAAc,YAAY,WAAW,SAAS,kBAAkB,kBAAkB,QAAQ,gEAAgE,kCAAkC,kBAAkB,cAAc,cAAc,iBAAiB,kBAAkB,kBAAkB,cAAc,UAAU,gCAAgC,qBAAqB,eAAe,wCAAwC,cAAc,6CAA6C,yBAAyB,6CAA6C,6CAA6C,YAAY,mDAAmD,yBAAyB,qBAAqB,qDAAqD,WAAW,2BAA2B,qBAAqB,eAAe,gBAAgB,iBAAiB,iBAAiB,mBAAmB,kBAAkB,kBAAkB,yBAAyB,0BAA0B,aAAa,cAAc,oBAAoB,kCAAkC,cAAc,eAAe,2BAA2B,iBAAiB,iBAAiB,eAAe,kBAAkB,0BAA0B,cAAc,kBAAkB,kBAAkB,OAAO,QAAQ,eAAe,iBAAiB,WAAW,YAAY,cAAc,kBAAkB,yBAAyB,UAAU,eAAe,gCAAgC,cAAc,qBAAqB,yBAAyB,0BAA0B,eAAe,mBAAmB,aAAa,eAAe,yIAAyI,4CAA4C;AACnkF,aAAa;AACb;AACA;AACA;AACA;AACA,UAAU,OAAO,oDAAK,EAAE;AACxB,YAAY,OAAO,oDAAK,EAAE;AAC1B,qBAAqB,OAAO,qDAAM,EAAE;AACpC,eAAe,OAAO,oDAAK,EAAE;AAC7B,gBAAgB,OAAO,oDAAK,qBAAqB;AACjD,WAAW,OAAO,oDAAK,oBAAoB;AAC3C,kBAAkB,OAAO,oDAAK,2BAA2B;AACzD,aAAa,OAAO,oDAAK,sBAAsB;AAC/C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA,oBAAoB,oEAAY;AAChC,oBAAoB,6DAAY;AAChC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,oFAAqB;AAClD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kDAAkD,GAAG,gCAAgC,wBAAwB,KAAK,iCAAiC,0BAA0B,gBAAgB,GAAG,gCAAgC,wBAAwB,KAAK,iCAAiC,0BAA0B,MAAM,kBAAkB,cAAc,0BAA0B,WAAW,YAAY,2BAA2B,WAAW,YAAY,0BAA0B,WAAW,YAAY,wBAAwB,WAAW,YAAY,gCAAgC,wBAAwB,mBAAmB,kBAAkB,qCAAqC,4BAA4B,oBAAoB,+BAA+B,uBAAuB,2CAA2C,mCAAmC,yCAAyC,iCAAiC,kDAAkD,yBAAyB,mDAAmD,yBAAyB,kDAAkD,uBAAuB,+CAA+C,UAAU,WAAW,kBAAkB,yBAAyB,kBAAkB,OAAO,uBAAuB,QAAQ,wBAAwB,SAAS,qDAAqD,8DAA8D,yGAAyG,sBAAsB;AAC3jD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,gBAAgB,OAAO,oDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA;AACA,oBAAoB,6DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6CAAO;AAClC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,eAAe,sEAAS;AACxB,IAAI,kEAAK,EAAE,aAAa;AACxB,IAAI,oEAAO,UAAU,kEAAK,EAAE,aAAa;AACzC;AACA,WAAW,EAAE;AACb,gBAAgB,sEAAS,CAAC,oEAAO,UAAU,kEAAK,EAAE,aAAa;AAC/D,WAAW,EAAE;AACb,gBAAgB,sEAAS;AACzB,IAAI,kEAAK,EAAE,oCAAoC;AAC/C,IAAI,oEAAO,UAAU,kEAAK,EAAE,sCAAsC;AAClE;AACA,WAAW,EAAE;AACb,kBAAkB,sEAAS;AAC3B,IAAI,kEAAK,EAAE,sCAAsC;AACjD,IAAI,oEAAO,UAAU,kEAAK,EAAE,oCAAoC;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C,iCAAiC,kDAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA,oBAAoB,oEAAO;AAC3B,wBAAwB,uEAAU;AAClC,4BAA4B,yEAAY;AACxC,4BAA4B,kEAAK;AACjC,gCAAgC,yEAAY;AAC5C;AACA;AACA,wBAAwB,uEAAU;AAClC,4BAA4B,kEAAK;AACjC,gCAAgC,yEAAY;AAC5C;AACA,4BAA4B,yEAAY;AACxC;AACA;AACA,oBAAoB,oEAAO;AAC3B,wBAAwB,uEAAU,WAAW,yEAAY;AACzD,wBAAwB,uEAAU,WAAW,yEAAY;AACzD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oCAAoC,aAAa,eAAe,YAAY,aAAa,MAAM,SAAS,OAAO,QAAQ,YAAY,mBAAmB,uBAAuB,uBAAuB,oBAAoB,iCAAiC,YAAY,OAAO,kBAAkB,MAAM,WAAW,WAAW,oBAAoB,kBAAkB,qBAAqB,QAAQ,SAAS,uCAAuC,+BAA+B,WAAW,qBAAqB,kBAAkB,gBAAgB,yCAAyC,2BAA2B,uBAAuB,8BAA8B,gBAAgB,yBAAyB,2BAA2B,gBAAgB,wBAAwB,iBAAiB,6BAA6B,YAAY,cAAc,eAAe,kBAAkB,SAAS,WAAW,YAAY,UAAU,UAAU,yBAAyB,eAAe,mCAAmC,SAAS,gEAAgE,4CAA4C,kBAAkB,yBAAyB,oBAAoB,WAAW,qBAAqB,kBAAkB,6BAA6B,gBAAgB,eAAe,mDAAmD,YAAY,6BAA6B,YAAY,6BAA6B,aAAa,mBAAmB,yBAAyB,eAAe,kBAAkB,SAAS,gBAAgB,OAAO,WAAW,8BAA8B,+BAA+B,6BAA6B,gBAAgB,qCAAqC,yBAAyB,6BAA6B,qCAAqC;AACjvD,aAAa;AACb;AACA;AACA;AACA,KAAK,uBAAuB;AAC5B,KAAK,OAAO,sEAAY,EAAE;AAC1B,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,wBAAwB,OAAO,oDAAK,EAAE;AACtC,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,iBAAiB,OAAO,oDAAK,0BAA0B;AACvD,0BAA0B,OAAO,oDAAK,mCAAmC;AACzE,qBAAqB,OAAO,oDAAK,8BAA8B;AAC/D,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,kBAAkB,OAAO,qDAAM,sBAAsB;AACrD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAS,UAAU,mCAAmC;AAClE;AACA;AACA;AACA,KAAK,OAAO,0DAAW,EAAE;AACzB,KAAK,OAAO,+DAAgB,EAAE;AAC9B,KAAK;AACL;AACA;AACA,0BAA0B,OAAO,oDAAK,EAAE;AACxC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB,0BAA0B,6DAAY,EAAE,6DAAU,EAAE,oEAAY;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,kBAAkB,aAAa,uCAAuC,2BAA2B,4DAA4D,iBAAiB,oBAAoB,UAAU,kBAAkB,oBAAoB,eAAe,wCAAwC,iBAAiB,4CAA4C,gBAAgB,2CAA2C,oBAAoB,kDAAkD,mBAAmB,eAAe,aAAa,kBAAkB,mBAAmB,qBAAqB,kBAAkB,qBAAqB,WAAW,YAAY,yBAAyB,mBAAmB,gCAAgC,6CAA6C,oBAAoB,WAAW,qBAAqB,yBAAyB,YAAY,8CAA8C,kBAAkB,kBAAkB,kBAAkB,YAAY,WAAW,SAAS,WAAW,sBAAsB,mBAAmB,+BAA+B,uBAAuB,yBAAyB,+CAA+C,qCAAqC,kCAAkC,0BAA0B,wCAAwC,yBAAyB,oDAAoD,6CAA6C,wCAAwC,sBAAsB,WAAW,mEAAmE,YAAY,oDAAoD,sCAAsC,oCAAoC,WAAW,YAAY,iCAAiC,YAAY,WAAW,uBAAuB,kBAAkB,QAAQ,SAAS,eAAe,UAAU,cAAc,yCAAyC,kCAAkC,UAAU,uBAAuB,qDAAqD,eAAe,wCAAwC,iBAAiB,4CAA4C,gBAAgB,2CAA2C,iBAAiB,+CAA+C,wCAAwC,WAAW,sCAAsC,sBAAsB,yCAAyC,sCAAsC,4GAA4G,4CAA4C,yCAAyC,yBAAyB,4CAA4C,sCAAsC,sBAAsB,WAAW,wCAAwC,mBAAmB,cAAc,iCAAiC,4BAA4B,cAAc,iCAAiC;AAC/8F,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,UAAU,OAAO,oDAAK,EAAE;AACxB,qBAAqB,OAAO,oDAAK,EAAE;AACnC,YAAY,OAAO,oDAAK,EAAE;AAC1B,eAAe,OAAO,oDAAK,EAAE;AAC7B,WAAW,OAAO,oDAAK,oBAAoB;AAC3C,iBAAiB,OAAO,oDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,qBAAqB,OAAO,qDAAM,4BAA4B;AAC9D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,0BAA0B,6DAAY,EAAE,oEAAY;AACpD,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAW;AACvB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAY;AACtC;AACA;AACA;AACA,oCAAoC,6CAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA,+CAA+C,sBAAsB,yBAAyB,kBAAkB,uCAAuC,aAAa,qBAAqB,eAAe,wBAAwB,kBAAkB,QAAQ,UAAU,eAAe,eAAe,iBAAiB,mDAAmD,UAAU,mBAAmB,WAAW,YAAY,yBAAyB,kBAAkB,oCAAoC,4BAA4B,6BAA6B,8BAA8B,oCAAoC,mDAAmD,2CAA2C,YAAY,gEAAgE,sCAAsC,mDAAmD,2CAA2C,UAAU,uCAAuC,kDAAkD,0CAA0C,SAAS,qCAAqC,mDAAmD,2CAA2C,WAAW;AACtrC,aAAa;AACb;AACA;AACA;AACA;AACA,mBAAmB,OAAO,wDAAS,SAAS,0DAAW,IAAI;AAC3D,oBAAoB,OAAO,2DAAY,sCAAsC;AAC7E,cAAc,OAAO,qDAAM,uBAAuB;AAClD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uDAAS;AACjD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB,oFAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,oFAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,2CAA2C,iEAAS;AACpD,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,mEAAc;AAC5C,uBAAuB,EAAE;AACzB,qCAAqC,kEAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC,iEAAS;AAC/C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,6CAA6C,iEAAS;AACtD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2CAA2C,iEAAS;AACpD,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,2DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iCAAiC,8DAAM;AACvC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,qEAAqE,iEAAS;AAC9E;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,+DAAgB,EAAE;AAC9B,KAAK,OAAO,sEAAY;AACxB;AACA;AACA,kBAAkB,OAAO,qDAAM,kCAAkC;AACjE,YAAY,OAAO,oDAAK,4BAA4B;AACpD,iBAAiB,OAAO,oDAAK,iCAAiC;AAC9D,eAAe,OAAO,oDAAK,kCAAkC;AAC7D,iBAAiB,OAAO,oDAAK,iCAAiC;AAC9D,6BAA6B,OAAO,oDAAK,sCAAsC;AAC/E,qBAAqB,OAAO,oDAAK,qCAAqC;AACtE,aAAa,OAAO,oDAAK,6BAA6B;AACtD,eAAe,OAAO,oDAAK,+BAA+B;AAC1D,sBAAsB,OAAO,oDAAK,sCAAsC;AACxE,oBAAoB,OAAO,2DAAY,yBAAyB;AAChE,mBAAmB,OAAO,2DAAY,yBAAyB,GAAG,OAAO,2DAAY,yBAAyB;AAC9G;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,kEAAa;AACjC,oBAAoB,oEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAY;AACvC;AACA;AACA;AACA,2BAA2B,2DAAY;AACvC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,oFAAqB;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iDAAiD,6DAAM,sBAAsB,gEAAS;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,6BAA6B,SAAS;AACtC,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,YAAY,eAAe,eAAe,cAAc,iBAAiB,iBAAiB,mBAAmB,gBAAgB,aAAa,mBAAmB,yBAAyB,kBAAkB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,+CAA+C,eAAe,YAAY,qBAAqB,cAAc,yBAAyB,YAAY,8BAA8B,+CAA+C,4CAA4C,oBAAoB,UAAU,WAAW,YAAY,cAAc,eAAe,iBAAiB,eAAe,gBAAgB,oCAAoC,kBAAkB;AAChwB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,iBAAiB,OAAO,oDAAK,EAAE;AAC/B,aAAa,OAAO,oDAAK,EAAE;AAC3B,eAAe,OAAO,qDAAM,EAAE;AAC9B,eAAe,OAAO,qDAAM,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C;AACA;AACA;AACA,iCAAiC,2DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,oFAAqB;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,oFAAqB;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,mKAAmK;AACnK,iCAAiC,sEAAuB;AACxD;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,kBAAkB,gBAAgB,mBAAmB,aAAa,8BAA8B,YAAY,aAAa,eAAe,uBAAuB,gBAAgB,kBAAkB,mBAAmB,eAAe,aAAa,yBAAyB,qBAAqB,wBAAwB;AACtV,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,kBAAkB,OAAO,qDAAM,2BAA2B;AAC1D,qBAAqB,OAAO,qDAAM,yBAAyB;AAC3D,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,wBAAwB,OAAO,oDAAK,iCAAiC;AACrE,qBAAqB,OAAO,oDAAK,8BAA8B;AAC/D,iBAAiB,OAAO,oDAAK,8BAA8B;AAC3D,kBAAkB,OAAO,oDAAK,8BAA8B;AAC5D,sBAAsB,OAAO,oDAAK,+BAA+B;AACjE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,0BAA0B,6DAAY,EAAE,oEAAY;AACpD,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,kBAAkB,cAAc,oBAAoB,cAAc,gCAAgC,GAAG,oBAAoB,iBAAiB,YAAY,WAAW,qCAAqC,YAAY,2CAA2C,kBAAkB,MAAM,OAAO,0BAA0B,iBAAiB,wCAAwC,kBAAkB,SAAS,OAAO,kBAAkB,QAAQ,MAAM,uBAAuB,iBAAiB,2BAA2B,sBAAsB,2BAA2B,sBAAsB,2BAA2B,iBAAiB,2BAA2B,sBAAsB,2BAA2B,iBAAiB;AAClvB,aAAa;AACb;AACA;AACA,kBAAkB,OAAO,oDAAK,uBAAuB;AACrD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,oBAAoB,OAAO,wDAAS,2BAA2B;AAC/D,eAAe,OAAO,oDAAK,yBAAyB;AACpD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,kBAAkB,yBAAyB,+CAA+C,sBAAsB,sDAAsD,mBAAmB,yBAAyB,mBAAmB,eAAe,0BAA0B,6DAA6D,qBAAqB,0BAA0B,4DAA4D,0BAA0B,uDAAuD,aAAa,2DAA2D,cAAc,iBAAiB,aAAa,iBAAiB,eAAe,6DAA6D,qBAAqB,UAAU,cAAc,kBAAkB,uFAAuF,UAAU,wDAAwD,yBAAyB,WAAW,0KAA0K,WAAW,mIAAmI,cAAc,iBAAiB,iBAAiB,aAAa,mBAAmB,6BAA6B,eAAe,wBAAwB,UAAU,kBAAkB,wBAAwB,eAAe,aAAa,sBAAsB,uBAAuB,kBAAkB,mBAAmB,eAAe,gBAAgB,UAAU,kBAAkB,2DAA2D,sBAAsB,yBAAyB,qCAAqC,yBAAyB,yBAAyB,gBAAgB,WAAW,wBAAwB,iBAAiB,gBAAgB,eAAe,eAAe,WAAW,6BAA6B,iBAAiB,UAAU,cAAc,yBAAyB,6BAA6B,eAAe,sDAAsD,WAAW,4DAA4D,yBAAyB,yBAAyB,+BAA+B,eAAe,aAAa,UAAU,mDAAmD,WAAW,yBAAyB,0BAA0B,WAAW,gCAAgC,eAAe,6CAA6C,6BAA6B,WAAW,mDAAmD,sBAAsB,kBAAkB,iFAAiF,WAAW,uDAAuD,YAAY,yBAAyB,aAAa,uBAAuB,mBAAmB,kBAAkB,eAAe,gBAAgB,eAAe,gBAAgB,WAAW,YAAY,yBAAyB,qBAAqB,cAAc,oBAAoB,cAAc,2CAA2C,yBAAyB,qEAAqE,yBAAyB,yBAAyB,0EAA0E,qBAAqB,yBAAyB,0CAA0C,yBAAyB,+CAA+C,cAAc,yCAAyC,WAAW,4CAA4C,yBAAyB,yEAAyE,YAAY,wBAAwB,mBAAmB,iDAAiD,6BAA6B,mBAAmB,8BAA8B,oBAAoB,UAAU,aAAa,kBAAkB,mBAAmB,uBAAuB,eAAe,gBAAgB,kBAAkB,4CAA4C,eAAe,6BAA6B,WAAW,qBAAqB,gBAAgB,iBAAiB,eAAe,eAAe,qBAAqB,UAAU,6CAA6C,6BAA6B,YAAY,oCAAoC,YAAY,qBAAqB,yBAAyB,6BAA6B,cAAc,cAAc,YAAY,oCAAoC,YAAY,mCAAmC,YAAY,qBAAqB,yBAAyB,mCAAmC,YAAY,wHAAwH,4CAA4C;AACz2J,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,gBAAgB,OAAO,8DAAe,gCAAgC;AACtE,mBAAmB,OAAO,qDAAM,4BAA4B;AAC5D,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,gBAAgB,OAAO,oDAAK,uBAAuB;AACnD,wBAAwB,OAAO,oDAAK,iCAAiC;AACrE,kBAAkB,OAAO,oDAAK,2BAA2B;AACzD,aAAa,OAAO,oDAAK,sBAAsB;AAC/C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,olBAAolB,OAAO,wEAAwE,MAAM;AACzqB;AACA;AACA,mEAAmE,iEAAU;AAC7E,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,kBAAkB,yBAAyB,+CAA+C,sBAAsB,sDAAsD,mBAAmB,yBAAyB,mBAAmB,eAAe,0BAA0B,6DAA6D,qBAAqB,0BAA0B,4DAA4D,0BAA0B,uDAAuD,aAAa,2DAA2D,cAAc,iBAAiB,aAAa,iBAAiB,eAAe,6DAA6D,qBAAqB,UAAU,cAAc,kBAAkB,uFAAuF,UAAU,wDAAwD,yBAAyB,WAAW,0KAA0K,WAAW,mIAAmI,cAAc,iBAAiB,iBAAiB,aAAa,mBAAmB,6BAA6B,eAAe,wBAAwB,UAAU,kBAAkB,wBAAwB,eAAe,aAAa,sBAAsB,uBAAuB,kBAAkB,mBAAmB,eAAe,gBAAgB,UAAU,kBAAkB,2DAA2D,sBAAsB,yBAAyB,qCAAqC,yBAAyB,yBAAyB,gBAAgB,WAAW,wBAAwB,iBAAiB,gBAAgB,eAAe,eAAe,WAAW,6BAA6B,iBAAiB,UAAU,cAAc,yBAAyB,6BAA6B,eAAe,sDAAsD,WAAW,4DAA4D,yBAAyB,yBAAyB,+BAA+B,eAAe,aAAa,UAAU,mDAAmD,WAAW,yBAAyB,0BAA0B,WAAW,gCAAgC,eAAe,6CAA6C,6BAA6B,WAAW,mDAAmD,sBAAsB,kBAAkB,iFAAiF,WAAW,uDAAuD,YAAY,yBAAyB,aAAa,uBAAuB,mBAAmB,kBAAkB,eAAe,gBAAgB,eAAe,gBAAgB,WAAW,YAAY,yBAAyB,qBAAqB,cAAc,oBAAoB,cAAc,2CAA2C,yBAAyB,qEAAqE,yBAAyB,yBAAyB,0EAA0E,qBAAqB,yBAAyB,0CAA0C,yBAAyB,+CAA+C,cAAc,yCAAyC,WAAW,4CAA4C,yBAAyB,yEAAyE,YAAY,wBAAwB,mBAAmB,iDAAiD,6BAA6B,mBAAmB,8BAA8B,oBAAoB,UAAU,aAAa,kBAAkB,mBAAmB,uBAAuB,eAAe,gBAAgB,kBAAkB,4CAA4C,eAAe,6BAA6B,WAAW,qBAAqB,gBAAgB,iBAAiB,eAAe,eAAe,qBAAqB,UAAU,6CAA6C,6BAA6B,YAAY,oCAAoC,YAAY,qBAAqB,yBAAyB,6BAA6B,cAAc,cAAc,YAAY,oCAAoC,YAAY,mCAAmC,YAAY,qBAAqB,yBAAyB,mCAAmC,YAAY,wHAAwH,4CAA4C;AACz2J,aAAa;AACb;AACA;AACA;AACA,KAAK,6CAA6C,OAAO,qDAAM,SAAS,iEAAU;AAClF,gCAAgC;AAChC;AACA,sDAAsD;AACtD;AACA;AACA,YAAY,OAAO,oDAAK,qBAAqB;AAC7C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,qjBAAqjB,OAAO,wEAAwE,MAAM;AAC1oB;AACA;AACA,mEAAmE,iEAAU;AAC7E,oCAAoC;AACpC;AACA;AACA;AACA;AACA,gCAAgC,cAAc,kBAAkB,yBAAyB,+CAA+C,sBAAsB,sDAAsD,mBAAmB,yBAAyB,mBAAmB,eAAe,0BAA0B,6DAA6D,qBAAqB,0BAA0B,4DAA4D,0BAA0B,uDAAuD,aAAa,2DAA2D,cAAc,iBAAiB,aAAa,iBAAiB,eAAe,6DAA6D,qBAAqB,UAAU,cAAc,kBAAkB,uFAAuF,UAAU,wDAAwD,yBAAyB,WAAW,0KAA0K,WAAW,mIAAmI,cAAc,iBAAiB,iBAAiB,aAAa,mBAAmB,6BAA6B,eAAe,wBAAwB,UAAU,kBAAkB,wBAAwB,eAAe,aAAa,sBAAsB,uBAAuB,kBAAkB,mBAAmB,eAAe,gBAAgB,UAAU,kBAAkB,2DAA2D,sBAAsB,yBAAyB,qCAAqC,yBAAyB,yBAAyB,gBAAgB,WAAW,wBAAwB,iBAAiB,gBAAgB,eAAe,eAAe,WAAW,6BAA6B,iBAAiB,UAAU,cAAc,yBAAyB,6BAA6B,eAAe,sDAAsD,WAAW,4DAA4D,yBAAyB,yBAAyB,+BAA+B,eAAe,aAAa,UAAU,mDAAmD,WAAW,yBAAyB,0BAA0B,WAAW,gCAAgC,eAAe,6CAA6C,6BAA6B,WAAW,mDAAmD,sBAAsB,kBAAkB,iFAAiF,WAAW,uDAAuD,YAAY,yBAAyB,aAAa,uBAAuB,mBAAmB,kBAAkB,eAAe,gBAAgB,eAAe,gBAAgB,WAAW,YAAY,yBAAyB,qBAAqB,cAAc,oBAAoB,cAAc,2CAA2C,yBAAyB,qEAAqE,yBAAyB,yBAAyB,0EAA0E,qBAAqB,yBAAyB,0CAA0C,yBAAyB,+CAA+C,cAAc,yCAAyC,WAAW,4CAA4C,yBAAyB,yEAAyE,YAAY,wBAAwB,mBAAmB,iDAAiD,6BAA6B,mBAAmB,8BAA8B,oBAAoB,UAAU,aAAa,kBAAkB,mBAAmB,uBAAuB,eAAe,gBAAgB,kBAAkB,4CAA4C,eAAe,6BAA6B,WAAW,qBAAqB,gBAAgB,iBAAiB,eAAe,eAAe,qBAAqB,UAAU,6CAA6C,6BAA6B,YAAY,oCAAoC,YAAY,qBAAqB,yBAAyB,6BAA6B,cAAc,cAAc,YAAY,oCAAoC,YAAY,mCAAmC,YAAY,qBAAqB,yBAAyB,mCAAmC,YAAY,wHAAwH,4CAA4C;AACz2J,aAAa;AACb;AACA;AACA;AACA,KAAK,6CAA6C,OAAO,qDAAM,SAAS,iEAAU;AAClF,gCAAgC;AAChC;AACA,sDAAsD;AACtD;AACA;AACA,WAAW,OAAO,oDAAK,oBAAoB;AAC3C,kBAAkB,OAAO,oDAAK,2BAA2B;AACzD,oBAAoB,OAAO,2DAAY,yBAAyB;AAChE,oBAAoB,OAAO,2DAAY,yBAAyB;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,oEAAY;AAChC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,oFAAqB;AACxD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,oFAAqB;AACrD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2FAA2F,aAAa;AACxG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,+CAA+C,aAAa;AAC5D;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD,oCAAoC,kBAAkB,sBAAsB,gBAAgB,WAAW,YAAY,kBAAkB,kBAAkB,MAAM,OAAO,WAAW,YAAY,YAAY,qBAAqB,kBAAkB,eAAe,WAAW,QAAQ,SAAS,uCAAuC,+BAA+B,WAAW,uBAAuB,YAAY,iDAAiD,eAAe,kBAAkB,WAAW,YAAY,UAAU,yCAAyC,SAAS,qDAAqD,QAAQ,SAAS,uCAAuC,+BAA+B;AAC9rB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,sEAAY,EAAE;AAC1B,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,eAAe,OAAO,oDAAK,wBAAwB;AACnD,eAAe,OAAO,oDAAK,wBAAwB;AACnD,6BAA6B,OAAO,oDAAK,oCAAoC;AAC7E,uBAAuB,OAAO,oDAAK,gCAAgC;AACnE,0BAA0B,OAAO,oDAAK,mCAAmC;AACzE,uBAAuB,OAAO,oDAAK,gCAAgC;AACnE,yBAAyB,OAAO,oDAAK,kCAAkC;AACvE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,0BAA0B,6DAAY;AACtC,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,gCAAgC,+EAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO,oDAAK,8BAA8B;AAC/D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,2HAA2H,OAAO;AAClI,iCAAiC,sEAAuB;AACxD,gCAAgC,cAAc,8CAA8C,sCAAsC,oDAAoD,iBAAiB,kCAAkC,kBAAkB,uBAAuB,gBAAgB,eAAe,iBAAiB;AAClU,aAAa;AACb;AACA;AACA,aAAa,OAAO,oDAAK,sBAAsB;AAC/C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA;AACA,qCAAqC,2DAAY;AACjD;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC,qBAAqB,EAAE,0CAA0C,iEAAS;AAC1E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,EAAE,0CAA0C,iEAAS;AAC1E,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,oGAAoG,kDAAkD,+tBAA+tB,iBAAiB;AACt4B,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,kBAAkB,aAAa,+CAA+C,iBAAiB,YAAY,gBAAgB,6BAA6B,eAAe,iBAAiB,oBAAoB,wBAAwB,eAAe,kBAAkB,aAAa,eAAe,mBAAmB,mCAAmC,gBAAgB,uBAAuB,eAAe,eAAe,oDAAoD,cAAc,kBAAkB,qDAAqD,YAAY,aAAa,mBAAmB,6CAA6C,cAAc,6CAA6C,6CAA6C,qBAAqB,2DAA2D,UAAU,uCAAuC,UAAU,WAAW,YAAY,iBAAiB,+CAA+C,eAAe,kIAAkI,kBAAkB,4CAA4C,iJAAiJ,gBAAgB,+GAA+G,kBAAkB,4CAA4C,gFAAgF,kBAAkB,kBAAkB,oCAAoC,cAAc,cAAc;AACvsD,aAAa;AACb;AACA;AACA;AACA,KAAK,wCAAwC,OAAO,qDAAM,8BAA8B,GAAG;AAC3F,KAAK,+CAA+C,OAAO,uDAAQ,EAAE,GAAG;AACxE,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAU;AACtB;AACA;AACA,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,yBAAyB,OAAO,qDAAM,EAAE;AACxC,wBAAwB,OAAO,wDAAS,wBAAwB;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,0DAAW;AACvB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA,oDAAoD,8DAAM;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kBAAkB,2DAAG;AACrB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,oDAAoD,8DAAM;AAC1D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,mBAAmB,2DAAG;AACtB,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA,mCAAmC,2DAAY;AAC/C;AACA;AACA;AACA,sCAAsC,mDAAK;AAC3C,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,mDAAK;AAC5B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,4CAA4C;AAChE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,wEAAc;AACjD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2CAA2C,iEAAS;AACpD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT,kCAAkC,iEAAS,QAAQ,iEAAS;AAC5D,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qDAAqD,EAAE;AACvD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,6EAA0B;AACzD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,iEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qCAAqC,iEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAI;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,mDAAK;AACxC,yCAAyC,iEAAS;AAClD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,mDAAK;AACb,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uCAAuC,EAAE;AACzC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,uCAAuC,iEAAU,gBAAgB,+DAAQ;AACzE,wBAAwB,iEAAU,gBAAgB,kEAAW;AAC7D,mBAAmB,EAAE;AACrB,sCAAsC,4DAAK,gBAAgB,4DAAK;AAChE;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,eAAe,iEAAU,EAAE,+DAAQ,EAAE,2DAAI,EAAE,0DAAG,EAAE,4DAAK,EAAE,iEAAU,EAAE,kEAAW,EAAE,4DAAK,EAAE,4DAAK,EAAE,0DAAG;AACjG;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC,iEAAU,gBAAgB,+DAAQ;AACzE,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,wBAAwB,2DAAI,gBAAgB,0DAAG;AAC/C;AACA,wBAAwB,2DAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAK;AAClC;AACA;AACA;AACA,6BAA6B,4DAAK;AAClC;AACA;AACA;AACA,iDAAiD,4DAAK;AACtD;AACA;AACA;AACA,6BAA6B,0DAAG;AAChC;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4CAA4C,4DAAI;AAChD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,sfAAsf,gBAAgB,gyBAAgyB,SAAS;AAC/yC,iCAAiC,sEAAuB;AACxD;AACA,qBAAqB,iEAAiE;AACtF,qBAAqB,UAAU,+EAAkB,sCAAsC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,YAAY,UAAU,oCAAoC,gBAAgB,8BAA8B,WAAW,wBAAwB,aAAa,yBAAyB,eAAe,sDAAsD,mBAAmB,uBAAuB,SAAS,gBAAgB,uBAAuB,mBAAmB,oBAAoB,uCAAuC,kBAAkB,sBAAsB,eAAe,kDAAkD,eAAe,0BAA0B,UAAU,mBAAmB,eAAe,cAAc,2BAA2B,iBAAiB,eAAe,iBAAiB,yBAAyB,2BAA2B,4BAA4B,UAAU,gBAAgB,yBAAyB,iBAAiB,gBAAgB,UAAU,qBAAqB,kBAAkB,uBAAuB,2BAA2B,eAAe,SAAS,gCAAgC,cAAc,WAAW,UAAU,6BAA6B,gBAAgB,0BAA0B,kBAAkB,WAAW,SAAS,eAAe,kCAAkC,eAAe,2CAA2C,cAAc,gBAAgB,gCAAgC,kBAAkB,qEAAqE,cAAc,6CAA6C,oBAAoB,iCAAiC;AACniD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,qDAAM,EAAE;AACpB,KAAK,6BAA6B,OAAO,wDAAS,uBAAuB,GAAG;AAC5E,KAAK,OAAO,iFAAoB,gBAAgB,OAAO,uDAAQ,EAAE,GAAG;AACpE,KAAK,OAAO,yDAAS,gBAAgB,OAAO,mDAAI,EAAE,GAAG,OAAO,uDAAQ,EAAE,GAAG;AACzE,KAAK,OAAO,sDAAM,gBAAgB,OAAO,uDAAQ,EAAE,GAAG;AACtD,KAAK,OAAO,kEAAkB,gBAAgB,OAAO,uDAAQ,EAAE;AAC/D;AACA;AACA,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,kBAAkB,OAAO,oDAAK,0BAA0B;AACxD,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,cAAc,OAAO,oDAAK,sBAAsB;AAChD,kBAAkB,OAAO,oDAAK,2BAA2B;AACzD,yBAAyB,OAAO,oDAAK,kCAAkC;AACvE,oBAAoB,OAAO,qDAAM,EAAE;AACnC,qBAAqB,OAAO,qDAAM,qBAAqB;AACvD,qBAAqB,OAAO,qDAAM,qBAAqB;AACvD,qBAAqB,OAAO,qDAAM,0BAA0B;AAC5D,mBAAmB,OAAO,qDAAM,4BAA4B;AAC5D,uBAAuB,OAAO,qDAAM,EAAE;AACtC,aAAa,OAAO,wDAAS,oBAAoB;AACjD,iBAAiB,OAAO,wDAAS,wBAAwB;AACzD,eAAe,OAAO,wDAAS,sBAAsB;AACrD,mBAAmB,OAAO,wDAAS,0BAA0B;AAC7D,kBAAkB,OAAO,wDAAS,SAAS,wEAAmB,IAAI;AAClE,eAAe,OAAO,8DAAe,mCAAmC,oBAAoB,IAAI;AAChG,cAAc,OAAO,8DAAe,qCAAqC;AACzE,kCAAkC,OAAO,2DAAY,2CAA2C;AAChG,mCAAmC,OAAO,wDAAS,yCAAyC;AAC5F,sBAAsB,OAAO,oDAAK,+BAA+B;AACjE,mBAAmB,OAAO,oDAAK,EAAE;AACjC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,8EAAiB;AACrC,oBAAoB,2EAAgB;AACpC,oBAAoB,kEAAa;AACjC,oBAAoB,6DAAU;AAC9B,oBAAoB,oEAAY;AAChC,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,6CAA6C,mBAAmB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2DAAY;AACjD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,4DAAK,sBAAsB,4DAAK;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,sEAAuB;AACxD,sCAAsC,UAAU,wBAAwB,eAAe,iBAAiB,oBAAoB,wBAAwB,eAAe,kBAAkB,aAAa,eAAe,mBAAmB,gEAAgE,cAAc,6CAA6C,gEAAgE,qBAAqB,+BAA+B,gBAAgB,uBAAuB,eAAe,eAAe,0GAA0G,kBAAkB,4CAA4C;AAChsB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,aAAa,OAAO,oDAAK,EAAE;AAC3B,yBAAyB,OAAO,qDAAM,EAAE;AACxC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA;AACA,0BAA0B,2DAAY;AACtC;AACA;AACA;AACA,0BAA0B,2DAAY;AACtC;AACA;AACA;AACA;AACA,qCAAqC,+BAA+B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,uCAAuC;AACzD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAU;AAC1C;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,6EAA0B;AACzD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,+QAA+Q,MAAM;AACrR,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA,iBAAiB;AACjB,8DAA8D,QAAQ,SAAS,uBAAuB,sBAAsB,uCAAuC,aAAa,gBAAgB,kBAAkB,iBAAiB,WAAW,kBAAkB,+CAA+C,mBAAmB,8CAA8C,kBAAkB,6CAA6C,uBAAuB,iCAAiC;AACve,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,yDAAU;AACtB;AACA;AACA,gBAAgB,OAAO,wDAAS,SAAS,0DAAW,IAAI;AACxD,aAAa,OAAO,wDAAS,oBAAoB;AACjD,aAAa,OAAO,oDAAK,EAAE;AAC3B,sBAAsB,OAAO,qDAAM,EAAE;AACrC,cAAc,OAAO,qDAAM,EAAE;AAC7B,cAAc,OAAO,qDAAM,EAAE;AAC7B,iBAAiB,OAAO,2DAAY,0CAA0C;AAC9E,iBAAiB,OAAO,8DAAe,yCAAyC,oBAAoB,IAAI;AACxG,iBAAiB,OAAO,oDAAK,oBAAoB;AACjD,sBAAsB,OAAO,oDAAK,+BAA+B;AACjE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,iEAAiB;AAC9B,iBAAiB,iEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kDAAY;AACjD;AACA;AACA;AACA,wCAAwC,6CAAO;AAC/C;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAK;AACrC,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,mDAAK;AAC5B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS;AACxC,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,mFAAoB;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA,eAAe,mDAAK,CAAC,uDAAS,2BAA2B,uDAAS;AAClE,kBAAkB,8DAAM;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,4CAA4C,EAAE;AAC9C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,6CAAO;AAC5C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,sEAAsE,oEAAY;AAClF;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,oEAAoE,6DAAK;AACzE,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,mDAAK,kEAAkE,8DAAM;AAC5F,oBAAoB;AACpB;AACA;AACA,gDAAgD,8DAAM;AACtD,wBAAwB;AACxB;AACA;AACA,YAAY,gDAAE;AACd;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,6DAAM;AAC9B;AACA;AACA;AACA;AACA,2CAA2C,6DAAM,iBAAiB,+DAAQ;AAC1E;AACA;AACA;AACA;AACA,kDAAkD,4DAAK;AACvD;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,2CAA2C,+DAAQ,gBAAgB,iEAAU;AAC7E,8CAA8C,0DAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oEAAoE,4DAAI;AACxE,mBAAmB,EAAE;AACrB,qEAAqE,2DAAG;AACxE,oBAAoB;AACpB;AACA;AACA;AACA;AACA,QAAQ,6DAAK;AACb;AACA,eAAe,mDAAK;AACpB;AACA;AACA;AACA,QAAQ,iEAAS;AACjB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,4DAAI;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mEAAc;AAC7C;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,kEAAa;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,+DAAgB,EAAE;AAC9B,KAAK,OAAO,qDAAM,EAAE;AACpB,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,gEAAc,gBAAgB,OAAO,uDAAQ,EAAE,GAAG;AAC9D,KAAK,OAAO,iFAAoB,gBAAgB,OAAO,uDAAQ,EAAE,GAAG,OAAO,mDAAI,EAAE,GAAG;AACpF,KAAK,OAAO,uFAAe,gBAAgB,OAAO,uDAAQ,EAAE,GAAG,OAAO,mDAAI,EAAE,GAAG;AAC/E,KAAK,gCAAgC,OAAO,uDAAQ,EAAE,GAAG,OAAO,qDAAM,SAAS,yDAAQ,IAAI,GAAG;AAC9F,KAAK,OAAO,kEAAa;AACzB;AACA;AACA,oBAAoB,OAAO,oDAAK,6BAA6B;AAC7D,eAAe,OAAO,oDAAK,kCAAkC;AAC7D,gBAAgB,OAAO,oDAAK,qCAAqC;AACjE,4BAA4B,OAAO,oDAAK,qCAAqC;AAC7E;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,0BAA0B,6DAAY,EAAE,kEAAa,EAAE,6DAAU;AACjE,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAY;AACxC,kCAAkC,kDAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4DAA4D,iEAAS;AACrE,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,iFAAgB;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,sEAAuB;AACxD,gCAAgC,qBAAqB,kBAAkB,gBAAgB,kBAAkB,qBAAqB,iBAAiB,aAAa,WAAW,8BAA8B,gCAAgC,iBAAiB,eAAe,mBAAmB,gBAAgB,gBAAgB,gBAAgB,yBAAyB,gBAAgB,iBAAiB,yBAAyB,gBAAgB,iBAAiB,yBAAyB,qBAAqB,mBAAmB,kBAAkB,oBAAoB,eAAe,cAAc,YAAY,UAAU,SAAS,WAAW,eAAe,YAAY,gBAAgB,cAAc,oCAAoC,UAAU,gBAAgB,wBAAwB,uEAAuE,cAAc,gBAAgB,qCAAqC,mBAAmB,oCAAoC,aAAa,4BAA4B,kBAAkB,gCAAgC,oDAAoD,kBAAkB,mBAAmB,sCAAsC,qBAAqB,cAAc,+CAA+C,oBAAoB,wCAAwC,WAAW,qFAAqF,qBAAqB,0CAA0C,qBAAqB,sCAAsC,cAAc,qBAAqB,6CAA6C,cAAc,iKAAiK,kBAAkB,WAAW,+CAA+C,WAAW,oDAAoD,kBAAkB,wBAAwB,YAAY,yBAAyB,oDAAoD,eAAe,wBAAwB,aAAa,wEAAwE,YAAY,8FAA8F,kBAAkB;AACjwE,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAS,EAAE;AACvB,KAAK,OAAO,4DAAO;AACnB;AACA;AACA,gBAAgB,OAAO,2DAAY,SAAS,+EAAkB,IAAI;AAClE,sBAAsB,OAAO,8DAAe,SAAS,sFAAyB,IAAI;AAClF,gBAAgB,OAAO,wDAAS,SAAS,mFAAyB,IAAI;AACtE,iBAAiB,OAAO,2DAAY,SAAS,8EAAmB,IAAI;AACpE,wBAAwB,OAAO,0DAAW,6BAA6B;AACvE,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,aAAa,OAAO,oDAAK,sBAAsB;AAC/C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAAO;AACvC;AACA;AACA;AACA,0CAA0C,kDAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB,mDAAK;AAC5B;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,uDAAuD,oEAAY,OAAO,6DAAK;AAC/E;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,cAAc,iBAAiB,oBAAoB,cAAc,gBAAgB,eAAe,iBAAiB,yBAAyB,kBAAkB,oBAAoB,gCAAgC,gBAAgB,kBAAkB,WAAW,yBAAyB,MAAM,eAAe,kBAAkB,yBAAyB,MAAM,gBAAgB,mCAAmC,aAAa,eAAe,+CAA+C,kBAAkB,wCAAwC,eAAe,iBAAiB,oBAAoB,2DAA2D,kBAAkB,oBAAoB;AACzsB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,cAAc,OAAO,8DAAe,8BAA8B;AAClE,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,YAAY,OAAO,oDAAK,EAAE;AAC1B,gBAAgB,OAAO,2DAAY,mDAAmD,GAAG,OAAO,2DAAY,wCAAwC;AACpJ;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,sEAAa;AACjC,oBAAoB,yEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,WAAW,cAAc,aAAa,uBAAuB,kBAAkB,sBAAsB,iBAAiB,kBAAkB,uCAAuC,aAAa,cAAc,eAAe,iBAAiB,6BAA6B,eAAe,8BAA8B,qBAAqB,qBAAqB,qBAAqB,uCAAuC,cAAc,sBAAsB,qBAAqB,wCAAwC,cAAc,wBAAwB,qBAAqB,0CAA0C,cAAc,wBAAwB,qBAAqB,0CAA0C,cAAc,kBAAkB,kBAAkB,yBAAyB,MAAM,aAAa,cAAc,2WAA2W,eAAe,iBAAiB,kBAAkB,mBAAmB,6BAA6B,mBAAmB,yBAAyB,6BAA6B,oBAAoB,wBAAwB,kBAAkB,SAAS,WAAW,eAAe,6BAA6B,YAAY,UAAU,UAAU,aAAa,mBAAmB,gCAAgC,eAAe,wCAAwC,uEAAuE,4CAA4C,kBAAkB;AACjwD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,eAAe,OAAO,oDAAK,wBAAwB;AACnD,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,wBAAwB,OAAO,oDAAK,EAAE;AACtC,kBAAkB,OAAO,qDAAM,oBAAoB;AACnD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,oEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,oFAAqB;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,4YAA4Y,aAAa;AACzZ,iCAAiC,sEAAuB;AACxD,yCAAyC,eAAe,sBAAsB,uCAAuC,gDAAgD,iBAAiB,kCAAkC,eAAe,gBAAgB,iBAAiB,YAAY,+CAA+C,cAAc,gCAAgC,SAAS,wCAAwC,eAAe,uCAAuC,aAAa,mBAAmB;AACxf,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,mBAAmB,OAAO,qDAAM,4BAA4B;AAC5D,mBAAmB,OAAO,oDAAK,4BAA4B;AAC3D,wBAAwB,OAAO,oDAAK,iCAAiC;AACrE,oBAAoB,OAAO,oDAAK,6BAA6B;AAC7D,qBAAqB,OAAO,oDAAK,8BAA8B;AAC/D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,oFAAoB;AACxC,oBAAoB,8EAAiB;AACrC,oBAAoB,wEAAc;AAClC,oBAAoB,mEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sBAAsB,mFAAoB;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB,4DAAK;AAC7B;AACA;AACA,wBAAwB,kEAAW;AACnC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wBAAwB,iEAAU;AAClC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,0mBAA0mB,YAAY,qDAAqD,UAAU;AACrrB,iCAAiC,sEAAuB;AACxD;AACA;AACA,iCAAiC,iEAAiB;AAClD,qCAAqC,iEAAU;AAC/C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,qBAAqB,4BAA4B,WAAW,4BAA4B,mBAAmB,cAAc,UAAU,8CAA8C,cAAc,6CAA6C,mBAAmB,sBAAsB,aAAa,kBAAkB,aAAa,eAAe,uBAAuB,iBAAiB,iBAAiB,eAAe,WAAW,YAAY,eAAe,YAAY,kBAAkB,eAAe,UAAU,4BAA4B,eAAe,gEAAgE,4CAA4C,kBAAkB;AAC9rB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,kBAAkB,OAAO,oDAAK,2BAA2B;AACzD,gBAAgB,OAAO,oDAAK,yBAAyB;AACrD,iBAAiB,OAAO,oDAAK,0BAA0B;AACvD,mBAAmB,OAAO,qDAAM,4BAA4B;AAC5D,aAAa,OAAO,2DAAY,SAAS,uEAAe,GAAG,OAAO,yDAAU,EAAE,IAAI;AAClF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,oEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,oFAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,iFAAgB;AACnC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,wDAAS,EAAE;AACvB,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,aAAa,OAAO,0DAAW,6BAA6B;AAC5D,cAAc,OAAO,oDAAK,2BAA2B;AACrD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,aAAa,iEAAiB;AAC9B,iBAAiB,iEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,6DAAa;AAC1B,iBAAiB,iEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,uCAAuC,oEAAY;AACnD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8EAAa;AAC5C;AACA;AACA;AACA,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,oFAAqB;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8EAAa;AAC5C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,oFAAqB;AAClD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,oFAAqB;AACrD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,0GAA0G,aAAa;AACvH;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,oEAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wBAAwB,mDAAO,kBAAkB,mDAAO;AACxD;AACA;AACA,uBAAuB,mDAAO,8BAA8B,mDAAO;AACnE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAO,iBAAiB,mDAAO;AACvD;AACA;AACA,uBAAuB,mDAAO,8BAA8B,mDAAO;AACnE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,mDAAO;AAC/B;AACA,mBAAmB,EAAE;AACrB,wBAAwB,mDAAO;AAC/B,mBAAmB,EAAE;AACrB,6BAA6B,mDAAO;AACpC,mBAAmB,EAAE;AACrB,yDAAyD,mDAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,iHAAiH,OAAO;AACxH,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,cAAc,YAAY,UAAU,6BAA6B,qBAAqB,aAAa,gBAAgB,mBAAmB,aAAa,eAAe,iBAAiB,qBAAqB,WAAW,YAAY,gBAAgB,eAAe,SAAS,UAAU,8BAA8B,sCAAsC,qBAAqB,cAAc,WAAW,mBAAmB,WAAW,eAAe,+EAA+E,eAAe,UAAU,SAAS,kBAAkB,cAAc,eAAe,iBAAiB,YAAY,8BAA8B,gBAAgB,8BAA8B,iBAAiB,2BAA2B,aAAa,mBAAmB,sBAAsB,cAAc,2BAA2B,YAAY,aAAa,qBAAqB,6BAA6B,WAAW,eAAe,WAAW,mBAAmB,2CAA2C,WAAW,gBAAgB,gBAAgB,yCAAyC,WAAW,eAAe,iJAAiJ,cAAc,eAAe,iBAAiB,YAAY,oBAAoB,UAAU,gBAAgB,iDAAiD,cAAc,mDAAmD,gBAAgB,iDAAiD,YAAY,qCAAqC,WAAW,qCAAqC,WAAW,+CAA+C,gBAAgB;AACvtD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAS,EAAE;AACvB,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,mBAAmB,OAAO,wDAAS,0BAA0B;AAC7D,wBAAwB,OAAO,wDAAS,0BAA0B;AAClE,kBAAkB,OAAO,wDAAS,kCAAkC;AACpE,mBAAmB,OAAO,qDAAM,4BAA4B;AAC5D,cAAc,OAAO,oDAAK,uBAAuB;AACjD,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,WAAW,OAAO,oDAAK,oBAAoB;AAC3C,WAAW,OAAO,oDAAK,oBAAoB;AAC3C,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,mBAAmB,OAAO,oDAAK,EAAE;AACjC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,sEAAa;AACjC,oBAAoB,2DAAW;AAC/B,oBAAoB,oEAAY;AAChC,oBAAoB,wEAAc;AAClC,oBAAoB,6DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,gCAAgC,6DAAc;;AAE9C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2DAAY;AACxC;AACA;AACA;AACA,4BAA4B,2DAAY;AACxC;AACA;AACA;AACA;AACA,4BAA4B,2DAAY;AACxC;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,0hDAA0hD,iBAAiB,6EAA6E,iBAAiB,y7CAAy7C,4BAA4B,0IAA0I,QAAQ,wEAAwE,2BAA2B,qEAAqE,oBAAoB,oUAAoU,wBAAwB;AACxwH,iCAAiC,sEAAuB;AACxD,6CAA6C,UAAU,+BAA+B,SAAS,0BAA0B,aAAa,eAAe,aAAa,UAAU,yBAAyB,0BAA0B,mBAAmB,qBAAqB,cAAc,gBAAgB,iEAAiE,SAAS,iCAAiC,gBAAgB,oCAAoC,cAAc,qBAAqB,cAAc,gBAAgB,UAAU,qBAAqB,sBAAsB,SAAS,eAAe,+BAA+B,cAAc,gBAAgB,eAAe,6BAA6B,eAAe,uBAAuB,aAAa,eAAe,cAAc,UAAU,yBAAyB,uBAAuB,eAAe,gCAAgC,cAAc,aAAa,iBAAiB,qCAAqC,gBAAgB,iBAAiB,oCAAoC,gBAAgB,qHAAqH,cAAc,gBAAgB,qBAAqB,yBAAyB,aAAa,mBAAmB,UAAU,sBAAsB,eAAe,SAAS,iCAAiC,kBAAkB,6BAA6B,iBAAiB,wCAAwC,cAAc,mBAAmB,oDAAoD,iBAAiB,mDAAmD,gBAAgB,uHAAuH,wBAAwB,mBAAmB,sSAAsS,4CAA4C,kBAAkB,iHAAiH,aAAa,mBAAmB,0BAA0B,iBAAiB,8BAA8B,gBAAgB;AACr1E,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,uDAAQ,EAAE,GAAG,OAAO,qDAAM,gCAAgC,GAAG;AACzG,KAAK,0BAA0B;AAC/B,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,eAAe,OAAO,oDAAK,wBAAwB;AACnD,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,gBAAgB,OAAO,qDAAM,EAAE;AAC/B,gBAAgB,OAAO,qDAAM,EAAE;AAC/B,gBAAgB,OAAO,qDAAM,EAAE;AAC/B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY,EAAE,oEAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,8BAA8B,oEAAU;AACxC;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,qDAAe;AAC9C,2BAA2B,8EAAa;AACxC;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,qCAAqC,uCAAuC;AAC5E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAa;AACxC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,8TAA8T,aAAa,uHAAuH,qDAAqD,oHAAoH,eAAe,0JAA0J,8CAA8C,kQAAkQ;AACpkC,iCAAiC,sEAAuB;AACxD,oCAAoC,6BAA6B,gCAAgC,eAAe,gBAAgB,WAAW,iBAAiB,cAAc,cAAc,0BAA0B,6BAA6B,qBAAqB,cAAc,kBAAkB,eAAe,gBAAgB,gBAAgB,uBAAuB,yBAAyB,sBAAsB,kBAAkB,cAAc,uBAAuB,kBAAkB,eAAe,iBAAiB,gBAAgB,wDAAwD,4BAA4B,sBAAsB,yBAAyB,wBAAwB,uCAAuC,sBAAsB,gCAAgC,6BAA6B,+BAA+B,aAAa,kBAAkB,8DAA8D,yBAAyB,gBAAgB,kBAAkB,mBAAmB,uDAAuD,iBAAiB,eAAe,sBAAsB,qCAAqC,kBAAkB,uBAAuB,qBAAqB,+BAA+B,yBAAyB,sDAAsD,sBAAsB,wCAAwC,sBAAsB,YAAY,gCAAgC,iBAAiB,oBAAoB,uDAAuD,oBAAoB,gCAAgC,0CAA0C,oBAAoB,mBAAmB,uCAAuC,mBAAmB,uBAAuB;AACjuD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,YAAY,OAAO,oDAAK,qBAAqB;AAC7C,wBAAwB,OAAO,oDAAK,iCAAiC;AACrE,cAAc,OAAO,oDAAK,qBAAqB;AAC/C,kBAAkB,OAAO,qDAAM,EAAE;AACjC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA,0BAA0B,6DAAY,EAAE,kEAAc,EAAE,4EAAoB;AAC5E,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,qCAAqC,oEAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,gBAAgB,OAAO,oDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,mBAAmB,oEAAO;AAC1B,QAAQ,kEAAK,WAAW,kEAAK,EAAE,sCAAsC;AACrE,QAAQ,kEAAK,SAAS,kEAAK,EAAE,qCAAqC;AAClE,QAAQ,uEAAU,oBAAoB,oEAAO;AAC7C;AACA,qBAAqB,oEAAO;AAC5B,QAAQ,kEAAK,WAAW,kEAAK,EAAE,4BAA4B;AAC3D,QAAQ,kEAAK,SAAS,kEAAK,EAAE,8BAA8B;AAC3D,QAAQ,uEAAU,oBAAoB,oEAAO;AAC7C;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS,UAAU,qCAAqC;AACpE;AACA;AACA;AACA,KAAK,OAAO,0DAAW;AACvB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,0CAA0C,wEAAgB;AAC1D;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC,2CAA2C,EAAE;AAC7C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA6B,iEAAS,QAAQ,8DAAM;AACpD,wBAAwB;AACxB;AACA,oDAAoD,4DAAI;AACxD,wBAAwB;AACxB;AACA;AACA,mCAAmC,mEAAc;AACjD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,gDAAgD;AACrE;AACA,gCAAgC,cAAc,8EAA8E,WAAW,6BAA6B,gBAAgB,cAAc,0BAA0B,eAAe,iBAAiB,4BAA4B,yBAAyB,0BAA0B,uBAAuB,8HAA8H,iCAAiC,gFAAgF,6BAA6B,mBAAmB,sEAAsE,cAAc,4FAA4F,gBAAgB;AACj0B,aAAa;AACb;AACA;AACA;AACA,KAAK,6CAA6C,OAAO,uDAAQ,EAAE,GAAG,OAAO,uDAAQ,EAAE,GAAG;AAC1F,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,OAAO,mFAAyB,EAAE;AACvC,KAAK,OAAO,+DAAgB;AAC5B;AACA;AACA,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,aAAa,OAAO,oDAAK,sBAAsB;AAC/C,mBAAmB,OAAO,2DAAY,0CAA0C;AAChF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,yCAAyC,kDAAY;AACrD,yCAAyC,mDAAK,sDAAsD,8DAAM;AAC1G,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB,iBAAiB,4DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sCAAsC,UAAU,oCAAoC,WAAW,eAAe,mBAAmB,cAAc,aAAa,8BAA8B,kBAAkB,kBAAkB,gBAAgB,mBAAmB,UAAU,YAAY,4CAA4C,eAAe,gBAAgB,iBAAiB,oBAAoB,gBAAgB,kBAAkB,iFAAiF,sBAAsB,6BAA6B,cAAc,oBAAoB,eAAe,8EAA8E,aAAa,eAAe,sFAAsF,cAAc,oBAAoB,gBAAgB,eAAe,iBAAiB,yBAAyB,oCAAoC,aAAa,aAAa,6BAA6B,4CAA4C,eAAe,iBAAiB,kBAAkB,gBAAgB,wDAAwD,gCAAgC,sFAAsF,iBAAiB,eAAe,0FAA0F,oBAAoB,8DAA8D,mBAAmB,uIAAuI,cAAc,2GAA2G,kBAAkB,mHAAmH,WAAW,8GAA8G,WAAW,mFAAmF,4CAA4C,6BAA6B,UAAU;AAC9oE,aAAa;AACb;AACA;AACA;AACA,KAAK,kDAAkD,OAAO,mDAAI,EAAE,GAAG;AACvE,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,iEAAY;AAChC,oBAAoB,oEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kCAAkC,mEAAc;AAChD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA,iCAAiC,sEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAgB,EAAE;AAC9B,KAAK,qCAAqC,OAAO,qDAAM,2BAA2B,GAAG,OAAO,uDAAQ,EAAE,GAAG,OAAO,mDAAI,EAAE;AACtH;AACA;AACA,aAAa,OAAO,oDAAK,EAAE;AAC3B,wBAAwB,OAAO,wDAAS,SAAS,0DAAW,IAAI;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,oFAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD,gCAAgC,cAAc;AAC9C,aAAa;AACb;AACA;AACA,eAAe,OAAO,oDAAK,EAAE;AAC7B,cAAc,OAAO,oDAAK,EAAE;AAC5B,oBAAoB,OAAO,wDAAS,SAAS,oEAAe,IAAI;AAChE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS,UAAU,2BAA2B;AAC1D;AACA;AACA;AACA,KAAK,OAAO,yDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,sCAAsC,2DAAY;AAClD,gCAAgC,2DAAY;AAC5C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,kEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB,iBAAiB,4DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4DAAK,sBAAsB,4DAAK;AACnE;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD,gCAAgC,cAAc,eAAe,aAAa,qBAAqB,uBAAuB,eAAe;AACrI,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,qBAAqB,OAAO,oDAAK,EAAE;AACnC,kBAAkB,OAAO,oDAAK,EAAE;AAChC,0BAA0B,OAAO,qDAAM,EAAE;AACzC,oBAAoB,OAAO,qDAAM,EAAE;AACnC,cAAc,OAAO,8DAAe,gCAAgC;AACpE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2DAAY;AACnD;AACA;AACA;AACA,qCAAqC,2DAAY;AACjD;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAY;AAC3C;AACA;AACA;AACA,iCAAiC,kDAAY;AAC7C;AACA;AACA;AACA,qCAAqC,kDAAY;AACjD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,mFAAoB;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,oFAAqB;AAClD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,oFAAqB;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gCAAgC,oFAAqB;AACrD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qCAAqC,mDAAK;AAC1C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B,cAAc,GAAG,EAAE;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,cAAc,GAAG,EAAE;AACpD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA,mWAAmW,gXAAgX,WAAW,kIAAkI,0hBAA0hB,0JAA0J,WAAW;AAC/hD,iCAAiC,sEAAuB;AACxD;AACA;AACA,iBAAiB;AACjB,6BAA6B,4DAA4D;AACzF,gCAAgC,cAAc,qBAAqB,qBAAqB,YAAY,eAAe,cAAc,gCAAgC,mBAAmB,gBAAgB,eAAe,iBAAiB,UAAU,uCAAuC,SAAS,oEAAoE,4CAA4C,kBAAkB,6BAA6B,iBAAiB,gBAAgB,2BAA2B,mBAAmB,oBAAoB,WAAW,yCAAyC,WAAW,yBAAyB;AACxnB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,YAAY,OAAO,8DAAe,2BAA2B;AAC7D,uBAAuB,OAAO,2DAAY,+BAA+B;AACzE,iBAAiB,OAAO,wDAAS,wBAAwB;AACzD,cAAc,OAAO,2DAAY,SAAS,sFAAyB,IAAI;AACvE,iBAAiB,OAAO,wDAAS,SAAS,iFAAoB,IAAI;AAClE,qBAAqB,OAAO,oDAAK,EAAE;AACnC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,kBAAkB,OAAO,oDAAK,EAAE;AAChC,uBAAuB,OAAO,oDAAK,EAAE;AACrC,2BAA2B,OAAO,qDAAM,EAAE;AAC1C,yBAAyB,OAAO,qDAAM,EAAE;AACxC,mBAAmB,OAAO,qDAAM,EAAE;AAClC,gBAAgB,OAAO,2DAAY,wCAAwC;AAC3E;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,aAAa,qBAAqB,uBAAuB,8BAA8B,qBAAqB,YAAY,eAAe,cAAc,gCAAgC,mBAAmB,gBAAgB,eAAe,iBAAiB,wCAAwC,iBAAiB,gBAAgB,2BAA2B,mBAAmB,oBAAoB,WAAW,4CAA4C,WAAW,yBAAyB,2DAA2D,4CAA4C,kBAAkB;AACvnB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB;AAC7B;AACA;AACA,gBAAgB,OAAO,oDAAK,EAAE;AAC9B;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,2CAA2C,OAAO,uDAAQ,EAAE,GAAG,OAAO,uDAAQ,EAAE;AACrF;AACA;AACA,cAAc,OAAO,oDAAK,EAAE;AAC5B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA,oBAAoB,6DAAY;AAChC,oBAAoB,iEAAY;AAChC,oBAAoB,8EAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAQ,8EAAa;AACrB,oCAAoC,8EAAa;AACjD;AACA,QAAQ,8EAAa;AACrB;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAY;AAC9C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,oFAAqB;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAS;AACrB;AACA;AACA,iCAAiC,sEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gCAAgC,gBAAgB,yBAAyB,kBAAkB,gBAAgB,qBAAqB,mBAAmB,aAAa,+CAA+C,oBAAoB,eAAe,0BAA0B,yBAAyB,oDAAoD,UAAU,kBAAkB,yCAAyC,yBAAyB,kBAAkB,mBAAmB,WAAW,wBAAwB,sBAAsB,wBAAwB,UAAU,+CAA+C,4CAA4C,6CAA6C,oDAAoD,uBAAuB,kBAAkB,gCAAgC,gDAAgD,gCAAgC;AAC54B,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,gEAAiB,EAAE;AAC/B,KAAK,6BAA6B,OAAO,wDAAS,uBAAuB;AACzE;AACA;AACA,kBAAkB,OAAO,oDAAK,EAAE;AAChC,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAK,EAAE;AAC9B,sBAAsB,OAAO,qDAAM,EAAE;AACrC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAQ;AACpB;AACA;AACA;AACA,oBAAoB,6DAAY;AAChC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEkpG;;AAElpG,4C;;;;;;;;;;;;ACxoZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8D;AAC0D;AAC3E;AACwB;;AAErE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,eAAe,mFAAqB,QAAQ;AAClE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iDAAY;AACrD;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,mFAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B,kBAAkB,mFAAqB,WAAW;AAC9E;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB,sCAAsC;AAC3D;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,mCAAmC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAChF,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,kFAAyB;AACrC;AACA;AACA,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B,iBAAiB,OAAO,oDAAM,EAAE;AAChC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE8D;AAC9D;;;;;;;;;;;;;ACnUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2C;AAC0H;;AAErK;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,yBAAyB,4DAAc;AACvC;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW,4DAAM,CAAC,wDAAQ;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,yBAAyB;AAC/F;AACA,oDAAoD,wEAAkB,EAAE,6CAA6C,2BAA2B,8DAAQ,mBAAmB,EAAE,6CAA6C;;AAE1N;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,kBAAkB;AACjC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6BAA6B,4CAA4C;AACzE,uBAAuB,0BAA0B;AACjD;AACA,aAAa,IAAI;AACjB;AACA;AACA,cAAc,OAAO,oDAAM,wBAAwB;AACnD,WAAW,OAAO,mDAAK,EAAE;AACzB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEqF;AACrF;;;;;;;;;;;;;AClMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+C;AACgB;;AAE/D;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qCAAqC,+CAAU,gBAAgB,+CAAE;AACjE;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA,+DAA+D,wEAAkB,EAAE,wDAAwD,wCAAwC,EAAE,wDAAwD;;AAE7O;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEyI;AACzI;;;;;;;;;;;;;ACvXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACgG;AACmB;AACF;AAC5D;AACyN;AAC9M;AACf;AACA;AACc;AACqB;AACrB;;AAE/D;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc;AACd;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iFAAmB;AACjD,6BAA6B,iFAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC,uBAAuB,EAAE;AACzB,0CAA0C,EAAE;AAC5C,uBAAuB,EAAE;AACzB,0CAA0C,EAAE;AAC5C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,yFAAyF,EAAE,iBAAiB,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc;AACd;AACA;AACA,gBAAgB;AAChB;AACA,eAAe;AACf;AACA;AACA,gBAAgB;AAChB;AACA,cAAc;AACd;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY,EAAE;AACd;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY,EAAE;AACd;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA,+BAA+B,EAAE;AACjC,0CAA0C,+DAA+D;AACzG;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,OAAO,uEAAgB,EAAE;AAC9B,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,2DAA2D,wEAAkB,EAAE,oDAAoD,kCAAkC,8DAAQ,CAAC,uEAAgB,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,oDAAoD;;AAEtT;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,+BAA+B;AACpC,KAAK,0CAA0C,OAAO,sDAAQ,EAAE;AAChE;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,kDAAkD,SAAS,IAAI,MAAM;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,kDAAkD,SAAS,IAAI,MAAM;AACrE;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,+DAA+D,wEAAkB,EAAE,wDAAwD,sCAAsC,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,wDAAwD;AAC/P;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAQ,QAAQ,sDAAQ;AACrC,oBAAoB,EAAE;AACtB;AACA;AACA,QAAQ,wDAAQ;AAChB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,+BAA+B;AACtD,wBAAwB,EAAE;AAC1B;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,sDAAsD,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AAC3N;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAQ,QAAQ,sDAAQ;AACrC,oBAAoB,EAAE,KAAK,wDAAQ;AACnC;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC,gCAAgC,4CAAO;AACvC,gCAAgC,4CAAO;AACvC,gCAAgC,iDAAY;AAC5C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,4CAA4C,+CAAU;AACtD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI;AACtB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,iBAAiB,iBAAiB;AACzE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB,iFAAmB;AACzC,uBAAuB,iFAAmB;AAC1C,yBAAyB,iFAAmB;AAC5C,0BAA0B,iFAAmB;AAC7C,yBAAyB,iFAAmB;AAC5C,0BAA0B,iFAAmB;AAC7C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA,wBAAwB,EAAE;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,yEAAW;AACnB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,sBAAsB,gEAAS,CAAC,kDAAK;AACrC;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE,qCAAqC,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE,sCAAsC,EAAE;AACtF;AACA;AACA;AACA;AACA,wCAAwC,EAAE,sCAAsC,EAAE;AAClF;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA,0CAA0C,EAAE,iBAAiB,EAAE;AAC/D,wBAAwB,EAAE;AAC1B;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,aAAa,OAAO;AACpB,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,mDAAmD,QAAQ,GAAG,QAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB,EAAE,8BAA8B,EAAE,iCAAiC,EAAE,kCAAkC,EAAE;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,4BAA4B,iFAAmB;AAC/C,yBAAyB,iFAAmB;AAC5C,4BAA4B,iFAAmB;AAC/C,2BAA2B,iFAAmB;AAC9C,0BAA0B,iFAAmB;AAC7C,2BAA2B,iFAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iFAAmB;AACtD;AACA;AACA,kCAAkC,iFAAmB;AACrD;AACA;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iCAAiC,EAAE,4CAA4C,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE,OAAO;AAC5C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE,MAAM,0BAA0B;AACnE,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,+CAA+C,EAAE;AACjD,+BAA+B,6DAA6D;AAC5F;AACA;AACA,yBAAyB,iFAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE,MAAM,0BAA0B;AACnE,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8CAA8C,EAAE;AAChD,8BAA8B,2DAA2D;AACzF;AACA;AACA,0BAA0B,iFAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,yEAAW;AACvB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8BAA8B,wDAAU;AACxC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE,wDAAwD,EAAE;AAChF,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE,wDAAwD,EAAE;AAChF,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE,oCAAoC,eAAe;AAC7E;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE,oCAAoC,gBAAgB;AAC9E;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK;AACL;AACA,4DAA4D,wEAAkB,EAAE,qDAAqD,mCAAmC,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,8DAAQ,GAAG,8DAAQ,oBAAoB,EAAE,qDAAqD;;AAE5T;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,8CAA8C,4DAAc;AAC5D;AACA,mBAAmB,mEAAe;AAClC;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA,KAAK,8BAA8B;AACnC,KAAK,yBAAyB;AAC9B,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,+BAA+B;AACpC,KAAK,kCAAkC;AACvC,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,gEAAc,EAAE;AAC5B,KAAK,OAAO,wDAAQ,gBAAgB,OAAO,sDAAQ,EAAE;AACrD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,kDAAkD,4DAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iDAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,mCAAmC,kEAAc;AACjD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B,qBAAqB,mFAAqB,QAAQ;AAC9E;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B,sBAAsB,mFAAqB,QAAQ;AAChF;AACA;AACA,gBAAgB;AAChB;AACA,8BAA8B,iCAAiC;AAC/D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,mFAAqB;AACxD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,4BAA4B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,8BAA8B,uBAAuB,mFAAqB,QAAQ;AAClF;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,mBAAmB;AACnC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,cAAc,mFAAqB,QAAQ;AAChE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,kCAAkC,4DAAM,KAAK,4EAAc;AAC3D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,gBAAgB;AACrB,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,oDAAM,kDAAkD,GAAG;AACvG,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,cAAc,OAAO,mDAAK,wCAAwC;AAClE,iBAAiB,OAAO,mDAAK,2CAA2C;AACxE,eAAe,OAAO,mDAAK,yCAAyC;AACpE,eAAe,OAAO,mDAAK,yCAAyC;AACpE,aAAa,OAAO,mDAAK,uCAAuC;AAChE,cAAc,OAAO,mDAAK,wCAAwC;AAClE,gBAAgB,OAAO,mDAAK,0CAA0C;AACtE,iBAAiB,OAAO,mDAAK,2CAA2C;AACxE,qBAAqB,OAAO,mDAAK,+CAA+C;AAChF,kBAAkB,OAAO,mDAAK,4CAA4C;AAC1E,sBAAsB,OAAO,mDAAK,gDAAgD;AAClF,sBAAsB,OAAO,mDAAK,gDAAgD;AAClF,YAAY,OAAO,mDAAK,sCAAsC;AAC9D,mBAAmB,OAAO,mDAAK,6CAA6C;AAC5E,oBAAoB,OAAO,mDAAK,8CAA8C;AAC9E,0BAA0B,OAAO,mDAAK,oDAAoD;AAC1F,qBAAqB,OAAO,mDAAK,+CAA+C;AAChF,YAAY,OAAO,mDAAK,sCAAsC;AAC9D,qBAAqB,OAAO,oDAAM,EAAE;AACpC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAU,EAAE,gEAAY,EAAE,sEAAe;AACnE,iEAAiE,sEAAe;AAChF;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,IAAI,8EAAuB;AAC3B;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,gEAAgE,wEAAkB,EAAE,yDAAyD,uCAAuC,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,yDAAyD;;AAEnQ;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE62B;AAC72B;;;;;;;;;;;;;ACnwHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmI;;AAEnI;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE6N;AAC7N;;;;;;;;;;;;;AC5oBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8T;AACjQ;AAC4C;AACwB;AACC;AACnE;AACU;;AAEzE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,oCAAoC,4DAAc;;AAElD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA,kEAAkE,2EAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB;AACzB;AACA;AACA,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,0BAA0B;AAC1B,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,kFAAoB,QAAQ;AACvE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B,qBAAqB,kFAAoB,QAAQ;AAC7E;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B,qBAAqB,kFAAoB,QAAQ;AAC7E;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,+BAA+B,gEAAU;AACzC,wCAAwC;AACxC;AACA;AACA,qBAAqB;AACrB,aAAa,IAAI;AACjB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,oCAAoC,gEAAS;AAC7C;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,iDAAiD,6DAAM;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8BAA8B,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,sDAAS;AAC5B,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,8DAAQ;AACpB;AACA,sDAAsD,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,8DAAQ,GAAG,EAAE,+CAA+C;AAC7O;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ,uBAAuB,oDAAM,EAAE,8DAAQ;AAC/E;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC,oCAAoC,+CAAU;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA,cAAc,sDAAS,+CAA+C,gEAAS;AAC/E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,qBAAqB,kFAAoB,MAAM,uEAAiB;AAChE;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA,gBAAgB,kFAAoB,MAAM,uEAAiB;AAC3D;AACA;AACA,qBAAqB,kFAAoB,MAAM,uEAAiB;AAChE;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,oFAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kFAAoB,MAAM,uEAAiB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kFAAoB,MAAM,uEAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,yBAAyB;AAC9B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,wEAAwE,4DAAuB,GAAG,kDAAa;AAC/G;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA;AACA,yCAAyC,4CAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+CAAU;AACjD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAS,aAAa,EAAE;AACpC;AACA;AACA;AACA,YAAY,gEAAS;AACrB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wCAAwC,gEAAS;AACjD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oCAAoC,KAAK,GAAG,+BAA+B;AAC3E;AACA;AACA,sCAAsC,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,wDAAwD,uBAAuB;AAC/E;AACA,mDAAmD,uBAAuB;AAC1E;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA,sDAAsD,cAAc,kBAAkB,cAAc,eAAe,wBAAwB,4BAA4B,iCAAiC,oCAAoC,kBAAkB,MAAM,OAAO,gBAAgB,8CAA8C,QAAQ,UAAU,+EAA+E,gBAAgB,+ZAA+Z,eAAe,gBAAgB,cAAc,eAAe,oBAAoB,qBAAqB,UAAU,6EAA6E,eAAe,uZAAuZ,cAAc,iBAAiB,aAAa,gBAAgB,mBAAmB,sBAAsB,UAAU,2BAA2B,kBAAkB,MAAM,OAAO,WAAW,UAAU,qBAAqB,qCAAqC,QAAQ,UAAU,wBAAwB;AAC7tD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA,qBAAqB;AACrB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,oCAAoC,GAAG;AAC7G,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK;AACL;AACA;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,uBAAuB,OAAO,uDAAS,4BAA4B,eAAe,IAAI;AACtF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA,sCAAsC,4CAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAS,aAAa,EAAE;AAChC;AACA,QAAQ,+DAAQ;AAChB;AACA;AACA;AACA,QAAQ,gEAAS;AACjB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,QAAQ,kEAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,gDAAgD,gEAAS;AACzD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,6EAAY;AAC/B;AACA,gBAAgB,wEAAe,kBAAkB,+CAAU;AAC3D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC,uBAAuB,EAAE;AACzB;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAAE;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,+CAA+C;AAC/C;AACA,2BAA2B,EAAE;AAC7B,oEAAoE,EAAE;AACtE;AACA;AACA,4CAA4C;AAC5C,6DAA6D,EAAE;AAC/D;AACA,kBAAkB;AAClB;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE,4CAA4C,EAAE;AACzF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,EAAE,4CAA4C,EAAE;AACrF;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,6DAAe,EAAE;AAC7B,KAAK,+CAA+C,OAAO,sDAAQ,EAAE,GAAG;AACxE,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,sCAAsC,OAAO,mDAAK,EAAE;AACpD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAU,EAAE,oEAAc;AACpD;AACA,oBAAoB,4DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB,kDAAK,CAAC,sDAAS,oBAAoB,sDAAS;AAC5D,gBAAgB,+CAAE;AAClB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB;AACxB;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4CAA4C,EAAE;AAC9C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oDAAoD,gEAAS;AAC7D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,uDAAuD;AACpE,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AACzD;AACA;AACA;AACA,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM;AAClB;AACA,mDAAmD,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,CAAC,8DAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,EAAE,4CAA4C;AACjO;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ,oBAAoB,8DAAQ,EAAE,oDAAM;AAC5E;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE4a;AAC5a;;;;;;;;;;;;;ACzzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8D;AACqO;AAChP;AACK;AACF;AACL;AACQ;AACO;AACrB;;AAE3C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,sBAAsB,qBAAqB;AAC3C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,2BAA2B,IAAI;AAC9D;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,iCAAiC,IAAI;AACpE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,iCAAiC,IAAI;AACpE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,mFAAqB;AAC/C;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,6BAA6B,mEAAmE;AAChG,aAAa,IAAI;AACjB;AACA;AACA,YAAY,OAAO,mDAAK,2BAA2B;AACnD,iBAAiB,OAAO,mDAAK,wBAAwB;AACrD,YAAY,OAAO,0DAAY,sBAAsB,gBAAgB,IAAI;AACzE,kBAAkB,OAAO,0DAAY,4BAA4B,gBAAgB,IAAI;AACrF,kBAAkB,OAAO,0DAAY,4BAA4B,gBAAgB,IAAI;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB,8CAA8C,+BAA+B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,6DAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,6DAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK,OAAO,6DAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8BAA8B,IAAI;AACjE;AACA;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE,6DAA6D;AAC9E;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,cAAc;AACzC,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,+BAA+B,yBAAyB;AACxD,+BAA+B,EAAE;AACjC,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,SAAS;AACzC,2DAA2D,kBAAkB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,0BAA0B;AACjD,uBAAuB,EAAE;AACzB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mDAAmD,GAAG;AACtD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,gEAAgE,KAAK;AACrE;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,0BAA0B,IAAI;AAC7D;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,gCAAgC,IAAI;AACnE;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,gCAAgC,IAAI;AACnE;AACA;AACA;AACA,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAe,EAAE,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,YAAY,+DAAS,4DAA4D,EAAE;AACnF,wBAAwB,EAAE;AAC1B,qEAAqE,mBAAmB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC,mFAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6EAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yDAAyD,EAAE;AAC3D;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE,mCAAmC,EAAE;AAChF,+CAA+C,EAAE;AACjD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,wCAAwC,EAAE,mCAAmC,EAAE;AAC/E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,0CAA0C,EAAE;AAC5C;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,gFAAgF,EAAE;AAClF;AACA,2BAA2B,EAAE;AAC7B,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,6EAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,6EAAY;AACxB;AACA;AACA,4CAA4C,+CAAU;AACtD;AACA;AACA;AACA,yBAAyB,+CAAE;AAC3B;AACA;AACA;AACA;AACA,yDAAyD,gEAAS;AAClE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,oCAAoC;AAC3D,uBAAuB,EAAE;AACzB,yCAAyC,EAAE,iBAAiB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,+DAA+D,qBAAqB;AACpF,uBAAuB,EAAE;AACzB,wCAAwC,EAAE;AAC1C,uBAAuB,EAAE;AACzB,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,aAAa,8CAA8C;AAC3D,aAAa,wCAAwC;AACrD,aAAa,8CAA8C;AAC3D;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wCAAwC,+CAAE;AAC1C,kBAAkB,gEAAS;AAC3B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,OAAO,6DAAe,EAAE;AAC7B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,6BAA6B,OAAO,uDAAS,mBAAmB,GAAG;AACxE,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,8DAAQ;AACpB;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,kBAAkB,OAAO,uDAAS,yBAAyB,eAAe,IAAI;AAC9E,wBAAwB,OAAO,uDAAS,2BAA2B,eAAe,IAAI;AACtF,wBAAwB,OAAO,uDAAS,2BAA2B,eAAe,IAAI;AACtF,0BAA0B,OAAO,6DAAe,yBAAyB;AACzE,uBAAuB,OAAO,6DAAe,sBAAsB;AACnE,6BAA6B,OAAO,6DAAe,4BAA4B;AAC/E,6BAA6B,OAAO,6DAAe,4BAA4B;AAC/E;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,gCAAgC,4DAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,+DAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU;AAC/B;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa,IAAI;AACjB;AACA;AACA;AACA,KAAK,+BAA+B,OAAO,sDAAQ,EAAE,GAAG;AACxD,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,gCAAgC;AACtG;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,uDAAS,wBAAwB,eAAe,IAAI;AAC5E,YAAY,OAAO,uDAAS,sBAAsB,eAAe,IAAI;AACrE,kBAAkB,OAAO,uDAAS,4BAA4B,eAAe,IAAI;AACjF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEmb;AACnb;;;;;;;;;;;;ACzwEA,mCAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,gBAAgB,EAAE;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,mDAAmD;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;;AAGT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0CAA0C,OAAO;AACjD;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET,gDAAgD,IAAI,OAAO,IAAI;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChf;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,GAAG;;AAElB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;;AAEA,wCAAwC,0BAA0B;AAClE;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,sBAAsB,cAAc;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,KAAK;AACtB;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,6BAA6B,OAAO;;AAEpC;AACA,uBAAuB,OAAO;;AAE9B;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,iBAAiB;;AAE3B;AACA,UAAU,aAAa;;AAEvB;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,gBAAgB;;AAEzC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET,gDAAgD,IAAI,OAAO,IAAI;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,KAAK;;AAErB;AACA,iBAAiB,UAAU;AAC3B;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,UAAU;;AAEpB;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B,WAAW,OAAO;AAClB;AACA,iDAAiD,GAAG;AACpD,+CAA+C,GAAG;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG,SAAS,GAAG;AAC5B;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,mCAAmC,GAAG;AACtC,qCAAqC,GAAG;AACxC,4CAA4C,GAAG;AAC/C,0CAA0C,GAAG;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,UAAU,cAAc;;AAExB;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,SAAS;;AAE3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,UAAU;AACpB,6BAA6B,QAAQ;AACrC;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,KAAK;AAC9B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA,YAAY,uBAAuB;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,uBAAuB;;AAExC;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,WAAW;;AAE3B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,8BAA8B,SAAS;AACvC;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,SAAS;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;;AAEA;AACA,0BAA0B,SAAS;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA,uBAAuB,SAAS;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,eAAe;AACxC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,wBAAwB,SAAS;AACjC;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,YAAY,aAAa;;AAEzB;AACA,yBAAyB,SAAS;AAClC;;AAEA;AACA;;;AAGA;AACA;AACA,UAAU,KAAK;AACf;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;;AAEA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,eAAe,0BAA0B;;AAEzC;AACA,0BAA0B,gCAAgC;AAC1D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA,OAAO;AACP;AACA;;AAEA,YAAY,KAAK;AACjB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,kBAAkB;AAC7D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,KAAK;AACf;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,gBAAgB;;AAE5B;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,cAAc;;AAE3C;AACA,6BAA6B,SAAS;;AAEtC;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA,mCAAmC,cAAc;;AAEjD;AACA,qCAAqC,SAAS;AAC9C,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT,gBAAgB,KAAK;AACrB;AACA,SAAS;AACT,uCAAuC,MAAM;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,sBAAsB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,4BAA4B,SAAS;;AAErC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,YAAY,OAAO;;AAEnB;AACA,KAAK;AACL;;AAEA,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA,YAAY,OAAO;;AAEnB;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,aAAa;;AAEvB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,YAAY,aAAa;;AAEzB;AACA,4BAA4B,SAAS;;AAErC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA,MAAM,IAAyC;AAC/C,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,oGAAC;;AAEN;AACA,GAAG,MAAM,EAqBN;AACH,CAAC","file":"default~login-login-module~main-main-module-es2015.js","sourcesContent":["import { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { CdkAccordion, CdkAccordionItem } from '@angular/cdk/accordion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Directive, Input, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, Optional, SkipSelf, ViewContainerRef, Host, NgModule } from '@angular/core';\nimport { Subject, merge, Subscription } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_TYPE = 'regular';\nclass NxAccordionDirective extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        this._style = 'regular';\n        this._negative = null;\n    }\n    /**\n     * Value for the styling that should be chosen.\n     * Default value: 'regular'\n     * @param {?} value\n     * @return {?}\n     */\n    set style(value) {\n        value = value ? value : DEFAULT_TYPE;\n        const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE];\n        this._style = (/** @type {?} */ (newValue));\n    }\n    /**\n     * @return {?}\n     */\n    get style() {\n        return this._style;\n    }\n    /**\n     * Whether the negative set of styles should be used.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n}\nNxAccordionDirective.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-accordion',\n                host: {\n                    '[class.nx-accordion]': 'true',\n                    'role': 'presentation'\n                }\n            },] }\n];\nNxAccordionDirective.propDecorators = {\n    style: [{ type: Input, args: ['nxStyle',] }],\n    negative: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst nxAccordionAnimations = {\n    bodyExpansion: trigger('bodyExpansion', [\n        state('closed', style({ height: '0px', visibility: 'hidden' })),\n        state('open', style({ height: '*', visibility: 'visible' })),\n        transition('open <=> closed', animate('.5s cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    indicatorRotate: trigger('indicatorRotate', [\n        state('closed', style({ transform: 'rotate(0deg)' })),\n        state('open', style({ transform: 'rotate(180deg)' })),\n        transition('open <=> closed', animate('.3s ease')),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxExpansionPanelBodyDirective {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nNxExpansionPanelBodyDirective.decorators = [\n    { type: Directive, args: [{ selector: '[nxExpansionPanelBody]' },] }\n];\n/** @nocollapse */\nNxExpansionPanelBodyDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId = 0;\n/** @type {?} */\nconst DEFAULT_TYPE$1 = 'regular';\nconst ɵ0 = undefined;\nclass NxExpansionPanelComponent extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     * @param {?} _viewContainerRef\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher, _viewContainerRef) {\n        super(accordion, _changeDetectorRef, _expansionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._negative = null;\n        this._accordionStyle = DEFAULT_TYPE$1;\n        this._style = null;\n        this._headerId = `nx-expansion-panel-header-${nextId++}`;\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        this.accordion = accordion;\n    }\n    /**\n     * Whether the negative set of styles should be used.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Value for the styling that should be chosen.\n     * Default value: 'regular'.\n     * @param {?} value\n     * @return {?}\n     */\n    set style(value) {\n        value = value ? value : DEFAULT_TYPE$1;\n        const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE$1];\n        this._style = (/** @type {?} */ (newValue));\n        this._accordionStyle = (/** @type {?} */ (newValue));\n    }\n    /**\n     * @return {?}\n     */\n    get style() {\n        return this._style;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get portal() {\n        return this._portal;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this.lazyContent._template, this._viewContainerRef);\n            }));\n        }\n        // Inherit appearance given by the accordion (if any).\n        if (Boolean(this.accordion)) {\n            if (this.style === null && this.accordion.style !== null) {\n                this.style = this.accordion.style;\n            }\n            if (this.negative === null && this.accordion.negative !== null) {\n                this.negative = this.accordion.negative;\n            }\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getOpenState() {\n        return this.expanded ? 'open' : 'closed';\n    }\n}\nNxExpansionPanelComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-expansion-panel',\n                exportAs: 'NxExpansionPanelComponent',\n                template: \"<ng-content select=\\\"nx-expansion-panel-header\\\"></ng-content>\\n\\n<div class=\\\"nx-expansion-panel__content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"getOpenState()\\\"\\n  [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\">\\n  <div class=\\\"nx-expansion-panel__body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"portal\\\"></ng-template>\\n  </div>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [nxAccordionAnimations.bodyExpansion],\n                host: {\n                    '[class.nx-expanded]': 'expanded',\n                    '[class.nx-expansion-panel--light]': '_accordionStyle === \"light\"',\n                    '[class.nx-expansion-panel--regular]': '_accordionStyle === \"regular\"',\n                    '[class.nx-expansion-panel--negative]': 'negative'\n                },\n                providers: [\n                    // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: NxAccordionDirective, useValue: ɵ0 },\n                ],\n                styles: [\":host{display:block}:host(.nx-expansion-panel--negative) ::ng-deep div.nx-expansion-panel__body *{color:#fff}.nx-expansion-panel__content{overflow:hidden;display:block}.nx-expansion-panel__body{font-size:16px;line-height:24px;padding:24px 88px 32px 32px}@media (max-width:703px){.nx-expansion-panel__body{padding:24px 16px 32px}:host:last-child ::ng-deep .nx-expansion-panel__header-content,:host:only-child ::ng-deep .nx-expansion-panel__header-content{border-bottom:1px solid #d9d9d9}}:host(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-content{border-top:1px solid #d9d9d9;border-bottom:none}:host(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__body{padding-top:0}:host(.nx-expansion-panel--light):first-child ::ng-deep .nx-expansion-panel__header-content{border-top:none}\"]\n            }] }\n];\n/** @nocollapse */\nNxExpansionPanelComponent.ctorParameters = () => [\n    { type: NxAccordionDirective, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef }\n];\nNxExpansionPanelComponent.propDecorators = {\n    negative: [{ type: Input }],\n    style: [{ type: Input, args: ['nxStyle',] }],\n    lazyContent: [{ type: ContentChild, args: [NxExpansionPanelBodyDirective,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxExpansionPanelHeaderComponent {\n    /**\n     * @param {?} panel\n     * @param {?} _changeDetectorRef\n     */\n    constructor(panel, _changeDetectorRef) {\n        this.panel = panel;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter((/**\n         * @param {?} changes\n         * @return {?}\n         */\n        changes => !!(changes.hideToggle || changes.disabled)))))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getOpenState() {\n        return this.panel.getOpenState();\n    }\n    /**\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Toggle the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.panel.toggle();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    keydown(event) {\n        switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this.toggle();\n                break;\n            default:\n                return;\n        }\n    }\n}\nNxExpansionPanelHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-expansion-panel-header',\n                template: \"<div class=\\\"nx-expansion-panel__header-content\\\">\\n  <ng-content select=\\\"nx-expansion-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"nx-expansion-panel-description\\\"></ng-content>\\n  <nx-icon\\n    [@indicatorRotate]=\\\"getOpenState()\\\"\\n    class=\\\"nx-expansion-panel__chevron\\\"\\n    name=\\\"chevron-down\\\">\\n  </nx-icon>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [nxAccordionAnimations.indicatorRotate],\n                host: {\n                    '[class.nx-expanded]': 'isExpanded()',\n                    'class': 'nx-expansion-panel__header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': 'isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '(keydown)': 'keydown($event)',\n                    '(click)': 'toggle()'\n                },\n                styles: [\":host:focus{outline:0}.nx-expansion-panel__header-content{width:100%;cursor:pointer;align-items:center;color:#414141;display:flex;justify-content:space-between;position:relative;padding:24px 32px;margin-top:16px;background:#f5f5f5;outline:0;border:none}::ng-deep .nx-expansion-panel__header-title{font-size:26px;font-weight:300;line-height:32px;letter-spacing:.3px;text-align:left;margin-right:32px}:host-context(.nx-expansion-panel--negative) .nx-expansion-panel__header-content{background-color:#fff}.nx-expansion-panel__chevron{color:#006192;pointer-events:none;font-size:24px}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{margin-top:0;background:0 0}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{color:#006192;letter-spacing:.2px;font-weight:400;font-size:20px;line-height:28px}@media (max-width:703px){.nx-expansion-panel__header-content{padding:16px;margin-top:0;border-top:1px solid #d9d9d9}::ng-deep .nx-expansion-panel__header-title{font-size:20px;line-height:28px;margin-right:16px;font-weight:400}:host(.nx-expanded) .nx-expansion-panel__header-content{border-bottom:1px solid #d9d9d9}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{line-height:24px;font-size:16px}:host-context(.nx-expansion-panel--light.nx-expanded) .nx-expansion-panel__header-content{border-bottom:none}}:host[aria-disabled=true] .nx-expansion-panel__header-content{cursor:not-allowed}:host[aria-disabled=true] ::ng-deep .nx-expansion-panel__chevron,:host[aria-disabled=true] ::ng-deep .nx-expansion-panel__header-title{color:#c2c2c2}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{border-color:#fff}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-title{color:#fff}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__chevron{color:#fff}:host-context([data-whatinput=keyboard]):focus .nx-expansion-panel__header-content{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-top-color:transparent;z-index:1}\"]\n            }] }\n];\n/** @nocollapse */\nNxExpansionPanelHeaderComponent.ctorParameters = () => [\n    { type: NxExpansionPanelComponent, decorators: [{ type: Host }] },\n    { type: ChangeDetectorRef }\n];\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\nclass NxExpansionPanelDescriptionDirective {\n}\nNxExpansionPanelDescriptionDirective.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-expansion-panel-description',\n                host: {\n                    class: 'nx-expansion-panel__header-description'\n                }\n            },] }\n];\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\nclass NxExpansionPanelTitleDirective {\n}\nNxExpansionPanelTitleDirective.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-expansion-panel-title',\n                host: {\n                    class: 'nx-expansion-panel__header-title'\n                }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxAccordionModule {\n}\nNxAccordionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    PortalModule,\n                    NxIconModule\n                ],\n                exports: [\n                    NxAccordionDirective,\n                    NxExpansionPanelComponent,\n                    NxExpansionPanelHeaderComponent,\n                    NxExpansionPanelDescriptionDirective,\n                    NxExpansionPanelTitleDirective,\n                    NxExpansionPanelBodyDirective\n                ],\n                declarations: [\n                    NxAccordionDirective,\n                    NxExpansionPanelComponent,\n                    NxExpansionPanelHeaderComponent,\n                    NxExpansionPanelDescriptionDirective,\n                    NxExpansionPanelTitleDirective,\n                    NxExpansionPanelBodyDirective\n                ],\n                providers: [],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxExpansionPanelComponent, NxAccordionDirective, NxAccordionModule, nxAccordionAnimations as ɵa, NxExpansionPanelBodyDirective as ɵb, NxExpansionPanelDescriptionDirective as ɵd, NxExpansionPanelHeaderComponent as ɵc, NxExpansionPanelTitleDirective as ɵe };\n\n//# sourceMappingURL=allianz-ngx-ndbx-accordion.js.map","import { ActiveDescendantKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport { NxFormfieldComponent } from '@allianz/ngx-ndbx/formfield';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, DOWN_ARROW, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Overlay, OverlayConfig, ViewportRuler, OverlayModule } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Component, Input, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Output, EventEmitter, TemplateRef, ViewChild, ViewChildren, ContentChildren, Directive, forwardRef, Host, Inject, NgZone, Optional, ViewContainerRef, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, Subject, Subscription, defer, of, merge, fromEvent } from 'rxjs';\nimport { delay, filter, switchMap, take, tap, debounceTime, first } from 'rxjs/operators';\nimport { NxWordComponent } from '@allianz/ngx-ndbx/natural-language-form';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option selected event\n */\nclass NxAutocompleteOptionSelected {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\nclass NxAutocompleteOptionComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     */\n    constructor(elementRef, _changeDetectorRef) {\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._id = `nx-autocomplete-option-${_uniqueIdCounter++}`;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        this.onSelectionChange = new EventEmitter();\n    }\n    /**\n     * Id of the autocomplete option. By default it is set to an incremented value.\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n        }\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new NxAutocompleteOptionSelected(this, isUserInput));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get viewValue() {\n        return (this.elementRef.nativeElement.textContent || '').trim();\n    }\n    /**\n     * \\@docs-private\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * \\@docs-private\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * \\@docs-private\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        this._selected = true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent();\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        this._selected = false;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent();\n    }\n    /**\n     * \\@docs-private\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    focus() {\n        /** @type {?} */\n        const element = this.elementRef.nativeElement;\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n}\nNxAutocompleteOptionComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-autocomplete-option',\n                template: \"<div class=\\\"nx-autocomplete-option\\\" [class.nx-active]=\\\"active\\\">\\n  <div class=\\\"nx-autocomplete-option__label\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '[class.nx-active]': 'active',\n                    '[class.nx-disabled]': 'disabled',\n                    '[style.display]': '\\'block\\'' // needed for to be able to calculate offset height\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host:focus{outline:0}.nx-autocomplete-option{font-size:20px;line-height:28px;letter-spacing:.2px;padding:0 32px 16px 8px;cursor:pointer;position:relative;display:flex;max-width:100%;white-space:nowrap}.nx-autocomplete-option.nx-active,.nx-autocomplete-option:hover{color:#007ab3}@media screen and (-ms-high-contrast:active){.nx-autocomplete-option.nx-active,.nx-autocomplete-option:hover{color:highlightText}}.nx-autocomplete-option__label{overflow:hidden;text-overflow:ellipsis;padding:0 12px;margin:0 -12px}:host-context([data-whatinput=keyboard]) .nx-autocomplete-option.nx-active .nx-autocomplete-option__label{border-radius:4px;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxAutocompleteOptionComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNxAutocompleteOptionComponent.propDecorators = {\n    disabled: [{ type: Input }],\n    value: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass NxAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nclass NxAutocompleteComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     */\n    constructor(_changeDetectorRef, _elementRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        this._items = null;\n        this._hasItems = false;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `nx-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // As autocomplete option can hold any value, we might need a converter\n        // to get a string representation, which can be stored in input. Default value ? value.toString() : null.\n        /**\n         * Value to string converter.\n         */\n        this.valueFormatter = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => value ? value.toString() : null);\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Items observable. If given, autocomplete takes care of the options and ng-content is discarderd\n     * @param {?} val\n     * @return {?}\n     */\n    set items(val) {\n        this._hasItems = true;\n        if (Array.isArray(val)) {\n            this._items = val;\n        }\n        else if (val instanceof Observable) {\n            if (this._itemsSubscription) {\n                this._itemsSubscription.unsubscribe();\n            }\n            this._itemsSubscription = val.subscribe((/**\n             * @param {?} itms\n             * @return {?}\n             */\n            (itms) => {\n                this._items = itms;\n                this._changeDetectorRef.markForCheck();\n                // and check visibility in next cycle, when options are set\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._setVisibility()));\n            }));\n        }\n        else if (val === null) {\n            this._items = val;\n        }\n        else {\n            throw new Error('Invalid argument for autocomplete items. It has to be Array<string> or Observable<Array<string>>');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get items() {\n        return this._items;\n    }\n    /**\n     * \\@docs-private\n     * Is items observable set\n     * @return {?}\n     */\n    get hasItems() {\n        return this._hasItems;\n    }\n    /**\n     * Autocomplete options\n     * @return {?}\n     */\n    get options() {\n        return this.hasItems ? this._vOptions : this._cOptions;\n    }\n    /**\n     * Takes classes set on the host nx-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            value.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            className => this._classList[className.trim()] = true));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._itemsSubscription) {\n            this._itemsSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!(this.options && this.options.length);\n        this._classList['nx-autocomplete-visible'] = this.showPanel;\n        this._classList['nx-autocomplete-hidden'] = !this.showPanel;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new NxAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n}\nNxAutocompleteComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"nx-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-container *ngIf=\\\"hasItems\\\">\\n      <nx-autocomplete-option *ngFor=\\\"let item of items\\\" [value]=\\\"item\\\">\\n        {{item}}\\n      </nx-autocomplete-option>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"!hasItems\\\">\\n      <ng-content></ng-content>\\n    </ng-container>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'nxAutocomplete',\n                host: {\n                    'class': 'nx-autocomplete'\n                },\n                styles: [\":host ::ng-deep .c-input::-ms-clear{width:0;height:0}.nx-autocomplete-panel{background-color:#fff;box-shadow:0 2px 4px rgba(65,65,65,.5);padding:24px;overflow-y:auto;overflow-x:hidden;max-height:336px;width:100%;border-radius:4px}.nx-autocomplete-panel.nx-autocomplete-visible{visibility:visible}.nx-autocomplete-panel.nx-autocomplete-hidden{visibility:hidden}@media screen and (-ms-high-contrast:active){.nx-autocomplete-panel{box-shadow:0 0 0 1px windowText}}\"]\n            }] }\n];\n/** @nocollapse */\nNxAutocompleteComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\nNxAutocompleteComponent.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef,] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    items: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    _vOptions: [{ type: ViewChildren, args: [NxAutocompleteOptionComponent,] }],\n    _cOptions: [{ type: ContentChildren, args: [NxAutocompleteOptionComponent, { descendants: true },] }],\n    classList: [{ type: Input, args: ['class',] }],\n    valueFormatter: [{ type: Input, args: ['nxValueFormatter',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst NX_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NxAutocompleteTriggerDirective)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @return {?}\n */\nfunction getNxAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `nx-autocomplete`. ' +\n        'Make sure that the id passed to the `nxAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass NxAutocompleteTriggerDirective {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _nxFormField\n     * @param {?} _nxWordField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, _dir, _nxFormField, _nxWordField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._nxFormField = _nxFormField;\n        this._nxWordField = _nxWordField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Value changes\n         */\n        this._valueChanges = new Subject();\n        this._itemsCb = null;\n        this._debounce = 400;\n        this._autocompleteDisabled = false;\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }));\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @param {?} val\n         * @return {?}\n         */\n        (val) => {\n            this._valueChanges.next(val);\n        });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * The items callback. Called with input value, must return Observable of Array of strings\n     * @param {?} val\n     * @return {?}\n     */\n    set itemsCb(val) {\n        if (typeof val === 'function') {\n            this._itemsCb = val;\n        }\n        else {\n            throw new Error('Wrong value type for nxAutocompleteItems');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get itemsCb() {\n        return this._itemsCb;\n    }\n    /**\n     * Debounce in ms before items callback is triggered. Defaults to 400\n     * @param {?} val\n     * @return {?}\n     */\n    set debounce(val) {\n        this._debounce = coerceNumberProperty(val);\n    }\n    /**\n     * Whether autocomplete functionality is disabled.\n     * @param {?} val\n     * @return {?}\n     */\n    set autocompleteDisabled(val) {\n        this._autocompleteDisabled = val;\n        this._bindAutocompleteItems();\n    }\n    /**\n     * @return {?}\n     */\n    get autocompleteDisabled() {\n        return this._autocompleteDisabled;\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * The currently active option, coerced to NxAutocompleteOptionComponent type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    get _outsideClickStream() {\n        if (!this._document) {\n            return of(null);\n        }\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ (event.target));\n            /** @type {?} */\n            const formField = this._formField ?\n                this._formField.elementRef.nativeElement : null;\n            return this._overlayAttached &&\n                clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get _formField() {\n        if (this._nxFormField) {\n            return this._nxFormField;\n        }\n        else if (this._nxWordField) {\n            return this._nxWordField;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n        if (this._controlValueChangesSubscription) {\n            this._controlValueChangesSubscription.unsubscribe();\n        }\n        if (this._itemsSubscription) {\n            this._itemsSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._bindAutocompleteItems();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._bindAutocompleteItems();\n    }\n    /**\n     * Binds or rebinds the autocomplete items. Prerequisites:\n     * - items callback has to be defined\n     * - autocomplete panel has to be bound\n     * @private\n     * @return {?}\n     */\n    _bindAutocompleteItems() {\n        if (this._controlValueChangesSubscription) {\n            this._controlValueChangesSubscription.unsubscribe();\n        }\n        if (typeof this._itemsCb === 'function' && this.autocomplete && !this.autocompleteDisabled) {\n            /** @type {?} */\n            const itemsSubject = new Subject();\n            this.autocomplete.items = itemsSubject;\n            /** @type {?} */\n            const valueChanges = this._formField &&\n                this._formField._control &&\n                this._formField._control.ngControl &&\n                this._formField._control.ngControl.valueChanges ?\n                this._formField._control.ngControl.valueChanges : this._valueChanges;\n            this._controlValueChangesSubscription = valueChanges.pipe(debounceTime(this._debounce))\n                .subscribe((/**\n             * @param {?} input\n             * @return {?}\n             */\n            (input) => {\n                if (this._itemsSubscription) {\n                    this._itemsSubscription.unsubscribe();\n                }\n                this._itemsSubscription = this._itemsCb(input).pipe(first()).subscribe((/**\n                 * @param {?} result\n                 * @return {?}\n                 */\n                (result) => {\n                    itemsSubject.next(result);\n                }), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    // On error reset\n                    // TODO: Log error?\n                    itemsSubject.next([]);\n                }));\n            }));\n        }\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        if (!this.autocompleteDisabled) {\n            this._attachOverlay();\n            this._floatLabel();\n        }\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._outsideClickStream, this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of());\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n        // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n        if (this.panelOpen && (keyCode === ESCAPE || (keyCode === UP_ARROW && event.altKey))) {\n            this._resetActiveItem();\n            this._closeKeyEventStream.next();\n            event.stopPropagation();\n        }\n        else if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._isFieldEnabled()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value === '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._isFieldEnabled() && this._previousValue !== value &&\n            document.activeElement === event.target) {\n            this._previousValue = value;\n            this._onChange(value);\n            this.openPanel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (this._isFieldEnabled()) {\n            this._previousValue = this._element.nativeElement.value;\n            this.openPanel();\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @return {?}\n     */\n    _floatLabel() {\n        if (this._nxFormField && this._nxFormField.floatLabel === 'auto') {\n            this._nxFormField.floatLabel = 'always';\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._nxFormField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        if (this.autocomplete.options.length === 0) {\n            return;\n        }\n        /** @type {?} */\n        let optionOffset = 0;\n        /** @type {?} */\n        const optionHeight = this.autocomplete.options.first.elementRef.nativeElement.offsetHeight;\n        if (this.autocomplete._keyManager.activeItem) {\n            optionOffset = this.autocomplete._keyManager.activeItem.elementRef.nativeElement.offsetTop;\n        }\n        /** @type {?} */\n        const newScrollPosition = _getOptionScrollPosition(optionOffset, optionHeight, this.autocomplete._getScrollTop(), this.autocomplete.panel.nativeElement.offsetHeight);\n        this.autocomplete._setScrollTop(newScrollPosition);\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.valueFormatter ?\n            this.autocomplete.valueFormatter(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `NxFormField` or `NxWord`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getNxAutocompleteMissingPanelError();\n        }\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            this._overlayRef = this._overlay.create(this._getOverlayConfig());\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && this._overlayRef) {\n                        this._overlayRef.updateSize({ minWidth: this._getHostWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            /** Update the panel width, in case the host width has changed */\n            this._overlayRef.updateSize({ minWidth: this._getHostWidth() });\n        }\n        if (this._overlayRef && !this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            minWidth: this._getHostWidth(),\n            direction: this._dir ? this._dir.value : 'ltr'\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        this._positionStrategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withViewportMargin(16)\n            .withPush(false)\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            }\n        ]);\n        return this._positionStrategy;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _scrollStrategy() {\n        return this._overlay.scrollStrategies.reposition();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * Returns the width of the input element, so the panel min-width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _isFieldEnabled() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled;\n    }\n}\nNxAutocompleteTriggerDirective.decorators = [\n    { type: Directive, args: [{\n                selector: `input[nxAutocomplete], textarea[nxAutocomplete]`,\n                host: {\n                    'role': 'combobox',\n                    'autocomplete': 'off',\n                    'aria-autocomplete': 'list',\n                    '[attr.aria-activedescendant]': 'activeOption?.id',\n                    '[attr.aria-expanded]': 'panelOpen.toString()',\n                    '[attr.aria-owns]': 'autocomplete?.id',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                },\n                exportAs: 'nxAutocompleteTrigger',\n                providers: [NX_AUTOCOMPLETE_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nNxAutocompleteTriggerDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NxFormfieldComponent, decorators: [{ type: Optional }, { type: Host }] },\n    { type: NxWordComponent, decorators: [{ type: Optional }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nNxAutocompleteTriggerDirective.propDecorators = {\n    autocomplete: [{ type: Input, args: ['nxAutocomplete',] }],\n    itemsCb: [{ type: Input, args: ['nxAutocompleteItems',] }],\n    debounce: [{ type: Input, args: ['nxAutocompleteDebounce',] }],\n    autocompleteDisabled: [{ type: Input, args: ['nxAutocompleteDisabled',] }]\n};\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionOffset Option offset\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxAutocompleteModule {\n}\nNxAutocompleteModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n                exports: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n                imports: [CommonModule, OverlayModule, A11yModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxAutocompleteModule, NxAutocompleteOptionSelected, NxAutocompleteOptionComponent, NxAutocompleteSelectedEvent, NxAutocompleteComponent, getNxAutocompleteMissingPanelError, NX_AUTOCOMPLETE_VALUE_ACCESSOR, NxAutocompleteTriggerDirective };\n\n//# sourceMappingURL=allianz-ngx-ndbx-autocomplete.js.map","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxMessageModule } from '@allianz/ngx-ndbx/message';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, InjectionToken, Inject, Optional, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ERROR_DEFAULT_OPTIONS = new InjectionToken('ERROR_DEFAULT_OPTIONS');\nclass NxErrorComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_changeDetectorRef, _defaultOptions) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._defaultOptions = _defaultOptions;\n        this._showIcon = true;\n        this._appearance = 'message';\n        if (this._defaultOptions && this._defaultOptions.appearance) {\n            this.appearance = this._defaultOptions.appearance;\n        }\n    }\n    /**\n     * Whether an icon should be displayed.\n     * @param {?} value\n     * @return {?}\n     */\n    set showIcon(value) {\n        this._showIcon = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get showIcon() {\n        return this._showIcon;\n    }\n    /**\n     * Whether the error should have message or text styling.\n     *\n     * Default is 'message'.\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        if (value !== this.appearance) {\n            this._appearance = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get appearance() {\n        return this._appearance;\n    }\n}\nNxErrorComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-error',\n                template: \"<!-- b2b (expert) error notification -->\\n<ng-container *ngIf=\\\"appearance === 'text'\\\">\\n  <nx-icon *ngIf=\\\"showIcon\\\" class=\\\"nx-error__icon\\\" [name]=\\\"'exclamation-triangle'\\\">\\n  </nx-icon>\\n  <div class=\\\"nx-error__content-wrapper\\\">\\n    <div class=\\\"nx-error__content\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"errorContent\\\"></ng-container>\\n    </div>\\n  </div>\\n</ng-container>\\n\\n<!-- b2c error notification -->\\n<nx-message *ngIf=\\\"appearance === 'message'\\\" [showIcon]=\\\"showIcon\\\" nxContext=\\\"error\\\">\\n  <ng-container [ngTemplateOutlet]=\\\"errorContent\\\"></ng-container>\\n</nx-message>\\n\\n<ng-template #errorContent>\\n  <ng-content></ng-content>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[attr.role]': '\"alert\"'\n                },\n                styles: [\":host{font-size:16px;line-height:20px;color:#dc3149;width:100%;display:block}:host .nx-error__content{line-height:20px}:host .nx-error__icon{font-size:20px;line-height:20px;color:#dc3149;margin-right:8px;float:left}\"]\n            }] }\n];\n/** @nocollapse */\nNxErrorComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ERROR_DEFAULT_OPTIONS,] }] }\n];\nNxErrorComponent.propDecorators = {\n    showIcon: [{ type: Input }],\n    appearance: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxErrorModule {\n}\nNxErrorModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxIconModule,\n                    NxMessageModule\n                ],\n                declarations: [\n                    NxErrorComponent\n                ],\n                exports: [\n                    NxErrorComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId = 0;\n/** @type {?} */\nconst DEFAULT_SIZE = 'large';\n/** @type {?} */\nconst LABEL_DEFAULT_OPTIONS = new InjectionToken('LABEL_DEFAULT_OPTIONS');\nclass NxLabelComponent {\n    /**\n     * @param {?} _defaultOptions\n     */\n    constructor(_defaultOptions) {\n        this._defaultOptions = _defaultOptions;\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._negative = false;\n        this._id = `nx-label-${nextId++}`;\n        this._size = (this._defaultOptions && this._defaultOptions.size) ? this._defaultOptions.size : DEFAULT_SIZE;\n    }\n    /**\n     * Sets the label to disabled\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Sets the label to disabled\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Sets the Id of the label\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        if (this._id !== value) {\n            this._id = value;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * **NDBX Expert option**\n     * Sets the appearance of the label\n     * @param {?} value\n     * @return {?}\n     */\n    set size(value) {\n        this._size = value;\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get size() {\n        return this._size;\n    }\n}\nNxLabelComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-label',\n                template: \"<label class=\\\"nx-label__content\\\">\\n  <ng-content></ng-content>\\n</label>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[attr.disabled]': 'disabled',\n                    '[attr.aria-labelledby]': 'id || null',\n                    '[class.nx-label--negative]': 'negative',\n                    '[class.nx-label--large]': 'size === \"large\"',\n                    '[class.nx-label--small]': 'size === \"small\"',\n                    '[attr.id]': 'id',\n                },\n                styles: [\":host{display:block;color:#414141}:host.nx-label--small{font-size:16px;line-height:24px;font-weight:600}:host.nx-label--large{font-size:20px;line-height:28px;letter-spacing:.2px;font-weight:300}:host[disabled=true] label{cursor:not-allowed}:host.nx-label--negative{color:#fff}\"]\n            }] }\n];\n/** @nocollapse */\nNxLabelComponent.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LABEL_DEFAULT_OPTIONS,] }] }\n];\nNxLabelComponent.propDecorators = {\n    disabled: [{ type: Input }],\n    negative: [{ type: Input }],\n    id: [{ type: Input }],\n    size: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxLabelModule {\n}\nNxLabelModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NxLabelComponent\n                ],\n                exports: [\n                    NxLabelComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxErrorModule, ERROR_DEFAULT_OPTIONS, NxErrorComponent, NxLabelModule, LABEL_DEFAULT_OPTIONS, NxLabelComponent };\n\n//# sourceMappingURL=allianz-ngx-ndbx-base.js.map","import { Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_SIZE = 'medium';\n/** @type {?} */\nconst DEFAULT_TYPE = 'primary';\n/** @type {?} */\nconst NX_BUTTON_HOST_BINDINGS = {\n    '[class.nx-button--primary]': 'type === \"primary\"',\n    '[class.nx-button--secondary]': 'type === \"secondary\"',\n    '[class.nx-button--tertiary]': 'type === \"tertiary\"',\n    '[class.nx-button--cta]': 'type === \"cta\"',\n    '[class.nx-button--emphasis]': 'type === \"emphasis\"',\n    '[class.nx-button--large]': 'size === \"large\"',\n    '[class.nx-button--medium]': 'size === \"medium\"',\n    '[class.nx-button--small-medium]': 'size === \"small-medium\"',\n    '[class.nx-button--small]': 'size === \"small\"',\n    '[class.nx-button--block]': 'block',\n    '[class.nx-button--negative]': 'negative',\n};\n/**\n * \\@docs-private\n */\nclass NxButtonBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     */\n    constructor(_changeDetectorRef, _elementRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * \\@docs-private\n         */\n        this.type = DEFAULT_TYPE;\n        /**\n         * \\@docs-private\n         */\n        this.size = DEFAULT_SIZE;\n        /**\n         * \\@docs-private\n         */\n        this.negative = false;\n        /**\n         * \\@docs-private\n         */\n        this.block = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        this._classNames = value;\n        const [type = null] = this._classNames.match(/primary|secondary|tertiary|cta|emphasis/) || [DEFAULT_TYPE];\n        this.type = (/** @type {?} */ (type));\n        const [size = null] = this._classNames.match(/small-medium|small|medium|large/) || [DEFAULT_SIZE];\n        this.size = (/** @type {?} */ (size));\n        this.negative = /negative/.test(this._classNames);\n        this.block = /block/.test(this._classNames);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n    /**\n     * \\@docs-private\n     * getter used for the modal component as a quickfix\n     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n     * way to reach the elementRef of the component until the modal gets refactored.\n     * @return {?}\n     */\n    get elementRef() {\n        return this._elementRef;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxButtonComponent extends NxButtonBase {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} elementRef\n     */\n    constructor(changeDetectorRef, elementRef) {\n        super(changeDetectorRef, elementRef);\n    }\n}\nNxButtonComponent.decorators = [\n    { type: Component, args: [{\n                template: \"<span class=\\\"nx-button__content-wrapper\\\">\\n  <ng-content></ng-content>\\n</span>\\n\",\n                // tslint:disable-next-line:component-selector\n                selector: 'button[nxButton]',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: NX_BUTTON_HOST_BINDINGS,\n                inputs: ['classNames:nxButton'],\n                styles: [\":host{border:2px solid transparent;border-radius:4px;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;line-height:24px;margin:0 0 24px;padding:10px 30px;text-transform:uppercase;transition:background-color .2s,border-color .2s,color .2s,box-shadow .2s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:auto;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;min-height:48px}:host:disabled{cursor:not-allowed}:host:focus{outline:transparent solid 2px}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]).nx-button--negative:focus,:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-button--primary){color:#fff;background-color:#007ab3}:host(.nx-button--primary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--primary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--primary):disabled{background-color:rgba(0,122,179,.4);border-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--primary.nx-button--negative){background-color:#fff;border-color:#fff;color:#006192}:host(.nx-button--primary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--primary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--primary.nx-button--negative):disabled{background-color:rgba(255,255,255,.4);border-color:transparent;color:rgba(65,65,65,.3)}:host(.nx-button--secondary){background-color:transparent;border-color:#007ab3;color:#006192}:host(.nx-button--secondary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--secondary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--secondary):disabled{background-color:transparent;border-color:rgba(0,122,179,.4);color:rgba(0,97,146,.4)}:host(.nx-button--secondary.nx-button--negative){color:#fff;border-color:#fff}:host(.nx-button--secondary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--secondary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--secondary.nx-button--negative):disabled{background-color:transparent;border-color:rgba(255,255,255,.4);color:rgba(255,255,255,.4)}:host(.nx-button--tertiary){background-color:transparent;color:#006192}:host(.nx-button--tertiary):hover{background-color:#ececec}:host(.nx-button--tertiary):active{background-color:#d9d9d9;box-shadow:none}:host(.nx-button--tertiary):disabled{background-color:transparent;color:rgba(0,97,146,.4)}:host(.nx-button--tertiary.nx-button--negative){color:#fff}:host(.nx-button--tertiary.nx-button--negative):hover{background-color:#d9d9d9;color:#006192}:host(.nx-button--tertiary.nx-button--negative):active{background-color:#c2c2c2;color:#006192}:host(.nx-button--tertiary.nx-button--negative):disabled{background-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--large){font-size:20px;min-height:72px;padding:22px 46px;line-height:24px}@media (max-width:703px){:host{display:block;width:100%}:host(.nx-button--large){padding:22px 30px}}:host(.nx-button--small-medium){display:inline-block;font-size:16px;padding:6px 22px;text-transform:none;line-height:24px;min-height:40px;width:auto}:host(.nx-button--small){display:inline-block;font-size:14px;padding:6px 14px;text-transform:none;line-height:16px;min-height:32px;width:auto}:host(.nx-button--cta){background-color:#3da556;color:#fff}:host(.nx-button--cta):hover{background-color:#348357}:host(.nx-button--cta):active{background-color:#276442}:host(.nx-button--cta):disabled{background-color:rgba(61,165,86,.4)}:host(.nx-button--emphasis){background-color:#f86200;color:#fff}:host(.nx-button--emphasis):hover{background-color:#e15200}:host(.nx-button--emphasis):active{background-color:#c15500}:host(.nx-button--emphasis):disabled{background-color:rgba(248,98,0,.4)}@media (min-width:704px){:host(.nx-button--block){display:block;width:100%}}:host .nx-button__content-wrapper{display:flex;align-items:center;justify-content:center}:host([nxiconbutton]){padding:0;font-size:24px;flex:0 0 auto}:host([nxiconbutton]).nx-button--small{width:32px;font-size:16px}:host([nxiconbutton]).nx-button--small-medium{width:40px}:host([nxiconbutton]).nx-button--medium{width:48px}:host([nxiconbutton]).nx-button--large{width:72px}\"]\n            }] }\n];\n/** @nocollapse */\nNxButtonComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxIconButtonComponent extends NxButtonBase {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} elementRef\n     */\n    constructor(changeDetectorRef, elementRef) {\n        super(changeDetectorRef, elementRef);\n    }\n}\nNxIconButtonComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'button[nxIconButton]',\n                template: \"<span class=\\\"nx-button__content-wrapper\\\">\\n  <ng-content></ng-content>\\n</span>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: NX_BUTTON_HOST_BINDINGS,\n                inputs: ['classNames:nxIconButton'],\n                styles: [\":host{border:2px solid transparent;border-radius:4px;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;line-height:24px;margin:0 0 24px;padding:10px 30px;text-transform:uppercase;transition:background-color .2s,border-color .2s,color .2s,box-shadow .2s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:auto;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;min-height:48px}:host:disabled{cursor:not-allowed}:host:focus{outline:transparent solid 2px}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]).nx-button--negative:focus,:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-button--primary){color:#fff;background-color:#007ab3}:host(.nx-button--primary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--primary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--primary):disabled{background-color:rgba(0,122,179,.4);border-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--primary.nx-button--negative){background-color:#fff;border-color:#fff;color:#006192}:host(.nx-button--primary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--primary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--primary.nx-button--negative):disabled{background-color:rgba(255,255,255,.4);border-color:transparent;color:rgba(65,65,65,.3)}:host(.nx-button--secondary){background-color:transparent;border-color:#007ab3;color:#006192}:host(.nx-button--secondary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--secondary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--secondary):disabled{background-color:transparent;border-color:rgba(0,122,179,.4);color:rgba(0,97,146,.4)}:host(.nx-button--secondary.nx-button--negative){color:#fff;border-color:#fff}:host(.nx-button--secondary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--secondary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--secondary.nx-button--negative):disabled{background-color:transparent;border-color:rgba(255,255,255,.4);color:rgba(255,255,255,.4)}:host(.nx-button--tertiary){background-color:transparent;color:#006192}:host(.nx-button--tertiary):hover{background-color:#ececec}:host(.nx-button--tertiary):active{background-color:#d9d9d9;box-shadow:none}:host(.nx-button--tertiary):disabled{background-color:transparent;color:rgba(0,97,146,.4)}:host(.nx-button--tertiary.nx-button--negative){color:#fff}:host(.nx-button--tertiary.nx-button--negative):hover{background-color:#d9d9d9;color:#006192}:host(.nx-button--tertiary.nx-button--negative):active{background-color:#c2c2c2;color:#006192}:host(.nx-button--tertiary.nx-button--negative):disabled{background-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--large){font-size:20px;min-height:72px;padding:22px 46px;line-height:24px}@media (max-width:703px){:host{display:block;width:100%}:host(.nx-button--large){padding:22px 30px}}:host(.nx-button--small-medium){display:inline-block;font-size:16px;padding:6px 22px;text-transform:none;line-height:24px;min-height:40px;width:auto}:host(.nx-button--small){display:inline-block;font-size:14px;padding:6px 14px;text-transform:none;line-height:16px;min-height:32px;width:auto}:host(.nx-button--cta){background-color:#3da556;color:#fff}:host(.nx-button--cta):hover{background-color:#348357}:host(.nx-button--cta):active{background-color:#276442}:host(.nx-button--cta):disabled{background-color:rgba(61,165,86,.4)}:host(.nx-button--emphasis){background-color:#f86200;color:#fff}:host(.nx-button--emphasis):hover{background-color:#e15200}:host(.nx-button--emphasis):active{background-color:#c15500}:host(.nx-button--emphasis):disabled{background-color:rgba(248,98,0,.4)}@media (min-width:704px){:host(.nx-button--block){display:block;width:100%}}:host .nx-button__content-wrapper{display:flex;align-items:center;justify-content:center}:host([nxiconbutton]){padding:0;font-size:24px;flex:0 0 auto}:host([nxiconbutton]).nx-button--small{width:32px;font-size:16px}:host([nxiconbutton]).nx-button--small-medium{width:40px}:host([nxiconbutton]).nx-button--medium{width:48px}:host([nxiconbutton]).nx-button--large{width:72px}\"]\n            }] }\n];\n/** @nocollapse */\nNxIconButtonComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxButtonModule {\n}\nNxButtonModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxButtonComponent, NxIconButtonComponent],\n                exports: [NxButtonComponent, NxIconButtonComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxButtonModule, NxButtonComponent, NxIconButtonComponent, NX_BUTTON_HOST_BINDINGS as ɵa, NxButtonBase as ɵb };\n\n//# sourceMappingURL=allianz-ngx-ndbx-button.js.map","import { CommonModule } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, Component, EventEmitter, forwardRef, Input, Output, ChangeDetectorRef, ContentChildren, Optional, Self, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxLabelComponent, NxLabelModule } from '@allianz/ngx-ndbx/base';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId = 0;\nclass NxCheckboxChangeEvent {\n    /**\n     * @param {?} checked\n     * @param {?} value\n     * @param {?} checkbox\n     */\n    constructor(checked, value, checkbox) {\n        this.checked = checked;\n        this.value = value;\n        this.checkbox = checkbox;\n    }\n}\nclass NxCheckboxGroupComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} ngControl\n     */\n    constructor(_changeDetectorRef, ngControl) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.ngControl = ngControl;\n        this._stateChanges = new Subject();\n        this.selectionChange = new EventEmitter();\n        this._id = `nx-checkbox-group-${nextId++}`;\n        this._disabled = false;\n        this._negative = false;\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * Sets the Id of the checkbox group.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        if (this._id !== value) {\n            this._id = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Sets the name of the checkboxes inside the nx-checkbox-group.\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Disables all checkboxes inside the nx-checkbox-group.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._label) {\n            this._label.disabled = this._disabled;\n        }\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Set the negative styles for all the checkboxes inside the nx-checkbox-group\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Sets the label size of the checkboxes inside the group\n     * @param {?} value\n     * @return {?}\n     */\n    set labelSize(value) {\n        this._labelSize = value;\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get labelSize() {\n        return this._labelSize;\n    }\n    /**\n     * Whether the nx-checkbox-group are required.\n     * @return {?}\n     */\n    get required() {\n        return this._required;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.ngControl) {\n            this._value = this._checkboxes.filter((/**\n             * @param {?} checkbox\n             * @return {?}\n             */\n            checkbox => checkbox.checked)).map((/**\n             * @param {?} cb\n             * @return {?}\n             */\n            cb => cb.value));\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._onChange(this._value);\n            }));\n        }\n        this._updateSelectedCheckboxFromValue();\n        this._checkboxes.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._value = this._checkboxes.filter((/**\n             * @param {?} checkbox\n             * @return {?}\n             */\n            checkbox => checkbox.checked)).map((/**\n             * @param {?} cb\n             * @return {?}\n             */\n            cb => cb.value));\n            if (this.ngControl) {\n                this.ngControl.control.setValue(this._value);\n            }\n            this._updateSelectedCheckboxFromValue();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this._value) {\n            this._value = value;\n        }\n        this._updateSelectedCheckboxFromValue();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateSelectedCheckboxFromValue() {\n        if (this._checkboxes !== null) {\n            if (this._value) {\n                this._checkboxes.map((/**\n                 * @param {?} checkbox\n                 * @return {?}\n                 */\n                checkbox => {\n                    if (this._value.indexOf(checkbox.value) !== -1) {\n                        checkbox.checked = true;\n                    }\n                }));\n            }\n        }\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    change(value) {\n        value = this._checkboxes.filter((/**\n         * @param {?} checkbox\n         * @return {?}\n         */\n        checkbox => checkbox.checked)).map((/**\n         * @param {?} cb\n         * @return {?}\n         */\n        cb => cb.value));\n        this._onChange(value);\n        if (this._onTouched) {\n            this._onTouched();\n        }\n        this.selectionChange.emit(new NxCheckboxChangeEvent(value.checked, value.value, value));\n    }\n}\nNxCheckboxGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-checkbox-group',\n                template: \"<div>\\n  <div class=\\\"nx-checkbox-group__label\\\">\\n    <ng-content select=\\\"nx-label\\\"></ng-content>\\n  </div>\\n  <div class=\\\"nx-checkbox-group__errors\\\">\\n    <ng-content select=\\\"nx-error\\\"></ng-content>\\n  </div>\\n  <div class=\\\"nx-checkbox-group__controls\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-checkbox-group]': 'true',\n                    '[class.nx-checkbox-group--negative]': 'negative',\n                    '[attr.id]': 'id',\n                    '[attr.required]': 'required',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-labelledby]': 'this._label?.id  || null',\n                    '[attr.role]': '\"group\"',\n                },\n                styles: [\":host ::ng-deep nx-error{margin-bottom:8px}:host ::ng-deep nx-label{margin-bottom:16px;display:block}:host.nx-checkbox-group--negative ::ng-deep nx-error,:host.nx-checkbox-group--negative ::ng-deep nx-icon.nx-error__icon,:host.nx-checkbox-group--negative ::ng-deep nx-label{color:#fff}\"]\n            }] }\n];\n/** @nocollapse */\nNxCheckboxGroupComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nNxCheckboxGroupComponent.propDecorators = {\n    _checkboxes: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => NxCheckboxComponent)), { descendants: true },] }],\n    _label: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => NxLabelComponent)), {},] }],\n    selectionChange: [{ type: Output }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    disabled: [{ type: Input }],\n    negative: [{ type: Input }],\n    labelSize: [{ type: Input }],\n    required: [{ type: Input }]\n};\nclass NxCheckboxComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} checkboxGroup\n     */\n    constructor(_changeDetectorRef, checkboxGroup) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.checkboxGroup = checkboxGroup;\n        this._id = (nextId++).toString();\n        this._disabled = false;\n        this._negative = false;\n        this._labelSize = 'small';\n        this._checked = false;\n        this._name = null;\n        this._indeterminate = false;\n        /**\n         * An event emitted when the indeterminate value has changed\n         */\n        this.indeterminateChange = new EventEmitter(false);\n        /**\n         * An event emitted when the checked value has changed.\n         *\n         * Emits the boolean checked value of the changed checkbox.\n         */\n        this.checkedChange = new EventEmitter(false);\n        /**\n         * An event emitted when the checked value has changed.\n         *\n         * Emits a NxCheckboxChangeEvent.\n         */\n        this.checkboxChange = new EventEmitter();\n        this.onChangeCallback = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Id of the checkbox.\n     *\n     * If not set, the checkbox gets an incremented value by default.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        if (value !== this._id) {\n            this._id = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return `nx-checkbox-${this._id}`;\n    }\n    /**\n     * Name of the checkbox.\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return (this.checkboxGroup && this.checkboxGroup.name) ? this.checkboxGroup.name : this._name;\n    }\n    /**\n     * Whether the checkbox is disabled.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return (this.checkboxGroup && this.checkboxGroup.disabled) ? this.checkboxGroup.disabled : this._disabled;\n    }\n    /**\n     * Sets the label size of the checkbox. Default value: small\n     * @param {?} value\n     * @return {?}\n     */\n    set labelSize(value) {\n        this._labelSize = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get labelSize() {\n        return (this.checkboxGroup && this.checkboxGroup.labelSize) ? this.checkboxGroup.labelSize : this._labelSize;\n    }\n    /**\n     * Whether the checkbox has negative styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._negative) {\n            this._negative = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return (this.checkboxGroup && this.checkboxGroup.negative) ? this.checkboxGroup.negative : this._negative;\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            if (this._indeterminate) {\n                this._setIndeterminate(false);\n            }\n            this._setChecked(newValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get checked() {\n        return this._checked;\n    }\n    /**\n     * Whether the checkbox is indeterminated.\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this._indeterminate !== newValue) {\n            if (this._checked) {\n                this._setChecked(false);\n            }\n            this._setIndeterminate(newValue);\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Sets the value of the checkbox. Default value is the checked status.\n     * @return {?}\n     */\n    get value() {\n        return this._value ? this._value : this.checked.toString();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._value = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    _controlInvalid() {\n        return !!(this.checkboxGroup && this.checkboxGroup.ngControl && this.checkboxGroup.ngControl.invalid\n            && this.checkboxGroup.ngControl.touched);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.checkboxGroup) {\n            this.name = this.checkboxGroup.name;\n            // when relevant properties of the parent like name and disabled change\n            // we need to let change detection know that the template needs an update\n            this._parentChangeSubscription = this.checkboxGroup._stateChanges.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._parentChangeSubscription) {\n            this._parentChangeSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setIndeterminate(value) {\n        this._indeterminate = value;\n        this.indeterminateChange.emit(this._indeterminate);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setChecked(value) {\n        this._checked = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Toggles the checked state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this.onChangeCallback(this.checked);\n        if (this.checkboxGroup !== null) {\n            this.checkboxGroup.change(this);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (value === null) {\n            value = false;\n        }\n        if (value !== this.checked) {\n            this.checked = value;\n        }\n    }\n    /**\n     * @param {?} onChange\n     * @return {?}\n     */\n    registerOnChange(onChange) {\n        this.onChangeCallback = onChange;\n    }\n    /**\n     * @param {?} onTouched\n     * @return {?}\n     */\n    registerOnTouched(onTouched) {\n        this.onTouchedCallback = onTouched;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    touch() {\n        this.onTouchedCallback();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n        event.stopPropagation();\n        if (!this.disabled) {\n            this.toggle();\n            this.checkedChange.emit(this._checked);\n            this.checkboxChange.emit(this._createChangeEvent(this._checked));\n        }\n    }\n    /**\n     * \\@docs-private\n     * @private\n     * @param {?} checkedValue\n     * @return {?}\n     */\n    _createChangeEvent(checkedValue) {\n        /** @type {?} */\n        const event = new NxCheckboxChangeEvent(checkedValue, this.value, this);\n        event.checked = checkedValue;\n        event.value = this.value;\n        event.checkbox = this;\n        return event;\n    }\n}\nNxCheckboxComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-checkbox',\n                template: \"<input\\n  type=\\\"checkbox\\\"\\n  [id]=\\\"id\\\"\\n  [name]=\\\"name\\\"\\n  [checked]=\\\"checked\\\"\\n  [indeterminate]=\\\"indeterminate\\\" [disabled]=\\\"disabled\\\"\\n  (blur)=\\\"touch()\\\"\\n  [attr.aria-labelledby]=\\\"id + '-label'\\\"\\n  (click)=\\\"_onInputClick($event)\\\"\\n  class=\\\"nx-checkbox__input\\\"\\n  [value]=\\\"value\\\"\\n>\\n\\n<label [id]=\\\"id + '-label'\\\" [attr.for]=\\\"id\\\" class=\\\"nx-checkbox__label\\\">\\n    <span class=\\\"nx-checkbox__control\\\">\\n        <nx-icon *ngIf=\\\"checked\\\" name=\\\"check\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n        <div *ngIf=\\\"indeterminate\\\" class=\\\"nx-checkbox__indeterminate-indicator\\\"></div>\\n    </span>\\n    <div class=\\\"nx-checkbox__label-text\\\">\\n        <ng-content></ng-content>\\n    </div>\\n</label>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-checkbox]': 'true',\n                    '[class.disabled]': 'disabled',\n                    '[class.nx-checkbox--label-large]': 'labelSize === \"large\"',\n                    '[class.nx-checkbox--negative]': 'negative',\n                    '[attr.required]': 'required',\n                    '[class.has-error]': '_controlInvalid() || null',\n                    '[attr.aria-invalid]': '_controlInvalid() || null',\n                },\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxCheckboxComponent)),\n                        multi: true\n                    }\n                ],\n                styles: [\":host{display:block;position:relative;margin-bottom:16px}:host.has-error .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control,:host.ng-invalid .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{background-color:#dc3149;border-color:#dc3149}:host.has-error .nx-checkbox__control,:host.ng-invalid .nx-checkbox__control{border-color:#dc3149}:host.has-error .nx-checkbox__indeterminate-indicator,:host.ng-invalid .nx-checkbox__indeterminate-indicator{background-color:#dc3149}.nx-checkbox__input{opacity:0;position:absolute}.nx-checkbox__label{font-size:16px;line-height:24px;cursor:pointer;display:flex}:host(.nx-checkbox--label-large) .nx-checkbox__label{font-size:20px;line-height:28px;letter-spacing:.2px}.nx-checkbox__label-text{padding:0;margin-left:12px}.nx-checkbox__control{background-color:#fff;border:2px solid #767676;border-radius:4px;color:#fff;font-size:20px;height:24px;width:24px;min-width:24px;display:flex;justify-content:center;align-items:center;z-index:0;cursor:pointer}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{border-radius:4px}.nx-checkbox__indeterminate-indicator{background-color:#007ab3;height:2px;width:10px}.nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{background-color:#007ab3;border-color:#007ab3}.nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:#ececec;border-color:#c2c2c2;cursor:not-allowed}.nx-checkbox__input:checked:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:#c2c2c2}.nx-checkbox__input:disabled+.nx-checkbox__label{cursor:not-allowed;color:#c2c2c2}.nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#c2c2c2}:host(.nx-checkbox--negative) .nx-checkbox__control{border-color:#fff;background-color:transparent}:host(.nx-checkbox--negative) .nx-checkbox__label{color:#fff}:host(.nx-checkbox--negative) .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{color:#000;background-color:#fff;border-color:#fff}:host(.nx-checkbox--negative) .nx-checkbox__input:checked:disabled+.nx-checkbox__label .nx-checkbox__control{color:rgba(255,255,255,.4);border-color:transparent;background-color:rgba(194,194,194,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label{color:rgba(255,255,255,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:rgba(153,153,153,.4);border-color:rgba(217,217,217,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:rgba(217,217,217,.4)}@media screen and (-ms-high-contrast:active){.nx-checkbox__input:focus+.nx-checkbox__label{color:#fff}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control::after{background-color:#fff}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{border-color:#fff}.nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{border-color:#ff0;color:#ff0}.nx-checkbox__input:focus:checked+.nx-checkbox__label .nx-checkbox__control{background-color:none;border-color:#fff;color:#fff}.nx-checkbox__label{color:#ff0}.nx-checkbox__input:indeterminate+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#ff0}.nx-checkbox__input:indeterminate:focus+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#fff}}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__control{background-color:#075994}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#075994}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled])+.nx-checkbox__label .nx-checkbox__control{border-color:#075994}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__control{background-color:#003781}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#003781}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled])+.nx-checkbox__label .nx-checkbox__control{border-color:#003781}:host-context([data-whatinput=keyboard]) .nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxCheckboxComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NxCheckboxGroupComponent, decorators: [{ type: Optional }] }\n];\nNxCheckboxComponent.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    disabled: [{ type: Input }],\n    labelSize: [{ type: Input }],\n    negative: [{ type: Input }],\n    checked: [{ type: Input }],\n    indeterminate: [{ type: Input }],\n    required: [{ type: Input }],\n    value: [{ type: Input }],\n    indeterminateChange: [{ type: Output }],\n    checkedChange: [{ type: Output }],\n    checkboxChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxCheckboxModule {\n}\nNxCheckboxModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NxCheckboxComponent,\n                    NxCheckboxGroupComponent,\n                ],\n                exports: [\n                    NxCheckboxComponent,\n                    NxCheckboxGroupComponent,\n                ],\n                imports: [\n                    CommonModule,\n                    NxIconModule,\n                    NxLabelModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxCheckboxModule, NxCheckboxChangeEvent, NxCheckboxGroupComponent, NxCheckboxComponent };\n\n//# sourceMappingURL=allianz-ngx-ndbx-checkbox.js.map","import { appendClasses, mapClassNames, removeClasses } from '@allianz/ngx-ndbx/utils';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst BREAKPOINT_MOBILE = '(max-width: 703px)';\n/** @type {?} */\nconst BREAKPOINT_TABLET = '(min-width: 704px) and (max-width: 992px)';\n/** @type {?} */\nconst BREAKPOINT_DESKTOP = '(min-width: 993px)';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MappedStyles {\n    /**\n     * @param {?} mapping\n     * @param {?=} baseClasses\n     * @param {?=} _elementRef\n     * @param {?=} _renderer\n     */\n    constructor(mapping, baseClasses = [], _elementRef, _renderer) {\n        this.mapping = mapping;\n        this.baseClasses = baseClasses;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.classNames = '';\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        removeClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n        this._classNamesSanitized = mapClassNames(value, this.baseClasses, this.mapping);\n        this._classNames = value;\n        appendClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BREAKPOINT_MOBILE, BREAKPOINT_TABLET, BREAKPOINT_DESKTOP, MappedStyles };\n\n//# sourceMappingURL=allianz-ngx-ndbx-core.js.map","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { CommonModule } from '@angular/common';\nimport { NxCheckboxModule } from '@allianz/ngx-ndbx/checkbox';\nimport { ActiveDescendantKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, SHIFT, TAB } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { NxFormfieldControl, NxFormfieldComponent, NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { Subject, defer, merge } from 'rxjs';\nimport { takeUntil, filter, map, startWith, switchMap, take } from 'rxjs/operators';\nimport { Input, ChangeDetectionStrategy, Component, ChangeDetectorRef, ElementRef, EventEmitter, Inject, Optional, Output, ViewChild, Directive, TemplateRef, Attribute, ContentChildren, isDevMode, NgZone, Self, ContentChild, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiselect` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getNxDropdownNonArrayValueError() {\n    return Error('Value must be an array in multiselect mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getNxDropdownNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass NxDropdownControl extends NxFormfieldControl {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the dropdown should allow multi selection and additional checkboxes are shown.\n         *\n         * Note: Please make sure the value you bind is an array. If not an error is thrown!\n         */\n        this.isMultiSelect = false;\n    }\n}\nNxDropdownControl.propDecorators = {\n    isMultiSelect: [{ type: Input, args: ['nxIsMultiselect',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxDropdownGroupComponent {\n}\nNxDropdownGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-dropdown-group',\n                template: \"<div class=\\\"nx-dropdown-results__group\\\">\\n  <div class=\\\"nx-dropdown-results__group-label\\\">{{label}}</div>\\n  <ng-content></ng-content>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:block}:host:first-child .nx-dropdown-results__group{background-color:rgba(236,236,236,.5)}:host:first-child .nx-dropdown-results__group-label{padding-top:16px}.nx-dropdown-results__group-label{font-style:italic;padding:24px 32px 16px;font-weight:700;font-size:12px;line-height:16px}\"]\n            }] }\n];\nNxDropdownGroupComponent.propDecorators = {\n    label: [{ type: Input, args: ['nxLabel',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxDropdownItemChange {\n    /**\n     * @param {?} item\n     * @param {?=} isUserInput\n     */\n    constructor(item, isUserInput = false) {\n        this.item = item;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * the unique id counter\n * @type {?}\n */\nlet nextId = 0;\nclass NxDropdownItemComponent {\n    /**\n     * @param {?} _dropdown\n     * @param {?} group\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     */\n    constructor(_dropdown, group, _changeDetectorRef, _elementRef) {\n        this._dropdown = _dropdown;\n        this.group = group;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._hidden = false;\n        this._mostRecentViewValue = '';\n        this._id = `nx-dropdown-item-${nextId++}`;\n        this._selected = false;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n        ((/** @type {?} */ (this._dropdown))).filterChanges.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            this._showOrHideByFilter(value);\n        }));\n        // reset the hidden state when dropdown closes that on next open the user is seeing the full list again\n        ((/** @type {?} */ (this._dropdown)))._closedStream.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._hidden = false;\n        }));\n    }\n    /**\n     * The unique ID of the option.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * Whether the item is selected.\n     * @return {?}\n     */\n    get selected() {\n        return this._selected;\n    }\n    /**\n     * Whether the item is active.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * \\@docs-private\n     * Whether the parent dropdown is in multiselect mode.\n     * @return {?}\n     */\n    get multiselect() {\n        return this._dropdown && this._dropdown.isMultiSelect;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since the parent dropdown component could be using the item's label to display the selected values\n        // and it doesn't have a way of knowing if the item's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._destroy.next();\n        this._destroy.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onClick(event) {\n        /* preventDefault to stop triggering the event twice when you click on the checkbox or the label inside the item */\n        event.preventDefault();\n        event.stopPropagation();\n        this._selectViaInteraction();\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        this._selected = this.multiselect ? !this._selected : true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent(true);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    show() {\n        this._hidden = false;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    hide() {\n        this._hidden = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} search\n     * @return {?}\n     */\n    _showOrHideByFilter(search) {\n        /** @type {?} */\n        const constraint = ((/** @type {?} */ (this._dropdown))).filterFn(search, this.viewValue);\n        this._hidden = constraint ? false : true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get _formattedValue() {\n        return ((/** @type {?} */ (this._dropdown))).valueFormatter(this.value);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get viewValue() {\n        return (this._elementRef.nativeElement.textContent || '').trim();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new NxDropdownItemChange(this, isUserInput));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    setActiveStyles() {\n        this._active = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    setInactiveStyles() {\n        this._active = false;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this.value;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    _isContentEmpty(element) {\n        return element.children.length === 0 && !element.textContent.trim();\n    }\n    /**\n     * @return {?}\n     */\n    _onLabelChange() {\n        // trigger change detection when the label content changes for the case that ng-content was empty before.\n        // this is also important when the label comes in deferred, e.g. by a delayed observable,\n        // then first the default label derived from the value is shown\n        // and after the value from the async observable is ready we need to trigger change detection that the derived label\n        // gets hidden again.\n        // Notice(!): the event of (cdkObserveContent) is run outside of the ngZone\n        // We run detectChanges directly here as markForCheck wasn't enough to always trigger change detection correctly\n        this._changeDetectorRef.detectChanges();\n    }\n}\nNxDropdownItemComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-dropdown-item',\n                template: \"<div #container class=\\\"nx-dropdown-results__option\\\"\\n     [ngClass]=\\\"{'nx-dropdown-results__option--selected': selected}\\\">\\n\\n   <nx-checkbox *ngIf=\\\"multiselect\\\" [checked]=\\\"selected\\\">\\n      <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n    </nx-checkbox>\\n\\n    <span *ngIf=\\\"!multiselect\\\" class=\\\"nx-dropdown-results__option-checkicon\\\">\\n       <nx-icon name=\\\"check\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n    </span>\\n\\n    <ng-container *ngIf=\\\"!multiselect\\\">\\n      <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n    </ng-container>\\n</div>\\n\\n<ng-template #contentTemplate>\\n  <div class=\\\"nx-dropdown-results__option-label\\\" >\\n    <span #content (cdkObserveContent)=\\\"_onLabelChange()\\\">\\n      <ng-content></ng-content>\\n    </span>\\n    <ng-container *ngIf=\\\"_isContentEmpty(content)\\\">\\n      {{_formattedValue}}\\n    </ng-container>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[id]': 'id',\n                    'role': 'option',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[class.nx-hidden]': '_hidden',\n                    '[class.nx-dropdown-item--active]': 'active',\n                    '[class.nx-selected]': 'selected',\n                    '[class.nx-multiselect]': 'multiselect',\n                    '(click)': '_onClick($event)'\n                },\n                styles: [\":host{display:block}:host(.nx-hidden){display:none}:host:first-child .nx-dropdown-results__option{padding-top:16px}nx-checkbox{margin-bottom:0}.nx-dropdown-results__option{font-size:20px;line-height:28px;letter-spacing:.2px;padding:0 32px 16px 8px;cursor:pointer;position:relative;display:flex;max-width:100%;white-space:nowrap}.nx-dropdown-results__option-label{overflow:hidden;text-overflow:ellipsis;padding:0 12px;margin:0 -12px}:host(.nx-multiselect) .nx-dropdown-results__option{display:block;padding-left:32px}:host(.nx-multiselect) ::ng-deep .nx-checkbox__label{height:28px;display:flex;align-items:center}:host(.nx-dropdown-item--active),:host:hover{color:#007ab3}@media screen and (-ms-high-contrast:active){:host(.nx-dropdown-item--active),:host:hover{color:highlightText}}:host(.nx-selected) .nx-dropdown-results__option-checkicon{opacity:1}.nx-dropdown-results__option-checkicon{opacity:0;width:16px;height:16px;margin-right:8px}.nx-dropdown-results__option-checkicon nx-icon{font-size:16px}:host-context([data-whatinput=keyboard]).nx-dropdown-item--active .nx-dropdown-results__option .nx-dropdown-results__option-label{border-radius:4px;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host-context([data-whatinput=keyboard]).nx-multiselect.nx-dropdown-item--active .nx-dropdown-results__option .nx-dropdown-results__option-label{box-shadow:none}:host-context([data-whatinput=keyboard]).nx-multiselect.nx-dropdown-item--active ::ng-deep .nx-checkbox__label{border-radius:4px;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-selected.nx-dropdown-item--active) .nx-dropdown-results__option-label{padding-left:24px;margin-left:-24px}:host ::ng-deep .nx-checkbox__label{padding:0 4px;margin:0 -4px}\"]\n            }] }\n];\n/** @nocollapse */\nNxDropdownItemComponent.ctorParameters = () => [\n    { type: NxDropdownControl, decorators: [{ type: Inject, args: [NxDropdownControl,] }] },\n    { type: NxDropdownGroupComponent, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\nNxDropdownItemComponent.propDecorators = {\n    value: [{ type: Input, args: ['nxValue',] }],\n    onSelectionChange: [{ type: Output }],\n    containerElement: [{ type: ViewChild, args: ['container',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This Directive solely purpose is to mark given ng-template and project it into the required destination.\nclass NxDropdownClosedLabelDirective {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNxDropdownClosedLabelDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxClosedLabel]'\n            },] }\n];\n/** @nocollapse */\nNxDropdownClosedLabelDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Change event object that is emitted when the select value has changed.\n * @template T\n */\nclass NxDropdownSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// used in calculation of scrolltop to correctly show some space to the top of the panel\n/** @type {?} */\nconst itemPadding = 16;\n// Max-height: 6 items x 44px + 16px padding before first item\n/** @type {?} */\nconst SELECT_PANEL_MAX_HEIGHT = 280;\nclass NxDropdownComponent extends NxDropdownControl {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} formFieldComponent\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     */\n    constructor(_changeDetectorRef, _elementRef, _ngZone, tabIndex, formFieldComponent, ngControl, _parentForm, _parentFormGroup) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this.formFieldComponent = formFieldComponent;\n        this.ngControl = ngControl;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        // The dropdown currently doesn't support readonly of the NxFormfieldControl so we hardcode it here\n        this.readonly = false;\n        this._disabled = false;\n        this._focused = false;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * \\@docs-private\n         */\n        this.errorState = false;\n        /**\n         * The scroltop of the panelBody.\n         */\n        this._scrollTop = 0;\n        /**\n         * The minimal space between the viewport and the overlay\n         */\n        this._overlayViewportMargin = 16;\n        /**\n         * \\@docs-private\n         * Emits when internal state changes to inform formfield about it.\n         */\n        this.stateChanges = new Subject();\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        this._tabIndex = 0;\n        /**\n         * \\@docs-private\n         */\n        this.currentFilter = '';\n        /**\n         * Label to describe the component.\n         */\n        this._ariaLabel = '';\n        this._style = '';\n        /**\n         * Whether the dropdown should render in its negative style or not.\n         */\n        this._negative = false;\n        /**\n         * Whether the dropdown should be shown with an additional filter input.\n         */\n        this.showFilter = false;\n        /**\n         * Text displayed as placeholder for the filter.\n         */\n        this.filterPlaceholder = '';\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the user types in the filter input.\n         */\n        this.filterChanges = new Subject();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Event emitted when the selected value has been changed.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * \\@docs-private\n         */\n        this.optionSelectionChanges = defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.options) {\n                return merge(...this.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }));\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [{\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top'\n            }, {\n                originX: 'start',\n                originY: 'center',\n                overlayX: 'start',\n                overlayY: 'center'\n            }, {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            }];\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * Function that transforms the value into a string.\n         * This function is used for displaying and filtering the content\n         * ( Default: (value) => value ? value.toString() : null; ).\n         */\n        this.valueFormatter = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            return value == null ? '' : value.toString();\n        });\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._filterFn = (/**\n         * @param {?} search\n         * @param {?} itemValue\n         * @return {?}\n         */\n        (search, itemValue) => {\n            return itemValue.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) >= 0;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this.tabIndex = parseInt(tabIndex, 10) || 0;\n    }\n    /**\n     * @return {?}\n     */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    /**\n     * Selected value\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n            this._onChange(newValue);\n        }\n    }\n    /**\n     * Whether the dropdown is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n    }\n    /**\n     * If set to 'negative', the component is displayed with the negative set of styles.\n     * @param {?} value\n     * @return {?}\n     */\n    set styles(value) {\n        if (this._style === value) {\n            return;\n        }\n        this._style = value;\n        this._negative = !!this._style.match(/negative/);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get closedDropdownLabel() {\n        return this._closedDropdownLabel;\n    }\n    /**\n     * \\@docs-private\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.isMultiSelect ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set panelOpen(value) {\n        this._panelOpen = value;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get label() {\n        return this.formFieldComponent ? this.formFieldComponent.label : '';\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getNxDropdownNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Function to be used when the user types into the search filter. The first argument is the user input,\n     * the second argument is the dropdown item value. The dropdown items will use this function to set their\n     * visibility state.\n     * A boolean should be returned.\n     * @return {?}\n     */\n    get filterFn() { return this._filterFn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set filterFn(fn) {\n        if (typeof fn !== 'function') {\n            throw getNxDropdownNonFunctionValueError();\n        }\n        this._filterFn = fn;\n    }\n    /**\n     * \\@docs-private\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this.panelOpen;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get elementRef() {\n        return this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.isMultiSelect);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._closedDropdownLabel =\n            this._customClosedDropdownLabel && this._customClosedDropdownLabel.templateRef || this._defaultClosedDropdownLabel;\n        this._initKeyManager();\n        this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    updateErrorState() {\n        /** @type {?} */\n        const oldState = this.errorState;\n        /** @type {?} */\n        const parent = this._parentFormGroup || this._parentForm;\n        /** @type {?} */\n        const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n        /** @type {?} */\n        const newState = this.isErrorState(control, parent);\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead()\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation('ltr')\n            .skipPredicate((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._hidden));\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.closePanel();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                // Delay the auto scrolling until all items have settled otherwise the item containers might\n                // not exist yet\n                this._ngZone.onStable\n                    .asObservable()\n                    .pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => this._scrollActiveOptionIntoView()));\n            }\n            else if (!this._panelOpen && !this.isMultiSelect && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.item, event.isUserInput);\n            if (event.isUserInput && !this.isMultiSelect && this._panelOpen) {\n                this.closePanel();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // defer it for the next cycle to not run in changed after checked errors\n            // the combination of dropdown-item notifying parent and when the parent\n            // tries to fetch the triggerValue from the child throws these errors\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            }));\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this.isMultiSelect) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.isMultiSelect) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.isMultiSelect && value) {\n            if (!Array.isArray(value)) {\n                throw getNxDropdownNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.isMultiSelect) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new NxDropdownSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.isMultiSelect) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => options.indexOf(a) - options.indexOf(b)));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Focuses the select element.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * Opens the panel of the dropdown.\n     * @return {?}\n     */\n    openPanel() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._panelOpen = true;\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        this._keyManager.withHorizontalOrientation(null);\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Closes the panel of the dropdown.\n     * @return {?}\n     */\n    closePanel() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation('ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n            this.openedChange.emit(false);\n            // defer the focus if the dropdown triggers actions that detach\n            // a template/view from the DOM to prevent changed after checked errors\n            setTimeout((/**\n             * @return {?}\n             */\n            () => this.focus()));\n        }\n    }\n    // calculate inital scrollTop when the dropdown opens\n    // scrolls the selected item to the middle of the panel if possible\n    /**\n     * @private\n     * @return {?}\n     */\n    _calculateScrollTop() {\n        // reset the scrolltop to make calculation easier\n        this.panelBody.nativeElement.scrollTop = 0;\n        this._scrollTop = 0;\n        if (!this.empty) {\n            /** @type {?} */\n            const offset = this._getItemOffset(this._keyManager.activeItem);\n            /** @type {?} */\n            const panelHeight = this.panelBody.nativeElement.offsetHeight;\n            /** @type {?} */\n            const panelRect = this.panelBody.nativeElement.getBoundingClientRect();\n            /** @type {?} */\n            const middleOfPanel = panelRect.top + panelHeight / 2;\n            /** @type {?} */\n            const activeItemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n            if (offset > middleOfPanel) {\n                // because we reset the scrollTop to 0 at the top we can simply take the middleOfPanel which is our\n                // target position for the item and subtract it from the offset (which is now always relative to the viewport)\n                // to middle out the text a bit more add half of the height\n                // (this is still a few pixels off because the container is a bit larger than the font)\n                this._scrollTop = offset - middleOfPanel + (activeItemRect.height - itemPadding) / 2;\n                this.panelBody.nativeElement.scrollTop = this._scrollTop;\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        if (!this.panelOpen || !this._keyManager.activeItem) {\n            return;\n        }\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const itemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n        /** @type {?} */\n        const labelCount = this._countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.groups);\n        this.panelBody.nativeElement.scrollTop = this._getOptionScrollPosition(activeOptionIndex + labelCount, itemRect.height, this.panelBody.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * @private\n     * @param {?} optionIndex\n     * @param {?} options\n     * @param {?} optionGroups\n     * @return {?}\n     */\n    _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n        if (optionGroups.length) {\n            /** @type {?} */\n            const optionsArray = options.toArray();\n            /** @type {?} */\n            const groups = optionGroups.toArray();\n            /** @type {?} */\n            let groupCounter = 0;\n            for (let i = 0; i < optionIndex + 1; i++) {\n                if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                    groupCounter++;\n                }\n            }\n            return groupCounter;\n        }\n        return 0;\n    }\n    /**\n     * @private\n     * @param {?} optionIndex\n     * @param {?} optionHeight\n     * @param {?} currentScrollPosition\n     * @param {?} panelHeight\n     * @return {?}\n     */\n    _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n        /** @type {?} */\n        let optionOffset = optionIndex * optionHeight + itemPadding;\n        if (this.showFilter) {\n            /** @type {?} */\n            const filterHeight = this.panel.nativeElement.querySelector('.nx-dropdown__filter').getBoundingClientRect().height;\n            optionOffset = optionIndex * optionHeight + filterHeight;\n        }\n        if (optionOffset < currentScrollPosition) {\n            return optionOffset;\n        }\n        if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n            return Math.max(0, optionOffset - panelHeight + optionHeight);\n        }\n        return currentScrollPosition;\n    }\n    /**\n     * @private\n     * @param {?} item\n     * @return {?}\n     */\n    _getItemOffset(item) {\n        /** @type {?} */\n        const itemRect = item.containerElement.nativeElement.getBoundingClientRect();\n        return itemRect.top;\n    }\n    /**\n     * \\@docs-private\n     * Formfield Implementation\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this.ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    setAriaLabel(value) {\n        this._ariaLabel = value;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaLabel() {\n        return this._ariaLabel || (this.formFieldComponent ? this.formFieldComponent.label : null);\n    }\n    /**\n     * \\@docs-private\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get hasValue() {\n        return this._selectionModel.hasValue();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /** End Formfield */\n    /** ControlValueAccessor */\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * End ControlValueAccessor\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.isMultiSelect || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.openPanel();\n        }\n        else if (!this.isMultiSelect && !this.disabled) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // all events other than the listed ones should be ignored or handled in _onFilter()\n        if (!([DOWN_ARROW, UP_ARROW, HOME, END, ENTER, LEFT_ARROW, RIGHT_ARROW, SHIFT, SPACE, TAB].indexOf(keyCode) >= 0)) {\n            return;\n        }\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const allHidden = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._hidden)).every((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => Boolean(option)));\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.closePanel();\n        }\n        else if (keyCode === ENTER && manager.activeItem && !allHidden) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (keyCode === ENTER && allHidden) {\n            event.preventDefault();\n            this.closePanel();\n        }\n        else if (!this.showFilter && keyCode === SPACE && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (keyCode === TAB) {\n            this.closePanel();\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this.isMultiSelect && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    formatValue(value) {\n        return this.valueFormatter(value);\n    }\n    /**\n     * Called when the user types in the filter input\n     * @param {?} event\n     * @return {?}\n     */\n    _onFilter(event) {\n        event.preventDefault();\n        this.currentFilter = event.target.value;\n        this.filterChanges.next(event.target.value);\n        /** @type {?} */\n        const allHidden = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._hidden)).every((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => Boolean(option)));\n        if (allHidden) {\n            this._keyManager.setActiveItem(null);\n        }\n        else {\n            this._keyManager.setFirstItemActive();\n        }\n    }\n    /**\n     * \\@docs-private\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this.isMultiSelect) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this._changeDetectorRef.markForCheck();\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.panelBody.nativeElement.focus();\n            if (this._keyManager.activeItem) {\n                this._calculateScrollTop();\n            }\n            this._changeDetectorRef.markForCheck();\n            this.openedChange.emit(true);\n            if (this.showFilter) {\n                this.filterInput.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (this.filterInput && this.showFilter) {\n            this._clearFilter();\n        }\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get isFilterEmpty() {\n        return this.currentFilter.length === 0;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    _clearFilter() {\n        this.filterInput.nativeElement.value = '';\n        this.currentFilter = '';\n        this.filterChanges.next('');\n    }\n    /**\n     * \\@docs-private determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n}\nNxDropdownComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-dropdown',\n                template: \"\\n<!-- input and stuff-->\\n<div cdkOverlayOrigin\\n    #origin=\\\"cdkOverlayOrigin\\\"\\n    class=\\\"nx-dropdown__container\\\"\\n    #trigger>\\n  <div class=\\\"nx-dropdown__rendered\\\">\\n    <ng-container *ngTemplateOutlet=\\\"closedDropdownLabel\\\"></ng-container>\\n  </div>\\n  <div class=\\\"nx-dropdown__icon\\\">\\n    <nx-icon class=\\\"nx-dropdown__chevron\\\" name=\\\"chevron-down\\\"></nx-icon>\\n  </div>\\n</div>\\n\\n<ng-template #defaultClosedDropdownLabel>\\n  <div *ngIf=\\\"triggerValue\\\">{{ triggerValue }}</div>\\n</ng-template>\\n\\n<!-- overlay -->\\n<ng-template\\n  cdkConnectedOverlay\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayFlexibleDimensions]=\\\"true\\\"\\n  [cdkConnectedOverlayViewportMargin]=\\\"_overlayViewportMargin\\\"\\n  [cdkConnectedOverlayPush]=\\\"true\\\"\\n  (backdropClick)=\\\"closePanel()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"closePanel()\\\">\\n\\n  <div class=\\\"nx-dropdown__panel\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\"\\n      #panel>\\n    <div class=\\\"nx-dropdown__panel-header\\\" *ngIf=\\\"label\\\">\\n      {{ label }}\\n    </div>\\n    \\n    <div class=\\\"nx-dropdown__panel-body\\\" tabindex=\\\"-1\\\" #panelBody role=\\\"listbox\\\" [attr.aria-activedescendant]=\\\"_getAriaActiveDescendant()\\\" [attr.aria-multiselectable]=\\\"isMultiSelect\\\">\\n        <div class=\\\"nx-dropdown__filter\\\" *ngIf=\\\"showFilter\\\">\\n          <input class=\\\"nx-dropdown__filter-input\\\" [class.is-filled]=\\\"!isFilterEmpty\\\"  #filterInput type=\\\"text\\\" (input)=\\\"_onFilter($event)\\\" [placeholder]=\\\"filterPlaceholder\\\">\\n          <span class=\\\"nx-dropdown__filter-icon\\\" *ngIf=\\\"!isFilterEmpty\\\" (click)=\\\"_clearFilter()\\\">\\n            <nx-icon name=\\\"close\\\"></nx-icon>\\n          </span>\\n        </div>\\n        <ng-content></ng-content>\\n      </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: NxDropdownControl, useExisting: NxDropdownComponent },\n                    { provide: NxFormfieldControl, useExisting: NxDropdownComponent },\n                ],\n                host: {\n                    'role': 'button',\n                    '[class.nx-dropdown]': 'true',\n                    '[class.is-filled]': 'hasValue',\n                    '[class.has-focus]': 'focused',\n                    '[class.nx-dropdown--negative]': '_negative',\n                    '[class.nx-dropdown--disabled]': 'disabled',\n                    '[attr.aria-describedby]': 'ariaDescribedby || null',\n                    '[attr.aria-required]': 'required',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-haspopup]': '\"listbox\"',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.tabindex]': 'tabIndex',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(click)': 'openPanel()'\n                },\n                styles: [\":host{display:block}:host:focus{outline:0}:host(.nx-dropdown--negative):focus{font-weight:600}:host(.nx-dropdown--negative){color:#fff}.nx-dropdown__container{display:flex;justify-content:flex-end;cursor:pointer}:host(.nx-dropdown--disabled) .nx-dropdown__container{cursor:not-allowed}.nx-dropdown__rendered{flex:1 1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.nx-dropdown__panel{box-shadow:0 2px 4px rgba(65,65,65,.5);border-radius:4px;background-color:#fff;min-width:100%}.nx-dropdown__panel ::ng-deep .nx-checkbox__label{font-size:20px}.nx-dropdown__panel:focus{outline:0}.nx-dropdown__icon{font-size:24px;line-height:1}.nx-dropdown__panel-header{line-height:16px;font-size:12px;padding:8px 24px;background-color:#ececec;border-top-left-radius:4px;border-top-right-radius:4px;z-index:1;font-weight:600}.nx-dropdown__panel-body{max-height:280px;overflow-y:auto;outline:0}.nx-dropdown__filter{position:relative;padding:16px 32px 24px}.nx-dropdown__filter-input{font-size:20px;border:0;border-bottom:1px solid #d9d9d9;color:#414141;width:100%;outline:0;background-color:transparent;font-weight:300}.nx-dropdown__filter-icon{position:absolute;right:32px;top:16px;cursor:pointer}.nx-dropdown__filter-icon nx-icon{font-size:24px}.nx-dropdown__filter-input.is-filled:focus{color:#007ab3;font-weight:600;border-bottom:1px solid #007ab3;overflow:ellipsis}.nx-dropdown__filter-input.is-filled:focus+.nx-dropdown__filter-icon{color:#007ab3}@media screen and (-ms-high-contrast:active){.nx-dropdown__panel{box-shadow:0 0 0 1px windowText}}\"]\n            }] }\n];\n/** @nocollapse */\nNxDropdownComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NxFormfieldComponent, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] }\n];\nNxDropdownComponent.propDecorators = {\n    tabIndex: [{ type: Input }],\n    _ariaLabel: [{ type: Input, args: ['nxAriaLabel',] }],\n    value: [{ type: Input, args: ['nxValue',] }],\n    disabled: [{ type: Input, args: ['nxDisabled',] }],\n    required: [{ type: Input, args: ['nxRequired',] }],\n    styles: [{ type: Input, args: ['nxStyle',] }],\n    showFilter: [{ type: Input, args: ['nxShowFilter',] }],\n    filterPlaceholder: [{ type: Input, args: ['nxFilterPlaceholder',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    filterChanges: [{ type: Output, args: ['filterInput',] }],\n    valueChange: [{ type: Output, args: ['nxValueChange',] }],\n    selectionChange: [{ type: Output }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    panelBody: [{ type: ViewChild, args: ['panelBody',] }],\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    filterInput: [{ type: ViewChild, args: ['filterInput',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [NxDropdownItemComponent, { descendants: true },] }],\n    groups: [{ type: ContentChildren, args: [NxDropdownGroupComponent,] }],\n    _customClosedDropdownLabel: [{ type: ContentChild, args: [NxDropdownClosedLabelDirective,] }],\n    _defaultClosedDropdownLabel: [{ type: ViewChild, args: ['defaultClosedDropdownLabel',] }],\n    valueFormatter: [{ type: Input, args: ['nxValueFormatter',] }],\n    compareWith: [{ type: Input }],\n    filterFn: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxDropdownModule {\n}\nNxDropdownModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxFormfieldModule,\n                    NxCheckboxModule,\n                    OverlayModule,\n                    A11yModule,\n                    NxIconModule,\n                    ObserversModule\n                ],\n                declarations: [\n                    NxDropdownComponent,\n                    NxDropdownItemComponent,\n                    NxDropdownGroupComponent,\n                    NxDropdownClosedLabelDirective\n                ],\n                exports: [\n                    NxDropdownComponent,\n                    NxDropdownItemComponent,\n                    NxDropdownGroupComponent,\n                    NxDropdownClosedLabelDirective\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxDropdownModule, NxDropdownSelectChange, SELECT_PANEL_MAX_HEIGHT, NxDropdownComponent, NxDropdownItemChange, NxDropdownItemComponent, NxDropdownGroupComponent, NxDropdownClosedLabelDirective as ɵb, NxDropdownControl as ɵa };\n\n//# sourceMappingURL=allianz-ngx-ndbx-dropdown.js.map","import { CommonModule } from '@angular/common';\nimport { startWith } from 'rxjs/operators';\nimport { getClassNameList } from '@allianz/ngx-ndbx/utils';\nimport { Directive, Input, ViewChild, InjectionToken, Inject, Optional, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, ViewEncapsulation, Renderer2, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet uniqueId = 0;\nclass NxFormfieldErrorDirective {\n    constructor() {\n        // create a unique id to be used by aria-described-by\n        /**\n         * Sets the id of the formfield error.\n         */\n        this.id = `nx-formfield-error-${uniqueId++}`;\n    }\n}\nNxFormfieldErrorDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxFormfieldError], [nxError]',\n                host: {\n                    role: 'alert',\n                    '[attr.id]': 'id'\n                }\n            },] }\n];\nNxFormfieldErrorDirective.propDecorators = {\n    id: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A directive for passing more complex custom label content.\n */\nclass NxFormfieldLabelDirective {\n}\nNxFormfieldLabelDirective.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-formfield-label'\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet uniqueId$1 = 0;\n// This Directive solely purpose is to mark given ng-content and project it into the required destination.\nclass NxFormfieldHintDirective {\n    constructor() {\n        /**\n         * Sets the id of the formfield hint.\n         */\n        this.id = `nx-formfield-hint-${uniqueId$1++}`;\n    }\n}\nNxFormfieldHintDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxFormfieldHint]',\n                host: {\n                    '[attr.id]': 'id'\n                }\n            },] }\n];\nNxFormfieldHintDirective.propDecorators = {\n    id: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet uniqueId$2 = 0;\n// This Directive solely purpose is to mark given ng-content and project it into the required destination.\nclass NxFormfieldNoteDirective {\n    constructor() {\n        /**\n         * Sets the id of the formfield note.\n         */\n        this.id = `nx-formfield-note-${uniqueId$2++}`;\n    }\n}\nNxFormfieldNoteDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxFormfieldNote]',\n                host: {\n                    '[attr.id]': 'id'\n                }\n            },] }\n];\nNxFormfieldNoteDirective.propDecorators = {\n    id: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass NxFormfieldControl {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This Directive solely purpose is to mark given ng-content and project it into the required destination.\nclass NxFormfieldSuffixDirective {\n}\nNxFormfieldSuffixDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxFormfieldSuffix]'\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This Directive solely purpose is to mark given ng-content and project it into the required destination.\nclass NxFormfieldPrefixDirective {\n}\nNxFormfieldPrefixDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxFormfieldPrefix]'\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet uniqueId$3 = 0;\n// This Directive solely purpose is to mark given ng-content and project it into the required destination.\nclass NxFormfieldAppendixDirective {\n    constructor() {\n        /**\n         * Sets the id of the formfield appendix.\n         */\n        this.id = `nx-formfield-appendix-${uniqueId$3++}`;\n    }\n}\nNxFormfieldAppendixDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxFormfieldAppendix]',\n                host: {\n                    '[attr.id]': 'id'\n                }\n            },] }\n];\nNxFormfieldAppendixDirective.propDecorators = {\n    id: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NX_STYLES = {\n    'negative': 'nx-formfield--negative'\n};\n/** @type {?} */\nconst FORMFIELD_DEFAULT_OPTIONS = new InjectionToken('FORMFIELD_DEFAULT_OPTIONS');\nclass NxFormfieldComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} _changeDetectorRef\n     * @param {?} _defaultOptions\n     */\n    constructor(elementRef, renderer, _changeDetectorRef, _defaultOptions) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._defaultOptions = _defaultOptions;\n        this._styles = '';\n        this._subscriptions = [];\n    }\n    /**\n     * Whether the label should float once the input is focused or filled (auto, default)\n     * or force it to always float with a value of always to simulate a more static form.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this._floatLabel || (this._defaultOptions && this._defaultOptions.nxFloatLabel) || 'auto';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || 'auto';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Sets the styling of the formfield.\n     * If 'negative', a negative set of stylings is used.\n     * @param {?} value\n     * @return {?}\n     */\n    set styles(value) {\n        if (this._styles === value) {\n            return;\n        }\n        /** @type {?} */\n        const classNames = getClassNameList(value, NX_STYLES);\n        classNames.forEach((/**\n         * @param {?} classStr\n         * @return {?}\n         */\n        classStr => {\n            this.renderer.addClass(this.elementRef.nativeElement, classStr);\n        }));\n        this._styles = value;\n    }\n    /**\n     * **NDBX Expert option**\n     *\n     * Sets the appearance of the formfield.\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        if (this._appearance !== value) {\n            this._appearance = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get appearance() {\n        return this._appearance || (this._defaultOptions && this._defaultOptions.appearance) || 'auto';\n    }\n    /**\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always';\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get control() {\n        return this._control;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        let subscription;\n        /** @type {?} */\n        const subscriptions = [];\n        this._validateControlChild();\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        subscription = this._control.stateChanges.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        subscriptions.push(subscription);\n        // Re-validate when the number of hints changes.\n        subscription = this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        subscriptions.push(subscription);\n        // Update the aria-described by when the number of errors changes.\n        subscription = this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        subscriptions.push(subscription);\n        this._subscriptions = subscriptions;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._subscriptions.forEach((/**\n         * @param {?} subscription\n         * @return {?}\n         */\n        (subscription) => subscription.unsubscribe()));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getDisplayedMessage() {\n        if (this._control.errorState && this._errorChildren && this._errorChildren.length > 0) {\n            return 'error';\n        }\n        return 'hint';\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            ids = this._noteChildren.map((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            hint => hint.id));\n            if (this.getDisplayedMessage() === 'hint') {\n                ids = [...this._hintChildren.map((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.id)), ...ids];\n            }\n            else if (this._errorChildren) {\n                ids = [...this._errorChildren.map((/**\n                     * @param {?} error\n                     * @return {?}\n                     */\n                    error => error.id)), ...ids];\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    // Fail if the required control is missing.\n    /**\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw new Error('Formfield must contain a NxFormfieldControl like input[nxInput] or a custom implementation');\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this.elementRef;\n    }\n}\nNxFormfieldComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-formfield',\n                template: \"<!--\\nWe are building the following structure.\\n\\n+-----------------------------+ +-----------+\\n| Prefix |   Input   | Suffix | |  Appendix |\\n+-----------------------------+ +-----------+\\n|-----------------Border--------------------|\\n+-------------------------------------------+\\n|                 Hints                     |\\n+-------------------------------------------+\\n|                                           |\\n|                Messages                   |\\n|                                           |\\n+-------------------------------------------+\\n\\n-->\\n\\n<div class=\\\"nx-formfield__wrapper\\\">\\n\\n\\n  <!-- Give a flex context to properly align suffix, input & postfix -->\\n  <div class=\\\"nx-formfield__row\\\"  #connectionContainer>\\n    <div class=\\\"nx-formfield__flexfield\\\">\\n      <div class=\\\"nx-formfield__prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n          <ng-content select=\\\"[nxFormfieldPrefix]\\\"></ng-content>\\n      </div>\\n\\n      <div class=\\\"nx-formfield__input\\\">\\n        <ng-content></ng-content>\\n\\n        <!-- This handles the floating whole behavior -->\\n        <span class=\\\"nx-formfield__label-holder\\\">\\n          <label\\n            class=\\\"nx-formfield__label\\\"\\n            [attr.aria-owns]=\\\"_control.id\\\"\\n            [attr.for]=\\\"_control.id\\\">\\n            <ng-container *ngIf=\\\"!_labelChild\\\">\\n              {{ label }}\\n            </ng-container>\\n            <ng-content select=\\\"nx-formfield-label\\\"></ng-content>\\n          </label>\\n        </span>\\n      </div>\\n\\n      <div class=\\\"nx-formfield__suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n          <ng-content select=\\\"[nxFormfieldSuffix]\\\"></ng-content>\\n      </div>\\n    </div>\\n\\n    <!-- Appendix is similar to a suffix but visibly outside of the input  -->\\n    <div class=\\\"nx-formfield__appendix\\\" *ngIf=\\\"_appendixChildren.length\\\">\\n      <ng-content select=\\\"[nxFormfieldAppendix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Space to render the hints below the textfield -->\\n  <div class=\\\"nx-formfield__hints\\\" *ngIf=\\\"_hintChildren.length\\\">\\n      <ng-content select=\\\"[nxFormfieldHint]\\\"></ng-content>\\n  </div>\\n\\n  <!-- In case we got some additional information we render them below the given input -->\\n  <div class=\\\"nx-formfield__messages\\\" [ngSwitch]=\\\"getDisplayedMessage()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\">\\n      <ng-content select=\\\"[nxFormfieldError]\\\"></ng-content>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"'hint'\\\">\\n      <ng-content select=\\\"[nxFormfieldNote]\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\",\n                host: {\n                    '[class.nx-formfield]': 'true',\n                    '[class.is-disabled]': 'this._control.disabled',\n                    '[class.is-readonly]': 'this._control.readonly',\n                    '[class.is-filled]': 'this._control.empty === false',\n                    '[class.is-focused]': 'this._control.focused',\n                    '[class.is-floating]': 'this.shouldLabelFloat',\n                    '[class.has-error]': 'this._control.errorState',\n                    '[class.has-outline]': 'this.appearance === \"outline\"'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".nx-formfield{display:block;font-size:20px;color:#414141;text-align:left}.nx-formfield__wrapper{padding-bottom:24px}.nx-formfield__input{position:relative;line-height:28px;letter-spacing:.2px;flex:auto;min-width:0}.nx-formfield__label-holder{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;pointer-events:none;z-index:10;top:-16px;padding-top:16px}.nx-formfield__label{color:inherit;display:block;position:absolute;left:0;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;-webkit-transform-origin:0 0;transform-origin:0 0;transition:transform .15s ease-out,font-size .15s ease-out,-webkit-transform .15s ease-out;font-weight:300;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%;-ms-text-size-adjust:100%;text-size-adjust:100%;letter-spacing:.2px}.nx-formfield__flexfield{display:inline-flex;align-items:flex-end;width:100%;border-bottom:1px solid currentColor;margin-top:16px;padding-bottom:3px}.nx-formfield__row{display:flex;align-items:center;width:100%}.nx-formfield__input textarea[nxInput]{vertical-align:bottom}.nx-formfield__appendix,.nx-formfield__prefix,.nx-formfield__suffix{flex:none;white-space:nowrap;color:#414141;font-weight:600;letter-spacing:.2px}.nx-formfield__appendix nx-icon.nx-icon--auto,.nx-formfield__prefix nx-icon.nx-icon--auto,.nx-formfield__suffix nx-icon.nx-icon--auto{font-size:24px;font-weight:400}.nx-formfield__appendix nx-icon,.nx-formfield__prefix nx-icon,.nx-formfield__suffix nx-icon{display:block;color:#006192;height:24px}.nx-formfield__appendix nx-password-toggle nx-icon,.nx-formfield__prefix nx-password-toggle nx-icon,.nx-formfield__suffix nx-password-toggle nx-icon{color:#414141}.nx-formfield__prefix,.nx-formfield__suffix{line-height:28px;height:28px;display:inline-flex;align-items:center}.nx-formfield__appendix{margin-left:8px;margin-top:16px;display:flex;border-bottom:1px solid transparent;padding-bottom:3px;align-items:center}.nx-formfield__prefix{margin-right:8px}.nx-formfield__suffix{margin-left:8px}.nx-formfield__hints{text-align:right;color:#414141;font-size:12px;line-height:16px;letter-spacing:.5px;padding-top:8px}.nx-formfield__messages{margin-top:4px}.nx-formfield.is-focused .nx-formfield__label{text-overflow:ellipsis;font-weight:600;font-size:12px}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error){color:#006192}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) .nx-formfield__label{color:#414141}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) .nx-formfield__flexfield{border-bottom-color:#007ab3}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error).nx-formfield--negative{color:#fff}.nx-formfield.is-focused:not(.nx-formfield--negative):not(.has-error) nx-password-toggle nx-icon{color:#007ab3}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline .nx-formfield__flexfield{border-color:#006192;box-shadow:0 0 0 2px #009de6}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline.has-error .nx-formfield__flexfield{border-color:#dc3149}.nx-formfield.is-focused:not(.nx-formfield--negative).has-outline nx-password-toggle nx-icon{color:#007ab3}.nx-formfield.has-outline{font-size:16px;line-height:24px}.nx-formfield.has-outline .nx-formfield__flexfield{border:1px solid #767676;border-radius:4px;margin-top:28px;min-height:40px;align-items:center;padding-bottom:0}.nx-formfield.has-outline .nx-formfield__label{padding-left:7px;padding-right:7px}.nx-formfield.has-outline .nx-formfield__input{margin-top:0;padding-bottom:0;line-height:38px}.nx-formfield.has-outline .nx-formfield__input input[nxInput],.nx-formfield.has-outline .nx-formfield__input textarea[nxInput]{font-weight:400}.nx-formfield.has-outline .nx-formfield__input textarea[nxInput]{min-height:38px;line-height:24px;padding:7px}.nx-formfield.has-outline .nx-formfield__input input[nxInput]{padding-right:7px;padding-left:7px;line-height:normal}.nx-formfield.has-outline nx-dropdown .nx-dropdown__icon{display:flex}.nx-formfield.has-outline nx-dropdown .nx-dropdown__container{padding-left:7px;height:38px}.nx-formfield.has-outline nx-datepicker-toggle .nx-datepicker-toggle-button{padding:0}.nx-formfield.has-outline .nx-formfield__appendix,.nx-formfield.has-outline .nx-formfield__prefix,.nx-formfield.has-outline .nx-formfield__suffix{font-weight:400}.nx-formfield.has-outline .nx-formfield__prefix,.nx-formfield.has-outline .nx-formfield__suffix{height:38px;line-height:38px}.nx-formfield.has-outline .nx-formfield__prefix{margin-left:7px;margin-right:0}.nx-formfield.has-outline .nx-formfield__suffix{margin-right:7px;margin-left:0}.nx-formfield.has-outline .nx-formfield__appendix{margin-left:8px;display:flex;margin-top:28px;border-top:1px solid transparent;border-bottom:1px solid transparent;padding-bottom:0}.nx-formfield.has-outline .nx-formfield__hints{text-align:left;font-size:16px}.nx-formfield.has-outline.is-readonly .nx-formfield__flexfield{border-color:#c2c2c2;background-color:#f5f5f5}.nx-formfield.is-floating .nx-formfield__label{-webkit-transform:translateY(-22px);transform:translateY(-22px);font-size:12px;font-weight:600;letter-spacing:.5px}.nx-formfield.is-floating.has-outline .nx-formfield__label-holder{top:-24px;padding-top:24px}.nx-formfield.is-floating.has-outline .nx-formfield__label{padding-top:0;-webkit-transform:translateX(-8px) translateY(-29px);transform:translateX(-8px) translateY(-29px);font-size:16px;line-height:24px}.nx-formfield.is-floating.has-outline .nx-formfield__prefix~.nx-formfield__input .nx-formfield__label{-webkit-transform:translateY(-29px);transform:translateY(-29px)}.nx-formfield.has-error{color:#dc3149}.nx-formfield.has-error .nx-formfield__label{font-weight:700}.nx-formfield.has-error.is-floating .nx-formfield__label{color:#414141;font-weight:600}.nx-formfield.has-error.has-outline{color:#414141}.nx-formfield.has-error.has-outline .nx-formfield__flexfield{border-color:#dc3149}.nx-formfield.has-error nx-password-toggle nx-icon{color:#dc3149}.nx-formfield.is-disabled{color:#c2c2c2;cursor:not-allowed;-webkit-text-fill-color:#c2c2c2}.nx-formfield.is-disabled .nx-formfield__hints{color:inherit}.nx-formfield.is-disabled .nx-formfield__flexfield{border-bottom-color:#c2c2c2}.nx-formfield.is-disabled.has-outline .nx-formfield__flexfield{border-color:#c2c2c2}.nx-formfield--negative{color:#fff}.nx-formfield--negative .nx-formfield__hints{color:inherit}.nx-formfield--negative.has-outline .nx-formfield__flexfield{border-color:#fff}.nx-formfield--negative nx-password-toggle nx-icon{color:#fff}\", \".c-input{text-align:inherit;font-size:inherit;background:0 0;color:inherit;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;line-height:28px;height:28px}.c-input::-ms-clear{display:none}.c-input::-webkit-search-cancel-button,.c-input::-webkit-search-decoration,.c-input::-webkit-search-results-button,.c-input::-webkit-search-results-decoration{display:none;-webkit-appearance:none}textarea.c-input{min-height:28px;height:auto;font-family:inherit}.c-input.is-focused{border:none;outline:0;box-shadow:none}.c-input.is-filled{font-weight:600}.c-input.is-disabled{cursor:not-allowed}textarea.nx-input-element{resize:vertical;overflow:auto}.c-input:invalid,.c-input:required{box-shadow:none}\"]\n            }] }\n];\n/** @nocollapse */\nNxFormfieldComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FORMFIELD_DEFAULT_OPTIONS,] }] }\n];\nNxFormfieldComponent.propDecorators = {\n    _control: [{ type: ContentChild, args: [NxFormfieldControl,] }],\n    label: [{ type: Input, args: ['nxLabel',] }],\n    _labelChild: [{ type: ContentChild, args: [NxFormfieldLabelDirective,] }],\n    _hintChildren: [{ type: ContentChildren, args: [NxFormfieldHintDirective,] }],\n    _noteChildren: [{ type: ContentChildren, args: [NxFormfieldNoteDirective,] }],\n    _errorChildren: [{ type: ContentChildren, args: [NxFormfieldErrorDirective,] }],\n    _suffixChildren: [{ type: ContentChildren, args: [NxFormfieldSuffixDirective,] }],\n    _prefixChildren: [{ type: ContentChildren, args: [NxFormfieldPrefixDirective,] }],\n    _appendixChildren: [{ type: ContentChildren, args: [NxFormfieldAppendixDirective,] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer',] }],\n    floatLabel: [{ type: Input, args: ['nxFloatLabel',] }],\n    styles: [{ type: Input, args: ['nxStyle',] }],\n    appearance: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxFormfieldModule {\n}\nNxFormfieldModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NxFormfieldComponent,\n                    NxFormfieldHintDirective,\n                    NxFormfieldErrorDirective,\n                    NxFormfieldNoteDirective,\n                    NxFormfieldPrefixDirective,\n                    NxFormfieldSuffixDirective,\n                    NxFormfieldAppendixDirective,\n                    NxFormfieldLabelDirective\n                ],\n                exports: [\n                    NxFormfieldComponent,\n                    NxFormfieldHintDirective,\n                    NxFormfieldErrorDirective,\n                    NxFormfieldNoteDirective,\n                    NxFormfieldPrefixDirective,\n                    NxFormfieldSuffixDirective,\n                    NxFormfieldAppendixDirective,\n                    NxFormfieldLabelDirective\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxFormfieldErrorDirective, NxFormfieldLabelDirective, NxFormfieldModule, FORMFIELD_DEFAULT_OPTIONS, NxFormfieldComponent, NxFormfieldControl, NxFormfieldAppendixDirective as ɵe, NxFormfieldHintDirective as ɵa, NxFormfieldNoteDirective as ɵb, NxFormfieldPrefixDirective as ɵd, NxFormfieldSuffixDirective as ɵc };\n\n//# sourceMappingURL=allianz-ngx-ndbx-formfield.js.map","import { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport { Component, ElementRef, Input, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyArray(value) {\n    return (value === undefined || value.length === 0);\n}\n/**\n * add space and return mapClassNames (css)\n * @param {?} aux\n * @param {?} map\n * @return {?}\n */\nfunction addStyles(aux, map) {\n    return ' ' + mapClassNames(aux, [], map);\n}\n/**\n * input='small,medium,large'\n *  map = MAPPING\n * @param {?} input\n * @param {?} map\n * @return {?}\n */\nfunction addStylesFromDimensions(input, map) {\n    /** @type {?} */\n    const aux = processSplit(input);\n    /** @type {?} */\n    let output = '';\n    if (aux.length >= 1 && aux.length <= 4) {\n        /** @type {?} */\n        const auxTiny = addStyles(aux[0], map).replace('-{tier}', '');\n        /** @type {?} */\n        let auxSmall = '';\n        /** @type {?} */\n        let auxMedium = '';\n        /** @type {?} */\n        let auxLarge = '';\n        switch (aux.length) {\n            case 1:\n                auxSmall = addStyles(aux[0], map).replace('{tier}', 'small');\n                auxMedium = addStyles(aux[0], map).replace('{tier}', 'medium');\n                auxLarge = addStyles(aux[0], map).replace('{tier}', 'large');\n                break;\n            case 2:\n                auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');\n                auxMedium = addStyles(aux[1], map).replace('{tier}', 'medium');\n                auxLarge = addStyles(aux[1], map).replace('{tier}', 'large');\n                break;\n            case 3:\n                auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');\n                auxMedium = addStyles(aux[2], map).replace('{tier}', 'medium');\n                auxLarge = addStyles(aux[2], map).replace('{tier}', 'large');\n                break;\n            default:\n                auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');\n                auxMedium = addStyles(aux[2], map).replace('{tier}', 'medium');\n                auxLarge = addStyles(aux[3], map).replace('{tier}', 'large');\n                break;\n        }\n        output += ' ' + auxTiny.trim() + ' '\n            + auxSmall.trim() + ' '\n            + auxMedium.trim() + ' '\n            + auxLarge.trim();\n    }\n    return output;\n}\n// Simple split\n/**\n * @param {?} aux\n * @param {?=} char\n * @return {?}\n */\nfunction processSplit(aux, char = ',') {\n    return aux.split(char).map((/**\n     * @param {?} item\n     * @return {?}\n     */\n    item => item.trim()));\n}\n/**\n * @param {?} el\n * @param {?} aux\n * @return {?}\n */\nfunction validateClassInElement(el, aux) {\n    return el.hasAttribute(aux);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPPING = {\n    '': 'nx-grid__column-',\n    'xs': 'nx-grid__column-',\n    'sm': 'nx-grid__column-small-',\n    'md': 'nx-grid__column-medium-',\n    'lg': 'nx-grid__column-large-'\n};\n/** @type {?} */\nconst MAPPING_ALIGN_SELF = {\n    'auto': 'nx-align-self-{tier}-auto',\n    'start': 'nx-align-self-{tier}-start',\n    'end': 'nx-align-self-{tier}-end',\n    'center': 'nx-align-self-{tier}-center',\n    'baseline': 'nx-align-self-{tier}-baseline',\n    'stretch': 'nx-align-self-{tier}-stretch'\n};\n/** @type {?} */\nconst MAPPING_ORDER = {\n    'first': 'nx-flex-{tier}-first',\n    'last': 'nx-flex-{tier}-last',\n    'unordered': 'nx-flex-{tier}-unordered',\n};\n/** @type {?} */\nconst OFFSET_MAPPING = {\n    '': 'nx-grid--offset-',\n    'xs': 'nx-grid--offset-',\n    'sm': 'nx-grid--offset-small-',\n    'md': 'nx-grid--offset-medium-',\n    'lg': 'nx-grid--offset-large-'\n};\n/** @type {?} */\nconst MIN = 0;\n/** @type {?} */\nconst MAX = 12;\nclass NxColComponent {\n    /**\n     * @param {?} el\n     */\n    constructor(el) {\n        this.el = el;\n        this._classNames = [];\n        /**\n         * Number of columns used.\n         *\n         * Values: 1 - 12, default value: 12.\n         */\n        this.col = '';\n        /**\n         * The number of columns the column should be offset.\n         *\n         * Values: 1 - 12, default value: 12.\n         */\n        this.offset = '';\n        /**\n         * The alignment for a column inside the flexible container.\n         */\n        this.itemSelf = null;\n        /**\n         * Order of the column within the row.\n         */\n        this.order = null;\n    }\n    /**\n     * @return {?}\n     */\n    get _columnClasses() {\n        return this._classNames.join(' ').trim();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (validateClassInElement(this.el.nativeElement.parentElement, 'nxRow')) {\n            // create an array of all classes to not worry about the spaces between the classes\n            // in all logic functions all the time :)\n            // gets joined in get _columnClasses()\n            this._classNames = [\n                ...this._getColClasses(),\n                ...this._getOffsetClasses(),\n                ...this._getAlignSelfClasses(),\n                ...this._getOrderClasses(),\n                // add custom classes set by the user and append it to the end\n                ...this.el.nativeElement.className.split(' ')\n            ];\n        }\n        else {\n            this.generateError('Exception: NxColDirective. nxRow don\\'t exist');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getColClasses() {\n        /** @type {?} */\n        const columnClasses = this._mapTiers(this.col, [], MAPPING, ['0']);\n        if (columnClasses.length === 0) {\n            this.generateError('Exception: NxColDirective. Empty nxCol attribute.');\n        }\n        return columnClasses;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getAlignSelfClasses() {\n        /** if itemSelf contains values */\n        if (this.itemSelf) {\n            /** Values: auto, start, end, center, baseline, stretch */\n            return addStylesFromDimensions(this.itemSelf, MAPPING_ALIGN_SELF).split(' ');\n        }\n        return [];\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOrderClasses() {\n        /** if order-flex */\n        if (this.order) {\n            /** Values: first, last or unordered */\n            return addStylesFromDimensions(this.order, MAPPING_ORDER).split(' ');\n        }\n        return [];\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOffsetClasses() {\n        return this._mapTiers(this.offset, [], OFFSET_MAPPING);\n    }\n    /**\n     * @private\n     * @param {?} input\n     * @param {?=} defaults\n     * @param {?=} mapping\n     * @param {?=} exclude\n     * @return {?}\n     */\n    _mapTiers(input, defaults, mapping, exclude) {\n        /** @type {?} */\n        const givenTiers = processSplit(input);\n        /** @type {?} */\n        let mappedClasses = [];\n        if (input && !isEmptyArray(givenTiers) && this.checkNotAllowedValues(givenTiers, exclude)) {\n            switch (givenTiers.length) {\n                case 1:\n                    this.validateInput(givenTiers[0]);\n                    mappedClasses = [mapClassNames('', defaults, mapping) + givenTiers[0]];\n                    break;\n                case 2:\n                    this.validateInput(givenTiers[0], givenTiers[1]);\n                    mappedClasses = [\n                        mapClassNames('xs', defaults, mapping) + givenTiers[0],\n                        mapClassNames('sm', defaults, mapping) + givenTiers[1],\n                        mapClassNames('md', defaults, mapping) + givenTiers[1],\n                        mapClassNames('lg', defaults, mapping) + givenTiers[1]\n                    ];\n                    break;\n                case 3:\n                    this.validateInput(givenTiers[0], givenTiers[1], givenTiers[2]);\n                    mappedClasses = [\n                        mapClassNames('xs', defaults, mapping) + givenTiers[0],\n                        mapClassNames('sm', defaults, mapping) + givenTiers[1],\n                        mapClassNames('md', defaults, mapping) + givenTiers[2],\n                        mapClassNames('lg', defaults, mapping) + givenTiers[2]\n                    ];\n                    break;\n                case 4:\n                    this.validateInput(givenTiers[0], givenTiers[1], givenTiers[2], givenTiers[3]);\n                    mappedClasses = [\n                        mapClassNames('xs', defaults, mapping) + givenTiers[0],\n                        mapClassNames('sm', defaults, mapping) + givenTiers[1],\n                        mapClassNames('md', defaults, mapping) + givenTiers[2],\n                        mapClassNames('lg', defaults, mapping) + givenTiers[3]\n                    ];\n                    break;\n                default:\n                    mappedClasses = [mapClassNames('', defaults, mapping) + '12'];\n                    break;\n            }\n        }\n        return mappedClasses;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} min\n     * @param {?} max\n     * @param {?} value\n     * @return {?}\n     */\n    isValueBetween(min, max, value) {\n        try {\n            /** @type {?} */\n            const parsed = parseInt(value, 10);\n            return (max >= parsed && min <= parsed);\n        }\n        catch (error) {\n            this.generateError('Exception: NxColDirective. One argument is not number');\n        }\n    }\n    /**\n     * \\@docs-private\n     * @param {?} values\n     * @param {?} excludes\n     * @return {?}\n     */\n    checkNotAllowedValues(values, excludes) {\n        if (!excludes) {\n            return true;\n        }\n        /** @type {?} */\n        const found = values.find((/**\n         * @param {?} val\n         * @return {?}\n         */\n        val => excludes.indexOf(val) > -1));\n        if (found) {\n            this.generateError(`Exception: NxColDirective. Incorrect parameter. ${found} is not allowed here`);\n        }\n        return !found;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} err\n     * @return {?}\n     */\n    generateError(err) {\n        throw new Error(err);\n    }\n    /**\n     * \\@docs-private\n     * @param {...?} value\n     * @return {?}\n     */\n    validateInput(...value) {\n        value.forEach((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => {\n            if (!this.isValueBetween(MIN, MAX, element)) {\n                this.generateError(`Exception: NxColDirective. Incorrect parameters, values must be between ${MIN} and ${MAX}`);\n            }\n        }));\n    }\n}\nNxColComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: '[nxCol]',\n                template: '<ng-content></ng-content>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class]': '_columnClasses'\n                },\n                styles: [\":host(.nx-grid__column),:host(.nx-grid__column-1),:host(.nx-grid__column-10),:host(.nx-grid__column-11),:host(.nx-grid__column-12),:host(.nx-grid__column-2),:host(.nx-grid__column-3),:host(.nx-grid__column-4),:host(.nx-grid__column-5),:host(.nx-grid__column-6),:host(.nx-grid__column-7),:host(.nx-grid__column-8),:host(.nx-grid__column-9),:host(.nx-grid__column-fit),:host(.nx-grid__column-large),:host(.nx-grid__column-large-1),:host(.nx-grid__column-large-10),:host(.nx-grid__column-large-11),:host(.nx-grid__column-large-12),:host(.nx-grid__column-large-2),:host(.nx-grid__column-large-3),:host(.nx-grid__column-large-4),:host(.nx-grid__column-large-5),:host(.nx-grid__column-large-6),:host(.nx-grid__column-large-7),:host(.nx-grid__column-large-8),:host(.nx-grid__column-large-9),:host(.nx-grid__column-large-fit),:host(.nx-grid__column-medium),:host(.nx-grid__column-medium-1),:host(.nx-grid__column-medium-10),:host(.nx-grid__column-medium-11),:host(.nx-grid__column-medium-12),:host(.nx-grid__column-medium-2),:host(.nx-grid__column-medium-3),:host(.nx-grid__column-medium-4),:host(.nx-grid__column-medium-5),:host(.nx-grid__column-medium-6),:host(.nx-grid__column-medium-7),:host(.nx-grid__column-medium-8),:host(.nx-grid__column-medium-9),:host(.nx-grid__column-medium-fit),:host(.nx-grid__column-small),:host(.nx-grid__column-small-1),:host(.nx-grid__column-small-10),:host(.nx-grid__column-small-11),:host(.nx-grid__column-small-12),:host(.nx-grid__column-small-2),:host(.nx-grid__column-small-3),:host(.nx-grid__column-small-4),:host(.nx-grid__column-small-5),:host(.nx-grid__column-small-6),:host(.nx-grid__column-small-7),:host(.nx-grid__column-small-8),:host(.nx-grid__column-small-9),:host(.nx-grid__column-small-fit){position:relative;width:100%;min-height:1px;padding-right:8px;padding-left:8px}:host(.nx-grid__column){flex-basis:0;flex-grow:1;max-width:100%}:host(.nx-grid__column-fit){flex:0 0 auto;width:auto}:host(.nx-grid__column-1){flex:0 0 8.33333%;max-width:8.33333%}:host(.nx-grid__column-2){flex:0 0 16.66667%;max-width:16.66667%}:host(.nx-grid__column-3){flex:0 0 25%;max-width:25%}:host(.nx-grid__column-4){flex:0 0 33.33333%;max-width:33.33333%}:host(.nx-grid__column-5){flex:0 0 41.66667%;max-width:41.66667%}:host(.nx-grid__column-6){flex:0 0 50%;max-width:50%}:host(.nx-grid__column-7){flex:0 0 58.33333%;max-width:58.33333%}:host(.nx-grid__column-8){flex:0 0 66.66667%;max-width:66.66667%}:host(.nx-grid__column-9){flex:0 0 75%;max-width:75%}:host(.nx-grid__column-10){flex:0 0 83.33333%;max-width:83.33333%}:host(.nx-grid__column-11){flex:0 0 91.66667%;max-width:91.66667%}:host(.nx-grid__column-12){flex:0 0 100%;max-width:100%}.pull-0{right:auto}.pull-1{right:8.33333%}.pull-2{right:16.66667%}.pull-3{right:25%}.pull-4{right:33.33333%}.pull-5{right:41.66667%}.pull-6{right:50%}.pull-7{right:58.33333%}.pull-8{right:66.66667%}.pull-9{right:75%}.pull-10{right:83.33333%}.pull-11{right:91.66667%}.pull-12{right:100%}.push-0{left:auto}.push-1{left:8.33333%}.push-2{left:16.66667%}.push-3{left:25%}.push-4{left:33.33333%}.push-5{left:41.66667%}.push-6{left:50%}.push-7{left:58.33333%}.push-8{left:66.66667%}.push-9{left:75%}.push-10{left:83.33333%}.push-11{left:91.66667%}.push-12{left:100%}:host(.nx-grid--offset-1){margin-left:8.33333%}:host(.nx-grid--offset-2){margin-left:16.66667%}:host(.nx-grid--offset-3){margin-left:25%}:host(.nx-grid--offset-4){margin-left:33.33333%}:host(.nx-grid--offset-5){margin-left:41.66667%}:host(.nx-grid--offset-6){margin-left:50%}:host(.nx-grid--offset-7){margin-left:58.33333%}:host(.nx-grid--offset-8){margin-left:66.66667%}:host(.nx-grid--offset-9){margin-left:75%}:host(.nx-grid--offset-10){margin-left:83.33333%}:host(.nx-grid--offset-11){margin-left:91.66667%}:host(.nx-flex-first){order:-1}:host(.nx-flex-last){order:1}:host(.nx-flex-unordered){order:0}:host(.nx-align-self-auto){-ms-grid-row-align:auto!important;align-self:auto!important}:host(.nx-align-self-start){align-self:flex-start!important}:host(.nx-align-self-end){align-self:flex-end!important}:host(.nx-align-self-center){-ms-grid-row-align:center!important;align-self:center!important}:host(.nx-align-self-baseline){align-self:baseline!important}:host(.nx-align-self-stretch){-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:320px){:host(.nx-grid__column),:host(.nx-grid__column-1),:host(.nx-grid__column-10),:host(.nx-grid__column-11),:host(.nx-grid__column-12),:host(.nx-grid__column-2),:host(.nx-grid__column-3),:host(.nx-grid__column-4),:host(.nx-grid__column-5),:host(.nx-grid__column-6),:host(.nx-grid__column-7),:host(.nx-grid__column-8),:host(.nx-grid__column-9),:host(.nx-grid__column-fit),:host(.nx-grid__column-large),:host(.nx-grid__column-large-1),:host(.nx-grid__column-large-10),:host(.nx-grid__column-large-11),:host(.nx-grid__column-large-12),:host(.nx-grid__column-large-2),:host(.nx-grid__column-large-3),:host(.nx-grid__column-large-4),:host(.nx-grid__column-large-5),:host(.nx-grid__column-large-6),:host(.nx-grid__column-large-7),:host(.nx-grid__column-large-8),:host(.nx-grid__column-large-9),:host(.nx-grid__column-large-fit),:host(.nx-grid__column-medium),:host(.nx-grid__column-medium-1),:host(.nx-grid__column-medium-10),:host(.nx-grid__column-medium-11),:host(.nx-grid__column-medium-12),:host(.nx-grid__column-medium-2),:host(.nx-grid__column-medium-3),:host(.nx-grid__column-medium-4),:host(.nx-grid__column-medium-5),:host(.nx-grid__column-medium-6),:host(.nx-grid__column-medium-7),:host(.nx-grid__column-medium-8),:host(.nx-grid__column-medium-9),:host(.nx-grid__column-medium-fit),:host(.nx-grid__column-small),:host(.nx-grid__column-small-1),:host(.nx-grid__column-small-10),:host(.nx-grid__column-small-11),:host(.nx-grid__column-small-12),:host(.nx-grid__column-small-2),:host(.nx-grid__column-small-3),:host(.nx-grid__column-small-4),:host(.nx-grid__column-small-5),:host(.nx-grid__column-small-6),:host(.nx-grid__column-small-7),:host(.nx-grid__column-small-8),:host(.nx-grid__column-small-9),:host(.nx-grid__column-small-fit){padding-right:8px;padding-left:8px}:host(.nx-grid__column-small){flex-basis:0;flex-grow:1;max-width:100%}:host(.nx-grid__column-small-fit){flex:0 0 auto;width:auto}:host(.nx-grid__column-small-1){flex:0 0 8.33333%;max-width:8.33333%}:host(.nx-grid__column-small-2){flex:0 0 16.66667%;max-width:16.66667%}:host(.nx-grid__column-small-3){flex:0 0 25%;max-width:25%}:host(.nx-grid__column-small-4){flex:0 0 33.33333%;max-width:33.33333%}:host(.nx-grid__column-small-5){flex:0 0 41.66667%;max-width:41.66667%}:host(.nx-grid__column-small-6){flex:0 0 50%;max-width:50%}:host(.nx-grid__column-small-7){flex:0 0 58.33333%;max-width:58.33333%}:host(.nx-grid__column-small-8){flex:0 0 66.66667%;max-width:66.66667%}:host(.nx-grid__column-small-9){flex:0 0 75%;max-width:75%}:host(.nx-grid__column-small-10){flex:0 0 83.33333%;max-width:83.33333%}:host(.nx-grid__column-small-11){flex:0 0 91.66667%;max-width:91.66667%}:host(.nx-grid__column-small-12){flex:0 0 100%;max-width:100%}.pull-small-0{right:auto}.pull-small-1{right:8.33333%}.pull-small-2{right:16.66667%}.pull-small-3{right:25%}.pull-small-4{right:33.33333%}.pull-small-5{right:41.66667%}.pull-small-6{right:50%}.pull-small-7{right:58.33333%}.pull-small-8{right:66.66667%}.pull-small-9{right:75%}.pull-small-10{right:83.33333%}.pull-small-11{right:91.66667%}.pull-small-12{right:100%}.push-small-0{left:auto}.push-small-1{left:8.33333%}.push-small-2{left:16.66667%}.push-small-3{left:25%}.push-small-4{left:33.33333%}.push-small-5{left:41.66667%}.push-small-6{left:50%}.push-small-7{left:58.33333%}.push-small-8{left:66.66667%}.push-small-9{left:75%}.push-small-10{left:83.33333%}.push-small-11{left:91.66667%}.push-small-12{left:100%}:host(.nx-grid--offset-small-0){margin-left:0}:host(.nx-grid--offset-small-1){margin-left:8.33333%}:host(.nx-grid--offset-small-2){margin-left:16.66667%}:host(.nx-grid--offset-small-3){margin-left:25%}:host(.nx-grid--offset-small-4){margin-left:33.33333%}:host(.nx-grid--offset-small-5){margin-left:41.66667%}:host(.nx-grid--offset-small-6){margin-left:50%}:host(.nx-grid--offset-small-7){margin-left:58.33333%}:host(.nx-grid--offset-small-8){margin-left:66.66667%}:host(.nx-grid--offset-small-9){margin-left:75%}:host(.nx-grid--offset-small-10){margin-left:83.33333%}:host(.nx-grid--offset-small-11){margin-left:91.66667%}:host(.nx-flex-small-first){order:-1}:host(.nx-flex-small-last){order:1}:host(.nx-flex-small-unordered){order:0}:host(.nx-align-self-small-auto){-ms-grid-row-align:auto!important;align-self:auto!important}:host(.nx-align-self-small-start){align-self:flex-start!important}:host(.nx-align-self-small-end){align-self:flex-end!important}:host(.nx-align-self-small-center){-ms-grid-row-align:center!important;align-self:center!important}:host(.nx-align-self-small-baseline){align-self:baseline!important}:host(.nx-align-self-small-stretch){-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:704px){:host(.nx-grid__column),:host(.nx-grid__column-1),:host(.nx-grid__column-10),:host(.nx-grid__column-11),:host(.nx-grid__column-12),:host(.nx-grid__column-2),:host(.nx-grid__column-3),:host(.nx-grid__column-4),:host(.nx-grid__column-5),:host(.nx-grid__column-6),:host(.nx-grid__column-7),:host(.nx-grid__column-8),:host(.nx-grid__column-9),:host(.nx-grid__column-fit),:host(.nx-grid__column-large),:host(.nx-grid__column-large-1),:host(.nx-grid__column-large-10),:host(.nx-grid__column-large-11),:host(.nx-grid__column-large-12),:host(.nx-grid__column-large-2),:host(.nx-grid__column-large-3),:host(.nx-grid__column-large-4),:host(.nx-grid__column-large-5),:host(.nx-grid__column-large-6),:host(.nx-grid__column-large-7),:host(.nx-grid__column-large-8),:host(.nx-grid__column-large-9),:host(.nx-grid__column-large-fit),:host(.nx-grid__column-medium),:host(.nx-grid__column-medium-1),:host(.nx-grid__column-medium-10),:host(.nx-grid__column-medium-11),:host(.nx-grid__column-medium-12),:host(.nx-grid__column-medium-2),:host(.nx-grid__column-medium-3),:host(.nx-grid__column-medium-4),:host(.nx-grid__column-medium-5),:host(.nx-grid__column-medium-6),:host(.nx-grid__column-medium-7),:host(.nx-grid__column-medium-8),:host(.nx-grid__column-medium-9),:host(.nx-grid__column-medium-fit),:host(.nx-grid__column-small),:host(.nx-grid__column-small-1),:host(.nx-grid__column-small-10),:host(.nx-grid__column-small-11),:host(.nx-grid__column-small-12),:host(.nx-grid__column-small-2),:host(.nx-grid__column-small-3),:host(.nx-grid__column-small-4),:host(.nx-grid__column-small-5),:host(.nx-grid__column-small-6),:host(.nx-grid__column-small-7),:host(.nx-grid__column-small-8),:host(.nx-grid__column-small-9),:host(.nx-grid__column-small-fit){padding-right:16px;padding-left:16px}:host(.nx-grid__column-medium){flex-basis:0;flex-grow:1;max-width:100%}:host(.nx-grid__column-medium-fit){flex:0 0 auto;width:auto}:host(.nx-grid__column-medium-1){flex:0 0 8.33333%;max-width:8.33333%}:host(.nx-grid__column-medium-2){flex:0 0 16.66667%;max-width:16.66667%}:host(.nx-grid__column-medium-3){flex:0 0 25%;max-width:25%}:host(.nx-grid__column-medium-4){flex:0 0 33.33333%;max-width:33.33333%}:host(.nx-grid__column-medium-5){flex:0 0 41.66667%;max-width:41.66667%}:host(.nx-grid__column-medium-6){flex:0 0 50%;max-width:50%}:host(.nx-grid__column-medium-7){flex:0 0 58.33333%;max-width:58.33333%}:host(.nx-grid__column-medium-8){flex:0 0 66.66667%;max-width:66.66667%}:host(.nx-grid__column-medium-9){flex:0 0 75%;max-width:75%}:host(.nx-grid__column-medium-10){flex:0 0 83.33333%;max-width:83.33333%}:host(.nx-grid__column-medium-11){flex:0 0 91.66667%;max-width:91.66667%}:host(.nx-grid__column-medium-12){flex:0 0 100%;max-width:100%}.pull-medium-0{right:auto}.pull-medium-1{right:8.33333%}.pull-medium-2{right:16.66667%}.pull-medium-3{right:25%}.pull-medium-4{right:33.33333%}.pull-medium-5{right:41.66667%}.pull-medium-6{right:50%}.pull-medium-7{right:58.33333%}.pull-medium-8{right:66.66667%}.pull-medium-9{right:75%}.pull-medium-10{right:83.33333%}.pull-medium-11{right:91.66667%}.pull-medium-12{right:100%}.push-medium-0{left:auto}.push-medium-1{left:8.33333%}.push-medium-2{left:16.66667%}.push-medium-3{left:25%}.push-medium-4{left:33.33333%}.push-medium-5{left:41.66667%}.push-medium-6{left:50%}.push-medium-7{left:58.33333%}.push-medium-8{left:66.66667%}.push-medium-9{left:75%}.push-medium-10{left:83.33333%}.push-medium-11{left:91.66667%}.push-medium-12{left:100%}:host(.nx-grid--offset-medium-0){margin-left:0}:host(.nx-grid--offset-medium-1){margin-left:8.33333%}:host(.nx-grid--offset-medium-2){margin-left:16.66667%}:host(.nx-grid--offset-medium-3){margin-left:25%}:host(.nx-grid--offset-medium-4){margin-left:33.33333%}:host(.nx-grid--offset-medium-5){margin-left:41.66667%}:host(.nx-grid--offset-medium-6){margin-left:50%}:host(.nx-grid--offset-medium-7){margin-left:58.33333%}:host(.nx-grid--offset-medium-8){margin-left:66.66667%}:host(.nx-grid--offset-medium-9){margin-left:75%}:host(.nx-grid--offset-medium-10){margin-left:83.33333%}:host(.nx-grid--offset-medium-11){margin-left:91.66667%}:host(.nx-flex-medium-first){order:-1}:host(.nx-flex-medium-last){order:1}:host(.nx-flex-medium-unordered){order:0}:host(.nx-align-self-medium-auto){-ms-grid-row-align:auto!important;align-self:auto!important}:host(.nx-align-self-medium-start){align-self:flex-start!important}:host(.nx-align-self-medium-end){align-self:flex-end!important}:host(.nx-align-self-medium-center){-ms-grid-row-align:center!important;align-self:center!important}:host(.nx-align-self-medium-baseline){align-self:baseline!important}:host(.nx-align-self-medium-stretch){-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:992px){:host(.nx-grid__column),:host(.nx-grid__column-1),:host(.nx-grid__column-10),:host(.nx-grid__column-11),:host(.nx-grid__column-12),:host(.nx-grid__column-2),:host(.nx-grid__column-3),:host(.nx-grid__column-4),:host(.nx-grid__column-5),:host(.nx-grid__column-6),:host(.nx-grid__column-7),:host(.nx-grid__column-8),:host(.nx-grid__column-9),:host(.nx-grid__column-fit),:host(.nx-grid__column-large),:host(.nx-grid__column-large-1),:host(.nx-grid__column-large-10),:host(.nx-grid__column-large-11),:host(.nx-grid__column-large-12),:host(.nx-grid__column-large-2),:host(.nx-grid__column-large-3),:host(.nx-grid__column-large-4),:host(.nx-grid__column-large-5),:host(.nx-grid__column-large-6),:host(.nx-grid__column-large-7),:host(.nx-grid__column-large-8),:host(.nx-grid__column-large-9),:host(.nx-grid__column-large-fit),:host(.nx-grid__column-medium),:host(.nx-grid__column-medium-1),:host(.nx-grid__column-medium-10),:host(.nx-grid__column-medium-11),:host(.nx-grid__column-medium-12),:host(.nx-grid__column-medium-2),:host(.nx-grid__column-medium-3),:host(.nx-grid__column-medium-4),:host(.nx-grid__column-medium-5),:host(.nx-grid__column-medium-6),:host(.nx-grid__column-medium-7),:host(.nx-grid__column-medium-8),:host(.nx-grid__column-medium-9),:host(.nx-grid__column-medium-fit),:host(.nx-grid__column-small),:host(.nx-grid__column-small-1),:host(.nx-grid__column-small-10),:host(.nx-grid__column-small-11),:host(.nx-grid__column-small-12),:host(.nx-grid__column-small-2),:host(.nx-grid__column-small-3),:host(.nx-grid__column-small-4),:host(.nx-grid__column-small-5),:host(.nx-grid__column-small-6),:host(.nx-grid__column-small-7),:host(.nx-grid__column-small-8),:host(.nx-grid__column-small-9),:host(.nx-grid__column-small-fit){padding-right:16px;padding-left:16px}:host(.nx-grid__column-large){flex-basis:0;flex-grow:1;max-width:100%}:host(.nx-grid__column-large-fit){flex:0 0 auto;width:auto}:host(.nx-grid__column-large-1){flex:0 0 8.33333%;max-width:8.33333%}:host(.nx-grid__column-large-2){flex:0 0 16.66667%;max-width:16.66667%}:host(.nx-grid__column-large-3){flex:0 0 25%;max-width:25%}:host(.nx-grid__column-large-4){flex:0 0 33.33333%;max-width:33.33333%}:host(.nx-grid__column-large-5){flex:0 0 41.66667%;max-width:41.66667%}:host(.nx-grid__column-large-6){flex:0 0 50%;max-width:50%}:host(.nx-grid__column-large-7){flex:0 0 58.33333%;max-width:58.33333%}:host(.nx-grid__column-large-8){flex:0 0 66.66667%;max-width:66.66667%}:host(.nx-grid__column-large-9){flex:0 0 75%;max-width:75%}:host(.nx-grid__column-large-10){flex:0 0 83.33333%;max-width:83.33333%}:host(.nx-grid__column-large-11){flex:0 0 91.66667%;max-width:91.66667%}:host(.nx-grid__column-large-12){flex:0 0 100%;max-width:100%}.pull-large-0{right:auto}.pull-large-1{right:8.33333%}.pull-large-2{right:16.66667%}.pull-large-3{right:25%}.pull-large-4{right:33.33333%}.pull-large-5{right:41.66667%}.pull-large-6{right:50%}.pull-large-7{right:58.33333%}.pull-large-8{right:66.66667%}.pull-large-9{right:75%}.pull-large-10{right:83.33333%}.pull-large-11{right:91.66667%}.pull-large-12{right:100%}.push-large-0{left:auto}.push-large-1{left:8.33333%}.push-large-2{left:16.66667%}.push-large-3{left:25%}.push-large-4{left:33.33333%}.push-large-5{left:41.66667%}.push-large-6{left:50%}.push-large-7{left:58.33333%}.push-large-8{left:66.66667%}.push-large-9{left:75%}.push-large-10{left:83.33333%}.push-large-11{left:91.66667%}.push-large-12{left:100%}:host(.nx-grid--offset-large-0){margin-left:0}:host(.nx-grid--offset-large-1){margin-left:8.33333%}:host(.nx-grid--offset-large-2){margin-left:16.66667%}:host(.nx-grid--offset-large-3){margin-left:25%}:host(.nx-grid--offset-large-4){margin-left:33.33333%}:host(.nx-grid--offset-large-5){margin-left:41.66667%}:host(.nx-grid--offset-large-6){margin-left:50%}:host(.nx-grid--offset-large-7){margin-left:58.33333%}:host(.nx-grid--offset-large-8){margin-left:66.66667%}:host(.nx-grid--offset-large-9){margin-left:75%}:host(.nx-grid--offset-large-10){margin-left:83.33333%}:host(.nx-grid--offset-large-11){margin-left:91.66667%}:host(.nx-flex-large-first){order:-1}:host(.nx-flex-large-last){order:1}:host(.nx-flex-large-unordered){order:0}:host(.nx-align-self-large-auto){-ms-grid-row-align:auto!important;align-self:auto!important}:host(.nx-align-self-large-start){align-self:flex-start!important}:host(.nx-align-self-large-end){align-self:flex-end!important}:host(.nx-align-self-large-center){-ms-grid-row-align:center!important;align-self:center!important}:host(.nx-align-self-large-baseline){align-self:baseline!important}:host(.nx-align-self-large-stretch){-ms-grid-row-align:stretch!important;align-self:stretch!important}}\"]\n            }] }\n];\n/** @nocollapse */\nNxColComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nNxColComponent.propDecorators = {\n    col: [{ type: Input, args: ['nxCol',] }],\n    offset: [{ type: Input, args: ['nxColOffset',] }],\n    itemSelf: [{ type: Input, args: ['nxAlignSelf',] }],\n    order: [{ type: Input, args: ['nxColOrder',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxLayoutComponent {\n    constructor() {\n        this._classNames = '';\n        /**\n         * \\@docs-private\n         */\n        this.grid = true;\n    }\n    /**\n     * Type of layout.\n     *\n     * Values: grid | grid nogutters | grid maxwidth. Default value: grid.\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        this._classNames = value;\n        this.grid = !!this._classNames.match(/grid/);\n        this.noGutters = !!this._classNames.match(/nogutters/);\n        this.maxWidth = !!this._classNames.match(/maxwidth/);\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n}\nNxLayoutComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: '[nxLayout]',\n                template: '<ng-content></ng-content>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-grid]': 'grid',\n                    '[class.nx-grid--no-gutters]': 'noGutters',\n                    '[class.nx-grid--max-width]': 'maxWidth'\n                },\n                styles: [\":host(.nx-grid){position:relative;margin-left:auto;margin-right:auto;padding-right:8px;padding-left:8px}@media (min-width:704px){:host(.nx-grid){padding-right:32px;padding-left:32px}}:host(.nx-grid--no-gutters) ::ng-deep{padding-left:0;padding-right:0}:host(.nx-grid--no-gutters) ::ng-deep .nx-grid__row{margin-left:0;margin-right:0}:host(.nx-grid--no-gutters) ::ng-deep .nx-grid__row>[class*=nx-grid__column]{padding-left:0;padding-right:0}:host(.nx-grid--max-width){width:100%}@media (min-width:992px){:host(.nx-grid--max-width){width:1184px;max-width:100%}}\"]\n            }] }\n];\nNxLayoutComponent.propDecorators = {\n    classNames: [{ type: Input, args: ['nxLayout',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPPING_JUSTIFY = {\n    'start': 'nx-justify-content-{tier}-start',\n    'end': 'nx-justify-content-{tier}-end',\n    'center': 'nx-justify-content-{tier}-center',\n    'between': 'nx-justify-content-{tier}-between',\n    'around': 'nx-justify-content-{tier}-around'\n};\n/** @type {?} */\nconst MAPPING_ALIGN_ITEMS = {\n    'start': 'nx-align-items-{tier}-start',\n    'end': 'nx-align-items-{tier}-end',\n    'center': 'nx-align-items-{tier}-center',\n    'baseline': 'nx-align-items-{tier}-baseline',\n    'stretch': 'nx-align-items-{tier}-stretch'\n};\n/** @type {?} */\nconst MAPPING_ALIGN_CONTENT = {\n    'start': 'nx-align-content-{tier}-start',\n    'end': 'nx-align-content-{tier}-end',\n    'center': 'nx-align-content-{tier}-center',\n    'between': 'nx-align-content-{tier}-between',\n    'around': 'nx-align-content-{tier}-around',\n    'stretch': 'nx-align-content-{tier}-stretch'\n};\n/** @type {?} */\nconst MAPPING_WRAP = {\n    'wrap': 'nx-flex-{tier}-wrap',\n    'nowrap': 'nx-flex-{tier}-nowrap',\n    'reverse': 'nx-flex-{tier}-wrap-reverse'\n};\n/** @type {?} */\nconst MAPPING_LAYOUT = {\n    'row': 'nx-grid__row',\n    'row-reverse': 'nx-grid__row-reverse'\n};\nclass NxRowComponent {\n    /**\n     * @param {?} el\n     */\n    constructor(el) {\n        this.el = el;\n        this.ROW = 'row';\n        this.ROW_RESERVE = 'row-reverse';\n        this._classNames = '';\n        /**\n         * General\n         */\n        this._nxRow = this.ROW;\n        /* Input row variables */\n        /**\n         * Align items on the main axis (horizontally).\n         */\n        this.nxRowJustify = null;\n        /**\n         * Similar to nxRowAlignItems, but instead of aligning flex items, it aligns flex lines.\n         */\n        this.nxRowAlignContent = null;\n        /**\n         * The default alignment for items inside the flexible container.\n         */\n        this.nxRowAlignItems = null;\n        /**\n         * How the flexible items should be wrapped.\n         */\n        this.nxRowWrap = null;\n    }\n    /**\n     * Values: row | row-reverse\n     *\n     * Default value: row\n     * @param {?} value\n     * @return {?}\n     */\n    set nxRow(value) {\n        if (value !== '') {\n            this._nxRow = value;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._nxRow === this.ROW ||\n            this._nxRow === this.ROW_RESERVE) {\n            /** add row style */\n            this._classNames = mapClassNames(this._nxRow, [], MAPPING_LAYOUT);\n            /** if not empty nxRowWrap, split input and add style */\n            if (this.nxRowWrap) {\n                /** possibles atributes: wrap,reverse,no-wrap */\n                this._classNames += addStylesFromDimensions(this.nxRowWrap, MAPPING_WRAP);\n            }\n            /** if not empty nxRowJustify, add style */\n            if (this.nxRowJustify) {\n                /** possibles atributes: start,end,center,between,around */\n                this._classNames += addStylesFromDimensions(this.nxRowJustify, MAPPING_JUSTIFY);\n            }\n            /** if not empty nxRowAlignContent, add style */\n            if (this.nxRowAlignContent) {\n                /** possibles atributes: start,end,center,between,stetch */\n                this._classNames += addStylesFromDimensions(this.nxRowAlignContent, MAPPING_ALIGN_CONTENT);\n            }\n            /** if not empty nxRowAlignItems, add style */\n            if (this.nxRowAlignItems) {\n                /** possibles atributes: start,end,center,around,stetch */\n                this._classNames += addStylesFromDimensions(this.nxRowAlignItems, MAPPING_ALIGN_ITEMS);\n            }\n            this._classNames += ' ' + this.el.nativeElement.className;\n            this._classNames = this._classNames.trim();\n        }\n        else {\n            throw new Error('nxRow is incorrect');\n        }\n    }\n}\nNxRowComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: '[nxRow]',\n                template: '<ng-content></ng-content>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class]': '_classNames'\n                },\n                styles: [\":host{display:flex;flex-wrap:wrap;margin-right:-8px;margin-left:-8px;position:relative}:host(.nx-flex-row){flex-direction:row!important}:host(.nx-flex-column){flex-direction:column!important}:host(.nx-flex-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-wrap){flex-wrap:wrap!important}:host(.nx-flex-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-start){justify-content:flex-start!important}:host(.nx-justify-content-end){justify-content:flex-end!important}:host(.nx-justify-content-center){justify-content:center!important}:host(.nx-justify-content-between){justify-content:space-between!important}:host(.nx-justify-content-around){justify-content:space-around!important}:host(.nx-align-items-start){align-items:flex-start!important}:host(.nx-align-items-end){align-items:flex-end!important}:host(.nx-align-items-center){align-items:center!important}:host(.nx-align-items-baseline){align-items:baseline!important}:host(.nx-align-items-stretch){align-items:stretch!important}:host(.nx-align-content-start){align-content:flex-start!important}:host(.nx-align-content-end){align-content:flex-end!important}:host(.nx-align-content-center){align-content:center!important}:host(.nx-align-content-between){align-content:space-between!important}:host(.nx-align-content-around){align-content:space-around!important}:host(.nx-align-content-stretch){align-content:stretch!important}@media (min-width:320px){:host{margin-right:-8px;margin-left:-8px;position:relative}:host(.nx-flex-small-row){flex-direction:row!important}:host(.nx-flex-small-column){flex-direction:column!important}:host(.nx-flex-small-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-small-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-small-wrap){flex-wrap:wrap!important}:host(.nx-flex-small-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-small-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-small-start){justify-content:flex-start!important}:host(.nx-justify-content-small-end){justify-content:flex-end!important}:host(.nx-justify-content-small-center){justify-content:center!important}:host(.nx-justify-content-small-between){justify-content:space-between!important}:host(.nx-justify-content-small-around){justify-content:space-around!important}:host(.nx-align-items-small-start){align-items:flex-start!important}:host(.nx-align-items-small-end){align-items:flex-end!important}:host(.nx-align-items-small-center){align-items:center!important}:host(.nx-align-items-small-baseline){align-items:baseline!important}:host(.nx-align-items-small-stretch){align-items:stretch!important}:host(.nx-align-content-small-start){align-content:flex-start!important}:host(.nx-align-content-small-end){align-content:flex-end!important}:host(.nx-align-content-small-center){align-content:center!important}:host(.nx-align-content-small-between){align-content:space-between!important}:host(.nx-align-content-small-around){align-content:space-around!important}:host(.nx-align-content-small-stretch){align-content:stretch!important}}@media (min-width:704px){:host{margin-right:-16px;margin-left:-16px;position:relative}:host(.nx-flex-medium-row){flex-direction:row!important}:host(.nx-flex-medium-column){flex-direction:column!important}:host(.nx-flex-medium-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-medium-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-medium-wrap){flex-wrap:wrap!important}:host(.nx-flex-medium-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-medium-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-medium-start){justify-content:flex-start!important}:host(.nx-justify-content-medium-end){justify-content:flex-end!important}:host(.nx-justify-content-medium-center){justify-content:center!important}:host(.nx-justify-content-medium-between){justify-content:space-between!important}:host(.nx-justify-content-medium-around){justify-content:space-around!important}:host(.nx-align-items-medium-start){align-items:flex-start!important}:host(.nx-align-items-medium-end){align-items:flex-end!important}:host(.nx-align-items-medium-center){align-items:center!important}:host(.nx-align-items-medium-baseline){align-items:baseline!important}:host(.nx-align-items-medium-stretch){align-items:stretch!important}:host(.nx-align-content-medium-start){align-content:flex-start!important}:host(.nx-align-content-medium-end){align-content:flex-end!important}:host(.nx-align-content-medium-center){align-content:center!important}:host(.nx-align-content-medium-between){align-content:space-between!important}:host(.nx-align-content-medium-around){align-content:space-around!important}:host(.nx-align-content-medium-stretch){align-content:stretch!important}}@media (min-width:992px){:host{margin-right:-16px;margin-left:-16px;position:relative}:host(.nx-flex-large-row){flex-direction:row!important}:host(.nx-flex-large-column){flex-direction:column!important}:host(.nx-flex-large-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-large-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-large-wrap){flex-wrap:wrap!important}:host(.nx-flex-large-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-large-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-large-start){justify-content:flex-start!important}:host(.nx-justify-content-large-end){justify-content:flex-end!important}:host(.nx-justify-content-large-center){justify-content:center!important}:host(.nx-justify-content-large-between){justify-content:space-between!important}:host(.nx-justify-content-large-around){justify-content:space-around!important}:host(.nx-align-items-large-start){align-items:flex-start!important}:host(.nx-align-items-large-end){align-items:flex-end!important}:host(.nx-align-items-large-center){align-items:center!important}:host(.nx-align-items-large-baseline){align-items:baseline!important}:host(.nx-align-items-large-stretch){align-items:stretch!important}:host(.nx-align-content-large-start){align-content:flex-start!important}:host(.nx-align-content-large-end){align-content:flex-end!important}:host(.nx-align-content-large-center){align-content:center!important}:host(.nx-align-content-large-between){align-content:space-between!important}:host(.nx-align-content-large-around){align-content:space-around!important}:host(.nx-align-content-large-stretch){align-content:stretch!important}}\"]\n            }] }\n];\n/** @nocollapse */\nNxRowComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nNxRowComponent.propDecorators = {\n    nxRow: [{ type: Input }],\n    nxRowJustify: [{ type: Input, args: ['nxRowJustify',] }],\n    nxRowAlignContent: [{ type: Input, args: ['nxRowAlignContent',] }],\n    nxRowAlignItems: [{ type: Input, args: ['nxRowAlignItems',] }],\n    nxRowWrap: [{ type: Input, args: ['nxRowWrap',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxGridModule {\n}\nNxGridModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NxLayoutComponent,\n                    NxRowComponent,\n                    NxColComponent\n                ],\n                exports: [\n                    NxLayoutComponent,\n                    NxRowComponent,\n                    NxColComponent\n                ],\n                imports: [\n                    CommonModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxColComponent, NxLayoutComponent, NxRowComponent, NxGridModule };\n\n//# sourceMappingURL=allianz-ngx-ndbx-grid.js.map","import { CommonModule } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { NxFormfieldControl, NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\nimport { Inject, Directive, ElementRef, Input, Optional, Self, InjectionToken, Component, ChangeDetectorRef, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NX_INPUT_VALUE_ACCESSOR = new InjectionToken('NX_INPUT_VALUE_ACCESSOR');\n/** @type {?} */\nconst INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nconst ɵ0 = /**\n * @param {?} t\n * @return {?}\n */\nt => getSupportedInputTypes().has(t);\n/** @type {?} */\nconst NEVER_EMPTY = [\n    'date',\n    'datetime',\n    'datetime-local',\n    'month',\n    'time',\n    'week'\n].filter((ɵ0));\n/** @type {?} */\nlet nextUniqueId = 0;\nclass NxInputDirective {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _errorStateMatcher\n     * @param {?} inputValueAccessor\n     */\n    constructor(_elementRef, ngControl, _parentForm, _parentFormGroup, _errorStateMatcher, inputValueAccessor) {\n        this._elementRef = _elementRef;\n        this.ngControl = ngControl;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this._errorStateMatcher = _errorStateMatcher;\n        this._type = 'text';\n        this._uid = `nx-input-${nextUniqueId++}`;\n        this._disabled = false;\n        this._required = false;\n        this._readonly = false;\n        /**\n         * \\@docs-private\n         */\n        this.errorState = false;\n        /**\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * \\@docs-private\n         */\n        this.focused = false;\n        this.id = this.id;\n        // This will enable other directives to plugin itself as the value accessor\n        // by using the NX_INPUT_VALUE_ACCESSOR Token. Default is the given input field.\n        // TODO eliminate injected dateValueAccessor once we have intra-package support in ng-packagr\n        // See the datefield for details.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n        this._previousNativeValue = this.value;\n    }\n    /**\n     * The id of the input.\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * The input element's value.\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Sets the type of the input element (e.g. password, text etc).\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get elementRef() {\n        return this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // force to to run change detection so we know about changes in the native form input\n    }\n    /**\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && !this.readonly) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        else {\n            // When the input isn't used together with `@angular/forms`, we need to check manually for\n            // changes to the native `value` property in order to update the floating label.\n            this._dirtyCheckNativeValue();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    updateErrorState() {\n        /** @type {?} */\n        const oldState = this.errorState;\n        /** @type {?} */\n        const parent = this._parentFormGroup || this._parentForm;\n        /** @type {?} */\n        const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n        /** @type {?} */\n        const newState = this._errorStateMatcher.isErrorState(control, parent);\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Set a list of ids that is currently describing this input\n     * (if you have hints and errors for example).\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    // allow to set a arial label value in case there\n    // is not possibility to display a proper label\n    /**\n     * Method to set the aria label.\n     * This is required if you use the input outside of a formfield\n     * where you don't have a label connected.\n     * @param {?} value\n     * @return {?}\n     */\n    setAriaLabel(value) {\n        this._ariaLabel = value;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        const validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return NEVER_EMPTY.indexOf(this._type) > -1;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _isTextarea() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        return nativeElement.nodeName ? nativeElement.nodeName.toLowerCase() === 'textarea' : false;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (INVALID_TYPES.indexOf(this._type) > -1) {\n            throw new Error(`Input of type '${this._type}' is not supported`);\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n}\nNxInputDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[nxInput], textarea[nxInput], select[nxInput]',\n                host: {\n                    '[class.c-input]': 'true',\n                    '[attr.id]': 'id',\n                    '[class.is-filled]': 'empty === false',\n                    '[class.is-disabled]': 'disabled',\n                    '[class.has-error]': 'errorState',\n                    '[class.is-focused]': 'focused',\n                    '[attr.aria-label]': '_ariaLabel || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()',\n                },\n                providers: [{ provide: NxFormfieldControl, useExisting: NxInputDirective }],\n            },] }\n];\n/** @nocollapse */\nNxInputDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NX_INPUT_VALUE_ACCESSOR,] }] }\n];\nNxInputDirective.propDecorators = {\n    _ariaLabel: [{ type: Input, args: ['nxAriaLabel',] }],\n    id: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst visibilityIcons = {\n    show: 'password-show-o',\n    hide: 'password-hide-o'\n};\nclass NxPasswordToggleComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * \\@docs-private\n         */\n        this._currentIcon = visibilityIcons['show'];\n        /**\n         * \\@docs-private\n         */\n        this._pressed = false;\n        this._ariaLabel = 'Show password';\n    }\n    /**\n     * Sets the aria-label needed for accessibility.\n     * Notice that this `aria-label` should describe the initial action according to the status of the visibility.\n     * E.g if you have an `input[type=password]` at the beginning then the\n     * password will be hidden and the correct aria-label would be 'Show password.'\n     * @param {?} value\n     * @return {?}\n     */\n    set ariaLabel(value) {\n        if (value !== this._ariaLabel) {\n            this._ariaLabel = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get ariaLabel() {\n        return this._ariaLabel;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.control) {\n            console.warn('You need to pass an input as a control to the password toggle.');\n        }\n        else {\n            // show the right icon according to the initial type of the input\n            this._currentIcon = this.control.type === 'password' ? visibilityIcons['show'] : visibilityIcons['hide'];\n        }\n    }\n    /**\n     * Toggles the type of the input.\n     * @return {?}\n     */\n    toggleInputType() {\n        if (this.control) {\n            this.control.type = this.control.type === 'password' ? 'text' : 'password';\n            this._pressed = !this._pressed;\n            this.toggleIcon();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    toggleIcon() {\n        this._currentIcon = this._currentIcon === visibilityIcons['show'] ? visibilityIcons['hide'] : visibilityIcons['show'];\n    }\n    /**\n     * \\@docs-private\n     * @param {?} $event\n     * @return {?}\n     */\n    _onKeydown($event) {\n        if ($event && ($event.keyCode === ENTER || $event.keyCode === SPACE)) {\n            this.toggleInputType();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get tabindex() {\n        if (this.control) {\n            return this.control.disabled ? -1 : 0;\n        }\n        return null;\n    }\n}\nNxPasswordToggleComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-password-toggle',\n                template: `<nx-icon\n      aria-hidden=\"true\"\n      [name]=\"_currentIcon\">\n    </nx-icon>`,\n                host: {\n                    '[attr.aria-label]': 'ariaLabel',\n                    '[attr.tabindex]': 'tabindex',\n                    '[attr.aria-pressed]': '_pressed',\n                    'role': 'button',\n                    '(click)': 'toggleInputType()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{position:relative;display:inline-block;height:24px;width:24px;cursor:pointer}:host:focus{outline:0}:host-context([data-whatinput=keyboard]):focus ::ng-deep nx-icon{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}:host-context(.is-disabled){pointer-events:none}\"]\n            }] }\n];\n/** @nocollapse */\nNxPasswordToggleComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxPasswordToggleComponent.propDecorators = {\n    control: [{ type: Input }],\n    ariaLabel: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxInputModule {\n}\nNxInputModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxFormfieldModule,\n                    NxIconModule\n                ],\n                declarations: [\n                    NxInputDirective,\n                    NxPasswordToggleComponent\n                ],\n                exports: [\n                    NxFormfieldModule,\n                    NxInputDirective,\n                    NxPasswordToggleComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxInputModule, NX_INPUT_VALUE_ACCESSOR, NxInputDirective, NxPasswordToggleComponent };\n\n//# sourceMappingURL=allianz-ngx-ndbx-input.js.map","import { CommonModule } from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef, Output, EventEmitter, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ICONS = {\n    info: 'info-circle',\n    error: 'exclamation-circle',\n    success: 'check-circle',\n    warning: 'exclamation-triangle'\n};\nclass NxMessageComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._context = 'regular';\n        this._showIcon = false;\n        this._closable = false;\n        this._closeButtonLabel = 'Close dialog';\n        /**\n         * Event emitted when the close icon of the message has been clicked.\n         */\n        this.closeEvent = new EventEmitter();\n    }\n    /**\n     * Sets the context of the message.\n     * The message box will color accordingly. Default: 'regular'\n     * @param {?} value\n     * @return {?}\n     */\n    set context(value) {\n        if (value !== this._context) {\n            this._context = value;\n            this._icon = this.getIconName();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get context() {\n        return this._context;\n    }\n    /**\n     * Whether an icon that belongs to the context of the message should be displayed.\n     * @deprecated The `showIcon` attribute should be always true in future. Messages without an icon are deprecated.\n     * \\@deletion-target 9.0.0\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    set showIcon(value) {\n        this._showIcon = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get showIcon() {\n        return this._showIcon;\n    }\n    /**\n     * Whether a message should have a close icon in order to be dismissed.\n     * @param {?} value\n     * @return {?}\n     */\n    set closable(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._closable) {\n            this._closable = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get closable() {\n        return this._closable;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get icon() {\n        return this._icon;\n    }\n    /**\n     * Sets the label of the close button of the message.\n     * @param {?} value\n     * @return {?}\n     */\n    set closeButtonLabel(value) {\n        if (value !== this._closeButtonLabel) {\n            this._closeButtonLabel = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get closeButtonLabel() {\n        return this._closeButtonLabel;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    _emitCloseEvent() {\n        this.closeEvent.emit();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getIconName() {\n        if (this._context === 'info') {\n            return ICONS.info;\n        }\n        else if (this._context === 'error') {\n            return ICONS.error;\n        }\n        else if (this._context === 'success') {\n            return ICONS.success;\n        }\n        else if (this._context === 'warning') {\n            return ICONS.warning;\n        }\n        return '';\n    }\n}\nNxMessageComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-message',\n                template: \"<nx-icon *ngIf=\\\"showIcon && context !== 'regular'\\\"\\n         class=\\\"nx-message__icon\\\"\\n         [name]=\\\"icon\\\"\\n         size=\\\"s\\\">\\n</nx-icon>\\n<button\\n  *ngIf=\\\"closable\\\"\\n  (click)=\\\"_emitCloseEvent()\\\"\\n  [attr.aria-label]=\\\"closeButtonLabel\\\"\\n  tabindex=\\\"0\\\"\\n  class=\\\"nx-message__close-icon\\\">\\n    <nx-icon\\n      name=\\\"close\\\"\\n      size=\\\"s\\\"\\n      aria-hidden=\\\"true\\\">\\n    </nx-icon>\\n</button>\\n\\n\\n<div class=\\\"nx-message__content-wrapper\\\">\\n  <div class=\\\"nx-message__content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'nxMessage',\n                host: {\n                    '[class.context-info]': 'context === \"info\"',\n                    '[class.context-error]': 'context === \"error\"',\n                    '[class.context-success]': 'context === \"success\"',\n                    '[class.context-warning]': 'context === \"warning\"',\n                    '[class.nx-message--closable]': 'closable'\n                },\n                styles: [\":host{width:100%;color:#414141;display:flex;align-items:flex-start;position:relative;background-color:#fff;border:1px solid;border-radius:4px;box-shadow:0 2px 4px rgba(65,65,65,.5);padding:23px;margin:12px 0;font-size:16px;line-height:24px}.nx-message__content-wrapper{max-width:100%}:host,:host(.context-regular){border-color:#414141}:host(.context-info){border-color:#496ebd}:host(.context-info) .nx-message__icon{color:#496ebd}:host(.context-error){border-color:#dc3149}:host(.context-error) .nx-message__icon{color:#dc3149}:host(.context-success){border-color:#1e8927}:host(.context-success) .nx-message__icon{color:#1e8927}:host(.context-warning){border-color:#efbe25}:host(.context-warning) .nx-message__icon{color:#efbe25}.nx-message__icon{margin-right:16px}@media (max-width:703px){:host{padding:31px;display:block}:host(.context-error) .nx-message__icon~.nx-message__content-wrapper .nx-message__content,:host(.context-info) .nx-message__icon~.nx-message__content-wrapper .nx-message__content,:host(.context-success) .nx-message__icon~.nx-message__content-wrapper .nx-message__content,:host(.context-warning) .nx-message__icon~.nx-message__content-wrapper .nx-message__content{display:inline;margin-left:31px}.nx-message__icon{position:absolute}}:host(.nx-message--closable){padding-right:39px}@media (max-width:703px){:host(.nx-message--closable){padding-right:31px}}.nx-message__close-icon{position:absolute;top:16px;right:16px;cursor:pointer;background-color:transparent;border:none;outline:0;padding:0;display:flex;align-items:center}.nx-message__close-icon nx-icon{font-size:16px;color:nx-colors(grey-tones,grey-tone-1)}:host-context([data-whatinput=keyboard]) .nx-message__close-icon:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}\"]\n            }] }\n];\n/** @nocollapse */\nNxMessageComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxMessageComponent.propDecorators = {\n    context: [{ type: Input, args: ['nxContext',] }],\n    showIcon: [{ type: Input }],\n    closable: [{ type: Input }],\n    closeButtonLabel: [{ type: Input }],\n    closeEvent: [{ type: Output, args: ['close',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxMessageModule {\n}\nNxMessageModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxIconModule\n                ],\n                declarations: [\n                    NxMessageComponent\n                ],\n                exports: [\n                    NxMessageComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxMessageModule, NxMessageComponent };\n\n//# sourceMappingURL=allianz-ngx-ndbx-message.js.map","import { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { NxFormfieldControl, NxFormfieldErrorDirective } from '@allianz/ngx-ndbx/formfield';\nimport { getFontShorthand } from '@allianz/ngx-ndbx/utils';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { NxPopoverTriggerDirective, NxPopoverModule } from '@allianz/ngx-ndbx/popover';\nimport { NxDropdownComponent } from '@allianz/ngx-ndbx/dropdown';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { startWith, delay, throttleTime } from 'rxjs/operators';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, HostBinding, Input, Renderer2, ViewChild, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxWordComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _renderer\n     * @param {?} _overlay\n     */\n    constructor(elementRef, _changeDetectorRef, _renderer, _overlay) {\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._renderer = _renderer;\n        this._overlay = _overlay;\n        this.subscription = Subscription.EMPTY;\n        this.subscriptionValues = Subscription.EMPTY;\n        /**\n         * \\@docs-private\n         */\n        this.hasErrors = false;\n        /**\n         * \\@docs-private\n         */\n        this.inputChanges = new Subject();\n        /**\n         * \\@docs-private\n         */\n        this.currentTextWidth = 0;\n        // this will apply different min-widths to our component through our styles\n        /**\n         * Provide a hint for a minimal width. The actual size will be determined for inputs for each change.\n         */\n        this.size = 'regular';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        this.subscription = this._control.stateChanges.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.hasErrors = this._control.errorState;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // if we have a ngcontrol available stick to its valueChanges subject\n        if (this._control.ngControl) {\n            this.subscriptionValues = this._control.ngControl.valueChanges.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => {\n                this.updateCurrentTextWidth();\n                this.inputChanges.next();\n            }));\n            // in any other case it is a bre input and input changes are signaled through simple state changes\n        }\n        else {\n            this.subscriptionValues = this._control.stateChanges.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => {\n                this.updateCurrentTextWidth();\n                this.inputChanges.next();\n            }));\n        }\n        this._control.setAriaLabel(this.label);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    /**\n     * \\@docs-private\n     * Calculate the width of the full text given by the input,\n     * that value is bound to this component so it can grow.\n     * The involved input is known to have a width of 100% an will fit the additional space given\n     * which completes the auto growing behavior.\n     * @return {?}\n     */\n    updateCurrentTextWidth() {\n        // provide the canvas only lazy\n        if (!this.measureCanvas) {\n            this.measureCanvas = this._renderer.createElement('canvas');\n        }\n        /** @type {?} */\n        const ctx = this.measureCanvas.getContext('2d');\n        /** @type {?} */\n        const inputRef = this._control.elementRef;\n        /** @type {?} */\n        const styles = window.getComputedStyle(inputRef.nativeElement);\n        ctx.font = getFontShorthand(styles);\n        /** @type {?} */\n        const metrics = ctx.measureText(this._control.value);\n        // add 1px (cursor width) to prevent jumping of the text on blur.\n        /** @type {?} */\n        const newWidth = metrics.width + parseInt(styles.paddingRight, 10) + parseInt(styles.paddingLeft, 10) + 1;\n        // This should be injected via @Host to get an exact reference to NxNaturalLanguageFormComponent\n        // Works as promised as long as there is not other tag around the word. Not expected but possible.\n        /** @type {?} */\n        const parent = this.elementRef.nativeElement.parentElement;\n        /** @type {?} */\n        const parentMeasurement = parent.getBoundingClientRect();\n        // Limit to own given minimal width\n        this.currentTextWidth = Math.max(parseInt(styles.minWidth, 10), newWidth);\n        // Limit to container width\n        this.currentTextWidth = Math.min(this.currentTextWidth, parentMeasurement.width);\n        this._popover.updatePosition();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    repositionError() {\n        if (this._popover) {\n            this._popover.updatePosition();\n        }\n    }\n    // Fail if the required control is missing.\n    /**\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw new Error('NxWordComponent requires an NxFormfieldControl compatible input.');\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this.elementRef;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get isFocused() {\n        return this._control.focused;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get isFilled() {\n        return !this._control.empty;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get hasDropdown() {\n        return Boolean(this._dropdown);\n    }\n}\nNxWordComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-word',\n                template: \"<div\\n  class=\\\"nx-word__input-wrapper\\\"\\n  [nxPopoverTriggerFor]=\\\"popoverHover\\\"\\n  nxPopoverTrigger='manual'\\n  nxPopoverCloseable=\\\"false\\\"\\n  nxPopoverDirection=\\\"top\\\"\\n  [nxPopoverShow]=\\\"hasErrors && _errorChildren.length > 0\\\">\\n\\n  <!-- We only allow formfield controls here -->\\n  <div *ngIf=\\\"!hasDropdown\\\" class=\\\"nx-word__inner-wrapper\\\">\\n    <ng-content select=\\\"[nxInput]\\\"></ng-content>\\n  </div>\\n  <ng-content select=\\\"nx-dropdown\\\"></ng-content>\\n</div>\\n\\n<nx-popover #popoverHover>\\n  <ng-content select=\\\"[nxError]\\\"></ng-content>\\n</nx-popover>\\n\",\n                host: {\n                    '[class.size-short]': 'size == \"short\"',\n                    '[class.size-regular]': 'size == \"regular\"',\n                    '[class.size-long]': 'size == \"long\"',\n                    '[class.has-error]': 'hasErrors',\n                    '[class.is-focused]': 'isFocused',\n                    '[class.is-filled]': 'isFilled',\n                    '[class.has-dropdown]': 'hasDropdown',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:inline-block;position:relative;font-weight:400;text-align:center;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;width:100%}:host .nx-word__inner-wrapper{border-bottom:2px solid #d9d9d9}:host.size-short{min-width:80px}:host.size-regular{min-width:152px}:host.size-long{min-width:360px}@media (max-width:991px){:host.size-long{min-width:280px}}@media (max-width:703px){:host.size-long{min-width:248px}}:host ::ng-deep .c-input{display:inline-block;text-align:inherit;font-size:inherit;line-height:inherit;background:0 0;color:inherit;border:none;outline:0;margin:0;width:100%;max-width:100%;height:auto;box-shadow:none;padding:0 8px}:host ::ng-deep .c-input.is-focused{outline:0;box-shadow:none;border-bottom-width:2px}:host ::ng-deep .c-input.is-filled,:host ::ng-deep .c-input.is-focused{color:#006192;font-weight:400}:host ::ng-deep .c-input.is-disabled{cursor:not-allowed}:host ::ng-deep .c-input::-ms-clear{display:none}:host ::ng-deep nx-dropdown{position:relative;border-bottom:2px solid #d9d9d9}:host ::ng-deep nx-dropdown .nx-dropdown__container{font-size:inherit;margin-bottom:-2px}:host ::ng-deep nx-dropdown.is-filled{border-color:#007ab3;color:#006192}:host ::ng-deep nx-dropdown .nx-dropdown__icon{line-height:inherit}:host ::ng-deep .nx-word__input-wrapper{width:100%}:host(.is-filled) .nx-word__inner-wrapper,:host(.is-focused) .nx-word__inner-wrapper{border-color:#007ab3}:host(.has-error) .nx-word__inner-wrapper{border-color:#dc3149}:host.has-error ::ng-deep nx-dropdown{color:#dc3149;border-color:#dc3149}:host.has-error ::ng-deep .c-input.has-error{color:#dc3149}:host-context(.is-negative) ::ng-deep .nx-dropdown,:host-context(.is-negative) ::ng-deep nx-dropdown,:host-context(.is-negative) ::ng-deep nx-dropdown.is-filled{border-color:#fff;color:#fff}:host-context(.is-negative) ::ng-deep .c-input{color:#fff}:host-context(.is-negative) .nx-word__inner-wrapper{border-color:#fff}.nx-word__inner-wrapper{height:52px}@media (max-width:991px){:host ::ng-deep nx-dropdown .nx-dropdown__container{font-size:26px}.nx-word__inner-wrapper{height:36px}}:host-context(.nx-natural-language-form--small) .nx-word__inner-wrapper{height:36px}:host-context(.nx-natural-language-form--small) ::ng-deep nx-dropdown .nx-dropdown__container{margin-bottom:2px}\"]\n            }] }\n];\n/** @nocollapse */\nNxWordComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: Overlay }\n];\nNxWordComponent.propDecorators = {\n    _control: [{ type: ContentChild, args: [NxFormfieldControl,] }],\n    _errorChildren: [{ type: ContentChildren, args: [NxFormfieldErrorDirective,] }],\n    _popover: [{ type: ViewChild, args: [NxPopoverTriggerDirective,] }],\n    _dropdown: [{ type: ContentChild, args: [NxDropdownComponent,] }],\n    currentTextWidth: [{ type: HostBinding, args: ['style.width.px',] }],\n    size: [{ type: Input, args: ['nxSize',] }],\n    label: [{ type: Input, args: ['nxLabel',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_SIZE = 'large';\nclass NxNaturalLanguageFormComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._negative = false;\n        /**\n         * \\@docs-private\n         */\n        this.resizeEvent$ = new Subject();\n        /**\n         * \\@docs-private\n         */\n        this.updatePopoversSubscription = Subscription.EMPTY;\n        /**\n         * \\@docs-private\n         */\n        this._size = DEFAULT_SIZE;\n    }\n    /**\n     * Whether the negative set of stylings should be used.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Sets the size of the NLF. Default value: large\n     * @param {?} value\n     * @return {?}\n     */\n    set size(value) {\n        this._size = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onResize(event) {\n        this.resizeEvent$.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Collect all words and listen for changes so we can update any open error popover\n        // which would otherwise get wrongly positioned.\n        /** @type {?} */\n        const subjects = this._words.map((/**\n         * @param {?} word\n         * @return {?}\n         */\n        (word) => word.inputChanges));\n        /** @type {?} */\n        const source = merge(...subjects);\n        this.updatePopoversSubscription = source.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updatePositionPopovers();\n        }));\n        this.resizeObservable = this.resizeEvent$.pipe(throttleTime(500), delay(100));\n        this.resizeObservable.subscribe((/**\n         * @return {?}\n         */\n        () => this.resizeWords()));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    resizeWords() {\n        this._words.forEach((/**\n         * @param {?} word\n         * @return {?}\n         */\n        (word) => {\n            word.updateCurrentTextWidth();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.updatePopoversSubscription.unsubscribe();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    updatePositionPopovers() {\n        if (this._words) {\n            this._words.forEach((/**\n             * @param {?} word\n             * @return {?}\n             */\n            (word) => {\n                word.repositionError();\n            }));\n        }\n    }\n}\nNxNaturalLanguageFormComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-natural-language-form',\n                template: \"<div class=\\\"nx-natural-language-form__wrapper\\\">\\n    <ng-content></ng-content>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.is-negative]': 'negative',\n                    '[class.nx-natural-language-form--small]': 'size === \"small\"',\n                    '[class.nx-natural-language-form--large]': 'size === \"large\"',\n                },\n                styles: [\":host{display:block;padding-top:72px;padding-bottom:80px;color:#414141;font-weight:300;font-size:40px;line-height:52px}:host ::ng-deep .c-input{font-size:inherit;line-height:inherit}:host ::ng-deep nx-word+nx-word{margin-left:2px}:host.is-negative{color:#fff}@media (max-width:991px){:host{font-size:26px;line-height:36px}}@media (max-width:703px){:host{font-size:26px}}.nx-natural-language-form__wrapper{display:flex;flex-wrap:wrap}.nx-natural-language-form__wrapper>::ng-deep *{margin-bottom:8px}:host(.nx-natural-language-form--small){font-size:26px;line-height:32px;letter-spacing:.3px}:host(.nx-natural-language-form--small) ::ng-deep .c-input{font-size:inherit;line-height:inherit}\"]\n            }] }\n];\n/** @nocollapse */\nNxNaturalLanguageFormComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxNaturalLanguageFormComponent.propDecorators = {\n    _words: [{ type: ContentChildren, args: [NxWordComponent,] }],\n    negative: [{ type: Input, args: ['nxNegative',] }],\n    size: [{ type: Input }],\n    onResize: [{ type: HostListener, args: ['window:orientationchange', ['$event'],] }, { type: HostListener, args: ['window:resize', ['$event'],] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxNaturalLanguageFormModule {\n}\nNxNaturalLanguageFormModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxInputModule,\n                    NxPopoverModule\n                ],\n                declarations: [\n                    NxNaturalLanguageFormComponent,\n                    NxWordComponent\n                ],\n                exports: [\n                    NxNaturalLanguageFormComponent,\n                    NxWordComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxNaturalLanguageFormModule, NxNaturalLanguageFormComponent, NxWordComponent };\n\n//# sourceMappingURL=allianz-ngx-ndbx-natural-language-form.js.map","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { EventManager } from '@angular/platform-browser';\nimport { filter, map, takeUntil } from 'rxjs/operators';\nimport { Subject, fromEvent } from 'rxjs';\nimport { Directive, TemplateRef, ChangeDetectionStrategy, Component, ContentChild, EventEmitter, Output, ViewChild, ElementRef, HostListener, Input, ViewContainerRef, NgModule } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Popover content that will be rendered lazily\n * after the popover is opened for the first time.\n */\nclass NxPopoverContentDirective {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nNxPopoverContentDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[nxPopoverContent]'\n            },] }\n];\n/** @nocollapse */\nNxPopoverContentDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxPopoverComponent {\n    constructor() {\n        /**\n         * Event emitted when the popover is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * \\@docs-private\n         */\n        this.closeButtonClick = new Subject();\n        /**\n         * \\@docs-private\n         */\n        this.showCloseButton = false;\n        /**\n         * \\@docs-private\n         */\n        this.arrowStyle = {};\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.closed.complete();\n    }\n    // emit to notify the popover trigger directive that the close button was clicked\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    emitButtonClick() {\n        this.closeButtonClick.next();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    emitClosedEvent() {\n        this.closed.emit();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get classList() {\n        if (this.direction) {\n            return [`nx-popover--${this.direction}`];\n        }\n    }\n}\nNxPopoverComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-popover',\n                template: \"<ng-template>\\n  <div [ngClass]=\\\"classList\\\" role=\\\"tooltip\\\" aria-hidden=\\\"false\\\">\\n    <div class=\\\"nx-popover__content\\\">\\n        <div class=\\\"nx-popover__arrow\\\" [ngStyle]=\\\"arrowStyle\\\">\\n          </div>\\n      <span aria-hidden=\\\"true\\\" class=\\\"nx-popover__close-icon\\\" (click)=\\\"emitButtonClick()\\\"\\n            *ngIf=\\\"showCloseButton\\\">\\n        <nx-icon name=\\\"close\\\"></nx-icon>\\n      </span>\\n      <span [id]=\\\"id\\\">\\n        <ng-content></ng-content>\\n        <ng-container [ngTemplateOutlet]=\\\"_lazyContent?._template\\\"></ng-container>\\n      </span>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'nxPopover',\n                styles: [\".nx-popover__content{background-color:#fff;border:1px solid #d9d9d9;border-radius:4px;box-shadow:0 2px 4px rgba(65,65,65,.5);padding:23px;display:inline-block;font-size:16px}.nx-popover__close-icon{position:absolute;top:4px;right:4px;cursor:pointer;font-size:16px;line-height:16px}[data-whatintent=mouse] .nx-popover__content:focus{outline:0}.nx-popover__arrow{width:12px;height:12px;background-color:inherit;position:absolute;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);border-top:1px solid #d9d9d9;border-left:1px solid #d9d9d9}.nx-popover--top .nx-popover__arrow{-webkit-transform:translate(-50%,0) rotate(225deg);transform:translate(-50%,0) rotate(225deg);bottom:-5px;box-shadow:2px 2px 1px 1px #fff,-2px -2px 4px rgba(65,65,65,.5)}.nx-popover--right .nx-popover__arrow{-webkit-transform:translate(0,-50%) rotate(-45deg);transform:translate(0,-50%) rotate(-45deg);left:-5px}.nx-popover--bottom .nx-popover__arrow{-webkit-transform:translate(-50%,0) rotate(45deg);transform:translate(-50%,0) rotate(45deg);top:-5px}.nx-popover--left .nx-popover__arrow{-webkit-transform:translate(0,-50%) rotate(135deg);transform:translate(0,-50%) rotate(135deg);right:-5px}\"]\n            }] }\n];\n/** @nocollapse */\nNxPopoverComponent.ctorParameters = () => [];\nNxPopoverComponent.propDecorators = {\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    _lazyContent: [{ type: ContentChild, args: [NxPopoverContentDirective,] }],\n    closed: [{ type: Output, args: ['nxClosed',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId = 0;\n/** @type {?} */\nconst fallbacks = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX: 0,\n        offsetY: 16\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX: 0,\n        offsetY: -16\n    },\n    {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top',\n        offsetX: 0,\n        offsetY: 16\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n        offsetX: 0,\n        offsetY: 16\n    },\n    {\n        originX: 'end',\n        originY: 'center',\n        overlayX: 'start',\n        overlayY: 'center',\n        offsetX: 16,\n        offsetY: 0\n    },\n    {\n        originX: 'start',\n        originY: 'center',\n        overlayX: 'end',\n        overlayY: 'center',\n        offsetX: -16,\n        offsetY: 0\n    },\n    {\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX: 0,\n        offsetY: -16\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX: 0,\n        offsetY: -16\n    }\n];\nclass NxPopoverTriggerDirective {\n    /**\n     * @param {?} overlay\n     * @param {?} elementRef\n     * @param {?} viewContainerRef\n     * @param {?} eventManager\n     */\n    constructor(overlay, elementRef, viewContainerRef, eventManager) {\n        this.overlay = overlay;\n        this.elementRef = elementRef;\n        this.viewContainerRef = viewContainerRef;\n        this.eventManager = eventManager;\n        this._destroyed = new Subject();\n        this._show = false;\n        this._closeable = null;\n        /**\n         * \\@docs-private\n         */\n        this.id = 'nx-popover-' + nextId++;\n        /**\n         * An event is emitted if the visibility status of the popover changes.\n         */\n        this.changeShow = new EventEmitter();\n        /**\n         * Sets the desired direction to open the popover. E.g., right, left, bottom, top\n         */\n        this.direction = 'right';\n        /**\n         * Whether the popover will be opened automatically.\n         */\n        this.popoverInitialVisible = false;\n        /**\n         * An event is emitted when the visibility of the popopver changes.\n         */\n        this.visibleChange = new EventEmitter();\n        /**\n         * Whether the popover opens in modal state.\n         */\n        this.modal = false;\n        // If nxPopoverTrigger equals to 'hover' the popover opens on mouseenter and closes on mouseout.\n        // If nxPopoverTrigger equals to 'click' the popover opens on click and closes on a click of the close icon or pressing ESC key.\n        // If nxPopoverTrigger equals to 'manual' the popover opens only when programatically requested.\n        /**\n         * Sets the way to trigger the popover. Options are hover, click, manual\n         */\n        this.trigger = 'click';\n        /**\n         * Sets the scroll strategy. 'close' closes the popover on scroll while 'reposition' scrolls the popover with the origin.\n         */\n        this.scrollStrategy = 'close';\n        this._documentClickObservable = fromEvent(document, 'click');\n    }\n    /**\n     * Whether to show or hide the popover.\n     * @param {?} value\n     * @return {?}\n     */\n    set show(value) {\n        value = coerceBooleanProperty(value);\n        if (this._show !== value) {\n            this._show = value;\n            if (this._show) {\n                this.openPopover();\n            }\n            else {\n                this.closePopover();\n            }\n            this.changeShow.emit(this._show);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get show() {\n        return this._show;\n    }\n    /**\n     * Whether to show a close button. By default a close icon is only shown for trigger type click.\n     * @param {?} value\n     * @return {?}\n     */\n    set closeable(value) {\n        this._closeable = coerceBooleanProperty(value);\n        if (this.popover) {\n            this.popover.showCloseButton = this.isCloseable();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get closeable() {\n        return this._closeable;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onMouseEnter() {\n        if (this.trigger === 'hover') {\n            this.openPopover();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onMouseExit() {\n        if (this.trigger === 'hover') {\n            this.closePopover();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.popover.showCloseButton = this.isCloseable();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.popover.id = this.id;\n        this.eventManager.addGlobalEventListener('window', 'keyup.esc', (/**\n         * @return {?}\n         */\n        () => {\n            this.closePopover();\n        }));\n        this.popover.closeButtonClick.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.closePopover();\n        }));\n        if (this.popoverInitialVisible || this._show) {\n            this.openPopover();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.closePopover();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get isOpen() {\n        return this.overlayRef && this.createOverlay().hasAttached();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    isCloseable() {\n        return (this.trigger === 'click' && this._closeable === null) || this._closeable;\n    }\n    /**\n     * Update the popover with the given position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    handleClick() {\n        if (this.trigger === 'click') {\n            if (this.isOpen) {\n                this.closePopover();\n            }\n            else {\n                this.openPopover();\n            }\n        }\n    }\n    /**\n     * Open the popover instance.\n     * @return {?}\n     */\n    open() {\n        this.show = true;\n    }\n    /**\n     * Close the popover instance.\n     * @return {?}\n     */\n    close() {\n        this.show = false;\n    }\n    /**\n     * Toggle the popover instance.\n     * @return {?}\n     */\n    toggle() {\n        this.show = !this.show;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    openPopover() {\n        if (!this.createOverlay().hasAttached()) {\n            this._embeddedViewRef = this.createOverlay().attach(this.portal);\n            if (!this.modal && this.trigger === 'click') {\n                this.waitForClose();\n            }\n        }\n    }\n    // detaches the overlay\n    // we are listening to the detachments observable which will then emit the nxClosed event\n    // on the popover component\n    /**\n     * @private\n     * @return {?}\n     */\n    closePopover() {\n        if (this.overlayRef) {\n            this.overlayRef.detach();\n            this._embeddedViewRef = null;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    createOverlay() {\n        if (!this.overlayRef) {\n            this.portal = new TemplatePortal(this.popover.templateRef, this.viewContainerRef);\n            /** @type {?} */\n            const overlayState = new OverlayConfig();\n            overlayState.positionStrategy = this.getPosition();\n            this._positionStrategy = overlayState.positionStrategy;\n            if (this.scrollStrategy === 'reposition') {\n                overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n            }\n            else {\n                overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n            }\n            overlayState.scrollStrategy.enable();\n            if (this.modal && this.trigger === 'click') {\n                overlayState.hasBackdrop = true;\n            }\n            this.overlayRef = this.overlay.create(overlayState);\n            this.subscribeToPositions((/** @type {?} */ (overlayState.positionStrategy)));\n            this._subscribeToDetach();\n            if (this.modal) {\n                this._subscribeToBackdropClick();\n            }\n        }\n        return this.overlayRef;\n    }\n    /**\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    subscribeToPositions(position) {\n        position.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            /** @type {?} */\n            const pair = change.connectionPair;\n            this.positionOverlay(pair);\n            this.positionArrow(pair);\n            // These position changes arrive too late,\n            // We have to trigger the change detection manually\n            // as it's detached from any render hierarchy\n            // and only updated by the overlay when attached.\n            if (this._embeddedViewRef && !this._embeddedViewRef.destroyed) {\n                this._embeddedViewRef.detectChanges();\n            }\n        }));\n    }\n    // for modal popovers close the popover on backdrop clicks\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToBackdropClick() {\n        this.overlayRef.backdropClick().pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.closePopover();\n        }));\n    }\n    // Emit the nxClosed event on the popover component when the overlay detaches\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToDetach() {\n        this.overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.popover.emitClosedEvent();\n        }));\n    }\n    // subscribe to document clicks when trigger='click' to close the popover on clicks on the background\n    /**\n     * @private\n     * @return {?}\n     */\n    waitForClose() {\n        return this._documentClickObservable\n            .pipe(map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.target)), filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => !this.elementRef.nativeElement.contains(target))), takeUntil(this.popover.closed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.closePopover();\n        }));\n    }\n    /**\n     * @private\n     * @param {?} pair\n     * @return {?}\n     */\n    positionOverlay(pair) {\n        if (pair.originX === 'end' && pair.overlayX === 'start') {\n            this.popover.direction = 'right';\n        }\n        else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n            this.popover.direction = 'bottom';\n        }\n        else if (pair.originX === 'start' && pair.overlayX === 'end') {\n            this.popover.direction = 'left';\n        }\n        else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n            this.popover.direction = 'top';\n        }\n    }\n    /**\n     * @private\n     * @param {?} pair\n     * @return {?}\n     */\n    positionArrow(pair) {\n        /** @type {?} */\n        const parentElementPositionX = this.elementRef.nativeElement.getBoundingClientRect().left;\n        /** @type {?} */\n        const parentElementWidth = this.elementRef.nativeElement.getBoundingClientRect().width / 2;\n        /** @type {?} */\n        const parentElementLeftOffset = this.overlayRef.overlayElement.parentElement.offsetLeft;\n        /** @type {?} */\n        const overlayElementLeftOffset = this.overlayRef.overlayElement.offsetLeft;\n        // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n        /** @type {?} */\n        const targetPosition = (parentElementPositionX + parentElementWidth) - (parentElementLeftOffset + overlayElementLeftOffset);\n        if (pair.originX === pair.overlayX) {\n            /** @type {?} */\n            const direction = 'left';\n            /** @type {?} */\n            const arrowStyle = {};\n            arrowStyle[direction] = targetPosition + 'px';\n            this.popover.arrowStyle = arrowStyle;\n        }\n        if ((pair.originY === 'bottom' || pair.originY === 'top') && pair.overlayX === 'center') {\n            this.popover.arrowStyle = { left: targetPosition + 'px' };\n        }\n        if ((pair.originX === 'end' || pair.originX === 'start') && pair.overlayY === 'center') {\n            this.popover.arrowStyle = { top: '50%' };\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getPosition() {\n        /** @type {?} */\n        let positions;\n        /** @type {?} */\n        let offsetX = 0;\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.direction === 'top') {\n            positions = [{\n                    overlayX: 'center',\n                    overlayY: 'bottom',\n                    originX: 'center',\n                    originY: 'top'\n                }];\n            offsetX = 0;\n            offsetY = -20;\n        }\n        else if (this.direction === 'right') {\n            positions = [{\n                    overlayX: 'start',\n                    overlayY: 'center',\n                    originX: 'end',\n                    originY: 'center'\n                }];\n            offsetX = 20;\n            offsetY = 0;\n        }\n        else if (this.direction === 'bottom') {\n            positions = [{\n                    overlayX: 'center',\n                    overlayY: 'top',\n                    originX: 'center',\n                    originY: 'bottom'\n                }];\n            offsetX = 0;\n            offsetY = 20;\n        }\n        else if (this.direction === 'left') {\n            positions = [{\n                    overlayX: 'end',\n                    overlayY: 'center',\n                    originX: 'start',\n                    originY: 'center'\n                }];\n            offsetX = -20;\n            offsetY = 0;\n        }\n        return this.overlay.position().flexibleConnectedTo(this.elementRef)\n            .withPositions([...positions, ...fallbacks])\n            .withDefaultOffsetX(offsetX)\n            .withDefaultOffsetY(offsetY);\n    }\n}\nNxPopoverTriggerDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxPopoverTriggerFor]',\n                exportAs: 'nxPopoverTrigger',\n                host: {\n                    '(click)': 'handleClick()',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'isOpen',\n                    '[attr.aria-describedby]': 'isOpen ? id : null'\n                }\n            },] }\n];\n/** @nocollapse */\nNxPopoverTriggerDirective.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: EventManager }\n];\nNxPopoverTriggerDirective.propDecorators = {\n    changeShow: [{ type: Output, args: ['nxPopoverShowChange',] }],\n    show: [{ type: Input, args: ['nxPopoverShow',] }],\n    closeable: [{ type: Input, args: ['nxPopoverCloseable',] }],\n    popover: [{ type: Input, args: ['nxPopoverTriggerFor',] }],\n    direction: [{ type: Input, args: ['nxPopoverDirection',] }],\n    popoverInitialVisible: [{ type: Input, args: ['nxPopoverInitialVisible',] }],\n    visibleChange: [{ type: Input, args: ['nxPopoverVisibleChange',] }],\n    modal: [{ type: Input, args: ['nxPopoverModal',] }],\n    trigger: [{ type: Input, args: ['nxPopoverTrigger',] }],\n    scrollStrategy: [{ type: Input, args: ['nxPopoverScrollStrategy',] }],\n    onMouseEnter: [{ type: HostListener, args: ['mouseenter',] }],\n    onMouseExit: [{ type: HostListener, args: ['mouseleave',] }, { type: HostListener, args: ['touchstart',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxPopoverModule {\n}\nNxPopoverModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    NxIconModule\n                ],\n                declarations: [\n                    NxPopoverTriggerDirective,\n                    NxPopoverComponent,\n                    NxPopoverContentDirective\n                ],\n                exports: [\n                    NxPopoverTriggerDirective,\n                    NxPopoverComponent,\n                    NxPopoverContentDirective\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NxPopoverModule, NxPopoverComponent, NxPopoverTriggerDirective, NxPopoverContentDirective };\n\n//# sourceMappingURL=allianz-ngx-ndbx-popover.js.map","import { Injectable, defineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isString(value) {\n    return typeof value === 'string';\n}\n/**\n * @param {?} str\n * @param {?=} length\n * @param {?=} padCharacter\n * @return {?}\n */\nfunction pad(str, length = 2, padCharacter = '0') {\n    if (!isString(str) || str.length >= length) {\n        return str;\n    }\n    while (str.length < length) {\n        str = padCharacter + str;\n    }\n    return str;\n}\n// DATE -> YYYY-MM-DD\n/**\n * @param {?} date\n * @return {?}\n */\nfunction formatDate(date) {\n    /** @type {?} */\n    const dateOfBirth = [\n        String(date.getFullYear()),\n        pad(String(date.getMonth() + 1)),\n        pad(String(date.getDate()))\n    ].join('-');\n    return dateOfBirth;\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction formatDateHuman(date) {\n    /** @type {?} */\n    const dateOfBirth = [\n        pad(String(date.getDate())),\n        pad(String(date.getMonth() + 1)),\n        String(date.getFullYear())\n    ].join('-');\n    return dateOfBirth;\n}\n/*\n  Purpose of this function is to allow a list of short keywords\n  expand to longer bem class names with will then be applied to the classname value.\n\n  This function will map a list of keys to values in a MAPPING list.\n  Whatever value is found will replace the keyword.\n  Every keyword not found will just transfered wiithmout modifying.\n*/\n/**\n * @param {?} value\n * @param {?=} DEFAULTS\n * @param {?=} MAPPING\n * @return {?}\n */\nfunction mapClassNames(value, DEFAULTS = [], MAPPING = {}) {\n    /** @type {?} */\n    let sanitizedList = [...DEFAULTS];\n    if (typeof value === 'string') {\n        /** @type {?} */\n        const mappedClasses = getClassNameList(value, MAPPING);\n        sanitizedList = [...sanitizedList, ...mappedClasses];\n    }\n    return sanitizedList.join(' ').trim();\n}\n/**\n * @param {?} value\n * @param {?=} MAPPING\n * @return {?}\n */\nfunction getClassNameList(value, MAPPING = {}) {\n    /** @type {?} */\n    let mappedClasses = [];\n    if (typeof value === 'string') {\n        /** @type {?} */\n        const classNames = value.split(' ');\n        /** @type {?} */\n        const keys = Object.keys(MAPPING);\n        mappedClasses = classNames.map((/**\n         * @param {?} className\n         * @return {?}\n         */\n        className => {\n            if (keys.indexOf(className) > -1) {\n                return MAPPING[className];\n            }\n            else {\n                return className;\n            }\n        }));\n    }\n    return mappedClasses;\n}\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classes\n * @return {?}\n */\nfunction appendClasses(renderer, element, classes) {\n    if (renderer && element && classes) {\n        classes.split(' ').forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => {\n            renderer.addClass(element.nativeElement, item);\n        }));\n    }\n}\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} classes\n * @return {?}\n */\nfunction removeClasses(renderer, element, classes) {\n    if (renderer && element && classes) {\n        classes.split(' ').forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => {\n            renderer.removeClass(element.nativeElement, item);\n        }));\n    }\n}\n// YYYY-MM-DD -> DATE\n/**\n * @param {?} dateString\n * @return {?}\n */\nfunction parseDate(dateString) {\n    return new Date(dateString);\n}\n// Manually compose a font shorthand defintion as it's not\n// guaranteed to be given by the computed style object.\n/**\n * @param {?} style\n * @return {?}\n */\nfunction getFontShorthand(style) {\n    const { font, fontStyle, fontVariant, fontWeight, fontSize, lineHeight, fontFamily } = style;\n    if (font.length > 0) {\n        return font;\n    }\n    return `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n}\n/**\n * @param {?} number\n * @return {?}\n */\nfunction numberOfDecimals(number) {\n    /** @type {?} */\n    const parsed = Number(number);\n    if (Number.isNaN(parsed) || Number.isInteger(parsed)) {\n        return 0;\n    }\n    /** @type {?} */\n    const match = (parsed.toString()).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    if (!match[1]) {\n        return 0;\n    }\n    return match[1].length;\n}\n/**\n * @param {?} value\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(value, min = 0, max = 1) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Provider that defines when form controls have an error.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = defineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { isString, pad, formatDate, formatDateHuman, mapClassNames, getClassNameList, appendClasses, removeClasses, parseDate, getFontShorthand, numberOfDecimals, clamp, ErrorStateMatcher };\n\n//# sourceMappingURL=allianz-ngx-ndbx-utils.js.map","import { NxLabelComponent, NxLabelModule } from '@allianz/ngx-ndbx/base';\nimport { EventManager, DomSanitizer } from '@angular/platform-browser';\nimport { NxCheckboxModule } from '@allianz/ngx-ndbx/checkbox';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NxWordComponent } from '@allianz/ngx-ndbx/natural-language-form';\nimport { Overlay, OverlayConfig, OverlayModule, CdkConnectedOverlay, ViewportRuler } from '@angular/cdk/overlay';\nimport { NxPopoverTriggerDirective, NxPopoverModule } from '@allianz/ngx-ndbx/popover';\nimport { NxDropdownComponent } from '@allianz/ngx-ndbx/dropdown';\nimport { NxGridModule } from '@allianz/ngx-ndbx/grid';\nimport { NxAutocompleteModule } from '@allianz/ngx-ndbx/autocomplete';\nimport { NxFormfieldControl, NxFormfieldComponent, NxFormfieldModule, NxFormfieldErrorDirective } from '@allianz/ngx-ndbx/formfield';\nimport { NxButtonModule } from '@allianz/ngx-ndbx/button';\nimport { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { MappedStyles } from '@allianz/ngx-ndbx/core';\nimport { Decimal } from 'decimal.js';\nimport { NG_VALUE_ACCESSOR, NgControl, FormGroupDirective, NgForm, FormsModule, NG_VALIDATORS } from '@angular/forms';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { UniqueSelectionDispatcher, SelectionModel, DataSource } from '@angular/cdk/collections';\nimport { CdkAccordion, CdkAccordionItem } from '@angular/cdk/accordion';\nimport { animate, animation, style, animateChild, query, transition, trigger, useAnimation, state } from '@angular/animations';\nimport { NxIconModule, NxIconComponent } from '@allianz/ngx-ndbx/icon';\nimport { takeUntil, tap, startWith, filter, map, switchMap, take, delay, debounceTime, first, throttleTime } from 'rxjs/operators';\nimport { TemplatePortal, PortalModule, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { Subject, merge, Subscription, fromEvent, defer, Observable, of, BehaviorSubject } from 'rxjs';\nimport { NxAccordionDirective, NxExpansionPanelComponent, NxAccordionModule } from '@allianz/ngx-ndbx/accordion';\nimport { A11yModule, ActiveDescendantKeyManager, FocusKeyManager } from '@angular/cdk/a11y';\nimport { DELETE, BACKSPACE, DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, SHIFT, TAB, ESCAPE } from '@angular/cdk/keycodes';\nimport { removeClasses, mapClassNames, getFontShorthand, pad, appendClasses } from '@allianz/ngx-ndbx/utils';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { NgModule, Component, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, forwardRef, Input, Output, ContentChildren, QueryList, Optional, Self, ContentChild, Renderer2, ViewChild, HostListener, ViewContainerRef, Inject, Injectable, Directive, TemplateRef, Attribute, isDevMode, NgZone, ViewChildren, Host, HostBinding, InjectionToken, SkipSelf } from '@angular/core';\nimport { CommonModule, DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NdbxModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: NdbxModule\n        };\n    }\n}\nNdbxModule.decorators = [\n    { type: NgModule, args: [{},] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_SIZE = 'medium';\n/** @type {?} */\nconst DEFAULT_TYPE = 'primary';\n/** @type {?} */\nconst NX_BUTTON_HOST_BINDINGS = {\n    '[class.nx-button--primary]': 'type === \"primary\"',\n    '[class.nx-button--secondary]': 'type === \"secondary\"',\n    '[class.nx-button--tertiary]': 'type === \"tertiary\"',\n    '[class.nx-button--cta]': 'type === \"cta\"',\n    '[class.nx-button--emphasis]': 'type === \"emphasis\"',\n    '[class.nx-button--large]': 'size === \"large\"',\n    '[class.nx-button--medium]': 'size === \"medium\"',\n    '[class.nx-button--small-medium]': 'size === \"small-medium\"',\n    '[class.nx-button--small]': 'size === \"small\"',\n    '[class.nx-button--block]': 'block',\n    '[class.nx-button--negative]': 'negative',\n};\n/**\n * \\@docs-private\n */\nclass NxButtonBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     */\n    constructor(_changeDetectorRef, _elementRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * \\@docs-private\n         */\n        this.type = DEFAULT_TYPE;\n        /**\n         * \\@docs-private\n         */\n        this.size = DEFAULT_SIZE;\n        /**\n         * \\@docs-private\n         */\n        this.negative = false;\n        /**\n         * \\@docs-private\n         */\n        this.block = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        this._classNames = value;\n        const [type = null] = this._classNames.match(/primary|secondary|tertiary|cta|emphasis/) || [DEFAULT_TYPE];\n        this.type = (/** @type {?} */ (type));\n        const [size = null] = this._classNames.match(/small-medium|small|medium|large/) || [DEFAULT_SIZE];\n        this.size = (/** @type {?} */ (size));\n        this.negative = /negative/.test(this._classNames);\n        this.block = /block/.test(this._classNames);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n    /**\n     * \\@docs-private\n     * getter used for the modal component as a quickfix\n     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n     * way to reach the elementRef of the component until the modal gets refactored.\n     * @return {?}\n     */\n    get elementRef() {\n        return this._elementRef;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxButtonComponent extends NxButtonBase {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} elementRef\n     */\n    constructor(changeDetectorRef, elementRef) {\n        super(changeDetectorRef, elementRef);\n    }\n}\nNxButtonComponent.decorators = [\n    { type: Component, args: [{\n                template: \"<span class=\\\"nx-button__content-wrapper\\\">\\n  <ng-content></ng-content>\\n</span>\\n\",\n                // tslint:disable-next-line:component-selector\n                selector: 'button[nxButton]',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: NX_BUTTON_HOST_BINDINGS,\n                inputs: ['classNames:nxButton'],\n                styles: [\":host{border:2px solid transparent;border-radius:4px;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;line-height:24px;margin:0 0 24px;padding:10px 30px;text-transform:uppercase;transition:background-color .2s,border-color .2s,color .2s,box-shadow .2s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:auto;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;min-height:48px}:host:disabled{cursor:not-allowed}:host:focus{outline:transparent solid 2px}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]).nx-button--negative:focus,:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-button--primary){color:#fff;background-color:#007ab3}:host(.nx-button--primary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--primary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--primary):disabled{background-color:rgba(0,122,179,.4);border-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--primary.nx-button--negative){background-color:#fff;border-color:#fff;color:#006192}:host(.nx-button--primary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--primary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--primary.nx-button--negative):disabled{background-color:rgba(255,255,255,.4);border-color:transparent;color:rgba(65,65,65,.3)}:host(.nx-button--secondary){background-color:transparent;border-color:#007ab3;color:#006192}:host(.nx-button--secondary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--secondary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--secondary):disabled{background-color:transparent;border-color:rgba(0,122,179,.4);color:rgba(0,97,146,.4)}:host(.nx-button--secondary.nx-button--negative){color:#fff;border-color:#fff}:host(.nx-button--secondary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--secondary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--secondary.nx-button--negative):disabled{background-color:transparent;border-color:rgba(255,255,255,.4);color:rgba(255,255,255,.4)}:host(.nx-button--tertiary){background-color:transparent;color:#006192}:host(.nx-button--tertiary):hover{background-color:#ececec}:host(.nx-button--tertiary):active{background-color:#d9d9d9;box-shadow:none}:host(.nx-button--tertiary):disabled{background-color:transparent;color:rgba(0,97,146,.4)}:host(.nx-button--tertiary.nx-button--negative){color:#fff}:host(.nx-button--tertiary.nx-button--negative):hover{background-color:#d9d9d9;color:#006192}:host(.nx-button--tertiary.nx-button--negative):active{background-color:#c2c2c2;color:#006192}:host(.nx-button--tertiary.nx-button--negative):disabled{background-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--large){font-size:20px;min-height:72px;padding:22px 46px;line-height:24px}@media (max-width:703px){:host{display:block;width:100%}:host(.nx-button--large){padding:22px 30px}}:host(.nx-button--small-medium){display:inline-block;font-size:16px;padding:6px 22px;text-transform:none;line-height:24px;min-height:40px;width:auto}:host(.nx-button--small){display:inline-block;font-size:14px;padding:6px 14px;text-transform:none;line-height:16px;min-height:32px;width:auto}:host(.nx-button--cta){background-color:#3da556;color:#fff}:host(.nx-button--cta):hover{background-color:#348357}:host(.nx-button--cta):active{background-color:#276442}:host(.nx-button--cta):disabled{background-color:rgba(61,165,86,.4)}:host(.nx-button--emphasis){background-color:#f86200;color:#fff}:host(.nx-button--emphasis):hover{background-color:#e15200}:host(.nx-button--emphasis):active{background-color:#c15500}:host(.nx-button--emphasis):disabled{background-color:rgba(248,98,0,.4)}@media (min-width:704px){:host(.nx-button--block){display:block;width:100%}}:host .nx-button__content-wrapper{display:flex;align-items:center;justify-content:center}:host([nxiconbutton]){padding:0;font-size:24px;flex:0 0 auto}:host([nxiconbutton]).nx-button--small{width:32px;font-size:16px}:host([nxiconbutton]).nx-button--small-medium{width:40px}:host([nxiconbutton]).nx-button--medium{width:48px}:host([nxiconbutton]).nx-button--large{width:72px}\"]\n            }] }\n];\n/** @nocollapse */\nNxButtonComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxIconButtonComponent extends NxButtonBase {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} elementRef\n     */\n    constructor(changeDetectorRef, elementRef) {\n        super(changeDetectorRef, elementRef);\n    }\n}\nNxIconButtonComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'button[nxIconButton]',\n                template: \"<span class=\\\"nx-button__content-wrapper\\\">\\n  <ng-content></ng-content>\\n</span>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: NX_BUTTON_HOST_BINDINGS,\n                inputs: ['classNames:nxIconButton'],\n                styles: [\":host{border:2px solid transparent;border-radius:4px;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;line-height:24px;margin:0 0 24px;padding:10px 30px;text-transform:uppercase;transition:background-color .2s,border-color .2s,color .2s,box-shadow .2s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:auto;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;min-height:48px}:host:disabled{cursor:not-allowed}:host:focus{outline:transparent solid 2px}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]).nx-button--negative:focus,:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-button--primary){color:#fff;background-color:#007ab3}:host(.nx-button--primary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--primary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--primary):disabled{background-color:rgba(0,122,179,.4);border-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--primary.nx-button--negative){background-color:#fff;border-color:#fff;color:#006192}:host(.nx-button--primary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--primary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--primary.nx-button--negative):disabled{background-color:rgba(255,255,255,.4);border-color:transparent;color:rgba(65,65,65,.3)}:host(.nx-button--secondary){background-color:transparent;border-color:#007ab3;color:#006192}:host(.nx-button--secondary):hover:not(:disabled):not(:active){background-color:#075994;border-color:#075994;color:#fff}:host(.nx-button--secondary):active{background-color:#003781;border-color:#003781;box-shadow:none;color:#fff}:host(.nx-button--secondary):disabled{background-color:transparent;border-color:rgba(0,122,179,.4);color:rgba(0,97,146,.4)}:host(.nx-button--secondary.nx-button--negative){color:#fff;border-color:#fff}:host(.nx-button--secondary.nx-button--negative):hover:not(:disabled):not(:active){background-color:#d9d9d9;border-color:#d9d9d9;color:#006192}:host(.nx-button--secondary.nx-button--negative):active{background-color:#c2c2c2;border-color:#c2c2c2;color:#006192}:host(.nx-button--secondary.nx-button--negative):disabled{background-color:transparent;border-color:rgba(255,255,255,.4);color:rgba(255,255,255,.4)}:host(.nx-button--tertiary){background-color:transparent;color:#006192}:host(.nx-button--tertiary):hover{background-color:#ececec}:host(.nx-button--tertiary):active{background-color:#d9d9d9;box-shadow:none}:host(.nx-button--tertiary):disabled{background-color:transparent;color:rgba(0,97,146,.4)}:host(.nx-button--tertiary.nx-button--negative){color:#fff}:host(.nx-button--tertiary.nx-button--negative):hover{background-color:#d9d9d9;color:#006192}:host(.nx-button--tertiary.nx-button--negative):active{background-color:#c2c2c2;color:#006192}:host(.nx-button--tertiary.nx-button--negative):disabled{background-color:transparent;color:rgba(255,255,255,.4)}:host(.nx-button--large){font-size:20px;min-height:72px;padding:22px 46px;line-height:24px}@media (max-width:703px){:host{display:block;width:100%}:host(.nx-button--large){padding:22px 30px}}:host(.nx-button--small-medium){display:inline-block;font-size:16px;padding:6px 22px;text-transform:none;line-height:24px;min-height:40px;width:auto}:host(.nx-button--small){display:inline-block;font-size:14px;padding:6px 14px;text-transform:none;line-height:16px;min-height:32px;width:auto}:host(.nx-button--cta){background-color:#3da556;color:#fff}:host(.nx-button--cta):hover{background-color:#348357}:host(.nx-button--cta):active{background-color:#276442}:host(.nx-button--cta):disabled{background-color:rgba(61,165,86,.4)}:host(.nx-button--emphasis){background-color:#f86200;color:#fff}:host(.nx-button--emphasis):hover{background-color:#e15200}:host(.nx-button--emphasis):active{background-color:#c15500}:host(.nx-button--emphasis):disabled{background-color:rgba(248,98,0,.4)}@media (min-width:704px){:host(.nx-button--block){display:block;width:100%}}:host .nx-button__content-wrapper{display:flex;align-items:center;justify-content:center}:host([nxiconbutton]){padding:0;font-size:24px;flex:0 0 auto}:host([nxiconbutton]).nx-button--small{width:32px;font-size:16px}:host([nxiconbutton]).nx-button--small-medium{width:40px}:host([nxiconbutton]).nx-button--medium{width:48px}:host([nxiconbutton]).nx-button--large{width:72px}\"]\n            }] }\n];\n/** @nocollapse */\nNxIconButtonComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxButtonModule$1 {\n}\nNxButtonModule$1.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxButtonComponent, NxIconButtonComponent],\n                exports: [NxButtonComponent, NxIconButtonComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId = 0;\nclass NxCheckboxChangeEvent {\n    /**\n     * @param {?} checked\n     * @param {?} value\n     * @param {?} checkbox\n     */\n    constructor(checked, value, checkbox) {\n        this.checked = checked;\n        this.value = value;\n        this.checkbox = checkbox;\n    }\n}\nclass NxCheckboxGroupComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} ngControl\n     */\n    constructor(_changeDetectorRef, ngControl) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.ngControl = ngControl;\n        this._stateChanges = new Subject();\n        this.selectionChange = new EventEmitter();\n        this._id = `nx-checkbox-group-${nextId++}`;\n        this._disabled = false;\n        this._negative = false;\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * Sets the Id of the checkbox group.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        if (this._id !== value) {\n            this._id = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Sets the name of the checkboxes inside the nx-checkbox-group.\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Disables all checkboxes inside the nx-checkbox-group.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._label) {\n            this._label.disabled = this._disabled;\n        }\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Set the negative styles for all the checkboxes inside the nx-checkbox-group\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Sets the label size of the checkboxes inside the group\n     * @param {?} value\n     * @return {?}\n     */\n    set labelSize(value) {\n        this._labelSize = value;\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get labelSize() {\n        return this._labelSize;\n    }\n    /**\n     * Whether the nx-checkbox-group are required.\n     * @return {?}\n     */\n    get required() {\n        return this._required;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.ngControl) {\n            this._value = this._checkboxes.filter((/**\n             * @param {?} checkbox\n             * @return {?}\n             */\n            checkbox => checkbox.checked)).map((/**\n             * @param {?} cb\n             * @return {?}\n             */\n            cb => cb.value));\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._onChange(this._value);\n            }));\n        }\n        this._updateSelectedCheckboxFromValue();\n        this._checkboxes.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._value = this._checkboxes.filter((/**\n             * @param {?} checkbox\n             * @return {?}\n             */\n            checkbox => checkbox.checked)).map((/**\n             * @param {?} cb\n             * @return {?}\n             */\n            cb => cb.value));\n            if (this.ngControl) {\n                this.ngControl.control.setValue(this._value);\n            }\n            this._updateSelectedCheckboxFromValue();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this._value) {\n            this._value = value;\n        }\n        this._updateSelectedCheckboxFromValue();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateSelectedCheckboxFromValue() {\n        if (this._checkboxes !== null) {\n            if (this._value) {\n                this._checkboxes.map((/**\n                 * @param {?} checkbox\n                 * @return {?}\n                 */\n                checkbox => {\n                    if (this._value.indexOf(checkbox.value) !== -1) {\n                        checkbox.checked = true;\n                    }\n                }));\n            }\n        }\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    change(value) {\n        value = this._checkboxes.filter((/**\n         * @param {?} checkbox\n         * @return {?}\n         */\n        checkbox => checkbox.checked)).map((/**\n         * @param {?} cb\n         * @return {?}\n         */\n        cb => cb.value));\n        this._onChange(value);\n        if (this._onTouched) {\n            this._onTouched();\n        }\n        this.selectionChange.emit(new NxCheckboxChangeEvent(value.checked, value.value, value));\n    }\n}\nNxCheckboxGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-checkbox-group',\n                template: \"<div>\\n  <div class=\\\"nx-checkbox-group__label\\\">\\n    <ng-content select=\\\"nx-label\\\"></ng-content>\\n  </div>\\n  <div class=\\\"nx-checkbox-group__errors\\\">\\n    <ng-content select=\\\"nx-error\\\"></ng-content>\\n  </div>\\n  <div class=\\\"nx-checkbox-group__controls\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-checkbox-group]': 'true',\n                    '[class.nx-checkbox-group--negative]': 'negative',\n                    '[attr.id]': 'id',\n                    '[attr.required]': 'required',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-labelledby]': 'this._label?.id  || null',\n                    '[attr.role]': '\"group\"',\n                },\n                styles: [\":host ::ng-deep nx-error{margin-bottom:8px}:host ::ng-deep nx-label{margin-bottom:16px;display:block}:host.nx-checkbox-group--negative ::ng-deep nx-error,:host.nx-checkbox-group--negative ::ng-deep nx-icon.nx-error__icon,:host.nx-checkbox-group--negative ::ng-deep nx-label{color:#fff}\"]\n            }] }\n];\n/** @nocollapse */\nNxCheckboxGroupComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nNxCheckboxGroupComponent.propDecorators = {\n    _checkboxes: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => NxCheckboxComponent)), { descendants: true },] }],\n    _label: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => NxLabelComponent)), {},] }],\n    selectionChange: [{ type: Output }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    disabled: [{ type: Input }],\n    negative: [{ type: Input }],\n    labelSize: [{ type: Input }],\n    required: [{ type: Input }]\n};\nclass NxCheckboxComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} checkboxGroup\n     */\n    constructor(_changeDetectorRef, checkboxGroup) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.checkboxGroup = checkboxGroup;\n        this._id = (nextId++).toString();\n        this._disabled = false;\n        this._negative = false;\n        this._labelSize = 'small';\n        this._checked = false;\n        this._name = null;\n        this._indeterminate = false;\n        /**\n         * An event emitted when the indeterminate value has changed\n         */\n        this.indeterminateChange = new EventEmitter(false);\n        /**\n         * An event emitted when the checked value has changed.\n         *\n         * Emits the boolean checked value of the changed checkbox.\n         */\n        this.checkedChange = new EventEmitter(false);\n        /**\n         * An event emitted when the checked value has changed.\n         *\n         * Emits a NxCheckboxChangeEvent.\n         */\n        this.checkboxChange = new EventEmitter();\n        this.onChangeCallback = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Id of the checkbox.\n     *\n     * If not set, the checkbox gets an incremented value by default.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        if (value !== this._id) {\n            this._id = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return `nx-checkbox-${this._id}`;\n    }\n    /**\n     * Name of the checkbox.\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return (this.checkboxGroup && this.checkboxGroup.name) ? this.checkboxGroup.name : this._name;\n    }\n    /**\n     * Whether the checkbox is disabled.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return (this.checkboxGroup && this.checkboxGroup.disabled) ? this.checkboxGroup.disabled : this._disabled;\n    }\n    /**\n     * Sets the label size of the checkbox. Default value: small\n     * @param {?} value\n     * @return {?}\n     */\n    set labelSize(value) {\n        this._labelSize = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get labelSize() {\n        return (this.checkboxGroup && this.checkboxGroup.labelSize) ? this.checkboxGroup.labelSize : this._labelSize;\n    }\n    /**\n     * Whether the checkbox has negative styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._negative) {\n            this._negative = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return (this.checkboxGroup && this.checkboxGroup.negative) ? this.checkboxGroup.negative : this._negative;\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            if (this._indeterminate) {\n                this._setIndeterminate(false);\n            }\n            this._setChecked(newValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get checked() {\n        return this._checked;\n    }\n    /**\n     * Whether the checkbox is indeterminated.\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this._indeterminate !== newValue) {\n            if (this._checked) {\n                this._setChecked(false);\n            }\n            this._setIndeterminate(newValue);\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Sets the value of the checkbox. Default value is the checked status.\n     * @return {?}\n     */\n    get value() {\n        return this._value ? this._value : this.checked.toString();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._value = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    _controlInvalid() {\n        return !!(this.checkboxGroup && this.checkboxGroup.ngControl && this.checkboxGroup.ngControl.invalid\n            && this.checkboxGroup.ngControl.touched);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.checkboxGroup) {\n            this.name = this.checkboxGroup.name;\n            // when relevant properties of the parent like name and disabled change\n            // we need to let change detection know that the template needs an update\n            this._parentChangeSubscription = this.checkboxGroup._stateChanges.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._parentChangeSubscription) {\n            this._parentChangeSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setIndeterminate(value) {\n        this._indeterminate = value;\n        this.indeterminateChange.emit(this._indeterminate);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setChecked(value) {\n        this._checked = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Toggles the checked state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this.onChangeCallback(this.checked);\n        if (this.checkboxGroup !== null) {\n            this.checkboxGroup.change(this);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (value === null) {\n            value = false;\n        }\n        if (value !== this.checked) {\n            this.checked = value;\n        }\n    }\n    /**\n     * @param {?} onChange\n     * @return {?}\n     */\n    registerOnChange(onChange) {\n        this.onChangeCallback = onChange;\n    }\n    /**\n     * @param {?} onTouched\n     * @return {?}\n     */\n    registerOnTouched(onTouched) {\n        this.onTouchedCallback = onTouched;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    touch() {\n        this.onTouchedCallback();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n        event.stopPropagation();\n        if (!this.disabled) {\n            this.toggle();\n            this.checkedChange.emit(this._checked);\n            this.checkboxChange.emit(this._createChangeEvent(this._checked));\n        }\n    }\n    /**\n     * \\@docs-private\n     * @private\n     * @param {?} checkedValue\n     * @return {?}\n     */\n    _createChangeEvent(checkedValue) {\n        /** @type {?} */\n        const event = new NxCheckboxChangeEvent(checkedValue, this.value, this);\n        event.checked = checkedValue;\n        event.value = this.value;\n        event.checkbox = this;\n        return event;\n    }\n}\nNxCheckboxComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-checkbox',\n                template: \"<input\\n  type=\\\"checkbox\\\"\\n  [id]=\\\"id\\\"\\n  [name]=\\\"name\\\"\\n  [checked]=\\\"checked\\\"\\n  [indeterminate]=\\\"indeterminate\\\" [disabled]=\\\"disabled\\\"\\n  (blur)=\\\"touch()\\\"\\n  [attr.aria-labelledby]=\\\"id + '-label'\\\"\\n  (click)=\\\"_onInputClick($event)\\\"\\n  class=\\\"nx-checkbox__input\\\"\\n  [value]=\\\"value\\\"\\n>\\n\\n<label [id]=\\\"id + '-label'\\\" [attr.for]=\\\"id\\\" class=\\\"nx-checkbox__label\\\">\\n    <span class=\\\"nx-checkbox__control\\\">\\n        <nx-icon *ngIf=\\\"checked\\\" name=\\\"check\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n        <div *ngIf=\\\"indeterminate\\\" class=\\\"nx-checkbox__indeterminate-indicator\\\"></div>\\n    </span>\\n    <div class=\\\"nx-checkbox__label-text\\\">\\n        <ng-content></ng-content>\\n    </div>\\n</label>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-checkbox]': 'true',\n                    '[class.disabled]': 'disabled',\n                    '[class.nx-checkbox--label-large]': 'labelSize === \"large\"',\n                    '[class.nx-checkbox--negative]': 'negative',\n                    '[attr.required]': 'required',\n                    '[class.has-error]': '_controlInvalid() || null',\n                    '[attr.aria-invalid]': '_controlInvalid() || null',\n                },\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxCheckboxComponent)),\n                        multi: true\n                    }\n                ],\n                styles: [\":host{display:block;position:relative;margin-bottom:16px}:host.has-error .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control,:host.ng-invalid .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{background-color:#dc3149;border-color:#dc3149}:host.has-error .nx-checkbox__control,:host.ng-invalid .nx-checkbox__control{border-color:#dc3149}:host.has-error .nx-checkbox__indeterminate-indicator,:host.ng-invalid .nx-checkbox__indeterminate-indicator{background-color:#dc3149}.nx-checkbox__input{opacity:0;position:absolute}.nx-checkbox__label{font-size:16px;line-height:24px;cursor:pointer;display:flex}:host(.nx-checkbox--label-large) .nx-checkbox__label{font-size:20px;line-height:28px;letter-spacing:.2px}.nx-checkbox__label-text{padding:0;margin-left:12px}.nx-checkbox__control{background-color:#fff;border:2px solid #767676;border-radius:4px;color:#fff;font-size:20px;height:24px;width:24px;min-width:24px;display:flex;justify-content:center;align-items:center;z-index:0;cursor:pointer}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{border-radius:4px}.nx-checkbox__indeterminate-indicator{background-color:#007ab3;height:2px;width:10px}.nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{background-color:#007ab3;border-color:#007ab3}.nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:#ececec;border-color:#c2c2c2;cursor:not-allowed}.nx-checkbox__input:checked:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:#c2c2c2}.nx-checkbox__input:disabled+.nx-checkbox__label{cursor:not-allowed;color:#c2c2c2}.nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#c2c2c2}:host(.nx-checkbox--negative) .nx-checkbox__control{border-color:#fff;background-color:transparent}:host(.nx-checkbox--negative) .nx-checkbox__label{color:#fff}:host(.nx-checkbox--negative) .nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{color:#000;background-color:#fff;border-color:#fff}:host(.nx-checkbox--negative) .nx-checkbox__input:checked:disabled+.nx-checkbox__label .nx-checkbox__control{color:rgba(255,255,255,.4);border-color:transparent;background-color:rgba(194,194,194,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label{color:rgba(255,255,255,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__control{background-color:rgba(153,153,153,.4);border-color:rgba(217,217,217,.4)}:host(.nx-checkbox--negative) .nx-checkbox__input:disabled+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:rgba(217,217,217,.4)}@media screen and (-ms-high-contrast:active){.nx-checkbox__input:focus+.nx-checkbox__label{color:#fff}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control::after{background-color:#fff}.nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{border-color:#fff}.nx-checkbox__input:checked+.nx-checkbox__label .nx-checkbox__control{border-color:#ff0;color:#ff0}.nx-checkbox__input:focus:checked+.nx-checkbox__label .nx-checkbox__control{background-color:none;border-color:#fff;color:#fff}.nx-checkbox__label{color:#ff0}.nx-checkbox__input:indeterminate+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#ff0}.nx-checkbox__input:indeterminate:focus+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#fff}}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__control{background-color:#075994}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#075994}:host:not(.nx-checkbox--negative):not(.ng-invalid):not(.has-error):hover .nx-checkbox__input:not([disabled])+.nx-checkbox__label .nx-checkbox__control{border-color:#075994}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__control{background-color:#003781}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled]):checked+.nx-checkbox__label .nx-checkbox__indeterminate-indicator{background-color:#003781}:host:not(.nx-checkbox--negative):active .nx-checkbox__input:not([disabled])+.nx-checkbox__label .nx-checkbox__control{border-color:#003781}:host-context([data-whatinput=keyboard]) .nx-checkbox__input:focus+.nx-checkbox__label .nx-checkbox__control{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxCheckboxComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NxCheckboxGroupComponent, decorators: [{ type: Optional }] }\n];\nNxCheckboxComponent.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    disabled: [{ type: Input }],\n    labelSize: [{ type: Input }],\n    negative: [{ type: Input }],\n    checked: [{ type: Input }],\n    indeterminate: [{ type: Input }],\n    required: [{ type: Input }],\n    value: [{ type: Input }],\n    indeterminateChange: [{ type: Output }],\n    checkedChange: [{ type: Output }],\n    checkboxChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxCheckboxModule$1 {\n}\nNxCheckboxModule$1.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NxCheckboxComponent,\n                    NxCheckboxGroupComponent,\n                ],\n                exports: [\n                    NxCheckboxComponent,\n                    NxCheckboxGroupComponent,\n                ],\n                imports: [\n                    CommonModule,\n                    NxIconModule,\n                    NxLabelModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The change event object emitted by the radio group and radio button.\n */\nclass NxRadioChange {\n    /**\n     * The NxRadioComponent that emits the change event. NxRadioChange object can be instantiated with source radio component and a value.\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$1 = 0;\nclass NxRadioGroupComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     */\n    constructor(_changeDetectorRef, ngControl, _parentForm, _parentFormGroup) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.ngControl = ngControl;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        // emits when the internal state changes on properties which are relevant\n        // for the radio buttons so that they can mark themself for check\n        this._stateChanges = new Subject();\n        this._id = `nx-radio-group-${nextId$1++}`;\n        this._disabled = false;\n        this._negative = false;\n        this._required = false;\n        /**\n         * An event is dispatched on each group value change.\n         */\n        this.groupValueChange = new EventEmitter();\n        this._name = `nx-radio-group-${nextId$1++}`;\n        this._value = null;\n        // The currently selected radio button; should match _value\n        this._selected = null;\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * Sets the Id of the radio group.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        if (this._id !== value) {\n            this._id = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Whether every radio button in this group should be disabled.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // inform childs about the change where CD should be triggered\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Whether the radio group should have negative styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Sets if at least an option should be selected.\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get required() {\n        return this._required;\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    // this is also the name attribute, which is mandatory in conjunction with ngModel, hence no nx prefix\n    /**\n     * Sets the name of this radio group, which is mandatory in conjunction with ngModel (Default: null).\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * Sets the value of the selected radion button in this group (Default: null).\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateSelectedRadioFromValue();\n        this._checkSelectedRadioButton();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * \\@docs-private this is meant to be called by the radio buttons in this group\n     * @param {?} value\n     * @return {?}\n     */\n    change(value) {\n        this.value = value;\n        this._onChange(value);\n        this.groupValueChange.emit(new NxRadioChange(this._selected, this._value));\n    }\n    /**\n     * \\@docs-private this is meant to be called by the radio buttons in this group.\n     * @return {?}\n     */\n    touch() {\n        if (this._onTouched) {\n            this._onTouched();\n        }\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        const isAlreadySelected = this._selected != null && this._selected.value === this._value;\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n}\nNxRadioGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-radio-group',\n                template: \"<div>\\n  <div class=\\\"nx-radio-group__label\\\">\\n    <ng-content select=\\\"nx-label\\\"></ng-content>\\n  </div>\\n  <div class=\\\"nx-radio-group__errors\\\">\\n    <ng-content select=\\\"nx-error\\\"></ng-content>\\n  </div>\\n  <div class=\\\"nx-radio-group__controls\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'radiogroup',\n                    '[attr.id]': 'id',\n                    '[attr.required]': 'required',\n                    '[class.nx-radio-group--negative]': 'negative',\n                    '[attr.aria-labelledby]': 'this._label?.id  || null'\n                },\n                styles: [\":host ::ng-deep nx-error{margin-bottom:8px}:host ::ng-deep nx-label{margin-bottom:16px;display:block}\"]\n            }] }\n];\n/** @nocollapse */\nNxRadioGroupComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] }\n];\nNxRadioGroupComponent.propDecorators = {\n    _label: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => NxLabelComponent)), {},] }],\n    id: [{ type: Input, args: ['id',] }],\n    disabled: [{ type: Input, args: ['nxDisabled',] }],\n    negative: [{ type: Input }],\n    required: [{ type: Input }],\n    groupValueChange: [{ type: Output, args: ['nxGroupValueChange',] }],\n    _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => NxRadioComponent)), { descendants: true },] }],\n    name: [{ type: Input }],\n    value: [{ type: Input, args: ['nxValue',] }]\n};\nclass NxRadioComponent {\n    /**\n     * @param {?} radioGroup\n     * @param {?} _changeDetectorRef\n     */\n    constructor(radioGroup, _changeDetectorRef) {\n        this.radioGroup = radioGroup;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._id = `nx-radio-${nextId$1++}`;\n        this._name = null;\n        this._labelSize = 'big';\n        this._negative = false;\n        /**\n         * An event is dispatched on each value change.\n         */\n        this.valueChange = new EventEmitter();\n        this._value = null;\n        this._checked = false;\n        this._disabled = false;\n        this._required = false;\n        this.onChangeCallback = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the id of the radio component.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        if (this._id !== value) {\n            this._id = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get inputId() {\n        return `${this.id}-input`;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get labelId() {\n        return `${this.id}-label`;\n    }\n    // this is also the name attribute, which is mandatory in conjunction with ngModel, hence no nx prefix\n    /**\n     * Sets the name of this radio component, which is mandatory in conjunction with ngModel (Default: null).\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        if (this._name !== value) {\n            this._name = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return (this.radioGroup && this.radioGroup.name) ? this.radioGroup.name : this._name;\n    }\n    /**\n     * Sets the label size of the radio button.\n     * The default value is `big`.\n     * @param {?} value\n     * @return {?}\n     */\n    set labelSize(value) {\n        if (this._labelSize !== value) {\n            this._labelSize = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get labelSize() {\n        return this._labelSize;\n    }\n    /**\n     * Whether the negative set of styles should be used.\n     *\n     * If the radio button is placed in a radio group, the negative value\n     * is overwritten by the group's negative value.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this._negative !== newValue) {\n            this._negative = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this.radioGroup ? this.radioGroup.negative : this._negative;\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * Sets the value of the form control element (Default: null).\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this._value) {\n            this._value = value;\n            this.onChangeCallback(value);\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get checked() {\n        return this._checked;\n    }\n    /**\n     * Whether the radio component is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (this._checked !== value) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioGroup && this.radioGroup.disabled);\n    }\n    /**\n     * Whether the radio button should be disabled or not.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    /**\n     * Sets if at least a radio button should be selected.\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = value;\n        // needed when the outer component is set to onPush because it is a native property\n        // on the host element\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.radioGroup) {\n            this.name = this.radioGroup.name;\n            // when relevant properties of the parent like name and disabled change\n            // we need to let change detection know that the template needs an update\n            this._parentChangeSubscription = this.radioGroup._stateChanges.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n            }));\n            if (this.radioGroup.value === this._value) {\n                this._checked = true;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._parentChangeSubscription) {\n            this._parentChangeSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (value === this._value) {\n            this._checked = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @param {?} onChange\n     * @return {?}\n     */\n    registerOnChange(onChange) {\n        this.onChangeCallback = onChange;\n    }\n    /**\n     * @param {?} onTouched\n     * @return {?}\n     */\n    registerOnTouched(onTouched) {\n        this.onTouchedCallback = onTouched;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    touch() {\n        this.onTouchedCallback();\n        if (this.radioGroup) {\n            this.radioGroup.touch();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputChange(event) {\n        event.stopPropagation();\n        this._checked = true;\n        this.valueChange.emit(new NxRadioChange(this, this._value));\n        this.onChangeCallback(this.value);\n        if (this.radioGroup && this.value !== this.radioGroup.value) {\n            this.radioGroup.change(this.value);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // make sure click event propagation on the visually hidden input\n        // are stopped to prevent multiple events bubbling up.\n        event.stopPropagation();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    _controlInvalid() {\n        /** @type {?} */\n        const form = this.radioGroup && (this.radioGroup._parentFormGroup || this.radioGroup._parentForm);\n        return !!(this.radioGroup && this.radioGroup.ngControl && this.radioGroup.ngControl.invalid\n            && (this.radioGroup.ngControl.touched || (form && form.submitted)));\n    }\n}\nNxRadioComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-radio',\n                template: \"<input\\n  type=\\\"radio\\\"\\n  [id]=\\\"inputId\\\"\\n  [attr.name]=\\\"name\\\"\\n  [disabled]=\\\"disabled\\\"\\n  (blur)=\\\"touch()\\\"\\n  (change)=\\\"_onInputChange($event)\\\"\\n  (click)=\\\"_onInputClick($event)\\\"\\n  [checked]=\\\"checked\\\"\\n  [attr.aria-labelledby]=\\\"labelId\\\"\\n  class=\\\"nx-radio__input\\\">\\n<label [id]=\\\"labelId\\\" [attr.for]=\\\"inputId\\\" class=\\\"nx-radio__label\\\">\\n    <div class=\\\"nx-radio__circle\\\">\\n      <div class=\\\"nx-radio__dot\\\"></div>\\n    </div>\\n    <span class=\\\"nx-radio__label--text\\\"><ng-content></ng-content></span>\\n</label>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxRadioComponent)),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[attr.required]': 'required',\n                    '[class.nx-radio-button--small-label]': 'labelSize === \"small\"',\n                    '[class.nx-radio-button--big-label]': 'labelSize === \"big\"',\n                    '[class.nx-radio--negative]': 'negative',\n                    '[class.has-error]': '_controlInvalid() || null',\n                    '[attr.aria-invalid]': '_controlInvalid() || null'\n                },\n                styles: [\":host{display:block;position:relative}:host.has-error .nx-radio__circle,:host.ng-invalid .nx-radio__circle{border-color:#dc3149}:host.has-error .nx-radio__input:checked+.nx-radio__label .nx-radio__dot,:host.ng-invalid .nx-radio__input:checked+.nx-radio__label .nx-radio__dot{background-color:#dc3149}.nx-radio__input{opacity:0;position:absolute}:host(.nx-radio-button--small-label) .nx-radio__label{font-size:16px;line-height:24px}:host(.nx-radio-button--big-label) .nx-radio__label{font-size:20px;line-height:28px}:host.nx-radio--negative .nx-radio__label--text{color:#fff}:host.nx-radio--negative .nx-radio__circle{border-color:#fff}:host.nx-radio--negative .nx-radio__input:checked+.nx-radio__label .nx-radio__dot{background:#fff}:host.nx-radio--negative .nx-radio__input:disabled+.nx-radio__label{opacity:.4}.nx-radio__label{color:#414141;cursor:pointer;display:inline-flex;position:relative;align-items:center}.nx-radio__circle{border:2px solid #007ab3;border-radius:50%;width:24px;min-width:24px;height:24px;margin-right:12px;position:relative;display:flex;justify-content:center;align-items:center}.nx-radio__dot{width:8px;height:8px;background-color:transparent;border-radius:50%;transition:background-color .2s}.nx-radio__input:checked+.nx-radio__label .nx-radio__dot{background-color:#007ab3}.nx-radio__input:disabled+.nx-radio__label{cursor:not-allowed;color:#c2c2c2}.nx-radio__input:disabled+.nx-radio__label .nx-radio__circle{border-color:#c2c2c2}.nx-radio__input:checked:disabled+.nx-radio__label .nx-radio__dot{background-color:#c2c2c2}:host-context([data-whatinput=keyboard]) .nx-radio__input:focus+.nx-radio__label .nx-radio__circle{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host:not(.nx-radio--negative):not(.ng-invalid):not(.has-error):hover .nx-radio__input:not([disabled])+.nx-radio__label .nx-radio__circle{border-color:#075994}:host:not(.nx-radio--negative):not(.ng-invalid):not(.has-error):hover .nx-radio__input:not([disabled]):checked+.nx-radio__label .nx-radio__dot{background-color:#075994}:host:not(.nx-radio--negative):not(.ng-invalid):not(.has-error):active .nx-radio__input:not([disabled])+.nx-radio__label .nx-radio__circle{border-color:#003781}:host:not(.nx-radio--negative):not(.ng-invalid):not(.has-error):active .nx-radio__input:not([disabled]):checked+.nx-radio__label .nx-radio__dot{background-color:#003781}@media screen and (-ms-high-contrast:active){.nx-radio__input:checked+.nx-radio__label .nx-radio__dot{background-color:windowText}.nx-radio__input:focus+.nx-radio__label{color:highlightText}.nx-radio__input:focus+.nx-radio__label .nx-radio__dot{background-color:highlightText}}\"]\n            }] }\n];\n/** @nocollapse */\nNxRadioComponent.ctorParameters = () => [\n    { type: NxRadioGroupComponent, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nNxRadioComponent.propDecorators = {\n    id: [{ type: Input, args: ['id',] }],\n    name: [{ type: Input, args: ['name',] }],\n    labelSize: [{ type: Input }],\n    negative: [{ type: Input }],\n    valueChange: [{ type: Output, args: ['nxValueChange',] }],\n    value: [{ type: Input, args: ['nxValue',] }],\n    checked: [{ type: Input, args: ['nxChecked',] }],\n    disabled: [{ type: Input, args: ['nxDisabled',] }],\n    required: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxRadioModule {\n}\nNxRadioModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxRadioComponent, NxRadioGroupComponent],\n                exports: [NxRadioComponent, NxRadioGroupComponent],\n                imports: [\n                    NxIconModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_TYPE$1 = 'normal';\nclass NxCopytextComponent {\n    constructor() {\n        /**\n         * \\@docs-private\n         */\n        this.type = DEFAULT_TYPE$1;\n        /**\n         * \\@docs-private\n         */\n        this.negative = false;\n    }\n    /**\n     * Sets the type and whether the negative set of styling should be used.\n     *\n     * You can combine the values of type NxCopytextType and 'negative'.\n     *\n     * Default type: 'normal'\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        this._classNames = value;\n        const [type = null] = this._classNames.match(/small|medium|normal|large/) || [DEFAULT_TYPE$1];\n        this.type = (/** @type {?} */ (type));\n        this.negative = !!this._classNames.match(/negative/);\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n}\nNxCopytextComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'p[nxCopytext]',\n                template: `<ng-content></ng-content>`,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-copy]': 'true',\n                    '[class.nx-copy--small]': 'type === \"small\"',\n                    '[class.nx-copy--medium]': 'type === \"medium\"',\n                    '[class.nx-copy--normal]': 'type === \"normal\"',\n                    '[class.nx-copy--large]': 'type === \"large\"',\n                    '[class.nx-copy--negative]': 'negative',\n                },\n                styles: [\":host{margin:0 0 32px;font-size:16px;font-size:var(--body-03-font-size,16px);line-height:24px;line-height:var(--body-03-line-height,24px);font-weight:400;font-weight:var(--body-03-font-weight,400);letter-spacing:0;letter-spacing:var(--body-03-letter-spacing,0)}:host.nx-copy.nx-copy{font-weight:400}:host(.nx-copy--negative){color:#fff}:host(.nx-copy--small){font-size:12px;font-size:var(--body-05-font-size,12px);line-height:16px;line-height:var(--body-05-line-height,16px);font-weight:600;font-weight:var(--body-05-font-weight,600);letter-spacing:.5px;letter-spacing:var(--body-05-letter-spacing,.5px)}:host(.nx-copy--medium){font-size:14px;font-size:var(--body-04-font-size,14px);line-height:20px;line-height:var(--body-04-line-height,20px);font-weight:600;font-weight:var(--body-04-font-weight,600);letter-spacing:.2px;letter-spacing:var(--body-04-letter-spacing,.2px)}:host(.nx-copy--large){font-size:18px;font-size:var(--body-02-font-size,18px);line-height:24px;line-height:var(--body-02-line-height,24px);font-weight:400;font-weight:var(--body-02-font-weight,400);letter-spacing:.2px;letter-spacing:var(--body-02-letter-spacing,.2px)}\"]\n            }] }\n];\nNxCopytextComponent.propDecorators = {\n    classNames: [{ type: Input, args: ['nxCopytext',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxCopytextModule {\n}\nNxCopytextModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxCopytextComponent],\n                exports: [NxCopytextComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_TYPE$2 = 'section';\nclass NxHeadlineComponent {\n    constructor() {\n        /**\n         * \\@docs-private\n         */\n        this.type = DEFAULT_TYPE$2;\n        /**\n         * \\@docs-private\n         */\n        this.negative = false;\n    }\n    /**\n     * Changes the type of the headline which affects the visual appearance.\n     * You can combine a HeadlineType and 'negative'.\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        this._classNames = value;\n        /** @type {?} */\n        const typeRegex = /page-bold-caps|page|section|subsection-large|subsection-medium|subsection-small|subsection-xsmall/;\n        const [type = null] = this._classNames.match(typeRegex) || [DEFAULT_TYPE$2];\n        this.type = (/** @type {?} */ (type));\n        this.negative = !!this._classNames.match(/negative/);\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n}\nNxHeadlineComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: '[nxHeadline]',\n                template: `<ng-content></ng-content>`,\n                host: {\n                    '[class.nx-heading--page]': 'type === \"page\"',\n                    '[class.nx-heading--page-bold-caps]': 'type === \"page-bold-caps\"',\n                    '[class.nx-heading--section]': 'type === \"section\"',\n                    '[class.nx-heading--subsection-large]': 'type === \"subsection-large\"',\n                    '[class.nx-heading--subsection-medium]': 'type === \"subsection-medium\"',\n                    '[class.nx-heading--subsection-small]': 'type === \"subsection-small\"',\n                    '[class.nx-heading--subsection-xsmall]': 'type === \"subsection-xsmall\"',\n                    '[class.nx-heading--negative]': 'negative',\n                },\n                styles: [\":host{margin:0}:host ::ng-deep nx-link,:host ::ng-deep nx-link a,:host a{color:#006192;font-size:inherit;font-weight:600;letter-spacing:inherit;text-decoration:none}:host(.nx-heading--page-bold-caps){font-size:54px;font-size:var(--heading-01-font-size,54px);line-height:60px;line-height:var(--heading-01-line-height,60px);font-weight:var(--heading-01-font-weight,300);letter-spacing:.3px;letter-spacing:var(--heading-01-letter-spacing,.3px);font-weight:700;text-transform:uppercase;margin-bottom:8px}@media (max-width:703px){:host(.nx-heading--page-bold-caps){font-size:40px;font-size:var(--heading-01-small-font-size,40px);line-height:48px;line-height:var(--heading-01-small-line-height,48px)}}:host(.nx-heading--page){font-size:54px;font-size:var(--heading-01-font-size,54px);line-height:60px;line-height:var(--heading-01-line-height,60px);font-weight:300;font-weight:var(--heading-01-font-weight,300);letter-spacing:.3px;letter-spacing:var(--heading-01-letter-spacing,.3px);margin-bottom:40px}@media (max-width:703px){:host(.nx-heading--page){font-size:40px;font-size:var(--heading-01-small-font-size,40px);line-height:48px;line-height:var(--heading-01-small-line-height,48px)}}:host(.nx-heading--section){font-size:40px;font-size:var(--heading-02-font-size,40px);line-height:48px;line-height:var(--heading-02-line-height,48px);font-weight:300;font-weight:var(--heading-02-font-weight,300);letter-spacing:.3px;letter-spacing:var(--heading-02-letter-spacing,.3px);margin-bottom:48px}@media (max-width:703px){:host(.nx-heading--section){font-size:35px;font-size:var(--heading-02-small-font-size,35px);line-height:40px;line-height:var(--heading-02-small-line-height,40px)}}:host(.nx-heading--subsection-large){font-size:30px;font-size:var(--heading-03-font-size,30px);line-height:36px;line-height:var(--heading-03-line-height,36px);font-weight:300;font-weight:var(--heading-03-font-weight,300);letter-spacing:.3px;letter-spacing:var(--heading-03-letter-spacing,.3px);margin-bottom:32px}@media (max-width:703px){:host(.nx-heading--subsection-large){font-size:26px;font-size:var(--heading-03-small-font-size,26px);line-height:32px;line-height:var(--heading-03-small-line-height,32px)}}:host(.nx-heading--subsection-medium){font-size:26px;font-size:var(--heading-04-font-size,26px);line-height:32px;line-height:var(--heading-04-line-height,32px);font-weight:300;font-weight:var(--heading-04-font-weight,300);letter-spacing:.3px;letter-spacing:var(--heading-04-letter-spacing,.3px);margin-bottom:40px}@media (max-width:703px){:host(.nx-heading--subsection-medium){font-size:24px;font-size:var(--heading-04-small-font-size,24px);line-height:32px;line-height:var(--heading-04-small-line-height,32px)}}:host(.nx-heading--subsection-small){font-size:24px;font-size:var(--heading-05-font-size,24px);line-height:32px;line-height:var(--heading-05-line-height,32px);font-weight:600;font-weight:var(--heading-05-font-weight,600);letter-spacing:.2px;letter-spacing:var(--heading-05-letter-spacing,.2px);margin-bottom:32px}@media (max-width:703px){:host(.nx-heading--subsection-small){font-size:20px;font-size:var(--heading-05-small-font-size,20px);line-height:28px;line-height:var(--heading-05-small-line-height,28px)}}:host(.nx-heading--subsection-xsmall){font-size:20px;font-size:var(--heading-06-font-size,20px);line-height:28px;line-height:var(--heading-06-line-height,28px);font-weight:300;font-weight:var(--heading-06-font-weight,300);letter-spacing:.2px;letter-spacing:var(--heading-06-letter-spacing,.2px);margin-bottom:24px}@media (max-width:703px){:host(.nx-heading--subsection-xsmall){font-size:18px;font-size:var(--heading-06-small-font-size,18px);line-height:28px;line-height:var(--heading-06-small-line-height,28px)}}:host(.nx-heading--negative){color:#fff}:host(.nx-heading--negative) ::ng-deep a{color:#fff}\"]\n            }] }\n];\nNxHeadlineComponent.propDecorators = {\n    classNames: [{ type: Input, args: ['nxHeadline',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxHeadlineModule {\n}\nNxHeadlineModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxHeadlineComponent],\n                exports: [NxHeadlineComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPPING = {\n    'black': 'nx-link--black',\n    'negative': 'nx-link--negative',\n    'text': 'nx-link--text',\n    'block': 'nx-link--block',\n    'icon-right': 'nx-link--icon-right'\n};\n/** @type {?} */\nconst DEFAULT_CLASSES = ['nx-link'];\nclass NxLinkComponent extends MappedStyles {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     */\n    constructor(_elementRef, _renderer) {\n        super(MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);\n        this._renderer = _renderer;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Add a specific link class that the css gets more specific than the nx-icon css\n        /** @type {?} */\n        const icons = this.elementRef.nativeElement.querySelectorAll('nx-icon');\n        for (let i = 0; i < icons.length; i++) {\n            this._renderer.addClass(icons[i], 'nx-link__icon');\n        }\n    }\n    /**\n     * \\@docs-private\n     * getter used for the modal component as a quickfix\n     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n     * way to reach the elementRef of the component until the modal gets refactored.\n     * @return {?}\n     */\n    get elementRef() {\n        return this._elementRef;\n    }\n}\nNxLinkComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-link',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: '<ng-content></ng-content>',\n                inputs: ['classNames: nxStyle'],\n                styles: [\":host{display:inline-block;color:#006192;cursor:pointer;font-size:16px;font-weight:600;letter-spacing:1px;position:relative;text-decoration:none;transition:color .2s,box-shadow .2s;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;line-height:24px}:host:hover{color:#008ed6}:host::ng-deep a:active{color:#003781}:host::ng-deep a{display:flex}:host-context([data-whatinput=keyboard])::ng-deep a:focus{border-radius:4px;outline:0;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-link--negative){color:#fff}:host(.nx-link--negative):hover{color:#c2c2c2}:host(.nx-link--negative)::ng-deep a:active{color:#999}:host(.nx-link--negative)::ng-deep a[aria-disabled],:host(.nx-link--negative)::ng-deep a[disabled]{color:rgba(255,255,255,.4)}:host(.nx-link--black){color:#414141}:host(.nx-link--black):hover{color:#999}:host(.nx-link--black)::ng-deep a:active{color:#5b5b5b}:host(.nx-link--black)::ng-deep a[aria-disabled],:host(.nx-link--black)::ng-deep a[disabled]{color:#c2c2c2}.nx-link--text{font-weight:700;text-transform:none;letter-spacing:normal;border-radius:4px}:host::ng-deep .c-icon,:host::ng-deep nx-icon.nx-link__icon{line-height:24px;font-size:24px;margin:0 8px 0 0}:host::ng-deep .c-icon::before,:host::ng-deep nx-icon.nx-link__icon::before{line-height:inherit;font-size:inherit;width:24px;height:24px}:host(.nx-link--icon-right)::ng-deep .c-icon,:host(.nx-link--icon-right)::ng-deep nx-icon.nx-link__icon{order:2;margin:0 0 0 8px}:host::ng-deep a[aria-disabled],:host::ng-deep a[disabled]{cursor:not-allowed;color:rgba(0,97,146,.4)}:host::ng-deep a[aria-disabled]:active,:host::ng-deep a[disabled]:active{color:#006192}:host::ng-deep a[aria-disabled]:focus,:host::ng-deep a[disabled]:focus{outline:0;box-shadow:none}\"]\n            }] }\n];\n/** @nocollapse */\nNxLinkComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNxLinkComponent.propDecorators = {\n    icon: [{ type: ContentChild, args: [NxIconComponent,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxLinkModule {\n}\nNxLinkModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxLinkComponent],\n                exports: [NxLinkComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @abstract\n */\nclass ToggleButton {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$2 = 0;\nclass NxCircleToggleGroupComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._id = `nx-circle-toggle-group-${nextId$2++}`;\n        this._destroyed = new Subject();\n        /**\n         * An event emitted when the selection changes. Outputs the value of the currently selected button.\n         */\n        this.valueChange = new EventEmitter();\n        this._name = `toggle-group-${nextId$2++}`;\n        this._negative = false;\n        this._responsive = true;\n        this.onChangeCallback = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => { });\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Id of the circle toggle group.\n     *\n     * If not set, the circle toggle group gets an incremented value by default.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Name that is used for accessibility.\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this.updateToggleButtonsNames();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Whether the circle toggle group is disabled.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n        if (this.buttons) {\n            this.buttons.forEach((/**\n             * @param {?} button\n             * @return {?}\n             */\n            button => button.disabled = value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Whether the circle toggle group uses the negative styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this.negative !== newValue) {\n            this._negative = newValue;\n        }\n        if (this.buttons) {\n            this.buttons.forEach((/**\n             * @param {?} button\n             * @return {?}\n             */\n            button => button.negative = value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * The value of the selected circle toggle in the circle toggle group.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * Whether the circle toggle group has a responsive behavior.\n     * @param {?} value\n     * @return {?}\n     */\n    set responsive(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.responsive) {\n            this._responsive = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get responsive() {\n        return this._responsive;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.value !== value) {\n            this._value = value;\n            this.notifySelectedChild(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.subscribeToSelectionChanges();\n        // react if a content child is deleted, added etc.\n        this.buttons.changes\n            .pipe(startWith(this.buttons), filter((/**\n         * @param {?} toggles\n         * @return {?}\n         */\n        toggles => toggles.length > 0)), tap((/**\n         * @param {?} toggles\n         * @return {?}\n         */\n        toggles => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            toggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle.toggleButton.resetClasses()));\n            this.buttons.first.toggleButton.setFirstButton();\n            this.buttons.last.toggleButton.setLastButton();\n        })))), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.subscribeToSelectionChanges()));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    subscribeToSelectionChanges() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.buttons.changes, this._destroyed);\n        merge(...this.buttons.map((/**\n         * @param {?} button\n         * @return {?}\n         */\n        button => button.selectionChange)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => {\n            this.onChangeCallback(change.value);\n            this.valueChange.emit(change.value);\n        }));\n    }\n    /**\n     * \\@docs-private\n     * inform the selected button if the group selection is set programattically at the beginning\n     * @param {?} newValue\n     * @return {?}\n     */\n    notifySelectedChild(newValue) {\n        if (this.buttons) {\n            /** @type {?} */\n            const selected = this.buttons.find((/**\n             * @param {?} button\n             * @return {?}\n             */\n            (button) => button.value === newValue));\n            if (selected) {\n                selected.setGroupSelection();\n            }\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    updateToggleButtonsNames() {\n        if (this.buttons) {\n            this.buttons.forEach((/**\n             * @param {?} button\n             * @return {?}\n             */\n            button => button.name = this.name));\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get selectedButton() {\n        return this.buttons ? this.buttons.find((/**\n         * @param {?} button\n         * @return {?}\n         */\n        button => button.checked)) : null;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get buttons() {\n        return this._buttons;\n    }\n}\nNxCircleToggleGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-circle-toggle-group',\n                template: `<ng-content></ng-content>`,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxCircleToggleGroupComponent)),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.is-responsive]': 'responsive',\n                    '[class.is-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-labelledby]': 'name',\n                    '[attr.name]': 'name',\n                    '[attr.id]': 'id',\n                    '[class.nx-circle-toggle-group]': 'true',\n                    'role': 'radiogroup'\n                },\n                styles: [\":host{display:flex;flex-wrap:wrap;flex-direction:column;justify-content:space-around}@media (min-width:320px){:host{flex-direction:row}}:host(.is-responsive){flex-direction:column}@media (min-width:704px){:host(.is-responsive){flex-direction:row}}\"]\n            }] }\n];\n/** @nocollapse */\nNxCircleToggleGroupComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxCircleToggleGroupComponent.propDecorators = {\n    _buttons: [{ type: ContentChildren, args: [ToggleButton,] }],\n    valueChange: [{ type: Output }],\n    name: [{ type: Input }],\n    disabled: [{ type: Input }],\n    negative: [{ type: Input }],\n    value: [{ type: Input }],\n    responsive: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxMobileToggleButtonComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.checked = false;\n        this.negative = false;\n        this.disabled = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    setFirstButton() {\n        this.isFirst = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    setLastButton() {\n        this.isLast = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    resetClasses() {\n        this.isFirst = false;\n        this.isLast = false;\n        this._changeDetectorRef.markForCheck();\n    }\n}\nNxMobileToggleButtonComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-mobile-toggle-button',\n                template: \"<nx-icon class=\\\"nx-toggle-button__mobile-check\\\" name=\\\"check\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n<span class=\\\"nx-toggle-button__label-text\\\">{{label}}</span>\\n<span *ngIf=\\\"hint\\\" class=\\\"nx-toggle-button__label-hint\\\">({{hint}})</span>\\n\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.is-disabled]': 'disabled',\n                    '[class.is-negative]': 'negative',\n                    '[class.is-first]': 'isFirst',\n                    '[class.is-last]': 'isLast',\n                    '[class.is-flipped]': 'checked'\n                },\n                styles: [\":host{display:none;position:relative;transition:background-color .2s,border-color .2s,color .2s;flex-direction:row;border-width:1px 2px;border-color:#007ab3;border-style:solid;padding:11px 31px;width:100%;justify-content:center;align-items:center}@media (max-width:703px){:host-context(.is-responsive){display:flex}}.nx-toggle-button__label-hint{color:#007ab3;font-weight:nx-font-weights(light);line-height:20px;font-size:14px}.nx-toggle-button__label-text{padding-top:0;padding-right:4px;font-weight:600;color:#007ab3}.nx-toggle-button__mobile-check{font-size:24px;height:24px;display:inline-block;opacity:0;margin-right:8px;color:#fff}:host(.is-flipped.nx-toggle-button__mobile-check){opacity:1}:host(.is-first){border-top-width:2px;border-radius:4px 4px 0 0}:host(.is-last){border-bottom-width:2px;border-radius:0 0 4px 4px}:host(.is-flipped){background:#007ab3}:host(.is-flipped) .nx-toggle-button__label-hint,:host(.is-flipped) .nx-toggle-button__label-text{color:#fff}:host(.is-negative){border-color:#fff}:host(.is-negative) .nx-toggle-button__label-hint,:host(.is-negative) .nx-toggle-button__label-text,:host(.is-negative) .nx-toggle-button__mobile-check{color:#fff}:host(.is-negative.is-flipped){background-color:#fff}:host(.is-negative.is-flipped) .nx-toggle-button__label-hint,:host(.is-negative.is-flipped) .nx-toggle-button__label-text,:host(.is-negative.is-flipped) .nx-toggle-button__mobile-check{color:#007ab3}:host(.is-disabled){opacity:.4;cursor:not-allowed}\"]\n            }] }\n];\n/** @nocollapse */\nNxMobileToggleButtonComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxMobileToggleButtonComponent.propDecorators = {\n    checked: [{ type: Input }],\n    negative: [{ type: Input }],\n    disabled: [{ type: Input }],\n    hint: [{ type: Input }],\n    label: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ToggleChangeEvent {\n    /**\n     * @param {?} button\n     * @param {?} value\n     */\n    constructor(button, value) {\n        this.button = button;\n        this.value = value;\n    }\n}\n/** @type {?} */\nlet nextId$3 = 0;\nclass NxCircleToggleComponent extends ToggleButton {\n    /**\n     * @param {?} toggleGroup\n     * @param {?} _checkedDispatcher\n     * @param {?} _changeDetectorRef\n     */\n    constructor(/** @docs-private */ toggleGroup, _checkedDispatcher, _changeDetectorRef) {\n        super();\n        this.toggleGroup = toggleGroup;\n        this._checkedDispatcher = _checkedDispatcher;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._id = `toggle-button-${nextId$3++}`;\n        /**\n         * \\@docs-private\n         */\n        this.inGroup = false;\n        this._name = null;\n        /**\n         * An event that is emitted when the checked state fo the circle toggle changes.\n         */\n        this.checkedChange = new EventEmitter();\n        /**\n         * An event that is emitted when the checked state of the circle toggle changes.\n         * The event object contains the circle toggle itself and its value (see ToggleChangeEvent).\n         */\n        this.selectionChange = new EventEmitter();\n        this._checked = false;\n        this._value = null;\n        this._iconName = null;\n        this._svg = null;\n        this._svgChecked = null;\n        this._label = null;\n        this._hint = null;\n        this._hover = false;\n        /**\n         * touched is set to true on touch devices.\n         */\n        this._touched = false;\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onChangeCallback = (/**\n         * @param {?} checked\n         * @return {?}\n         */\n        (checked) => { });\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n        if (this.toggleGroup) {\n            this.name = this.toggleGroup.name;\n        }\n    }\n    /**\n     * Id of the circle toggle.\n     *\n     * If not set, the circle toggle gets an incremented value by default.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Name that is used for accessibility.\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Whether the circle toggle is checked.\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this.checked !== newValue) {\n            this._checked = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get checked() {\n        return this._checked;\n    }\n    /**\n     * The value that is used in the model.\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = newValue;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * Id of the icon that should be displayed.\n     * @param {?} name\n     * @return {?}\n     */\n    set iconName(name) {\n        this._iconName = name;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get iconName() {\n        return this._iconName;\n    }\n    /**\n     * SVG that is displayed if the circle toggle is unchecked.\n     * @param {?} src\n     * @return {?}\n     */\n    set svg(src) {\n        this._svg = src;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get svg() {\n        return this._svg;\n    }\n    /**\n     * SVG that is displayed if the circle toggle is checked.\n     * @param {?} src\n     * @return {?}\n     */\n    set svgChecked(src) {\n        this._svgChecked = src;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get svgChecked() {\n        return this._svgChecked;\n    }\n    /**\n     * Label displayed below the circle.\n     * @param {?} value\n     * @return {?}\n     */\n    set label(value) {\n        this._label = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * Additional hint displayed below the label.\n     * @param {?} value\n     * @return {?}\n     */\n    set hint(value) {\n        this._hint = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get hint() {\n        return this._hint;\n    }\n    /**\n     * Whether the circle toggle uses the negative set of styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this.negative !== newValue) {\n            this._negative = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Whether the circle toggle has a responsive behavior.\n     * @param {?} value\n     * @return {?}\n     */\n    set responsive(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this.responsive !== newValue) {\n            this._responsive = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get responsive() {\n        return this._responsive;\n    }\n    /**\n     * Whether the circle toggle is disabled.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this.disabled !== newValue) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onMouseEnter() {\n        if (!this._touched) {\n            this._hover = true;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onMouseLeave() {\n        if (!this._touched) {\n            this._hover = false;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onTouchStart() {\n        this._touched = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.toggleGroup) {\n            this.attachListenerForGroup();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this.toggleGroup) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.inGroup = true;\n                this.negative = this.toggleGroup.negative;\n                this.disabled = this.toggleGroup.disabled;\n                this.responsive = this.toggleGroup.responsive;\n                this.id = this.toggleGroup.id + `-button-${nextId$3++}`;\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // function returned by the listener\n        this._removeUniqueSelectionListener();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    attachListenerForGroup() {\n        this._removeUniqueSelectionListener =\n            this._checkedDispatcher.listen((/**\n             * @param {?} groupId\n             * @param {?} buttonId\n             * @return {?}\n             */\n            (groupId, buttonId) => {\n                if (this.id !== buttonId && groupId === this.toggleGroup.id) {\n                    this.checked = false;\n                }\n            }));\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    writeValue(newValue) {\n        this.checked = newValue;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    toggle(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if ((this.toggleGroup && this.checked) || this.disabled) {\n            return;\n        }\n        else {\n            this.checked = !this.checked;\n            this.onChangeCallback(this.checked);\n            this.checkedChange.emit(this.checked);\n            this.selectionChange.emit(new ToggleChangeEvent(this, this.value));\n            if (this.toggleGroup) {\n                this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n            }\n        }\n    }\n    /**\n     * \\@docs-private\n     *\n     * method called by the group if the internal value of the group is changed programatically,\n     * does not trigger change emission\n     * @return {?}\n     */\n    setGroupSelection() {\n        // propagate changes only if the value in the group is different than the button checked value\n        if (!this.checked) {\n            this.checked = !this.checked;\n            this.onChangeCallback(this.checked);\n            this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get svgButton() {\n        return !!this.svg && !!this.svgChecked;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get svgUrl() {\n        /** @type {?} */\n        let useFilledSvg = this.checked || (!this.disabled && this._hover);\n        if (this.negative) {\n            useFilledSvg = !useFilledSvg;\n        }\n        return useFilledSvg ? this.svgChecked : this.svg;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get type() {\n        return this.toggleGroup ? 'radio' : 'checkbox';\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    handleEnterKey(event) {\n        if (!this.toggleGroup) {\n            this.toggle(event);\n        }\n    }\n}\nNxCircleToggleComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-circle-toggle',\n                template: \"<input [id]=\\\"id + '-input'\\\"\\n       class=\\\"nx-circle-toggle__input\\\"\\n       [attr.aria-labelledby]=\\\"id + '-label'\\\"\\n       [type]=\\\"type\\\"\\n       [attr.name]=\\\"name\\\"\\n       [checked]=\\\"checked\\\"\\n       [disabled]= \\\"disabled\\\"\\n       [attr.aria-checked]=\\\"checked\\\"\\n       (keydown.enter)=\\\"handleEnterKey($event)\\\"\\n       (click)=\\\"toggle($event)\\\">\\n<label class=\\\"nx-circle-toggle__label\\\"\\n  [for]=\\\"id + '-input'\\\"\\n  [id]=\\\"id + '-label'\\\">\\n    <nx-icon-toggle-button\\n      [label]=\\\"label\\\"\\n      [hint]=\\\"hint\\\"\\n      [checked]=\\\"checked\\\"\\n      [icon]=\\\"iconName\\\"\\n      [negative]=\\\"negative\\\"\\n      [svg]=\\\"svgUrl\\\"\\n      [disabled]=\\\"disabled\\\"\\n      [inGroup]=\\\"inGroup\\\"\\n      [touched]=\\\"_touched\\\">\\n    </nx-icon-toggle-button>\\n    <!-- The mobile toggle button is needed for the responsive mobile version of the component.\\n    The display swtich is handled in the css. -->\\n    <nx-mobile-toggle-button\\n      [label]=\\\"label\\\"\\n      [hint]=\\\"hint\\\"\\n      [checked]=\\\"checked\\\"\\n      [negative]=\\\"negative\\\"\\n      [disabled]=\\\"disabled\\\">\\n    </nx-mobile-toggle-button>\\n</label>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    {\n                        provide: ToggleButton,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxCircleToggleComponent))\n                    },\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxCircleToggleComponent)),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.nx-toggle-circle]': 'true',\n                    '[class.in-group]': 'inGroup',\n                    '[class.is-disabled]': 'disabled',\n                    '[class.is-responsive]': 'responsive'\n                },\n                styles: [\":host{display:inline-block;vertical-align:top;position:relative}:host:not(.is-responsive){opacity:.9999}:host .nx-circle-toggle__input{opacity:0;position:absolute}:host:not(.in-group){margin-right:64px}@media (max-width:703px){:host:not(.in-group){margin-right:48px}}:host-context([data-whatinput=keyboard]) .nx-circle-toggle__input:focus+.nx-circle-toggle__label ::ng-deep .nx-toggle-circle__check-focus,:host-context([data-whatinput=keyboard]) .nx-circle-toggle__input:focus+.nx-circle-toggle__label ::ng-deep .nx-toggle-circle__icon-wrapper{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host-context([data-whatinput=keyboard]) .nx-circle-toggle__input:focus+.nx-circle-toggle__label ::ng-deep nx-mobile-toggle-button{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;z-index:1}\"]\n            }] }\n];\n/** @nocollapse */\nNxCircleToggleComponent.ctorParameters = () => [\n    { type: NxCircleToggleGroupComponent, decorators: [{ type: Optional }] },\n    { type: UniqueSelectionDispatcher },\n    { type: ChangeDetectorRef }\n];\nNxCircleToggleComponent.propDecorators = {\n    name: [{ type: Input }],\n    checkedChange: [{ type: Output }],\n    selectionChange: [{ type: Output }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    iconName: [{ type: Input, args: ['icon',] }],\n    svg: [{ type: Input }],\n    svgChecked: [{ type: Input }],\n    label: [{ type: Input }],\n    hint: [{ type: Input }],\n    negative: [{ type: Input }],\n    responsive: [{ type: Input }],\n    disabled: [{ type: Input }],\n    toggleButton: [{ type: ViewChild, args: [NxMobileToggleButtonComponent,] }],\n    onMouseEnter: [{ type: HostListener, args: ['mouseenter',] }],\n    onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }],\n    onTouchStart: [{ type: HostListener, args: ['touchstart',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxIconToggleButtonComponent {\n    constructor() {\n        this.inGroup = true;\n    }\n}\nNxIconToggleButtonComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-icon-toggle-button',\n                template: \"<div class=\\\"nx-toggle-circle__icon-wrapper\\\">\\n  <ng-container *ngIf=\\\"!inGroup\\\">\\n    <span class=\\\"nx-toggle-circle__check-icon\\\">\\n      <nx-icon name=\\\"check\\\"></nx-icon>\\n    </span>\\n    <div class=\\\"nx-toggle-circle__check-focus\\\"></div>\\n  </ng-container>\\n  <span class=\\\"nx-toggle-circle__icon\\\">\\n    <nx-icon size=\\\"m\\\" *ngIf=\\\"icon\\\" [name]=\\\"icon\\\"></nx-icon>\\n    <img *ngIf=\\\"svgUrl\\\" class=\\\"nx-toggle-circle__icon-image\\\" [src]=\\\"svgUrl\\\" />\\n  </span>\\n</div>\\n<span [class.is-label-bold]=\\\"hint\\\" class=\\\"nx-toggle-circle__label-text\\\">{{label}}</span>\\n<span *ngIf=\\\"hint\\\" class=\\\"nx-toggle-circle__label-hint\\\">{{hint}}</span>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-circle-button]': 'true',\n                    '[class.is-flipped]': 'checked',\n                    '[class.has-checkmark]': '!inGroup',\n                    '[class.is-disabled]': 'disabled',\n                    '[class.is-negative]': 'negative',\n                    '[class.is-touched]': 'touched'\n                },\n                styles: [\"@media (max-width:703px){:host-context(.is-responsive){display:none}}:host{display:flex;flex-direction:column;padding:0;align-items:center;cursor:pointer}:host .nx-toggle-circle__label-text{position:relative;display:inline-block;padding-top:12px;line-height:24px;font-size:16px;max-width:16rem;z-index:1;color:#414141}@media screen and (-ms-high-contrast:active){:host .nx-toggle-circle__label-text{color:#fff}}:host .is-label-bold{font-weight:700}:host .nx-toggle-circle__icon-wrapper{height:80px;width:80px;border-radius:50%;border:2px solid #007ab3;display:flex;align-items:center;justify-content:center;transition:background-color .2s,border-color .2s,box-shadow .2s}:host .nx-toggle-circle__check-icon{background-color:#3da556;border-radius:50%;border:2px solid #fff;color:#fff;font-size:24px;width:32px;height:32px;margin-left:12px;position:absolute;top:-8px;right:calc(50% - 48px);transition:opacity .3s;z-index:1;opacity:0;display:flex;justify-content:center;align-content:center}:host .nx-toggle-circle__check-focus{border-radius:50%;width:28px;height:28px;position:absolute;top:-6px;right:calc(50% - 48px + 2px);z-index:-1;opacity:0;transition:box-shadow .2s}:host .nx-toggle-circle__label-hint{color:#414141;display:inline-block;line-height:24px;font-size:16px;transition:color .2s;z-index:1}@media screen and (-ms-high-contrast:active){:host .nx-toggle-circle__label-hint{color:#fff}}@media (max-width:703px){:host .is-label-bold{font-weight:400}:host .nx-toggle-circle__label-hint{font-weight:300}:host .nx-toggle-circle__label-hint .nx-toggle-circle__icon-wrapper{width:64px;height:64px}:host .nx-toggle-circle__label-hint .nx-toggle-circle__icon nx-icon{font-size:32px}:host .nx-toggle-circle__label-hint .nx-toggle-circle__check-icon{right:calc(50% - 40px)}:host .nx-toggle-circle__label-hint .nx-toggle-circle__icon-image{width:64px;height:64px}}:host .nx-toggle-circle__icon{display:flex;justify-content:center;align-content:center}:host .nx-toggle-circle__icon nx-icon{color:#007ab3}:host .nx-toggle-circle__icon-image{pointer-events:none;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.is-flipped) .nx-toggle-circle__icon-wrapper{background:#007ab3}:host(.is-flipped) .nx-toggle-circle__icon nx-icon{color:#fff}:host(.is-flipped) .nx-toggle-circle__check-focus,:host(.is-flipped) .nx-toggle-circle__check-icon{opacity:1}:host:not(.is-disabled):not(.is-negative):not(.is-touched):hover .nx-toggle-circle__icon-wrapper{border-color:#006192;background:#006192}:host:not(.is-disabled):not(.is-negative):not(.is-touched):hover:not(.is-flipped) .nx-toggle-circle__icon-wrapper{border-color:#007ab3;background:#007ab3}:host:not(.is-disabled):not(.is-negative):not(.is-touched):hover .nx-toggle-circle__icon nx-icon{color:#fff}:host:hover.is-flipped:not(.has-checkmark){cursor:auto}:host(.is-disabled){opacity:.4;cursor:not-allowed}:host(.is-negative) .nx-toggle-circle__icon-wrapper{border-color:#fff;background-color:transparent}:host(.is-negative) .nx-toggle-circle__icon nx-icon,:host(.is-negative) .nx-toggle-circle__label-hint,:host(.is-negative) .nx-toggle-circle__label-text{color:#fff}:host(.is-negative):not(.is-disabled):not(.is-touched):hover .nx-toggle-circle__icon-wrapper,:host(.is-negative.is-flipped) .nx-toggle-circle__icon-wrapper{border-color:#fff;background-color:#fff}:host(.is-negative):not(.is-disabled):not(.is-touched):hover .nx-toggle-circle__icon nx-icon,:host(.is-negative.is-flipped) .nx-toggle-circle__icon nx-icon{color:#007ab3}\"]\n            }] }\n];\nNxIconToggleButtonComponent.propDecorators = {\n    inGroup: [{ type: Input }],\n    hint: [{ type: Input }],\n    label: [{ type: Input }],\n    checked: [{ type: Input }],\n    icon: [{ type: Input }],\n    svgUrl: [{ type: Input, args: ['svg',] }],\n    disabled: [{ type: Input }],\n    negative: [{ type: Input }],\n    touched: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxCircleToggleModule {\n}\nNxCircleToggleModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NxCircleToggleGroupComponent,\n                    NxCircleToggleComponent,\n                    NxIconToggleButtonComponent,\n                    NxMobileToggleButtonComponent\n                ],\n                exports: [\n                    NxCircleToggleGroupComponent,\n                    NxIconToggleButtonComponent,\n                    NxCircleToggleComponent,\n                    NxMobileToggleButtonComponent\n                ],\n                imports: [\n                    CommonModule,\n                    NxIconModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_TYPE$3 = 'normal';\nclass NxListComponent {\n    constructor() {\n        /**\n         * \\@docs-private\n         */\n        this.negative = false;\n        /**\n         * \\@docs-private\n         */\n        this.orderedCircle = false;\n    }\n    /**\n     * Sets the visual appearance of the list. You can combine different values:\n     *\n     * xsmall | small | normal: The listed input values are expanded to the underlying BEM conform styles based\n     * on modifiers. Defaults to normal.\n     *\n     * negative: Display the list with a negative set of styling.\n     *\n     * ordered-circle: Display the list item numbers in a color filled circle.\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        this._classNames = value;\n        const [type = null] = this._classNames.match(/xsmall|small|normal/) || [DEFAULT_TYPE$3];\n        this.type = (/** @type {?} */ (type));\n        this.negative = !!this._classNames.match(/negative/);\n        this.orderedCircle = !!this._classNames.match(/ordered-circle/);\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n}\nNxListComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'ul[nxList], ol[nxList]',\n                template: '<ng-content></ng-content>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-list--xsmall]': 'type === \"xsmall\"',\n                    '[class.nx-list--small]': 'type === \"small\"',\n                    '[class.nx-list--normal]': 'type === \"normal\"',\n                    '[class.nx-list--negative]': 'negative',\n                    '[class.nx-list--ordered-circle]': 'orderedCircle',\n                },\n                styles: [\":host{color:#414141;list-style:none;margin-bottom:32px;padding:0;counter-reset:list}:host(.nx-list--normal){font-size:18px;line-height:24px;letter-spacing:.2px}:host(.nx-list--small){font-size:16px;line-height:24px}:host(.nx-list--xsmall){font-size:14px;line-height:20px;letter-spacing:.2px}:host(.nx-list--xsmall):not(ol)::ng-deep li:not([nxlisticon])::before{top:6px}:host(.nx-list--xsmall) ::ng-deep .nx-list__icon{top:-2px}:host(ol.nx-list--xsmall.nx-list--ordered-circle) ::ng-deep li:not([nxlisticon])::before{top:-2px}:host(ol.nx-list--xsmall.nx-list--ordered-circle) ::ng-deep li:not([nxlisticon])::after{top:-2px}:host(.nx-list--negative){color:#fff}:host(.nx-list--negative) ::ng-deep .nx-list__icon{color:#fff}:host ::ng-deep .nx-list__icon{position:absolute;left:0;top:0;font-size:24px;color:#5a5360}:host ::ng-deep li{margin-bottom:16px;padding-left:36px;position:relative}:host(ul) ::ng-deep>li:not([nxlisticon]):before{background-color:#5a5360;border-radius:50%;content:\\\"\\\";display:inline-block;height:8px;width:8px;margin-right:16px;position:absolute;left:8px;top:8px}:host(ol) ::ng-deep>li:not([nxlisticon]):before{counter-increment:list;content:counter(list);position:absolute;font-size:inherit;font-weight:700;display:inline-block;width:24px;text-align:center;left:3px}:host ::ng-deep li>::ng-deep ol,:host ::ng-deep li>::ng-deep ul{margin-bottom:16px;margin-top:16px}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):before{width:24px;font-size:16px;line-height:24px;color:#fff;font-weight:400;left:0;z-index:2}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):after{border-radius:50%;width:24px;height:24px;background-color:#5a5360;left:0;top:0;content:'';position:absolute}:host(ol.nx-list--ordered-circle.nx-list--negative)::ng-deep>li:not([nxlisticon]):after{background-color:#fff}:host(ol.nx-list--ordered-circle.nx-list--negative)::ng-deep>li:not([nxlisticon]):before{color:#5a5360}:host(ul.nx-list--negative) ::ng-deep>li:not([nxlisticon]):before{background-color:#fff}\"]\n            }] }\n];\nNxListComponent.propDecorators = {\n    classNames: [{ type: Input, args: ['nxList',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxListIconComponent {\n}\nNxListIconComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'li[nxListIcon]',\n                template: `\n    <span class=\"nx-list__icon\">\n      <nx-icon [name]='name'></nx-icon>\n    </span>\n    <ng-content></ng-content>`\n            }] }\n];\nNxListIconComponent.propDecorators = {\n    viewRefPrefix: [{ type: ViewChild, args: ['viewRefPrefix', { read: ViewContainerRef },] }],\n    name: [{ type: Input, args: ['nxListIcon',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxListModule {\n}\nNxListModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxListComponent, NxListIconComponent],\n                imports: [NxIconModule],\n                exports: [NxListComponent, NxListIconComponent],\n                bootstrap: [NxIconComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$4 = 0;\n/**\n * \\@docs-private\n */\nclass NxRadioToggleButtonBaseComponent {\n    /**\n     * @param {?} renderer\n     */\n    constructor(renderer) {\n        this.renderer = renderer;\n        /**\n         * \\@docs-private\n         */\n        this.toggleButtonId = 'nx-radio-toggle-button-' + nextId$4++;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    triggerInputClick(event) {\n        event.stopPropagation();\n        this.toggleInput.nativeElement.click();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    setFirstButton() {\n        this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--first');\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    setLastButton() {\n        this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--last');\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    resetClasses() {\n        removeClasses(this.renderer, this.labelContainer, 'nx-radio-toggle__label-container--first nx-radio-toggle__label-container--last');\n    }\n}\nNxRadioToggleButtonBaseComponent.propDecorators = {\n    value: [{ type: Input, args: ['nxValue',] }],\n    labelContainer: [{ type: ViewChild, args: ['toggleButtonLabelContainer',] }],\n    toggleInput: [{ type: ViewChild, args: ['toggleInput',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$5 = 0;\n/** @type {?} */\nconst MAPPING$1 = {\n    'negative': 'nx-radio-toggle--negative',\n    'small': 'nx-radio-toggle--small',\n};\nclass NxRadioToggleComponent {\n    /**\n     * @param {?} renderer\n     * @param {?} _changeDetectorRef\n     */\n    constructor(renderer, _changeDetectorRef) {\n        this.renderer = renderer;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._toggleId = (nextId$5++).toString();\n        this._destroyed = new Subject();\n        this._disabled = false;\n        // emits to signal children to run change detection\n        this._disableChange = new Subject();\n        /**\n         * \\@docs-private\n         */\n        this.toggleButtons = new QueryList();\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onChangeCallback = (/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => { });\n    }\n    /**\n     * Sets the component to the disabled state.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const coerced = coerceBooleanProperty(value);\n        if (this._disabled !== coerced) {\n            this._disabled = coerced;\n            this._disableChange.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Sets the name used for accessibility.\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        if (this._name !== value) {\n            this._name = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.subscribeToToggleButtonsChange();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.toggleButtons.changes, this._destroyed);\n        merge(...this.toggleButtons.map((/**\n         * @param {?} button\n         * @return {?}\n         */\n        (button) => button.onChecked)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => {\n            this._selection = change.value;\n            this.onChangeCallback(this._selection);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._disableChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    subscribeToToggleButtonsChange() {\n        this.toggleButtons.changes\n            .pipe(startWith(this.toggleButtons), filter((/**\n         * @param {?} toggles\n         * @return {?}\n         */\n        toggles => toggles.length > 0)), takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} toggles\n         * @return {?}\n         */\n        (toggles) => {\n            toggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => {\n                toggle.resetClasses();\n                if (toggle.value === this.selection) {\n                    // We need to defer the selection for the edge case that the button with the value of this.selection\n                    // didn't exist yet but was added afterwards to prevent changed after checked errors\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    () => toggle.select()));\n                }\n            }));\n            toggles.first.setFirstButton();\n            toggles.last.setLastButton();\n        }));\n    }\n    /**\n     * @param {?} onChangeCallback\n     * @return {?}\n     */\n    registerOnChange(onChangeCallback) {\n        this.onChangeCallback = onChangeCallback;\n    }\n    /**\n     * @param {?} onTouchedCallback\n     * @return {?}\n     */\n    registerOnTouched(onTouchedCallback) {\n        this.onTouchedCallback = onTouchedCallback;\n    }\n    /**\n     * Preselects the respective options.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._selection = value;\n        /** @type {?} */\n        const correspondingButton = this.toggleButtons.find((/**\n         * @param {?} button\n         * @return {?}\n         */\n        (button) => button.value === this._selection));\n        if (correspondingButton) {\n            ((/** @type {?} */ (correspondingButton))).select();\n        }\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return `nx-radio-toggle-${this._toggleId}`;\n    }\n    /**\n     * Sets the modifiers for the component.\n     * @param {?} value\n     * @return {?}\n     */\n    set style(value) {\n        /** @type {?} */\n        const modifierClasses = mapClassNames(value, [], MAPPING$1);\n        modifierClasses.split(' ')\n            .forEach((/**\n         * @param {?} className\n         * @return {?}\n         */\n        className => this.renderer.addClass(this.toggleContainer.nativeElement, className)));\n    }\n    /**\n     * \\@docs-private\n     * @param {?} selection\n     * @return {?}\n     */\n    set selection(selection) {\n        this._selection = selection;\n        this.onChangeCallback(selection);\n    }\n    /**\n     * @return {?}\n     */\n    get selection() {\n        return this._selection;\n    }\n}\nNxRadioToggleComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-radio-toggle',\n                template: \"<div #toggleContainer class=\\\"nx-radio-toggle\\\" role=\\\"radiogroup\\\" [attr.aria-label]=\\\"name\\\">\\n   <ng-content></ng-content>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxRadioToggleComponent)),\n                        multi: true\n                    }\n                ],\n                styles: [\".nx-radio-toggle{display:flex;height:100%}.nx-radio-toggle:focus+.nx-radio-toggle__label-container{background-color:#fff;border-color:#fff;color:#006192}.nx-radio-toggle:hover+.nx-radio-toggle__label-container{background-color:#fff;border-color:#fff;color:#075994}@media (max-width:703px){.nx-radio-toggle{flex-direction:column;text-align:center;width:100%;justify-content:center;align-items:center}}\"]\n            }] }\n];\n/** @nocollapse */\nNxRadioToggleComponent.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\nNxRadioToggleComponent.propDecorators = {\n    disabled: [{ type: Input, args: ['nxDisabled',] }],\n    toggleContainer: [{ type: ViewChild, args: ['toggleContainer',] }],\n    name: [{ type: Input, args: ['nxName',] }],\n    toggleButtons: [{ type: ContentChildren, args: [NxRadioToggleButtonBaseComponent,] }],\n    writeValue: [{ type: Input, args: ['nxSelection',] }],\n    style: [{ type: Input, args: ['nxStyle',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxRadioToggleButtonChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nclass NxRadioToggleButtonComponent extends NxRadioToggleButtonBaseComponent {\n    /**\n     * @param {?} radioToggle\n     * @param {?} renderer\n     * @param {?} _changeDetectorRef\n     * @param {?} _toggleDispatcher\n     */\n    constructor(radioToggle, renderer, _changeDetectorRef, _toggleDispatcher) {\n        super(renderer);\n        this.radioToggle = radioToggle;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._toggleDispatcher = _toggleDispatcher;\n        /**\n         * \\@docs-private\n         */\n        // emits when the button is checked to notify the group\n        this.onChecked = new Subject();\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._selected = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener = this._toggleDispatcher.listen((/**\n         * @param {?} id\n         * @param {?} radioToggleId\n         * @return {?}\n         */\n        (id, radioToggleId) => {\n            if (this.radioToggle && this.radioToggle.id === radioToggleId && this.id !== id) {\n                this._selected = false;\n                // need to let change detector know in case that the select() function was called on another button\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this.radioToggle._disableChange.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioToggle && this.radioToggle.disabled);\n    }\n    /**\n     * Sets the checked state and notify siblings and the parent group about the change\n     * @param {?} value\n     * @return {?}\n     */\n    // Only use this if you want the onChecked event to be fired, this will inform the parent about the change!\n    // To select a button without firing the event use the select() function\n    set selected(value) {\n        if (this._selected !== value) {\n            this._selected = value;\n            if (this._selected) {\n                this._notifySiblings();\n                this._emitCheckedEvent();\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get selected() {\n        return this._selected;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeUniqueSelectionListener();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get toggleId() {\n        return this.radioToggle.id;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this.toggleButtonId;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _notifySiblings() {\n        /** @type {?} */\n        const toggleId = this.radioToggle ? this.radioToggle.id : this.id;\n        this._toggleDispatcher.notify(this.id, toggleId);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitCheckedEvent() {\n        this.onChecked.next(new NxRadioToggleButtonChange(this, this.value));\n    }\n    // Does NOT emit the onChecked event. Useful when you need to set initial\n    // state. Used by the parent to set checked states on initialization and during\n    // writeValue() changes.\n    /**\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._notifySiblings();\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    onKeyupSpace() {\n        this._selected = false;\n        this._notifySiblings();\n    }\n}\nNxRadioToggleButtonComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-radio-toggle-button',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: \"<input [attr.id]=\\\"toggleButtonId\\\"\\n    #toggleInput\\n    [attr.name]=\\\"toggleId\\\"\\n    [checked]=\\\"selected\\\"\\n    class=\\\"nx-radio-toggle__input\\\"\\n    type=\\\"radio\\\"\\n    (click)=\\\"selected = true\\\"\\n    [disabled]=\\\"disabled\\\">\\n<div (click)=\\\"triggerInputClick($event)\\\" #toggleButtonLabelContainer class=\\\"nx-radio-toggle__label-container\\\">\\n  <label [attr.for]=\\\"toggleButtonId\\\" class=\\\"nx-radio-toggle__label\\\">\\n      <nx-icon class=\\\"nx-toggle-button__mobile-check\\\" name=\\\"check\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n      <ng-content></ng-content>\\n  </label>\\n</div>\\n\\n\\n\",\n                providers: [\n                    {\n                        provide: NxRadioToggleButtonBaseComponent, useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxRadioToggleButtonComponent))\n                    }\n                ],\n                styles: [\":host{display:flex;position:relative;flex-direction:row}.nx-radio-toggle__input{opacity:0;position:absolute}.nx-radio-toggle__input:active+.nx-radio-toggle__label-container{background-color:#003781;border-color:#003781;color:#fff}.nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container{background-color:#b2d7e8;border-color:#b2d7e8;color:#fff;cursor:not-allowed}.nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container .nx-radio-toggle__label{cursor:not-allowed}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:#007ab3;border-color:#007ab3;color:#fff;cursor:default}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-radio-toggle__label{cursor:default}@media screen and (-ms-high-contrast:active){.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:#ff0;cursor:default;border-color:inherit}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-radio-toggle__label{background-color:#000}}.nx-toggle-button__mobile-check{display:none;font-size:24px;margin-right:8px;height:24px}:host-context(.nx-radio-toggle--small) .nx-radio-toggle__label-container{font-size:14px;min-height:16px;padding:6px;text-transform:none;line-height:16px}.nx-radio-toggle{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-radius:4px 0 0 4px;border-width:2px 0 2px 2px}@media (max-width:703px){:host{width:100%}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-toggle-button__mobile-check{display:inline-block}:host-context(.nx-radio-toggle--small) .nx-radio-toggle__label-container{line-height:24px;padding:11px 31px}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-width:2px 2px 1px;border-radius:4px 4px 0 0}}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-radius:0 4px 4px 0;border-width:2px}@media (max-width:703px){.nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-width:1px 2px 2px;border-radius:0 0 4px 4px}}.nx-radio-toggle__label-container{padding:10px 30px;border:2px solid #007ab3;border-radius:0;border-width:2px 0 2px 2px;color:#007ab3;cursor:pointer;flex-grow:1;font-size:16px;font-weight:600;line-height:24px;text-align:center;text-transform:uppercase;transition:background-color .2s,border-color .2s,color .2s;display:flex;align-items:center;height:100%;min-height:24px}@media (max-width:703px){.nx-radio-toggle__label-container{border-width:1px 2px;justify-content:center;padding:11px 31px}}.nx-radio-toggle__label-container:hover{background-color:#075994;border-color:#075994;color:#fff}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:focus+.nx-radio-toggle__label-container{background-color:#d9d9d9;border-color:#d9d9d9;color:#007ab3}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:active+.nx-radio-toggle__label-container{background-color:#c2c2c2;border-color:#c2c2c2;color:#007ab3}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container{background-color:#fff;border-color:#fff;color:#d9d9d9}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:#fff;border-color:#fff;color:#007ab3}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__label-container{border-color:#fff;color:#fff}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__label-container:hover{background-color:#d9d9d9;border-color:#d9d9d9;color:#007ab3}.nx-radio-toggle__label{display:flex;align-items:center;cursor:pointer}:host-context([data-whatinput=keyboard]) .nx-radio-toggle__input:focus+.nx-radio-toggle__label-container{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;z-index:1}\"]\n            }] }\n];\n/** @nocollapse */\nNxRadioToggleButtonComponent.ctorParameters = () => [\n    { type: NxRadioToggleComponent, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NxRadioToggleComponent)),] }] },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nNxRadioToggleButtonComponent.propDecorators = {\n    disabled: [{ type: Input, args: ['nxDisabled',] }],\n    selected: [{ type: Input, args: ['nxSelected',] }],\n    onKeyupSpace: [{ type: HostListener, args: ['keyup.space',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxRadioToggleModule {\n}\nNxRadioToggleModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxRadioToggleComponent, NxRadioToggleButtonComponent],\n                exports: [NxRadioToggleComponent, NxRadioToggleButtonComponent],\n                imports: [CommonModule, FormsModule, NxIconModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$6 = 0;\n/**\n * @deprecated Use `nx-circle-toggle` instead\n * \\@deletion-target 8.0.0\n */\nclass NxCheckboxCircleComponent {\n    constructor() {\n        this._id = (nextId$6++).toString();\n        /**\n         * An event emitted when the checked value has changed.\n         */\n        this.checkedChange = new EventEmitter(false);\n        this.onChangeCallback = (/**\n         * @param {?} checked\n         * @return {?}\n         */\n        (checked) => { });\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n        console.warn('`nx-checkbox-circle` is deprecated. Use `nx-circle-toggle` instead.');\n    }\n    /**\n     * Id of the checkbox.\n     * If not set, the checkbox gets an incremented value by default.\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        if (value !== this._id) {\n            this._id = value;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return `nx-checkbox-circle-${this._id}`;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = value;\n        this.checkedChange.emit(value);\n    }\n    /**\n     * @param {?} onChange\n     * @return {?}\n     */\n    registerOnChange(onChange) {\n        this.onChangeCallback = onChange;\n    }\n    /**\n     * @param {?} onTouched\n     * @return {?}\n     */\n    registerOnTouched(onTouched) {\n        this.onTouchedCallback = onTouched;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    toggle() {\n        this.writeValue(!this.checked);\n        this.onChangeCallback(this.checked);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get svgButton() {\n        return !!this.svg && !!this.svgChecked;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get svgUrl() {\n        return this.checked ? this.svgChecked : this.svg;\n    }\n}\nNxCheckboxCircleComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-checkbox-circle',\n                template: \"<input [id]=\\\"id\\\" class=\\\"nx-checkbox-circle__input\\\" [name]=\\\"name\\\" [attr.aria-labelledby]=\\\"id + '-label'\\\"\\n    type=\\\"checkbox\\\" [checked]=\\\"checked\\\" (click)=\\\"toggle()\\\">\\n<label class=\\\"nx-checkbox-circle__label\\\" [for]=\\\"id\\\"\\n  [id]=\\\"id + '-label'\\\">\\n  <span class=\\\"nx-checkbox-circle__check-icon\\\">\\n    <nx-icon name=\\\"check-circle\\\"></nx-icon>\\n  </span>\\n  <span class=\\\"nx-checkbox-circle__icon\\\">\\n    <nx-icon *ngIf=\\\"iconName\\\" [name]=\\\"iconName\\\"></nx-icon>\\n    <img *ngIf=\\\"svgButton\\\" class=\\\"nx-checkbox-circle__icon-image\\\" [src]=\\\"svgUrl\\\"\\n    />\\n  </span>\\n  <span class=\\\"nx-checkbox-circle__label-text\\\">\\n    {{label}}\\n  </span>\\n</label>\\n\",\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxCheckboxCircleComponent)),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.is-checked]': 'checked'\n                },\n                styles: [\":host{display:inline-block;margin-right:65px;vertical-align:top;position:relative}.nx-checkbox-circle__icon-image{height:100%}.nx-checkbox-circle__label-text{display:inline-block;max-width:16rem}.nx-checkbox-circle__input{opacity:0;position:absolute}.nx-checkbox-circle__check-icon{background-color:#f5f5f5;border-radius:50%;color:#3da556;display:block;font-size:31px;text-align:center;line-height:1;width:32px;height:32px;margin-left:1.6rem;padding:0;position:absolute;top:0;left:50%;opacity:0;transition:opacity .3s;z-index:1}@media (max-width:703px){:host{margin-right:48px}.nx-checkbox-circle__check-icon{width:28px;height:28px;font-size:27px;left:45%}}:host(.is-checked) .nx-checkbox-circle__check-icon{opacity:1;transition:opacity .3s}.nx-checkbox-circle__icon{border:2px solid #007ab3;border-radius:50%;content:\\\"\\\";display:block;height:8rem;width:8rem;left:50%;margin-left:-4rem;position:absolute;top:5px;transition:background-color .2s,border-color .2s,box-shadow .2s}.nx-checkbox-circle__icon nx-icon{border-radius:50%;color:#007ab3;display:block;font-size:4.8rem;position:absolute;text-align:center;margin:1.4rem;z-index:1}.nx-checkbox-circle__icon:hover{border-color:#006192;cursor:pointer}.nx-checkbox-circle__icon:hover nx-icon{color:#006192}:host(.is-checked) .nx-checkbox-circle__icon{background-color:#007ab3}@media screen and (-ms-high-contrast:active){:host(.is-checked) .nx-checkbox-circle__icon{color:#000}}:host(.is-checked) .nx-checkbox-circle__icon:hover{background-color:#006192;border-color:#006192}:host(.is-checked) .nx-checkbox-circle__icon nx-icon{color:#fff}.nx-checkbox-circle__label{display:inline-block;font-size:16px;font-weight:600;line-height:20px;margin-right:8px;padding:9.5rem 0 0;position:relative;text-align:center}@media (max-width:703px){.nx-checkbox-circle__icon{width:6.4rem;height:6.4rem;margin-left:-3.2rem}.nx-checkbox-circle__icon nx-icon{margin:1.1rem;font-size:4rem}.nx-checkbox-circle__label{margin-right:6px;padding:8rem 0 0;font-size:14px;line-height:16px}}.nx-checkbox-circle__text{display:block;position:absolute;text-align:center;left:0;top:5px;font-size:22px;line-height:8rem;width:8rem;height:8rem;color:#007ab3;border-radius:50%;border:2px solid #007ab3;z-index:0;cursor:pointer}.nx-checkbox-circle__text:hover{color:#006192;border-color:#006192}@media (max-width:703px){.nx-checkbox-circle__text{font-size:18px;line-height:6.4rem;width:6.4rem;height:6.4rem}}:host-context([data-whatinput=keyboard]) .nx-checkbox-circle__input:focus+.nx-checkbox-circle__label ::ng-deep .nx-checkbox-circle__icon{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxCheckboxCircleComponent.ctorParameters = () => [];\nNxCheckboxCircleComponent.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    checkedChange: [{ type: Output }],\n    checked: [{ type: Input }],\n    iconName: [{ type: Input, args: ['nxIcon',] }],\n    svg: [{ type: Input, args: ['nxSvg',] }],\n    svgChecked: [{ type: Input, args: ['nxSvgChecked',] }],\n    label: [{ type: Input, args: ['nxLabel',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxCheckboxCircleModule {\n}\nNxCheckboxCircleModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxCheckboxCircleComponent],\n                exports: [NxCheckboxCircleComponent],\n                imports: [\n                    NxIconModule,\n                    CommonModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_SIZE$1 = 'small';\nclass NxSpinnerComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._size = DEFAULT_SIZE$1;\n        this._negative = false;\n    }\n    /**\n     * Sets the size of the spinner. Default is 'small'.\n     * @param {?} value\n     * @return {?}\n     */\n    set size(value) {\n        if (value !== this._size) {\n            this._size = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * Whether the spinner should use a negative styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        if (value !== this._negative) {\n            this._negative = coerceBooleanProperty(value);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n}\nNxSpinnerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-spinner',\n                template: \"<div class=\\\"nx-spinner__spin-block\\\">\\n  <div class=\\\"nx-spinner__edge-left\\\"></div>\\n  <div class=\\\"nx-spinner__edge-right\\\"></div>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-spinner--small]': 'size === \"small\"',\n                    '[class.nx-spinner--medium]': 'size === \"medium\"',\n                    '[class.nx-spinner--large]': 'size === \"large\"',\n                    '[class.nx-spinner--negative]': 'negative',\n                    '[attr.role]': '\"status\"',\n                    '[attr.aria-busy]': '\"true\"',\n                    '[attr.aria-live]': '\"assertive\"',\n                },\n                styles: [\"@-webkit-keyframes spin{0%{-webkit-transform:rotate(45deg);transform:rotate(45deg)}100%{-webkit-transform:rotate(405deg);transform:rotate(405deg)}}@keyframes spin{0%{-webkit-transform:rotate(45deg);transform:rotate(45deg)}100%{-webkit-transform:rotate(405deg);transform:rotate(405deg)}}:host{position:relative;display:block}:host(.nx-spinner--small){width:16px;height:16px}:host(.nx-spinner--medium){width:24px;height:24px}:host(.nx-spinner--large){width:40px;height:40px}.nx-spinner__spin-block{width:100%;height:100%;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-style:solid;border-radius:50%;border-color:#007ab3 #ececec #ececec;-webkit-animation-name:spin;animation-name:spin;-webkit-animation-duration:.8s;animation-duration:.8s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:linear;animation-timing-function:linear}:host(.nx-spinner--small) .nx-spinner__spin-block{border-width:calc(1.6px)}:host(.nx-spinner--medium) .nx-spinner__spin-block{border-width:calc(2.4px)}:host(.nx-spinner--large) .nx-spinner__spin-block{border-width:calc(4px)}.nx-spinner__edge-left,.nx-spinner__edge-right{width:12%;height:12%;border-radius:50%;background-color:#007ab3;position:absolute;top:4%}.nx-spinner__edge-left{left:4%}.nx-spinner__edge-right{right:4%}:host(.nx-spinner--negative) .nx-spinner__spin-block{border-color:#fff rgba(250,247,239,.35) rgba(250,247,239,.35)}:host(.nx-spinner--negative) .nx-spinner__edge-left,:host(.nx-spinner--negative) .nx-spinner__edge-right{background-color:#fff}\"]\n            }] }\n];\n/** @nocollapse */\nNxSpinnerComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxSpinnerComponent.propDecorators = {\n    size: [{ type: Input, args: ['nxSize',] }],\n    negative: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxSpinnerModule {\n}\nNxSpinnerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NxSpinnerComponent\n                ],\n                imports: [\n                    CommonModule\n                ],\n                exports: [\n                    NxSpinnerComponent\n                ],\n                bootstrap: [],\n                providers: []\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxModalService {\n    constructor() {\n        this.subject = new Subject();\n        this.close$ = this.subject.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.subject.next();\n    }\n}\nNxModalService.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst fadeIn = animation([\n    style({ opacity: 0 }),\n    animate('300ms', style({ opacity: 1 }))\n]);\n/** @type {?} */\nconst fadeOut = animation(animate('300ms', style({ opacity: 0 })));\n/** @type {?} */\nconst scaleUp = animation([\n    style({ transform: 'scale(1)', opacity: 1 }),\n    animate('250ms', style({ transform: 'scale(1.3)', opacity: 0 }))\n]);\n/** @type {?} */\nconst scaleDown = animation([\n    style({ transform: 'scale(1.3)', opacity: 0 }),\n    animate('250ms', style({ transform: 'scale(1)', opacity: 1 }))\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Container for the action buttons in a modal. Has a fixed position at the bottom of the modal on scroll.\n */\nclass NxModalActionsDirective {\n}\nNxModalActionsDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxModalActions]',\n                host: {\n                    '[class.nx-modal__actions]': 'true'\n                }\n            },] }\n];\n/**\n * Scrollable container for the content of a modal.\n */\nclass NxModalContentDirective {\n}\nNxModalContentDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxModalContent]',\n                host: {\n                    '[class.nx-modal__content]': 'true'\n                }\n            },] }\n];\nclass NxModalComponent {\n    /**\n     * @param {?} modalService\n     * @param {?} eventManager\n     * @param {?} _changeDetectorRef\n     */\n    constructor(modalService, eventManager, _changeDetectorRef) {\n        this.modalService = modalService;\n        this.eventManager = eventManager;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._closeButtonLabel = 'Close dialog';\n        /**\n         * Whether the modal view should close when the user hits the escape key.\n         * Default is true.\n         */\n        this.hideOnEsc = true;\n        /**\n         * Whether the modal view should close when the user clicks on the backdrop.\n         * Default is true.\n         */\n        this.hideOnClickOutside = true;\n        /**\n         * Whether the modal view should have a close icon in the upper right corner.\n         * Default is true.\n         */\n        this.showCloseIcon = true;\n        /**\n         * An event emitted when the user clicks on the backdrop or uses the built-in close button.\n         * This event can be applied in conjunction with the custom open state handling\n         * of a modal to close it when requested by the user.\n         */\n        this.closeEvent = new EventEmitter();\n        this.closeSubscription = Subscription.EMPTY;\n    }\n    /**\n     * Sets the 'aria-label' of the modal close button needed for accessibility.\n     *\n     * Default value is 'Close dialog'.\n     * @param {?} value\n     * @return {?}\n     */\n    set closeButtonLabel(value) {\n        if (value !== this._closeButtonLabel) {\n            this._closeButtonLabel = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get closeButtonLabel() {\n        return this._closeButtonLabel;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.closeSubscription = this.modalService.close$.subscribe((/**\n         * @return {?}\n         */\n        () => this.closeEvent.emit()));\n        this.eventManager.addGlobalEventListener('window', 'keyup.esc', (/**\n         * @return {?}\n         */\n        () => {\n            if (this.hideOnEsc) {\n                this.modalService.close();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.closeSubscription.unsubscribe();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    clickOutsideModal() {\n        if (this.hideOnClickOutside) {\n            this.modalService.close();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    closeButtonClick() {\n        this.modalService.close();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} evt\n     * @return {?}\n     */\n    cancelClick(evt) {\n        evt.stopPropagation();\n    }\n}\nNxModalComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-modal',\n                template: \"<div class=\\\"nx-modal\\\" role=\\\"dialog\\\" cdkTrapFocus cdkTrapFocusAutoCapture cdkFocusInitial>\\n  <div class=\\\"nx-modal__backdrop\\\" (click)=\\\"clickOutsideModal()\\\">\\n    <div class=\\\"nx-modal__position\\\">\\n      <div class=\\\"nx-modal__container\\\" (click)=\\\"cancelClick($event)\\\" [@scaleUpDown]>\\n\\n        <button\\n          (click)=\\\"closeButtonClick()\\\"\\n          *ngIf=\\\"showCloseIcon\\\"\\n          [attr.aria-label]=\\\"closeButtonLabel\\\"\\n          class=\\\"nx-modal__close\\\"\\n          type=\\\"button\\\">\\n          <nx-icon name=\\\"close\\\"></nx-icon>\\n        </button>\\n\\n        <div class=\\\"nx-modal__content-wrapper\\\">\\n          <ng-container *ngIf=\\\"body else projectContent\\\">\\n            <ng-container *ngTemplateOutlet=\\\"body\\\"></ng-container>\\n          </ng-container>\\n\\n          <ng-template #projectContent>\\n            <ng-content></ng-content>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    trigger('fadeInOut', [\n                        transition(':enter', [\n                            useAnimation(fadeIn),\n                            query('@scaleUpDown', [\n                                animateChild()\n                            ])\n                        ]),\n                        transition(':leave', [\n                            query('@scaleUpDown', [\n                                animateChild()\n                            ]),\n                            useAnimation(fadeOut)\n                        ])\n                    ]),\n                    trigger('scaleUpDown', [\n                        transition(':enter', useAnimation(scaleDown)),\n                        transition(':leave', useAnimation(scaleUp))\n                    ])\n                ],\n                host: {\n                    '[@fadeInOut]': '',\n                    '[class.nx-modal--fixed-width]': 'size === \"fixed\"'\n                },\n                styles: [\".nx-modal{display:flex;position:fixed;width:100vw;height:100vh;top:0;bottom:0;left:0;right:0;z-index:100;align-items:center;justify-content:center;transition:opacity .3s}.nx-modal__backdrop{background-color:rgba(0,0,0,.35);height:100%;left:0;position:absolute;top:0;width:100%;z-index:-1}.nx-modal__position{position:absolute;display:inline-block;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);z-index:20}.nx-modal__container{border-radius:4px;background:#fff;box-shadow:0 8px 24px rgba(65,65,65,.35)}.nx-modal__content-wrapper{padding:40px 40px 48px;max-height:calc(100vh - 48px);overflow-y:auto}@media (max-width:703px){.nx-modal__content-wrapper{max-height:70vh;padding:40px 32px 48px}}.nx-modal__close{background-color:transparent;border:none;color:#414141;cursor:pointer;position:absolute;top:16px;right:16px;height:24px;outline:0;padding:0}.nx-modal__close nx-icon{font-size:24px}.nx-modal__close::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]) .nx-modal__close:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}@media (max-width:703px){.nx-modal__position{width:100%}.nx-modal__container{position:relative;max-width:calc(100vw - 16px);max-height:70vh;margin:0 auto}}:host(.nx-modal--fixed-width) .nx-modal__container{width:736px}::ng-deep .nx-modal__actions{height:72px;border-top:1px solid #d9d9d9;display:flex;align-items:center;justify-content:flex-end;padding:0 40px;position:absolute;bottom:0;background:#fff;left:0;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}::ng-deep .nx-modal__content{overflow-y:auto;max-height:calc(100vh - 72px - 48px)}@media (max-width:703px){::ng-deep .nx-modal__content{max-height:calc(70vh - 72px - 48px)}}\"]\n            }] }\n];\n/** @nocollapse */\nNxModalComponent.ctorParameters = () => [\n    { type: NxModalService },\n    { type: EventManager },\n    { type: ChangeDetectorRef }\n];\nNxModalComponent.propDecorators = {\n    closeButtonLabel: [{ type: Input }],\n    body: [{ type: Input, args: ['nxBody',] }],\n    hideOnEsc: [{ type: Input, args: ['nxHideOnEsc',] }],\n    hideOnClickOutside: [{ type: Input, args: ['nxHideOnClickOutside',] }],\n    showCloseIcon: [{ type: Input, args: ['nxShowCloseIcon',] }],\n    size: [{ type: Input, args: ['nxSize',] }],\n    closeEvent: [{ type: Output, args: ['nxClose',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxOpenModalOnClickDirective {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainer\n     * @param {?} modalService\n     */\n    constructor(templateRef, viewContainer, modalService) {\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n        this.modalService = modalService;\n        /**\n         * \\@docs-private\n         */\n        this.clickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.viewContainer.clear();\n            // instantiate the template onto which this directive is applied\n            /** @type {?} */\n            const viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n            // we need to mark the viewRef explicitly if the modal is used inside another\n            // component that is using onPush change detection\n            viewRef.markForCheck();\n            event.preventDefault();\n            event.stopPropagation();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.subscription = this.modalService.close$.subscribe((/**\n         * @return {?}\n         */\n        () => this.viewContainer.clear()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.elements.forEach((/**\n         * @param {?} el\n         * @return {?}\n         */\n        el => {\n            if (el.removeEventListener) {\n                el.removeEventListener('click', this.clickHandler);\n            }\n        }));\n        this.subscription.unsubscribe();\n    }\n    /**\n     * One or multiple template reference variables pointing to elements\n     * which should trigger opening the modal on click.\n     *\n     * Value: A single template reference variable or an array of template reference variables.\n     * @param {?} elements\n     * @return {?}\n     */\n    set nxOpenModalOnClick(elements) {\n        // also support the case where only one element is passed, check for the length property to be sure elements is an array\n        if (elements.length) {\n            this.elements = elements;\n        }\n        else {\n            this.elements = [elements];\n        }\n        // add a click event listener to any element passed as property to this directive\n        this.elements.forEach((/**\n         * @param {?} el\n         * @return {?}\n         */\n        el => {\n            if (el.addEventListener) {\n                el.addEventListener('click', this.clickHandler);\n                // workaround until refactoring: if the reference is a component\n                // reference the component has to implement a getter to its own elementRef\n            }\n            else if (el.elementRef) {\n                el.elementRef.nativeElement.addEventListener('click', this.clickHandler);\n            }\n            else {\n                console.warn(`nxOpenModalOnClick: Given Element doesn't appear to be an ElementRef.`, el);\n            }\n        }));\n    }\n}\nNxOpenModalOnClickDirective.decorators = [\n    { type: Directive, args: [{ selector: '[nxOpenModalOnClick]' },] }\n];\n/** @nocollapse */\nNxOpenModalOnClickDirective.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: NxModalService }\n];\nNxOpenModalOnClickDirective.propDecorators = {\n    nxOpenModalOnClick: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxModalModule {\n    // define the modal service on root level as an application wide singleton,\n    // assuming that we only display one modal at a time, which seems quite reasonable\n    // this is static and named \"forRoot\" by convention\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: NxModalModule,\n            providers: [NxModalService]\n        };\n    }\n}\nNxModalModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, A11yModule, NxIconModule],\n                declarations: [\n                    NxModalComponent,\n                    NxOpenModalOnClickDirective,\n                    NxModalActionsDirective,\n                    NxModalContentDirective\n                ],\n                exports: [\n                    NxModalComponent,\n                    NxOpenModalOnClickDirective,\n                    NxModalActionsDirective,\n                    NxModalContentDirective\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$7 = 0;\nclass NxSwitcherComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._id = `nx-switcher-${nextId$7++}`;\n        this._labelPosition = 'right';\n        this._name = null;\n        this._checked = false;\n        this._big = false;\n        this._labelSize = 'large';\n        this._negative = false;\n        this._disabled = false;\n        /**\n         * An event is dispatched each time the switcher value is changed\n         */\n        this.checkedChange = new EventEmitter();\n        this.onChangeCallback = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the id of the switcher\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Specifies the placement of the label\n     * @param {?} value\n     * @return {?}\n     */\n    set labelPosition(value) {\n        this._labelPosition = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    /**\n     * Sets the label text of the switcher\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Whether the switcher is checked (on) or unchecked (off)\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get checked() {\n        return this._checked;\n    }\n    /**\n     * Whether the big switcher is used\n     * @param {?} value\n     * @return {?}\n     */\n    set big(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        this._big = newValue;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get big() {\n        return this._big;\n    }\n    /**\n     * Sets the size of the label\n     * @param {?} value\n     * @return {?}\n     */\n    set labelSize(value) {\n        this._labelSize = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get labelSize() {\n        return this._labelSize;\n    }\n    /**\n     * Whether the style for a dark background is used\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        this._negative = newValue;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Whether the switcher is in the disabled state\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        this._disabled = newValue;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Allows to toggle between the states\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onChangeCallback(this.checked);\n            this.checkedChange.emit(this.checked);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (value === null) {\n            value = false;\n        }\n        if (value !== this.checked) {\n            this.checked = value;\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    touch() {\n        this.onTouchedCallback();\n    }\n}\nNxSwitcherComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-switcher',\n                template: \"<input type=\\\"checkbox\\\" [id]=\\\"id\\\" [attr.name]=\\\"name\\\" [disabled]=\\\"disabled\\\" [checked]=\\\"checked\\\" (click)=\\\"toggle()\\\" (blur)=\\\"touch()\\\"\\n  role=\\\"switch\\\"\\n  [attr.aria-checked]=\\\"checked\\\"\\n  class=\\\"nx-switcher__input\\\">\\n<label [attr.for]=\\\"id\\\" class=\\\"nx-switcher__label\\\">\\n    <div class=\\\"nx-switcher__toggle\\\">\\n      <div class=\\\"nx-switcher__dot\\\">\\n        <nx-icon *ngIf=\\\"big\\\" name=\\\"check\\\"></nx-icon>\\n      </div>\\n    </div>\\n  <ng-content></ng-content>\\n</label>\\n\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxSwitcherComponent)),\n                        multi: true\n                    }\n                ],\n                host: {\n                    /* the host id should be set to null, otherwise nx-switcher and its <input> get the same id\n                        and on label click the input click is not triggered (double id problem) */\n                    '[attr.id]': 'null',\n                    '[class.is-negative]': 'negative',\n                    '[class.is-checked]': 'checked',\n                    '[class.is-big]': 'big',\n                    '[class.nx-switcher--small-label]': 'labelSize === \"small\"',\n                    '[class.is-disabled]': 'disabled',\n                    '[class.is-swapped]': 'labelPosition === \"left\"'\n                },\n                styles: [\":host{position:relative;display:flex}:host(.is-swapped) .nx-switcher__label{flex-direction:row-reverse}:host(.is-swapped) .nx-switcher__label .nx-switcher__toggle{margin-left:12px}.nx-switcher__input{opacity:0;position:absolute}.nx-switcher__label{font-size:20px;font-size:var(--body-01-font-size,20px);line-height:28px;line-height:var(--body-01-line-height,28px);font-weight:400;font-weight:var(--body-01-font-weight,400);letter-spacing:.2px;letter-spacing:var(--body-01-letter-spacing,.2px);white-space:nowrap;cursor:pointer;display:flex;position:relative;align-items:center}.nx-switcher__toggle{position:relative;display:inline-block;width:48px;height:24px;background-color:#767676;border-radius:16px;transition:background-color .2s}@media screen and (-ms-high-contrast:active){.nx-switcher__label{color:#ff0}.nx-switcher__toggle{background-color:#c2c2c2;color:#ff0}}:host(:not(.is-swapped)) .nx-switcher__toggle{margin-right:12px}.nx-switcher__dot{position:absolute;height:20px;width:20px;left:2px;bottom:2px;background-color:#fff;border-radius:16px;-webkit-transform:translate(0);transform:translate(0);transition:transform .2s;transition:transform .2s,-webkit-transform .2s}:host(.is-checked) .nx-switcher__dot{-webkit-transform:translate(24px);transform:translate(24px)}:host(.is-checked) .nx-switcher__toggle{background-color:#007ab3;background-color:var(--interaction-primary,#007ab3)}@media screen and (-ms-high-contrast:active){:host(.is-checked) .nx-switcher__toggle{background-color:#ff0;color:#ff0}.nx-switcher__input:focus+.nx-switcher__label .nx-switcher__toggle{color:#fff}}:host(.is-checked.is-negative) .nx-switcher__toggle{background-color:rgba(255,255,255,.4)}:host(.is-big) .nx-switcher__toggle{width:56px;height:32px}:host(.is-big) .nx-switcher__dot{height:28px;width:28px}:host(.is-big) nx-icon{position:absolute;top:2px;left:2px;font-size:24px;opacity:0;color:#007ab3;color:var(--interaction-primary,#007ab3)}:host(.is-big).is-checked nx-icon{opacity:1;transition:opacity .2s}:host(.nx-switcher--small-label) .nx-switcher__label{font-size:16px;font-size:var(--body-03-font-size,16px);line-height:24px;line-height:var(--body-03-line-height,24px);font-weight:400;font-weight:var(--body-03-font-weight,400);letter-spacing:0;letter-spacing:var(--body-03-letter-spacing,0)}:host(.is-negative) .nx-switcher__label{color:#fff}:host(.is-negative) .nx-switcher__dot{background-color:#fff}:host(.is-negative) .nx-switcher__toggle{background-color:rgba(255,255,255,.4)}:host-context([data-whatinput=keyboard]) .nx-switcher__input:focus+.nx-switcher__label .nx-switcher__toggle{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.is-disabled) .nx-switcher__toggle{background-color:#c2c2c2;background-color:var(--disabled-01,#c2c2c2)}:host(.is-disabled) .nx-switcher__dot{background-color:#fff;opacity:.4}:host(.is-disabled) .nx-switcher__label{cursor:not-allowed;color:#c2c2c2;color:var(--disabled-01,#c2c2c2)}:host(.is-disabled) nx-icon{color:#c2c2c2;color:var(--disabled-01,#c2c2c2)}\"]\n            }] }\n];\n/** @nocollapse */\nNxSwitcherComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxSwitcherComponent.propDecorators = {\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    checked: [{ type: Input }],\n    big: [{ type: Input, args: ['nxBig',] }],\n    labelSize: [{ type: Input }],\n    negative: [{ type: Input, args: ['nxNegative',] }],\n    disabled: [{ type: Input }],\n    checkedChange: [{ type: Output, args: ['checkedChange',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxSwitcherModule {\n}\nNxSwitcherModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxSwitcherComponent],\n                exports: [NxSwitcherComponent],\n                imports: [CommonModule, NxIconModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Popover content that will be rendered lazily\n * after the popover is opened for the first time.\n */\nclass NxPopoverContentDirective {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nNxPopoverContentDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[nxPopoverContent]'\n            },] }\n];\n/** @nocollapse */\nNxPopoverContentDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxPopoverComponent {\n    constructor() {\n        /**\n         * Event emitted when the popover is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * \\@docs-private\n         */\n        this.closeButtonClick = new Subject();\n        /**\n         * \\@docs-private\n         */\n        this.showCloseButton = false;\n        /**\n         * \\@docs-private\n         */\n        this.arrowStyle = {};\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.closed.complete();\n    }\n    // emit to notify the popover trigger directive that the close button was clicked\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    emitButtonClick() {\n        this.closeButtonClick.next();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    emitClosedEvent() {\n        this.closed.emit();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get classList() {\n        if (this.direction) {\n            return [`nx-popover--${this.direction}`];\n        }\n    }\n}\nNxPopoverComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-popover',\n                template: \"<ng-template>\\n  <div [ngClass]=\\\"classList\\\" role=\\\"tooltip\\\" aria-hidden=\\\"false\\\">\\n    <div class=\\\"nx-popover__content\\\">\\n        <div class=\\\"nx-popover__arrow\\\" [ngStyle]=\\\"arrowStyle\\\">\\n          </div>\\n      <span aria-hidden=\\\"true\\\" class=\\\"nx-popover__close-icon\\\" (click)=\\\"emitButtonClick()\\\"\\n            *ngIf=\\\"showCloseButton\\\">\\n        <nx-icon name=\\\"close\\\"></nx-icon>\\n      </span>\\n      <span [id]=\\\"id\\\">\\n        <ng-content></ng-content>\\n        <ng-container [ngTemplateOutlet]=\\\"_lazyContent?._template\\\"></ng-container>\\n      </span>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'nxPopover',\n                styles: [\".nx-popover__content{background-color:#fff;border:1px solid #d9d9d9;border-radius:4px;box-shadow:0 2px 4px rgba(65,65,65,.5);padding:23px;display:inline-block;font-size:16px}.nx-popover__close-icon{position:absolute;top:4px;right:4px;cursor:pointer;font-size:16px;line-height:16px}[data-whatintent=mouse] .nx-popover__content:focus{outline:0}.nx-popover__arrow{width:12px;height:12px;background-color:inherit;position:absolute;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);border-top:1px solid #d9d9d9;border-left:1px solid #d9d9d9}.nx-popover--top .nx-popover__arrow{-webkit-transform:translate(-50%,0) rotate(225deg);transform:translate(-50%,0) rotate(225deg);bottom:-5px;box-shadow:2px 2px 1px 1px #fff,-2px -2px 4px rgba(65,65,65,.5)}.nx-popover--right .nx-popover__arrow{-webkit-transform:translate(0,-50%) rotate(-45deg);transform:translate(0,-50%) rotate(-45deg);left:-5px}.nx-popover--bottom .nx-popover__arrow{-webkit-transform:translate(-50%,0) rotate(45deg);transform:translate(-50%,0) rotate(45deg);top:-5px}.nx-popover--left .nx-popover__arrow{-webkit-transform:translate(0,-50%) rotate(135deg);transform:translate(0,-50%) rotate(135deg);right:-5px}\"]\n            }] }\n];\n/** @nocollapse */\nNxPopoverComponent.ctorParameters = () => [];\nNxPopoverComponent.propDecorators = {\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    _lazyContent: [{ type: ContentChild, args: [NxPopoverContentDirective,] }],\n    closed: [{ type: Output, args: ['nxClosed',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$8 = 0;\n/** @type {?} */\nconst fallbacks = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX: 0,\n        offsetY: 16\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX: 0,\n        offsetY: -16\n    },\n    {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top',\n        offsetX: 0,\n        offsetY: 16\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n        offsetX: 0,\n        offsetY: 16\n    },\n    {\n        originX: 'end',\n        originY: 'center',\n        overlayX: 'start',\n        overlayY: 'center',\n        offsetX: 16,\n        offsetY: 0\n    },\n    {\n        originX: 'start',\n        originY: 'center',\n        overlayX: 'end',\n        overlayY: 'center',\n        offsetX: -16,\n        offsetY: 0\n    },\n    {\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX: 0,\n        offsetY: -16\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX: 0,\n        offsetY: -16\n    }\n];\nclass NxPopoverTriggerDirective$1 {\n    /**\n     * @param {?} overlay\n     * @param {?} elementRef\n     * @param {?} viewContainerRef\n     * @param {?} eventManager\n     */\n    constructor(overlay, elementRef, viewContainerRef, eventManager) {\n        this.overlay = overlay;\n        this.elementRef = elementRef;\n        this.viewContainerRef = viewContainerRef;\n        this.eventManager = eventManager;\n        this._destroyed = new Subject();\n        this._show = false;\n        this._closeable = null;\n        /**\n         * \\@docs-private\n         */\n        this.id = 'nx-popover-' + nextId$8++;\n        /**\n         * An event is emitted if the visibility status of the popover changes.\n         */\n        this.changeShow = new EventEmitter();\n        /**\n         * Sets the desired direction to open the popover. E.g., right, left, bottom, top\n         */\n        this.direction = 'right';\n        /**\n         * Whether the popover will be opened automatically.\n         */\n        this.popoverInitialVisible = false;\n        /**\n         * An event is emitted when the visibility of the popopver changes.\n         */\n        this.visibleChange = new EventEmitter();\n        /**\n         * Whether the popover opens in modal state.\n         */\n        this.modal = false;\n        // If nxPopoverTrigger equals to 'hover' the popover opens on mouseenter and closes on mouseout.\n        // If nxPopoverTrigger equals to 'click' the popover opens on click and closes on a click of the close icon or pressing ESC key.\n        // If nxPopoverTrigger equals to 'manual' the popover opens only when programatically requested.\n        /**\n         * Sets the way to trigger the popover. Options are hover, click, manual\n         */\n        this.trigger = 'click';\n        /**\n         * Sets the scroll strategy. 'close' closes the popover on scroll while 'reposition' scrolls the popover with the origin.\n         */\n        this.scrollStrategy = 'close';\n        this._documentClickObservable = fromEvent(document, 'click');\n    }\n    /**\n     * Whether to show or hide the popover.\n     * @param {?} value\n     * @return {?}\n     */\n    set show(value) {\n        value = coerceBooleanProperty(value);\n        if (this._show !== value) {\n            this._show = value;\n            if (this._show) {\n                this.openPopover();\n            }\n            else {\n                this.closePopover();\n            }\n            this.changeShow.emit(this._show);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get show() {\n        return this._show;\n    }\n    /**\n     * Whether to show a close button. By default a close icon is only shown for trigger type click.\n     * @param {?} value\n     * @return {?}\n     */\n    set closeable(value) {\n        this._closeable = coerceBooleanProperty(value);\n        if (this.popover) {\n            this.popover.showCloseButton = this.isCloseable();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get closeable() {\n        return this._closeable;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onMouseEnter() {\n        if (this.trigger === 'hover') {\n            this.openPopover();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onMouseExit() {\n        if (this.trigger === 'hover') {\n            this.closePopover();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.popover.showCloseButton = this.isCloseable();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.popover.id = this.id;\n        this.eventManager.addGlobalEventListener('window', 'keyup.esc', (/**\n         * @return {?}\n         */\n        () => {\n            this.closePopover();\n        }));\n        this.popover.closeButtonClick.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.closePopover();\n        }));\n        if (this.popoverInitialVisible || this._show) {\n            this.openPopover();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.closePopover();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get isOpen() {\n        return this.overlayRef && this.createOverlay().hasAttached();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    isCloseable() {\n        return (this.trigger === 'click' && this._closeable === null) || this._closeable;\n    }\n    /**\n     * Update the popover with the given position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    handleClick() {\n        if (this.trigger === 'click') {\n            if (this.isOpen) {\n                this.closePopover();\n            }\n            else {\n                this.openPopover();\n            }\n        }\n    }\n    /**\n     * Open the popover instance.\n     * @return {?}\n     */\n    open() {\n        this.show = true;\n    }\n    /**\n     * Close the popover instance.\n     * @return {?}\n     */\n    close() {\n        this.show = false;\n    }\n    /**\n     * Toggle the popover instance.\n     * @return {?}\n     */\n    toggle() {\n        this.show = !this.show;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    openPopover() {\n        if (!this.createOverlay().hasAttached()) {\n            this._embeddedViewRef = this.createOverlay().attach(this.portal);\n            if (!this.modal && this.trigger === 'click') {\n                this.waitForClose();\n            }\n        }\n    }\n    // detaches the overlay\n    // we are listening to the detachments observable which will then emit the nxClosed event\n    // on the popover component\n    /**\n     * @private\n     * @return {?}\n     */\n    closePopover() {\n        if (this.overlayRef) {\n            this.overlayRef.detach();\n            this._embeddedViewRef = null;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    createOverlay() {\n        if (!this.overlayRef) {\n            this.portal = new TemplatePortal(this.popover.templateRef, this.viewContainerRef);\n            /** @type {?} */\n            const overlayState = new OverlayConfig();\n            overlayState.positionStrategy = this.getPosition();\n            this._positionStrategy = overlayState.positionStrategy;\n            if (this.scrollStrategy === 'reposition') {\n                overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n            }\n            else {\n                overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n            }\n            overlayState.scrollStrategy.enable();\n            if (this.modal && this.trigger === 'click') {\n                overlayState.hasBackdrop = true;\n            }\n            this.overlayRef = this.overlay.create(overlayState);\n            this.subscribeToPositions((/** @type {?} */ (overlayState.positionStrategy)));\n            this._subscribeToDetach();\n            if (this.modal) {\n                this._subscribeToBackdropClick();\n            }\n        }\n        return this.overlayRef;\n    }\n    /**\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    subscribeToPositions(position) {\n        position.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            /** @type {?} */\n            const pair = change.connectionPair;\n            this.positionOverlay(pair);\n            this.positionArrow(pair);\n            // These position changes arrive too late,\n            // We have to trigger the change detection manually\n            // as it's detached from any render hierarchy\n            // and only updated by the overlay when attached.\n            if (this._embeddedViewRef && !this._embeddedViewRef.destroyed) {\n                this._embeddedViewRef.detectChanges();\n            }\n        }));\n    }\n    // for modal popovers close the popover on backdrop clicks\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToBackdropClick() {\n        this.overlayRef.backdropClick().pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.closePopover();\n        }));\n    }\n    // Emit the nxClosed event on the popover component when the overlay detaches\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToDetach() {\n        this.overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.popover.emitClosedEvent();\n        }));\n    }\n    // subscribe to document clicks when trigger='click' to close the popover on clicks on the background\n    /**\n     * @private\n     * @return {?}\n     */\n    waitForClose() {\n        return this._documentClickObservable\n            .pipe(map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.target)), filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => !this.elementRef.nativeElement.contains(target))), takeUntil(this.popover.closed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.closePopover();\n        }));\n    }\n    /**\n     * @private\n     * @param {?} pair\n     * @return {?}\n     */\n    positionOverlay(pair) {\n        if (pair.originX === 'end' && pair.overlayX === 'start') {\n            this.popover.direction = 'right';\n        }\n        else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n            this.popover.direction = 'bottom';\n        }\n        else if (pair.originX === 'start' && pair.overlayX === 'end') {\n            this.popover.direction = 'left';\n        }\n        else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n            this.popover.direction = 'top';\n        }\n    }\n    /**\n     * @private\n     * @param {?} pair\n     * @return {?}\n     */\n    positionArrow(pair) {\n        /** @type {?} */\n        const parentElementPositionX = this.elementRef.nativeElement.getBoundingClientRect().left;\n        /** @type {?} */\n        const parentElementWidth = this.elementRef.nativeElement.getBoundingClientRect().width / 2;\n        /** @type {?} */\n        const parentElementLeftOffset = this.overlayRef.overlayElement.parentElement.offsetLeft;\n        /** @type {?} */\n        const overlayElementLeftOffset = this.overlayRef.overlayElement.offsetLeft;\n        // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n        /** @type {?} */\n        const targetPosition = (parentElementPositionX + parentElementWidth) - (parentElementLeftOffset + overlayElementLeftOffset);\n        if (pair.originX === pair.overlayX) {\n            /** @type {?} */\n            const direction = 'left';\n            /** @type {?} */\n            const arrowStyle = {};\n            arrowStyle[direction] = targetPosition + 'px';\n            this.popover.arrowStyle = arrowStyle;\n        }\n        if ((pair.originY === 'bottom' || pair.originY === 'top') && pair.overlayX === 'center') {\n            this.popover.arrowStyle = { left: targetPosition + 'px' };\n        }\n        if ((pair.originX === 'end' || pair.originX === 'start') && pair.overlayY === 'center') {\n            this.popover.arrowStyle = { top: '50%' };\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getPosition() {\n        /** @type {?} */\n        let positions;\n        /** @type {?} */\n        let offsetX = 0;\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.direction === 'top') {\n            positions = [{\n                    overlayX: 'center',\n                    overlayY: 'bottom',\n                    originX: 'center',\n                    originY: 'top'\n                }];\n            offsetX = 0;\n            offsetY = -20;\n        }\n        else if (this.direction === 'right') {\n            positions = [{\n                    overlayX: 'start',\n                    overlayY: 'center',\n                    originX: 'end',\n                    originY: 'center'\n                }];\n            offsetX = 20;\n            offsetY = 0;\n        }\n        else if (this.direction === 'bottom') {\n            positions = [{\n                    overlayX: 'center',\n                    overlayY: 'top',\n                    originX: 'center',\n                    originY: 'bottom'\n                }];\n            offsetX = 0;\n            offsetY = 20;\n        }\n        else if (this.direction === 'left') {\n            positions = [{\n                    overlayX: 'end',\n                    overlayY: 'center',\n                    originX: 'start',\n                    originY: 'center'\n                }];\n            offsetX = -20;\n            offsetY = 0;\n        }\n        return this.overlay.position().flexibleConnectedTo(this.elementRef)\n            .withPositions([...positions, ...fallbacks])\n            .withDefaultOffsetX(offsetX)\n            .withDefaultOffsetY(offsetY);\n    }\n}\nNxPopoverTriggerDirective$1.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxPopoverTriggerFor]',\n                exportAs: 'nxPopoverTrigger',\n                host: {\n                    '(click)': 'handleClick()',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'isOpen',\n                    '[attr.aria-describedby]': 'isOpen ? id : null'\n                }\n            },] }\n];\n/** @nocollapse */\nNxPopoverTriggerDirective$1.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: EventManager }\n];\nNxPopoverTriggerDirective$1.propDecorators = {\n    changeShow: [{ type: Output, args: ['nxPopoverShowChange',] }],\n    show: [{ type: Input, args: ['nxPopoverShow',] }],\n    closeable: [{ type: Input, args: ['nxPopoverCloseable',] }],\n    popover: [{ type: Input, args: ['nxPopoverTriggerFor',] }],\n    direction: [{ type: Input, args: ['nxPopoverDirection',] }],\n    popoverInitialVisible: [{ type: Input, args: ['nxPopoverInitialVisible',] }],\n    visibleChange: [{ type: Input, args: ['nxPopoverVisibleChange',] }],\n    modal: [{ type: Input, args: ['nxPopoverModal',] }],\n    trigger: [{ type: Input, args: ['nxPopoverTrigger',] }],\n    scrollStrategy: [{ type: Input, args: ['nxPopoverScrollStrategy',] }],\n    onMouseEnter: [{ type: HostListener, args: ['mouseenter',] }],\n    onMouseExit: [{ type: HostListener, args: ['mouseleave',] }, { type: HostListener, args: ['touchstart',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxPopoverModule$1 {\n}\nNxPopoverModule$1.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    NxIconModule\n                ],\n                declarations: [\n                    NxPopoverTriggerDirective$1,\n                    NxPopoverComponent,\n                    NxPopoverContentDirective\n                ],\n                exports: [\n                    NxPopoverTriggerDirective$1,\n                    NxPopoverComponent,\n                    NxPopoverContentDirective\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTagComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * An event is dispatched each time when the tag is clicked.\n         */\n        this.clicked = new EventEmitter();\n        /**\n         * An event is dispatched each time when the tag is removed.\n         */\n        this.removed = new EventEmitter();\n    }\n    /**\n     * Whether the tag is removeable.\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get removable() {\n        return this._removable;\n    }\n    /**\n     * Sets the value of the tag.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    // Emit the removed event that the parent can remove the value\n    removeClickHandler(event) {\n        event.stopPropagation();\n        this.removed.emit(this.value);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    removeKeyHandler(event) {\n        if (this.removable && (event.keyCode === DELETE || event.keyCode === BACKSPACE)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.removed.emit(this.value);\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    tagClickHandler() {\n        this.clicked.emit(this.value);\n    }\n}\nNxTagComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tag',\n                template: \"{{ value }}\\n<span role=\\\"link\\\" aria-label=\\\"close\\\" class=\\\"nx-tag__close\\\" *ngIf=\\\"removable\\\"\\n    (click)=\\\"removeClickHandler($event)\\\">\\n    <nx-icon class=\\\"nx-tag__close-icon\\\" name=\\\"close\\\"></nx-icon>\\n</span>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '(click)': 'tagClickHandler()',\n                    '(keydown)': 'removeKeyHandler($event)',\n                    '[attr.tabIndex]': '0'\n                },\n                styles: [\":host{height:auto;max-width:100%;font-size:14px;color:#767676;padding:6px 14px;line-height:16px;letter-spacing:1px;font-weight:600;display:flex;align-items:center;border:2px solid #d9d9d9;border-radius:4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:background-color .2s,box-shadow .2s;cursor:pointer}:host:hover{border-color:#c2c2c2;color:#5b5b5b;background-color:#ececec}:host:focus{outline:transparent solid 2px}:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}.nx-tag__close-icon{outline:0;width:16px;height:16px;display:block;font-size:16px;line-height:14px}.nx-tag__close{margin-left:8px}:host-context(.nx-taglist--keyword){padding:14px 22px}\"]\n            }] }\n];\n/** @nocollapse */\nNxTagComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxTagComponent.propDecorators = {\n    removable: [{ type: Input }],\n    value: [{ type: Input }],\n    clicked: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTaglistComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * An event is dispatched each time when the list of tags changed.\n         */\n        this.tagsChange = new EventEmitter();\n        /**\n         * An event is dispatched each time when a tag is clicked.\n         */\n        this.tagClickEvent = new EventEmitter();\n        this._tags = [];\n        this._allowTagDeletion = true;\n        this._isKeywordList = false;\n        this._labelProperty = 'nxTaglistLabel';\n        this._valueFormatterFn = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => value);\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the list of tags.\n     * @param {?} value\n     * @return {?}\n     */\n    set tags(value) {\n        this._tags = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get tags() {\n        return this._tags;\n    }\n    /**\n     * Whether the tags can be removed from the list.\n     * @param {?} value\n     * @return {?}\n     */\n    set allowTagDeletion(value) {\n        this._allowTagDeletion = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get allowTagDeletion() {\n        return this._allowTagDeletion;\n    }\n    /**\n     * Whether the tags can be styled as keywords.\n     * @param {?} value\n     * @return {?}\n     */\n    set isKeywordList(value) {\n        this._isKeywordList = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get isKeywordList() {\n        return this._isKeywordList;\n    }\n    /**\n     * Sets the label property, in case tags represent objects.\n     * @param {?} value\n     * @return {?}\n     */\n    set labelProp(value) {\n        if (this._labelProperty !== value) {\n            this._labelProperty = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get labelProp() {\n        return this._labelProperty;\n    }\n    /**\n     * Sets the label property to improve accessibility.\n     * @param {?} value\n     * @return {?}\n     */\n    set labelledby(value) {\n        if (this._ariaLabelledBy !== value) {\n            this._ariaLabelledBy = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get labelledby() {\n        return this._ariaLabelledBy;\n    }\n    /**\n     * Sets the customization function for tag value.\n     * @param {?} fn\n     * @return {?}\n     */\n    set valueFormatter(fn) {\n        this._valueFormatterFn = fn;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get valueFormatter() {\n        return this._valueFormatterFn;\n    }\n    /**\n     * Allows to delete a tag given index. Takes index of the tag to be deleted as a parameter\n     * @param {?} index\n     * @param {?} value\n     * @return {?}\n     */\n    delete(index, value) {\n        if (this.allowTagDeletion) {\n            this.tags = [\n                ...this.tags.slice(0, index),\n                ...this.tags.slice(index + 1)\n            ];\n            this._onChange(this.tags);\n            this.tagsChange.emit(this.tags);\n        }\n    }\n    /**\n     * Allows to add a tag. Takes tag object as an input\n     * @param {?} tag\n     * @return {?}\n     */\n    addTag(tag) {\n        if (!tag) {\n            return;\n        }\n        // make sure tag is either string or has the configured label prop and is not yet in the list\n        if ((typeof tag === 'string' && this.tags.indexOf(tag) === -1) ||\n            (tag[this.labelProp] && this.tags.filter((/**\n             * @param {?} t\n             * @return {?}\n             */\n            (t) => t[this.labelProp] === tag[this.labelProp])).length < 1)) {\n            this.tags = [...this.tags, tag];\n            this._onChange(this.tags);\n            this.tagsChange.emit(this.tags);\n        }\n    }\n    /**\n     * Allows to clear the tag list.\n     * @return {?}\n     */\n    clearTags() {\n        this.tags = [];\n        this._onChange(this.tags);\n        this.tagsChange.emit(this.tags);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} tags\n     * @return {?}\n     */\n    writeValue(tags) {\n        this.tags = tags;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} tag\n     * @return {?}\n     */\n    renderTag(tag) {\n        /** @type {?} */\n        const tagStr = typeof tag === 'string' ? tag : tag[this.labelProp];\n        return this.valueFormatter(tagStr);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} index\n     * @param {?} value\n     * @return {?}\n     */\n    tagClick(index, value) {\n        this.tagClickEvent.emit(this.tags[index]);\n    }\n}\nNxTaglistComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-taglist',\n                template: \"  <ul class=\\\"nx-taglist\\\" *ngIf=\\\"tags.length > 0\\\">\\n    <li class=\\\"nx-taglist__list-item\\\" tabindex=\\\"-1\\\" *ngFor=\\\"let tag of tags; let i = index\\\">\\n      <nx-tag [value]=\\\"renderTag(tag)\\\" [removable]=\\\"allowTagDeletion\\\" (clicked)=\\\"tagClick(i, $event)\\\" (removed)=\\\"delete(i, $event)\\\"></nx-tag>\\n  </li>\\n  </ul>\\n  <ng-content *ngIf=\\\"tags.length < 1\\\"></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxTaglistComponent)),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.nx-taglist--keyword]': 'isKeywordList',\n                    '[attr.aria-labelledby]': 'labelledby || null'\n                },\n                styles: [\":host{position:relative;min-height:32px;margin-bottom:32px;display:flex;justify-content:space-between}.nx-taglist{display:flex;flex-wrap:wrap}.nx-taglist__list-item{list-style:none;margin-right:12px;margin-bottom:12px;flex-wrap:wrap;display:flex}@media (max-width:703px){.nx-taglist--keyword{justify-content:center}}\"]\n            }] }\n];\n/** @nocollapse */\nNxTaglistComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxTaglistComponent.propDecorators = {\n    tagsChange: [{ type: Output, args: ['nxTagsChange',] }],\n    tagClickEvent: [{ type: Output, args: ['nxTagClick',] }],\n    tags: [{ type: Input, args: ['nxTags',] }],\n    allowTagDeletion: [{ type: Input, args: ['nxAllowTagDeletion',] }],\n    isKeywordList: [{ type: Input, args: ['nxIsKeywordList',] }],\n    labelProp: [{ type: Input, args: ['nxLabelProperty',] }],\n    labelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    valueFormatter: [{ type: Input, args: ['nxValueFormatter',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTaglistModule {\n}\nNxTaglistModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxTaglistComponent, NxTagComponent],\n                exports: [NxTaglistComponent, NxTagComponent],\n                imports: [CommonModule, NxIconModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxImageDirective {\n    constructor() {\n        console.warn('Directive nxImg which was used together with nxFigure ' +\n            'is now deprecated and not required anymore. Please remove it from your ' +\n            'tag. Check the documentation for more details.');\n    }\n}\nNxImageDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'img[nxImg]'\n            },] }\n];\n/** @nocollapse */\nNxImageDirective.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_SIZE$2 = 'auto';\nclass NxFigureComponent {\n    /**\n     * Sets the type of the visual appearance of the image.\n     * The default value  is 'auto'.\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        this._classNames = value;\n        /** @type {?} */\n        const sizeRegex = /^(auto|1by1|1dot8by1|1dot2by1|1by1dot1|2dot6by1)$/;\n        const [size = null] = this._classNames.match(sizeRegex) || [DEFAULT_SIZE$2];\n        this.size = (/** @type {?} */ (size));\n        this.rounded = !!this._classNames.match(/rounded/);\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n}\nNxFigureComponent.decorators = [\n    { type: Component, args: [{\n                // tslint:disable-next-line:component-selector\n                selector: 'figure[nxFigure]',\n                template: '<ng-content></ng-content>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.nx-image--auto]': 'size === \"auto\" && !rounded',\n                    '[class.nx-image--1by1]': 'size === \"1by1\"',\n                    '[class.nx-image--1dot8by1]': 'size === \"1dot8by1\"',\n                    '[class.nx-image--1dot2by1]': 'size === \"1dot2by1\"',\n                    '[class.nx-image--1by1dot1]': 'size === \"1by1dot1\"',\n                    '[class.nx-image--2dot6by1]': 'size === \"2dot6by1\"',\n                    '[class.nx-image--rounded]': 'rounded'\n                },\n                styles: [\":host{display:block;position:relative;line-height:0}:host ::ng-deep img{display:block;font-family:\\\"object-fit: cover;\\\";-o-object-fit:cover;object-fit:cover;height:100%;width:100%}:host(.nx-image--auto) ::ng-deep img{height:auto}:host(:not(.nx-image--auto)) ::ng-deep img{position:absolute;top:0;left:0}:host(.nx-image--rounded){padding-top:100%}:host(.nx-image--rounded) ::ng-deep img{border-radius:50%;bottom:0;left:0;position:absolute;right:0;top:0}:host(.nx-image--1by1){padding-top:100%}:host(.nx-image--1dot8by1){padding-top:55.55556%}:host(.nx-image--1dot2by1){padding-top:83.33333%}:host(.nx-image--1by1dot1){padding-top:110%}:host(.nx-image--2dot6by1){padding-top:38.46154%}:host(.nx-image--1by1dot4){padding-top:140%}\"]\n            }] }\n];\nNxFigureComponent.propDecorators = {\n    classNames: [{ type: Input, args: ['nxFigure',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxImageModule {\n}\nNxImageModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxFigureComponent, NxImageDirective],\n                exports: [NxFigureComponent, NxImageDirective]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$9 = 0;\n/**\n * @abstract\n */\nclass NxRadioCircleButton {\n    /**\n     * @param {?} radioCircle\n     */\n    constructor(radioCircle) {\n        this.radioCircle = radioCircle;\n        /**\n         * \\@docs-private\n         */\n        this.id = ++nextId$9;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (!this.label) {\n            console.warn(`nx-radio-circle-icon-button/nx-radio-circle-svg-button: required field 'nxLabel' is not set`);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get checked() {\n        return this.radioCircle.selectedButton === this || null;\n    }\n    /**\n     * Whether the item is preselected.\n     * @param {?} checked\n     * @return {?}\n     */\n    set checked(checked) {\n        if (checked) {\n            this.radioCircle.selectedButton = this;\n        }\n        else {\n            if (this.checked) {\n                this.radioCircle.selectedButton = null;\n            }\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get circleButtonId() {\n        return this.radioCircle.radioCircleId + '-' + this.id;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get radioCircleId() {\n        return this.radioCircle.radioCircleId;\n    }\n}\nNxRadioCircleButton.propDecorators = {\n    label: [{ type: Input, args: ['nxLabel',] }],\n    hint: [{ type: Input, args: ['nxHint',] }],\n    value: [{ type: Input, args: ['nxValue',] }],\n    labelElement: [{ type: ViewChild, args: ['labelElement',] }],\n    checked: [{ type: Input, args: ['nxSelected',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$a = 0;\n/**\n * @deprecated Use `nx-circle-toggle-group` instead\n * \\@deletion-target 8.0.0\n */\nclass NxRadioCircleComponent {\n    /**\n     * @param {?} renderer\n     */\n    constructor(renderer) {\n        this.renderer = renderer;\n        this._id = nextId$a++;\n        this._responsive = true;\n        /**\n         * An event emitted when the selection changes.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Whether the radio circle is disabled.\n         */\n        this.disabled = false;\n        this.onTouchedCallback = (/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n        });\n        this.onChangeCallback = (/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n        });\n        console.warn('`nx-radio-circle` is deprecated. Use `nx-circle-toggle-group` instead.');\n    }\n    /**\n     * Whether the toggle behavior is disabled.\n     *\n     * @deprecated Use `nxResponsive` instead\n     * \\@deletion-target 7.0.0\n     * @param {?} value\n     * @return {?}\n     */\n    set responsiveToggle(value) {\n        console.warn('`nxResponsiveToggle` is deprecated. Use `nxResponsive` instead.');\n        this.responsive = value;\n    }\n    /**\n     * Whether the radio circle should have a responsive behavior.\n     *\n     * On false the circles will stay even on mobile viewports.\n     * Default: true.\n     * @param {?} value\n     * @return {?}\n     */\n    set responsive(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.responsive) {\n            this._responsive = newValue;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get responsive() {\n        return this._responsive;\n    }\n    /**\n     * Sets the value of the radio circle.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._selectedButton ? this._selectedButton.value : null;\n    }\n    /**\n     * \\@docs-private\n     * @deprecated Use `responsive` getter\n     * \\@deletion-target 7.0.0\n     * @return {?}\n     */\n    getResposiveToggle() {\n        console.warn('The method `getResponsiveToggle is deprecated. Use the `responsive` getter instead');\n        return this._responsive;\n    }\n    /**\n     * The id of the radio circle.\n     * @return {?}\n     */\n    get radioCircleId() {\n        return `radio-circle-${this._id}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.renderer.addClass(this._buttons.first.labelElement.nativeElement, `nx-radio-circle__label--first`);\n        this.renderer.addClass(this._buttons.last.labelElement.nativeElement, `nx-radio-circle__label--last`);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this._buttons) {\n            this._selectedButton = this._buttons.find((/**\n             * @param {?} button\n             * @return {?}\n             */\n            (button) => button.value === value));\n        }\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    registerOnChange(callback) {\n        this.onChangeCallback = callback;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    registerOnTouched(callback) {\n        this.onTouchedCallback = callback;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} button\n     * @return {?}\n     */\n    set selectedButton(button) {\n        if (this.disabled) {\n            return;\n        }\n        this._selectedButton = button;\n        this.onChangeCallback(this.value);\n        this.valueChange.emit(this.value);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get selectedButton() {\n        return this._selectedButton;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get buttons() {\n        return this._buttons;\n    }\n}\nNxRadioCircleComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-radio-circle',\n                template: \"<div [id]=\\\"radioCircleId\\\" class=\\\"nx-radio-circle\\\" role=\\\"radiogroup\\\" [attr.aria-label]=\\\"name\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxRadioCircleComponent)),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.is-responsive]': 'responsive',\n                    '[class.is-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled',\n                },\n                styles: [\":host{display:block;position:relative}@media (max-width:703px){:host-context(.is-responsive) .nx-radio-circle{flex-direction:column}:host-context(.is-responsive) .nx-radio-circle__label{flex-direction:row;border:2px solid #007ab3;border-top-width:0;font-size:16px;padding:8px 40px 8px 15px}:host-context(.is-responsive) .nx-radio-circle__label--first{border-top-width:2px;border-radius:5px 5px 0 0}:host-context(.is-responsive) .nx-radio-circle__label--last{border-radius:0 0 5px 5px}:host-context(.is-responsive) .nx-radio-circle__circle{display:none}:host-context(.is-responsive) .nx-radio-circle__label-info{color:#007ab3;margin-left:10px;margin-top:0;line-height:16px;font-size:14px}:host-context(.is-responsive) .nx-radio-circle__mobile-check{display:inline-block;opacity:0;line-height:1;margin-right:10px}:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__mobile-check{opacity:1}:host-context(.is-responsive) .nx-radio-circle--checked{background-color:#007ab3;color:#fff}:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__label-info,:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__label-text{color:#fff}:host(:not(.is-responsive)) ::ng-deep nx-radio-circle-icon-button,:host(:not(.is-responsive)) ::ng-deep nx-radio-circle-svg-button{flex:1 0 auto;min-width:33.3%}}.nx-radio-circle{display:flex;flex-direction:row;justify-content:space-around;flex-wrap:wrap}.nx-radio-circle__input{opacity:0;position:absolute}.nx-radio-circle__label{cursor:pointer;display:flex;flex-direction:column;justify-content:center;text-align:center;align-items:center;font-size:16px;font-weight:600;padding:0;position:relative;transition:background-color .2s,border-color .2s,color .2s;vertical-align:middle}@media (min-width:704px){:host:hover .nx-radio-circle__circle{background-color:#006192;border-color:transparent;box-shadow:none;color:#fff}.nx-radio-circle__label{line-height:8rem;min-height:8rem;min-width:8rem;max-width:8rem;padding:0}}.nx-radio-circle__label-text{line-height:20px;z-index:1;color:#414141}@media (max-width:703px){.nx-radio-circle__label-text{color:#007ab3}}.nx-radio-circle__input:focus+.nx-radio-circle__label{color:#fff}.nx-radio-circle__input:focus+.nx-radio-circle__label:after{background-color:#006192;border-color:transparent}.nx-radio-circle__mobile-check{font-size:24px;display:none;z-index:1}.nx-radio-circle--checked .nx-radio-circle__circle{color:#fff;background-color:#007ab3}.nx-radio-circle--checked{color:#fff}.nx-radio-circle--checked:hover{cursor:default}@media screen and (-ms-high-contrast:active){.nx-radio-circle__label-text{color:#fff}.nx-radio-circle--checked .nx-radio-circle__circle{background-color:#ff0;border-color:#ff0}.nx-radio-circle--checked,.nx-radio-circle--checked .nx-radio-circle__label-text{color:#000}.nx-radio-circle--checked .nx-radio-circle__label-text{color:#fff}}.nx-radio-circle__circle{display:flex;justify-content:center;align-items:center;border-radius:50%;min-width:8rem;min-height:8rem;max-width:8rem;max-height:8rem;width:8rem;height:8rem;border:2px solid #007ab3;margin-bottom:1.5rem;color:#007ab3}:host.is-disabled *{color:#c2c2c2}:host.is-disabled .nx-radio-circle__circle{border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__circle{background-color:#c2c2c2;border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__label--icon{color:#fff!important}@media (max-width:703px){:host.is-disabled .nx-radio-circle__label{border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle__label-info{color:#c2c2c2}:host.is-disabled .nx-icon--check:before{color:#fff}:host.is-disabled .nx-radio-circle--checked{background-color:#c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__label-info{color:#fff}}:host.is-disabled:hover{cursor:not-allowed}:host.is-disabled:hover .nx-radio-circle__circle{background-color:transparent;cursor:not-allowed}.nx-radio-circle__label--icon{pointer-events:none;z-index:1;display:flex;text-align:center;align-items:center;justify-content:center;font-size:4rem;font-weight:400;position:relative}.nx-radio-circle__label--icon.nx-icon--auto{font-size:4rem}.nx-radio-circle__label-info{color:#fff;display:inline-block;font-weight:300;line-height:22px;font-size:18px;margin-top:4px;transition:color .2s;z-index:1}@media screen and (-ms-high-contrast:active){.nx-radio-circle__label-info{color:#fff}}.nx-radio-circle__label-info:before{content:'(';display:inline-block}@media (min-width:704px){.nx-radio-circle__label-info{color:#767676;display:block;width:16rem}.nx-radio-circle__label-info:before{content:''}}.nx-radio-circle__label-info:after{content:')';display:inline-block}@media (min-width:704px){.nx-radio-circle__label-info:after{content:''}}:host-context([data-whatinput=keyboard]) .nx-radio-circle__input:focus+.nx-radio-circle__label .nx-radio-circle__circle{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxRadioCircleComponent.ctorParameters = () => [\n    { type: Renderer2 }\n];\nNxRadioCircleComponent.propDecorators = {\n    _buttons: [{ type: ContentChildren, args: [NxRadioCircleButton,] }],\n    valueChange: [{ type: Output, args: ['nxValueChange',] }],\n    name: [{ type: Input, args: ['nxName',] }],\n    disabled: [{ type: Input, args: ['disabled',] }],\n    responsiveToggle: [{ type: Input, args: ['nxResponsiveToggle',] }],\n    responsive: [{ type: Input, args: ['nxResponsive',] }],\n    value: [{ type: Input, args: ['nxValue',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @deprecated Use `nx-circle-toggle` instead\n * \\@deletion-target 8.0.0\n */\nclass NxRadioCircleIconButtonComponent extends NxRadioCircleButton {\n    /**\n     * @param {?} radioCircle\n     */\n    constructor(radioCircle) {\n        super(radioCircle);\n        this.radioCircle = radioCircle;\n        console.warn('`nx-radio-circle-icon-button` is deprecated. Use `nx-circle-toggle` instead.');\n    }\n}\nNxRadioCircleIconButtonComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-radio-circle-icon-button',\n                template: \"<input [id]=\\\"circleButtonId\\\" class=\\\"nx-radio-circle__input\\\" name=\\\"circle-icon\\\" type=\\\"radio\\\" [checked]=\\\"checked\\\"\\n       (click)=\\\"checked = true\\\">\\n<label #labelElement [for]=\\\"circleButtonId\\\" class=\\\"nx-radio-circle__label\\\" [class.nx-radio-circle--checked]=\\\"checked\\\">\\n  <div class=\\\"nx-radio-circle__circle\\\">\\n    <nx-icon class=\\\"nx-radio-circle__label--icon\\\" [name]=\\\"icon\\\"></nx-icon>    \\n  </div>\\n  <nx-icon class=\\\"nx-radio-circle__mobile-check\\\" name=\\\"check\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n  <span class=\\\"nx-radio-circle__label-text\\\">{{label}}</span>\\n  <span *ngIf=\\\"hint\\\" class=\\\"nx-radio-circle__label-info\\\">{{hint}}</span>\\n</label>\\n\",\n                providers: [\n                    {\n                        provide: NxRadioCircleButton, useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxRadioCircleIconButtonComponent))\n                    }\n                ],\n                host: {\n                    '[class.is-disabled]': 'radioCircle.disabled',\n                    '[attr.aria-disabled]': 'radioCircle.disabled'\n                },\n                styles: [\":host{display:block;position:relative}@media (max-width:703px){:host-context(.is-responsive) .nx-radio-circle{flex-direction:column}:host-context(.is-responsive) .nx-radio-circle__label{flex-direction:row;border:2px solid #007ab3;border-top-width:0;font-size:16px;padding:8px 40px 8px 15px}:host-context(.is-responsive) .nx-radio-circle__label--first{border-top-width:2px;border-radius:5px 5px 0 0}:host-context(.is-responsive) .nx-radio-circle__label--last{border-radius:0 0 5px 5px}:host-context(.is-responsive) .nx-radio-circle__circle{display:none}:host-context(.is-responsive) .nx-radio-circle__label-info{color:#007ab3;margin-left:10px;margin-top:0;line-height:16px;font-size:14px}:host-context(.is-responsive) .nx-radio-circle__mobile-check{display:inline-block;opacity:0;line-height:1;margin-right:10px}:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__mobile-check{opacity:1}:host-context(.is-responsive) .nx-radio-circle--checked{background-color:#007ab3;color:#fff}:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__label-info,:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__label-text{color:#fff}:host(:not(.is-responsive)) ::ng-deep nx-radio-circle-icon-button,:host(:not(.is-responsive)) ::ng-deep nx-radio-circle-svg-button{flex:1 0 auto;min-width:33.3%}}.nx-radio-circle{display:flex;flex-direction:row;justify-content:space-around;flex-wrap:wrap}.nx-radio-circle__input{opacity:0;position:absolute}.nx-radio-circle__label{cursor:pointer;display:flex;flex-direction:column;justify-content:center;text-align:center;align-items:center;font-size:16px;font-weight:600;padding:0;position:relative;transition:background-color .2s,border-color .2s,color .2s;vertical-align:middle}@media (min-width:704px){:host:hover .nx-radio-circle__circle{background-color:#006192;border-color:transparent;box-shadow:none;color:#fff}.nx-radio-circle__label{line-height:8rem;min-height:8rem;min-width:8rem;max-width:8rem;padding:0}}.nx-radio-circle__label-text{line-height:20px;z-index:1;color:#414141}@media (max-width:703px){.nx-radio-circle__label-text{color:#007ab3}}.nx-radio-circle__input:focus+.nx-radio-circle__label{color:#fff}.nx-radio-circle__input:focus+.nx-radio-circle__label:after{background-color:#006192;border-color:transparent}.nx-radio-circle__mobile-check{font-size:24px;display:none;z-index:1}.nx-radio-circle--checked .nx-radio-circle__circle{color:#fff;background-color:#007ab3}.nx-radio-circle--checked{color:#fff}.nx-radio-circle--checked:hover{cursor:default}@media screen and (-ms-high-contrast:active){.nx-radio-circle__label-text{color:#fff}.nx-radio-circle--checked .nx-radio-circle__circle{background-color:#ff0;border-color:#ff0}.nx-radio-circle--checked,.nx-radio-circle--checked .nx-radio-circle__label-text{color:#000}.nx-radio-circle--checked .nx-radio-circle__label-text{color:#fff}}.nx-radio-circle__circle{display:flex;justify-content:center;align-items:center;border-radius:50%;min-width:8rem;min-height:8rem;max-width:8rem;max-height:8rem;width:8rem;height:8rem;border:2px solid #007ab3;margin-bottom:1.5rem;color:#007ab3}:host.is-disabled *{color:#c2c2c2}:host.is-disabled .nx-radio-circle__circle{border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__circle{background-color:#c2c2c2;border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__label--icon{color:#fff!important}@media (max-width:703px){:host.is-disabled .nx-radio-circle__label{border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle__label-info{color:#c2c2c2}:host.is-disabled .nx-icon--check:before{color:#fff}:host.is-disabled .nx-radio-circle--checked{background-color:#c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__label-info{color:#fff}}:host.is-disabled:hover{cursor:not-allowed}:host.is-disabled:hover .nx-radio-circle__circle{background-color:transparent;cursor:not-allowed}.nx-radio-circle__label--icon{pointer-events:none;z-index:1;display:flex;text-align:center;align-items:center;justify-content:center;font-size:4rem;font-weight:400;position:relative}.nx-radio-circle__label--icon.nx-icon--auto{font-size:4rem}.nx-radio-circle__label-info{color:#fff;display:inline-block;font-weight:300;line-height:22px;font-size:18px;margin-top:4px;transition:color .2s;z-index:1}@media screen and (-ms-high-contrast:active){.nx-radio-circle__label-info{color:#fff}}.nx-radio-circle__label-info:before{content:'(';display:inline-block}@media (min-width:704px){.nx-radio-circle__label-info{color:#767676;display:block;width:16rem}.nx-radio-circle__label-info:before{content:''}}.nx-radio-circle__label-info:after{content:')';display:inline-block}@media (min-width:704px){.nx-radio-circle__label-info:after{content:''}}:host-context([data-whatinput=keyboard]) .nx-radio-circle__input:focus+.nx-radio-circle__label .nx-radio-circle__circle{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxRadioCircleIconButtonComponent.ctorParameters = () => [\n    { type: NxRadioCircleComponent, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NxRadioCircleComponent)),] }] }\n];\nNxRadioCircleIconButtonComponent.propDecorators = {\n    icon: [{ type: Input, args: ['nxIcon',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @deprecated Use `nx-circle-toggle` instead\n * \\@deletion-target 8.0.0\n */\nclass NxRadioCircleSvgButtonComponent extends NxRadioCircleButton {\n    /**\n     * @param {?} radioCircle\n     */\n    constructor(radioCircle) {\n        super(radioCircle);\n        this._hover = false;\n        console.warn('`nx-radio-circle-svg-button` is deprecated. Use `nx-circle-toggle` instead.');\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onMouseEnter() {\n        this._hover = true;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onMouseLeave() {\n        this._hover = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.svg) {\n            console.warn(`nx-radio-circle-svg-button: required field 'nxSvg' is not set`);\n        }\n        if (!this.svgChecked) {\n            console.warn(`nx-radio-circle-svg-button: required field 'nxSvgChecked' is not set`);\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get svgUrl() {\n        return (this.checked || this._hover) ? this.svgChecked : this.svg;\n    }\n}\nNxRadioCircleSvgButtonComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-radio-circle-svg-button',\n                template: \"<input [id]=\\\"circleButtonId\\\" class=\\\"nx-radio-circle__input\\\" type=\\\"radio\\\" [checked]=\\\"checked\\\"\\n       (click)=\\\"checked = true\\\">\\n<label #labelElement [for]=\\\"circleButtonId\\\" class=\\\"nx-radio-circle__label\\\" [class.nx-radio-circle--checked]=\\\"checked\\\">\\n    <div class=\\\"nx-radio-circle__circle\\\">\\n      <img [src]=\\\"svgUrl\\\" class=\\\"nx-radio-circle__label--icon\\\"/>\\n    </div>\\n  <nx-icon class=\\\"nx-radio-circle__mobile-check\\\" name=\\\"check\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n  <span class=\\\"nx-radio-circle__label-text\\\">{{label}}</span>\\n  <span *ngIf=\\\"hint\\\" class=\\\"nx-radio-circle__label-info\\\">{{hint}}</span>\\n</label>\\n\",\n                providers: [\n                    {\n                        provide: NxRadioCircleButton, useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxRadioCircleSvgButtonComponent))\n                    }\n                ],\n                styles: [\":host{display:block;position:relative}@media (max-width:703px){:host-context(.is-responsive) .nx-radio-circle{flex-direction:column}:host-context(.is-responsive) .nx-radio-circle__label{flex-direction:row;border:2px solid #007ab3;border-top-width:0;font-size:16px;padding:8px 40px 8px 15px}:host-context(.is-responsive) .nx-radio-circle__label--first{border-top-width:2px;border-radius:5px 5px 0 0}:host-context(.is-responsive) .nx-radio-circle__label--last{border-radius:0 0 5px 5px}:host-context(.is-responsive) .nx-radio-circle__circle{display:none}:host-context(.is-responsive) .nx-radio-circle__label-info{color:#007ab3;margin-left:10px;margin-top:0;line-height:16px;font-size:14px}:host-context(.is-responsive) .nx-radio-circle__mobile-check{display:inline-block;opacity:0;line-height:1;margin-right:10px}:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__mobile-check{opacity:1}:host-context(.is-responsive) .nx-radio-circle--checked{background-color:#007ab3;color:#fff}:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__label-info,:host-context(.is-responsive) .nx-radio-circle--checked .nx-radio-circle__label-text{color:#fff}:host(:not(.is-responsive)) ::ng-deep nx-radio-circle-icon-button,:host(:not(.is-responsive)) ::ng-deep nx-radio-circle-svg-button{flex:1 0 auto;min-width:33.3%}}.nx-radio-circle{display:flex;flex-direction:row;justify-content:space-around;flex-wrap:wrap}.nx-radio-circle__input{opacity:0;position:absolute}.nx-radio-circle__label{cursor:pointer;display:flex;flex-direction:column;justify-content:center;text-align:center;align-items:center;font-size:16px;font-weight:600;padding:0;position:relative;transition:background-color .2s,border-color .2s,color .2s;vertical-align:middle}@media (min-width:704px){:host:hover .nx-radio-circle__circle{background-color:#006192;border-color:transparent;box-shadow:none;color:#fff}.nx-radio-circle__label{line-height:8rem;min-height:8rem;min-width:8rem;max-width:8rem;padding:0}}.nx-radio-circle__label-text{line-height:20px;z-index:1;color:#414141}@media (max-width:703px){.nx-radio-circle__label-text{color:#007ab3}}.nx-radio-circle__input:focus+.nx-radio-circle__label{color:#fff}.nx-radio-circle__input:focus+.nx-radio-circle__label:after{background-color:#006192;border-color:transparent}.nx-radio-circle__mobile-check{font-size:24px;display:none;z-index:1}.nx-radio-circle--checked .nx-radio-circle__circle{color:#fff;background-color:#007ab3}.nx-radio-circle--checked{color:#fff}.nx-radio-circle--checked:hover{cursor:default}@media screen and (-ms-high-contrast:active){.nx-radio-circle__label-text{color:#fff}.nx-radio-circle--checked .nx-radio-circle__circle{background-color:#ff0;border-color:#ff0}.nx-radio-circle--checked,.nx-radio-circle--checked .nx-radio-circle__label-text{color:#000}.nx-radio-circle--checked .nx-radio-circle__label-text{color:#fff}}.nx-radio-circle__circle{display:flex;justify-content:center;align-items:center;border-radius:50%;min-width:8rem;min-height:8rem;max-width:8rem;max-height:8rem;width:8rem;height:8rem;border:2px solid #007ab3;margin-bottom:1.5rem;color:#007ab3}:host.is-disabled *{color:#c2c2c2}:host.is-disabled .nx-radio-circle__circle{border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__circle{background-color:#c2c2c2;border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__label--icon{color:#fff!important}@media (max-width:703px){:host.is-disabled .nx-radio-circle__label{border:2px solid #c2c2c2}:host.is-disabled .nx-radio-circle__label-info{color:#c2c2c2}:host.is-disabled .nx-icon--check:before{color:#fff}:host.is-disabled .nx-radio-circle--checked{background-color:#c2c2c2}:host.is-disabled .nx-radio-circle--checked .nx-radio-circle__label-info{color:#fff}}:host.is-disabled:hover{cursor:not-allowed}:host.is-disabled:hover .nx-radio-circle__circle{background-color:transparent;cursor:not-allowed}.nx-radio-circle__label--icon{pointer-events:none;z-index:1;display:flex;text-align:center;align-items:center;justify-content:center;font-size:4rem;font-weight:400;position:relative}.nx-radio-circle__label--icon.nx-icon--auto{font-size:4rem}.nx-radio-circle__label-info{color:#fff;display:inline-block;font-weight:300;line-height:22px;font-size:18px;margin-top:4px;transition:color .2s;z-index:1}@media screen and (-ms-high-contrast:active){.nx-radio-circle__label-info{color:#fff}}.nx-radio-circle__label-info:before{content:'(';display:inline-block}@media (min-width:704px){.nx-radio-circle__label-info{color:#767676;display:block;width:16rem}.nx-radio-circle__label-info:before{content:''}}.nx-radio-circle__label-info:after{content:')';display:inline-block}@media (min-width:704px){.nx-radio-circle__label-info:after{content:''}}:host-context([data-whatinput=keyboard]) .nx-radio-circle__input:focus+.nx-radio-circle__label .nx-radio-circle__circle{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxRadioCircleSvgButtonComponent.ctorParameters = () => [\n    { type: NxRadioCircleComponent, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NxRadioCircleComponent)),] }] }\n];\nNxRadioCircleSvgButtonComponent.propDecorators = {\n    svg: [{ type: Input, args: ['nxSvg',] }],\n    svgChecked: [{ type: Input, args: ['nxSvgChecked',] }],\n    onMouseEnter: [{ type: HostListener, args: ['mouseenter',] }],\n    onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxRadioCircleModule {\n}\nNxRadioCircleModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxRadioCircleComponent, NxRadioCircleIconButtonComponent, NxRadioCircleSvgButtonComponent],\n                exports: [NxRadioCircleComponent, NxRadioCircleIconButtonComponent, NxRadioCircleSvgButtonComponent],\n                imports: [\n                    CommonModule,\n                    NxIconModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// note that this currently only supports youtube videos\nclass NxVideoComponent {\n    /**\n     * @param {?} sanitizer\n     * @param {?} _changeDetectorRef\n     */\n    constructor(sanitizer, _changeDetectorRef) {\n        this.sanitizer = sanitizer;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._videoId = null;\n        this._altText = '';\n        this._playButtonAriaLabel = '';\n        this._previewImageSrc = null;\n        this._showPlayerControls = true;\n        this._allowFullScreen = true;\n        this._interfaceLanguage = null;\n        /**\n         * \\@docs-private\n         */\n        this.showPlayer = false;\n    }\n    /**\n     * Sets the id of the YouTube video.\n     * @param {?} value\n     * @return {?}\n     */\n    set videoId(value) {\n        if (this._videoId !== value) {\n            this._videoId = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get videoId() {\n        return this._videoId;\n    }\n    /**\n     * Sets the value of the alt attribute for the preview image.\n     * @param {?} value\n     * @return {?}\n     */\n    set altText(value) {\n        if (this._altText !== value) {\n            this._altText = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get altText() {\n        return this._altText;\n    }\n    /**\n     * Sets the value of the aria-label attribute on the play button (Default: Play Video).\n     * @param {?} value\n     * @return {?}\n     */\n    set nxPlayButtonAriaLabel(value) {\n        if (this._playButtonAriaLabel !== value) {\n            this._playButtonAriaLabel = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get nxPlayButtonAriaLabel() {\n        return this._playButtonAriaLabel;\n    }\n    /**\n     * Sets the preview image. If this is not provided, an image from YouTube will be used as default.\n     * @param {?} value\n     * @return {?}\n     */\n    set previewImageSrc(value) {\n        if (this._previewImageSrc !== value) {\n            this._previewImageSrc = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get previewImageSrc() {\n        return this._previewImageSrc;\n    }\n    /**\n     * Sets player controls. If set to false, player controls are not available.\n     * @param {?} value\n     * @return {?}\n     */\n    set showPlayerControls(value) {\n        this._showPlayerControls = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get showPlayerControls() {\n        return this._showPlayerControls;\n    }\n    /**\n     * Sets fullscreen option. If set to false, fullscreen option is not available.\n     * @param {?} value\n     * @return {?}\n     */\n    set allowFullScreen(value) {\n        this._allowFullScreen = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get allowFullScreen() {\n        return this._allowFullScreen;\n    }\n    /**\n     * Sets interface language. Can be used to override the interface language determined by YouTube.\n     * @param {?} value\n     * @return {?}\n     */\n    set interfaceLanguage(value) {\n        if (this._interfaceLanguage !== value) {\n            this._interfaceLanguage = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get interfaceLanguage() {\n        return this._interfaceLanguage;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    select() {\n        this.showPlayer = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the safe resource URL of the YouTube video, given video id.\n     * @return {?}\n     */\n    get videoSrc() {\n        /** @type {?} */\n        let url = `https://www.youtube.com/embed/${this.videoId}?rel=0&showinfo=0&autoplay=1`;\n        if (!this.showPlayerControls) {\n            url += '&controls=0';\n        }\n        if (!this.allowFullScreen) {\n            url += '&fs=0';\n        }\n        if (this.interfaceLanguage) {\n            url += `&hl=${this.interfaceLanguage}`;\n        }\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n    /**\n     * Returns the preview image source URL, given video id.\n     * @return {?}\n     */\n    get imgSrc() {\n        return this.previewImageSrc ? this.previewImageSrc : `https://img.youtube.com/vi/${this.videoId}/sddefault.jpg`;\n    }\n    /**\n     * Returns the labels for the control buttons.\n     * @return {?}\n     */\n    get playButtonAriaLabel() {\n        /** @type {?} */\n        const defaultLabel = this.altText ? `${this.altText} - Play Video` : 'Play Video';\n        return this.nxPlayButtonAriaLabel ? this.nxPlayButtonAriaLabel : defaultLabel;\n    }\n}\nNxVideoComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-video',\n                template: \"<div class=\\\"nx-video\\\">\\n  <div class=\\\"nx-video__iframe\\\">\\n\\n    <div *ngIf=\\\"!showPlayer\\\">\\n\\n      <button class=\\\"nx-video__play-button\\\"\\n              (click)=\\\"select()\\\"\\n              [attr.aria-label]=\\\"playButtonAriaLabel\\\"\\n              (keydown.enter)=\\\"select()\\\">\\n      </button>\\n      <img [src]=\\\"imgSrc\\\" class=\\\"nx-video__thumbnail\\\"\\n           [alt]=\\\"altText\\\"\\n           (click)=\\\"select()\\\"\\n           (keydown.enter)=\\\"select()\\\">\\n\\n    </div>\\n    <div *ngIf=\\\"videoId && showPlayer\\\">\\n      <iframe title=\\\"video\\\" class=\\\"nx-video__iframe\\\" [attr.allowfullscreen]=\\\"allowFullScreen\\\" [src]=\\\"videoSrc\\\"></iframe>\\n    </div>\\n\\n  </div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".nx-video{position:relative;padding-bottom:56.25%;overflow:hidden;width:100%;height:auto}.nx-video__iframe{position:absolute;top:0;left:0;width:100%;height:100%;border:none}.nx-video__thumbnail{position:absolute;cursor:pointer;width:100%;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);opacity:.7}.nx-video__play-button{border:none;background:url(play-button.svg) center no-repeat;cursor:pointer;position:absolute;width:88px;height:56px;z-index:1}.nx-video__play-button::-moz-focus-inner{border:0}.nx-video__play-button,.nx-video__play-button:before{top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}\"]\n            }] }\n];\n/** @nocollapse */\nNxVideoComponent.ctorParameters = () => [\n    { type: DomSanitizer },\n    { type: ChangeDetectorRef }\n];\nNxVideoComponent.propDecorators = {\n    videoId: [{ type: Input, args: ['nxVideoId',] }],\n    altText: [{ type: Input, args: ['nxAltText',] }],\n    nxPlayButtonAriaLabel: [{ type: Input, args: ['nxPlayButtonAriaLabel',] }],\n    previewImageSrc: [{ type: Input, args: ['nxPreviewImageSrc',] }],\n    showPlayerControls: [{ type: Input, args: ['nxShowPlayerControls',] }],\n    allowFullScreen: [{ type: Input, args: ['nxAllowFullScreen',] }],\n    interfaceLanguage: [{ type: Input, args: ['nxInterfaceLanguage',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxVideoModule {\n}\nNxVideoModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxVideoComponent],\n                exports: [NxVideoComponent],\n                imports: [CommonModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiselect` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getNxDropdownNonArrayValueError() {\n    return Error('Value must be an array in multiselect mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getNxDropdownNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass NxDropdownControl extends NxFormfieldControl {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the dropdown should allow multi selection and additional checkboxes are shown.\n         *\n         * Note: Please make sure the value you bind is an array. If not an error is thrown!\n         */\n        this.isMultiSelect = false;\n    }\n}\nNxDropdownControl.propDecorators = {\n    isMultiSelect: [{ type: Input, args: ['nxIsMultiselect',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxDropdownGroupComponent {\n}\nNxDropdownGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-dropdown-group',\n                template: \"<div class=\\\"nx-dropdown-results__group\\\">\\n  <div class=\\\"nx-dropdown-results__group-label\\\">{{label}}</div>\\n  <ng-content></ng-content>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:block}:host:first-child .nx-dropdown-results__group{background-color:rgba(236,236,236,.5)}:host:first-child .nx-dropdown-results__group-label{padding-top:16px}.nx-dropdown-results__group-label{font-style:italic;padding:24px 32px 16px;font-weight:700;font-size:12px;line-height:16px}\"]\n            }] }\n];\nNxDropdownGroupComponent.propDecorators = {\n    label: [{ type: Input, args: ['nxLabel',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxDropdownItemChange {\n    /**\n     * @param {?} item\n     * @param {?=} isUserInput\n     */\n    constructor(item, isUserInput = false) {\n        this.item = item;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * the unique id counter\n * @type {?}\n */\nlet nextId$b = 0;\nclass NxDropdownItemComponent {\n    /**\n     * @param {?} _dropdown\n     * @param {?} group\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     */\n    constructor(_dropdown, group, _changeDetectorRef, _elementRef) {\n        this._dropdown = _dropdown;\n        this.group = group;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._hidden = false;\n        this._mostRecentViewValue = '';\n        this._id = `nx-dropdown-item-${nextId$b++}`;\n        this._selected = false;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n        ((/** @type {?} */ (this._dropdown))).filterChanges.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            this._showOrHideByFilter(value);\n        }));\n        // reset the hidden state when dropdown closes that on next open the user is seeing the full list again\n        ((/** @type {?} */ (this._dropdown)))._closedStream.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._hidden = false;\n        }));\n    }\n    /**\n     * The unique ID of the option.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * Whether the item is selected.\n     * @return {?}\n     */\n    get selected() {\n        return this._selected;\n    }\n    /**\n     * Whether the item is active.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * \\@docs-private\n     * Whether the parent dropdown is in multiselect mode.\n     * @return {?}\n     */\n    get multiselect() {\n        return this._dropdown && this._dropdown.isMultiSelect;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since the parent dropdown component could be using the item's label to display the selected values\n        // and it doesn't have a way of knowing if the item's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._destroy.next();\n        this._destroy.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onClick(event) {\n        /* preventDefault to stop triggering the event twice when you click on the checkbox or the label inside the item */\n        event.preventDefault();\n        event.stopPropagation();\n        this._selectViaInteraction();\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        this._selected = this.multiselect ? !this._selected : true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent(true);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    show() {\n        this._hidden = false;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    hide() {\n        this._hidden = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} search\n     * @return {?}\n     */\n    _showOrHideByFilter(search) {\n        /** @type {?} */\n        const constraint = ((/** @type {?} */ (this._dropdown))).filterFn(search, this.viewValue);\n        this._hidden = constraint ? false : true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get _formattedValue() {\n        return ((/** @type {?} */ (this._dropdown))).valueFormatter(this.value);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get viewValue() {\n        return (this._elementRef.nativeElement.textContent || '').trim();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new NxDropdownItemChange(this, isUserInput));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    setActiveStyles() {\n        this._active = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    setInactiveStyles() {\n        this._active = false;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this.value;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    _isContentEmpty(element) {\n        return element.children.length === 0 && !element.textContent.trim();\n    }\n    /**\n     * @return {?}\n     */\n    _onLabelChange() {\n        // trigger change detection when the label content changes for the case that ng-content was empty before.\n        // this is also important when the label comes in deferred, e.g. by a delayed observable,\n        // then first the default label derived from the value is shown\n        // and after the value from the async observable is ready we need to trigger change detection that the derived label\n        // gets hidden again.\n        // Notice(!): the event of (cdkObserveContent) is run outside of the ngZone\n        // We run detectChanges directly here as markForCheck wasn't enough to always trigger change detection correctly\n        this._changeDetectorRef.detectChanges();\n    }\n}\nNxDropdownItemComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-dropdown-item',\n                template: \"<div #container class=\\\"nx-dropdown-results__option\\\"\\n     [ngClass]=\\\"{'nx-dropdown-results__option--selected': selected}\\\">\\n\\n   <nx-checkbox *ngIf=\\\"multiselect\\\" [checked]=\\\"selected\\\">\\n      <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n    </nx-checkbox>\\n\\n    <span *ngIf=\\\"!multiselect\\\" class=\\\"nx-dropdown-results__option-checkicon\\\">\\n       <nx-icon name=\\\"check\\\" aria-hidden=\\\"true\\\"></nx-icon>\\n    </span>\\n\\n    <ng-container *ngIf=\\\"!multiselect\\\">\\n      <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n    </ng-container>\\n</div>\\n\\n<ng-template #contentTemplate>\\n  <div class=\\\"nx-dropdown-results__option-label\\\" >\\n    <span #content (cdkObserveContent)=\\\"_onLabelChange()\\\">\\n      <ng-content></ng-content>\\n    </span>\\n    <ng-container *ngIf=\\\"_isContentEmpty(content)\\\">\\n      {{_formattedValue}}\\n    </ng-container>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[id]': 'id',\n                    'role': 'option',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[class.nx-hidden]': '_hidden',\n                    '[class.nx-dropdown-item--active]': 'active',\n                    '[class.nx-selected]': 'selected',\n                    '[class.nx-multiselect]': 'multiselect',\n                    '(click)': '_onClick($event)'\n                },\n                styles: [\":host{display:block}:host(.nx-hidden){display:none}:host:first-child .nx-dropdown-results__option{padding-top:16px}nx-checkbox{margin-bottom:0}.nx-dropdown-results__option{font-size:20px;line-height:28px;letter-spacing:.2px;padding:0 32px 16px 8px;cursor:pointer;position:relative;display:flex;max-width:100%;white-space:nowrap}.nx-dropdown-results__option-label{overflow:hidden;text-overflow:ellipsis;padding:0 12px;margin:0 -12px}:host(.nx-multiselect) .nx-dropdown-results__option{display:block;padding-left:32px}:host(.nx-multiselect) ::ng-deep .nx-checkbox__label{height:28px;display:flex;align-items:center}:host(.nx-dropdown-item--active),:host:hover{color:#007ab3}@media screen and (-ms-high-contrast:active){:host(.nx-dropdown-item--active),:host:hover{color:highlightText}}:host(.nx-selected) .nx-dropdown-results__option-checkicon{opacity:1}.nx-dropdown-results__option-checkicon{opacity:0;width:16px;height:16px;margin-right:8px}.nx-dropdown-results__option-checkicon nx-icon{font-size:16px}:host-context([data-whatinput=keyboard]).nx-dropdown-item--active .nx-dropdown-results__option .nx-dropdown-results__option-label{border-radius:4px;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host-context([data-whatinput=keyboard]).nx-multiselect.nx-dropdown-item--active .nx-dropdown-results__option .nx-dropdown-results__option-label{box-shadow:none}:host-context([data-whatinput=keyboard]).nx-multiselect.nx-dropdown-item--active ::ng-deep .nx-checkbox__label{border-radius:4px;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}:host(.nx-selected.nx-dropdown-item--active) .nx-dropdown-results__option-label{padding-left:24px;margin-left:-24px}:host ::ng-deep .nx-checkbox__label{padding:0 4px;margin:0 -4px}\"]\n            }] }\n];\n/** @nocollapse */\nNxDropdownItemComponent.ctorParameters = () => [\n    { type: NxDropdownControl, decorators: [{ type: Inject, args: [NxDropdownControl,] }] },\n    { type: NxDropdownGroupComponent, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\nNxDropdownItemComponent.propDecorators = {\n    value: [{ type: Input, args: ['nxValue',] }],\n    onSelectionChange: [{ type: Output }],\n    containerElement: [{ type: ViewChild, args: ['container',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This Directive solely purpose is to mark given ng-template and project it into the required destination.\nclass NxDropdownClosedLabelDirective {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNxDropdownClosedLabelDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxClosedLabel]'\n            },] }\n];\n/** @nocollapse */\nNxDropdownClosedLabelDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Change event object that is emitted when the select value has changed.\n * @template T\n */\nclass NxDropdownSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// used in calculation of scrolltop to correctly show some space to the top of the panel\n/** @type {?} */\nconst itemPadding = 16;\n// Max-height: 6 items x 44px + 16px padding before first item\n/** @type {?} */\nconst SELECT_PANEL_MAX_HEIGHT = 280;\nclass NxDropdownComponent$1 extends NxDropdownControl {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} formFieldComponent\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     */\n    constructor(_changeDetectorRef, _elementRef, _ngZone, tabIndex, formFieldComponent, ngControl, _parentForm, _parentFormGroup) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this.formFieldComponent = formFieldComponent;\n        this.ngControl = ngControl;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        // The dropdown currently doesn't support readonly of the NxFormfieldControl so we hardcode it here\n        this.readonly = false;\n        this._disabled = false;\n        this._focused = false;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * \\@docs-private\n         */\n        this.errorState = false;\n        /**\n         * The scroltop of the panelBody.\n         */\n        this._scrollTop = 0;\n        /**\n         * The minimal space between the viewport and the overlay\n         */\n        this._overlayViewportMargin = 16;\n        /**\n         * \\@docs-private\n         * Emits when internal state changes to inform formfield about it.\n         */\n        this.stateChanges = new Subject();\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        this._tabIndex = 0;\n        /**\n         * \\@docs-private\n         */\n        this.currentFilter = '';\n        /**\n         * Label to describe the component.\n         */\n        this._ariaLabel = '';\n        this._style = '';\n        /**\n         * Whether the dropdown should render in its negative style or not.\n         */\n        this._negative = false;\n        /**\n         * Whether the dropdown should be shown with an additional filter input.\n         */\n        this.showFilter = false;\n        /**\n         * Text displayed as placeholder for the filter.\n         */\n        this.filterPlaceholder = '';\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the user types in the filter input.\n         */\n        this.filterChanges = new Subject();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Event emitted when the selected value has been changed.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * \\@docs-private\n         */\n        this.optionSelectionChanges = defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.options) {\n                return merge(...this.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }));\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [{\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top'\n            }, {\n                originX: 'start',\n                originY: 'center',\n                overlayX: 'start',\n                overlayY: 'center'\n            }, {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            }];\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * Function that transforms the value into a string.\n         * This function is used for displaying and filtering the content\n         * ( Default: (value) => value ? value.toString() : null; ).\n         */\n        this.valueFormatter = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            return value == null ? '' : value.toString();\n        });\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._filterFn = (/**\n         * @param {?} search\n         * @param {?} itemValue\n         * @return {?}\n         */\n        (search, itemValue) => {\n            return itemValue.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) >= 0;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this.tabIndex = parseInt(tabIndex, 10) || 0;\n    }\n    /**\n     * @return {?}\n     */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    /**\n     * Selected value\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n            this._onChange(newValue);\n        }\n    }\n    /**\n     * Whether the dropdown is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n    }\n    /**\n     * If set to 'negative', the component is displayed with the negative set of styles.\n     * @param {?} value\n     * @return {?}\n     */\n    set styles(value) {\n        if (this._style === value) {\n            return;\n        }\n        this._style = value;\n        this._negative = !!this._style.match(/negative/);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get closedDropdownLabel() {\n        return this._closedDropdownLabel;\n    }\n    /**\n     * \\@docs-private\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.isMultiSelect ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set panelOpen(value) {\n        this._panelOpen = value;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get label() {\n        return this.formFieldComponent ? this.formFieldComponent.label : '';\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getNxDropdownNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Function to be used when the user types into the search filter. The first argument is the user input,\n     * the second argument is the dropdown item value. The dropdown items will use this function to set their\n     * visibility state.\n     * A boolean should be returned.\n     * @return {?}\n     */\n    get filterFn() { return this._filterFn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set filterFn(fn) {\n        if (typeof fn !== 'function') {\n            throw getNxDropdownNonFunctionValueError();\n        }\n        this._filterFn = fn;\n    }\n    /**\n     * \\@docs-private\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this.panelOpen;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get elementRef() {\n        return this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.isMultiSelect);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._closedDropdownLabel =\n            this._customClosedDropdownLabel && this._customClosedDropdownLabel.templateRef || this._defaultClosedDropdownLabel;\n        this._initKeyManager();\n        this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    updateErrorState() {\n        /** @type {?} */\n        const oldState = this.errorState;\n        /** @type {?} */\n        const parent = this._parentFormGroup || this._parentForm;\n        /** @type {?} */\n        const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n        /** @type {?} */\n        const newState = this.isErrorState(control, parent);\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead()\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation('ltr')\n            .skipPredicate((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._hidden));\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.closePanel();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                // Delay the auto scrolling until all items have settled otherwise the item containers might\n                // not exist yet\n                this._ngZone.onStable\n                    .asObservable()\n                    .pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => this._scrollActiveOptionIntoView()));\n            }\n            else if (!this._panelOpen && !this.isMultiSelect && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.item, event.isUserInput);\n            if (event.isUserInput && !this.isMultiSelect && this._panelOpen) {\n                this.closePanel();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // defer it for the next cycle to not run in changed after checked errors\n            // the combination of dropdown-item notifying parent and when the parent\n            // tries to fetch the triggerValue from the child throws these errors\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            }));\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this.isMultiSelect) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.isMultiSelect) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.isMultiSelect && value) {\n            if (!Array.isArray(value)) {\n                throw getNxDropdownNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.isMultiSelect) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new NxDropdownSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.isMultiSelect) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => options.indexOf(a) - options.indexOf(b)));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Focuses the select element.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * Opens the panel of the dropdown.\n     * @return {?}\n     */\n    openPanel() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._panelOpen = true;\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        this._keyManager.withHorizontalOrientation(null);\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Closes the panel of the dropdown.\n     * @return {?}\n     */\n    closePanel() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation('ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n            this.openedChange.emit(false);\n            // defer the focus if the dropdown triggers actions that detach\n            // a template/view from the DOM to prevent changed after checked errors\n            setTimeout((/**\n             * @return {?}\n             */\n            () => this.focus()));\n        }\n    }\n    // calculate inital scrollTop when the dropdown opens\n    // scrolls the selected item to the middle of the panel if possible\n    /**\n     * @private\n     * @return {?}\n     */\n    _calculateScrollTop() {\n        // reset the scrolltop to make calculation easier\n        this.panelBody.nativeElement.scrollTop = 0;\n        this._scrollTop = 0;\n        if (!this.empty) {\n            /** @type {?} */\n            const offset = this._getItemOffset(this._keyManager.activeItem);\n            /** @type {?} */\n            const panelHeight = this.panelBody.nativeElement.offsetHeight;\n            /** @type {?} */\n            const panelRect = this.panelBody.nativeElement.getBoundingClientRect();\n            /** @type {?} */\n            const middleOfPanel = panelRect.top + panelHeight / 2;\n            /** @type {?} */\n            const activeItemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n            if (offset > middleOfPanel) {\n                // because we reset the scrollTop to 0 at the top we can simply take the middleOfPanel which is our\n                // target position for the item and subtract it from the offset (which is now always relative to the viewport)\n                // to middle out the text a bit more add half of the height\n                // (this is still a few pixels off because the container is a bit larger than the font)\n                this._scrollTop = offset - middleOfPanel + (activeItemRect.height - itemPadding) / 2;\n                this.panelBody.nativeElement.scrollTop = this._scrollTop;\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        if (!this.panelOpen || !this._keyManager.activeItem) {\n            return;\n        }\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const itemRect = this._keyManager.activeItem.containerElement.nativeElement.getBoundingClientRect();\n        /** @type {?} */\n        const labelCount = this._countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.groups);\n        this.panelBody.nativeElement.scrollTop = this._getOptionScrollPosition(activeOptionIndex + labelCount, itemRect.height, this.panelBody.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * @private\n     * @param {?} optionIndex\n     * @param {?} options\n     * @param {?} optionGroups\n     * @return {?}\n     */\n    _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n        if (optionGroups.length) {\n            /** @type {?} */\n            const optionsArray = options.toArray();\n            /** @type {?} */\n            const groups = optionGroups.toArray();\n            /** @type {?} */\n            let groupCounter = 0;\n            for (let i = 0; i < optionIndex + 1; i++) {\n                if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                    groupCounter++;\n                }\n            }\n            return groupCounter;\n        }\n        return 0;\n    }\n    /**\n     * @private\n     * @param {?} optionIndex\n     * @param {?} optionHeight\n     * @param {?} currentScrollPosition\n     * @param {?} panelHeight\n     * @return {?}\n     */\n    _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n        /** @type {?} */\n        let optionOffset = optionIndex * optionHeight + itemPadding;\n        if (this.showFilter) {\n            /** @type {?} */\n            const filterHeight = this.panel.nativeElement.querySelector('.nx-dropdown__filter').getBoundingClientRect().height;\n            optionOffset = optionIndex * optionHeight + filterHeight;\n        }\n        if (optionOffset < currentScrollPosition) {\n            return optionOffset;\n        }\n        if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n            return Math.max(0, optionOffset - panelHeight + optionHeight);\n        }\n        return currentScrollPosition;\n    }\n    /**\n     * @private\n     * @param {?} item\n     * @return {?}\n     */\n    _getItemOffset(item) {\n        /** @type {?} */\n        const itemRect = item.containerElement.nativeElement.getBoundingClientRect();\n        return itemRect.top;\n    }\n    /**\n     * \\@docs-private\n     * Formfield Implementation\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this.ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    setAriaLabel(value) {\n        this._ariaLabel = value;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaLabel() {\n        return this._ariaLabel || (this.formFieldComponent ? this.formFieldComponent.label : null);\n    }\n    /**\n     * \\@docs-private\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get hasValue() {\n        return this._selectionModel.hasValue();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /** End Formfield */\n    /** ControlValueAccessor */\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * End ControlValueAccessor\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.isMultiSelect || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.openPanel();\n        }\n        else if (!this.isMultiSelect && !this.disabled) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // all events other than the listed ones should be ignored or handled in _onFilter()\n        if (!([DOWN_ARROW, UP_ARROW, HOME, END, ENTER, LEFT_ARROW, RIGHT_ARROW, SHIFT, SPACE, TAB].indexOf(keyCode) >= 0)) {\n            return;\n        }\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const allHidden = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._hidden)).every((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => Boolean(option)));\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.closePanel();\n        }\n        else if (keyCode === ENTER && manager.activeItem && !allHidden) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (keyCode === ENTER && allHidden) {\n            event.preventDefault();\n            this.closePanel();\n        }\n        else if (!this.showFilter && keyCode === SPACE && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (keyCode === TAB) {\n            this.closePanel();\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this.isMultiSelect && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    formatValue(value) {\n        return this.valueFormatter(value);\n    }\n    /**\n     * Called when the user types in the filter input\n     * @param {?} event\n     * @return {?}\n     */\n    _onFilter(event) {\n        event.preventDefault();\n        this.currentFilter = event.target.value;\n        this.filterChanges.next(event.target.value);\n        /** @type {?} */\n        const allHidden = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._hidden)).every((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => Boolean(option)));\n        if (allHidden) {\n            this._keyManager.setActiveItem(null);\n        }\n        else {\n            this._keyManager.setFirstItemActive();\n        }\n    }\n    /**\n     * \\@docs-private\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this.isMultiSelect) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this._changeDetectorRef.markForCheck();\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.panelBody.nativeElement.focus();\n            if (this._keyManager.activeItem) {\n                this._calculateScrollTop();\n            }\n            this._changeDetectorRef.markForCheck();\n            this.openedChange.emit(true);\n            if (this.showFilter) {\n                this.filterInput.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (this.filterInput && this.showFilter) {\n            this._clearFilter();\n        }\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get isFilterEmpty() {\n        return this.currentFilter.length === 0;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    _clearFilter() {\n        this.filterInput.nativeElement.value = '';\n        this.currentFilter = '';\n        this.filterChanges.next('');\n    }\n    /**\n     * \\@docs-private determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n}\nNxDropdownComponent$1.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-dropdown',\n                template: \"\\n<!-- input and stuff-->\\n<div cdkOverlayOrigin\\n    #origin=\\\"cdkOverlayOrigin\\\"\\n    class=\\\"nx-dropdown__container\\\"\\n    #trigger>\\n  <div class=\\\"nx-dropdown__rendered\\\">\\n    <ng-container *ngTemplateOutlet=\\\"closedDropdownLabel\\\"></ng-container>\\n  </div>\\n  <div class=\\\"nx-dropdown__icon\\\">\\n    <nx-icon class=\\\"nx-dropdown__chevron\\\" name=\\\"chevron-down\\\"></nx-icon>\\n  </div>\\n</div>\\n\\n<ng-template #defaultClosedDropdownLabel>\\n  <div *ngIf=\\\"triggerValue\\\">{{ triggerValue }}</div>\\n</ng-template>\\n\\n<!-- overlay -->\\n<ng-template\\n  cdkConnectedOverlay\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayFlexibleDimensions]=\\\"true\\\"\\n  [cdkConnectedOverlayViewportMargin]=\\\"_overlayViewportMargin\\\"\\n  [cdkConnectedOverlayPush]=\\\"true\\\"\\n  (backdropClick)=\\\"closePanel()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"closePanel()\\\">\\n\\n  <div class=\\\"nx-dropdown__panel\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\"\\n      #panel>\\n    <div class=\\\"nx-dropdown__panel-header\\\" *ngIf=\\\"label\\\">\\n      {{ label }}\\n    </div>\\n    \\n    <div class=\\\"nx-dropdown__panel-body\\\" tabindex=\\\"-1\\\" #panelBody role=\\\"listbox\\\" [attr.aria-activedescendant]=\\\"_getAriaActiveDescendant()\\\" [attr.aria-multiselectable]=\\\"isMultiSelect\\\">\\n        <div class=\\\"nx-dropdown__filter\\\" *ngIf=\\\"showFilter\\\">\\n          <input class=\\\"nx-dropdown__filter-input\\\" [class.is-filled]=\\\"!isFilterEmpty\\\"  #filterInput type=\\\"text\\\" (input)=\\\"_onFilter($event)\\\" [placeholder]=\\\"filterPlaceholder\\\">\\n          <span class=\\\"nx-dropdown__filter-icon\\\" *ngIf=\\\"!isFilterEmpty\\\" (click)=\\\"_clearFilter()\\\">\\n            <nx-icon name=\\\"close\\\"></nx-icon>\\n          </span>\\n        </div>\\n        <ng-content></ng-content>\\n      </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: NxDropdownControl, useExisting: NxDropdownComponent$1 },\n                    { provide: NxFormfieldControl, useExisting: NxDropdownComponent$1 },\n                ],\n                host: {\n                    'role': 'button',\n                    '[class.nx-dropdown]': 'true',\n                    '[class.is-filled]': 'hasValue',\n                    '[class.has-focus]': 'focused',\n                    '[class.nx-dropdown--negative]': '_negative',\n                    '[class.nx-dropdown--disabled]': 'disabled',\n                    '[attr.aria-describedby]': 'ariaDescribedby || null',\n                    '[attr.aria-required]': 'required',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-haspopup]': '\"listbox\"',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.tabindex]': 'tabIndex',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(click)': 'openPanel()'\n                },\n                styles: [\":host{display:block}:host:focus{outline:0}:host(.nx-dropdown--negative):focus{font-weight:600}:host(.nx-dropdown--negative){color:#fff}.nx-dropdown__container{display:flex;justify-content:flex-end;cursor:pointer}:host(.nx-dropdown--disabled) .nx-dropdown__container{cursor:not-allowed}.nx-dropdown__rendered{flex:1 1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.nx-dropdown__panel{box-shadow:0 2px 4px rgba(65,65,65,.5);border-radius:4px;background-color:#fff;min-width:100%}.nx-dropdown__panel ::ng-deep .nx-checkbox__label{font-size:20px}.nx-dropdown__panel:focus{outline:0}.nx-dropdown__icon{font-size:24px;line-height:1}.nx-dropdown__panel-header{line-height:16px;font-size:12px;padding:8px 24px;background-color:#ececec;border-top-left-radius:4px;border-top-right-radius:4px;z-index:1;font-weight:600}.nx-dropdown__panel-body{max-height:280px;overflow-y:auto;outline:0}.nx-dropdown__filter{position:relative;padding:16px 32px 24px}.nx-dropdown__filter-input{font-size:20px;border:0;border-bottom:1px solid #d9d9d9;color:#414141;width:100%;outline:0;background-color:transparent;font-weight:300}.nx-dropdown__filter-icon{position:absolute;right:32px;top:16px;cursor:pointer}.nx-dropdown__filter-icon nx-icon{font-size:24px}.nx-dropdown__filter-input.is-filled:focus{color:#007ab3;font-weight:600;border-bottom:1px solid #007ab3;overflow:ellipsis}.nx-dropdown__filter-input.is-filled:focus+.nx-dropdown__filter-icon{color:#007ab3}@media screen and (-ms-high-contrast:active){.nx-dropdown__panel{box-shadow:0 0 0 1px windowText}}\"]\n            }] }\n];\n/** @nocollapse */\nNxDropdownComponent$1.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NxFormfieldComponent, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] }\n];\nNxDropdownComponent$1.propDecorators = {\n    tabIndex: [{ type: Input }],\n    _ariaLabel: [{ type: Input, args: ['nxAriaLabel',] }],\n    value: [{ type: Input, args: ['nxValue',] }],\n    disabled: [{ type: Input, args: ['nxDisabled',] }],\n    required: [{ type: Input, args: ['nxRequired',] }],\n    styles: [{ type: Input, args: ['nxStyle',] }],\n    showFilter: [{ type: Input, args: ['nxShowFilter',] }],\n    filterPlaceholder: [{ type: Input, args: ['nxFilterPlaceholder',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    filterChanges: [{ type: Output, args: ['filterInput',] }],\n    valueChange: [{ type: Output, args: ['nxValueChange',] }],\n    selectionChange: [{ type: Output }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    panelBody: [{ type: ViewChild, args: ['panelBody',] }],\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    filterInput: [{ type: ViewChild, args: ['filterInput',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [NxDropdownItemComponent, { descendants: true },] }],\n    groups: [{ type: ContentChildren, args: [NxDropdownGroupComponent,] }],\n    _customClosedDropdownLabel: [{ type: ContentChild, args: [NxDropdownClosedLabelDirective,] }],\n    _defaultClosedDropdownLabel: [{ type: ViewChild, args: ['defaultClosedDropdownLabel',] }],\n    valueFormatter: [{ type: Input, args: ['nxValueFormatter',] }],\n    compareWith: [{ type: Input }],\n    filterFn: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxDropdownModule {\n}\nNxDropdownModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxFormfieldModule,\n                    NxCheckboxModule,\n                    OverlayModule,\n                    A11yModule,\n                    NxIconModule,\n                    ObserversModule\n                ],\n                declarations: [\n                    NxDropdownComponent$1,\n                    NxDropdownItemComponent,\n                    NxDropdownGroupComponent,\n                    NxDropdownClosedLabelDirective\n                ],\n                exports: [\n                    NxDropdownComponent$1,\n                    NxDropdownItemComponent,\n                    NxDropdownGroupComponent,\n                    NxDropdownClosedLabelDirective\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option selected event\n */\nclass NxAutocompleteOptionSelected {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\nclass NxAutocompleteOptionComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     */\n    constructor(elementRef, _changeDetectorRef) {\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._id = `nx-autocomplete-option-${_uniqueIdCounter++}`;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        this.onSelectionChange = new EventEmitter();\n    }\n    /**\n     * Id of the autocomplete option. By default it is set to an incremented value.\n     * @return {?}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n        }\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new NxAutocompleteOptionSelected(this, isUserInput));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get viewValue() {\n        return (this.elementRef.nativeElement.textContent || '').trim();\n    }\n    /**\n     * \\@docs-private\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * \\@docs-private\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * \\@docs-private\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        this._selected = true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent();\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        this._selected = false;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent();\n    }\n    /**\n     * \\@docs-private\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    focus() {\n        /** @type {?} */\n        const element = this.elementRef.nativeElement;\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n}\nNxAutocompleteOptionComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-autocomplete-option',\n                template: \"<div class=\\\"nx-autocomplete-option\\\" [class.nx-active]=\\\"active\\\">\\n  <div class=\\\"nx-autocomplete-option__label\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '[class.nx-active]': 'active',\n                    '[class.nx-disabled]': 'disabled',\n                    '[style.display]': '\\'block\\'' // needed for to be able to calculate offset height\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host:focus{outline:0}.nx-autocomplete-option{font-size:20px;line-height:28px;letter-spacing:.2px;padding:0 32px 16px 8px;cursor:pointer;position:relative;display:flex;max-width:100%;white-space:nowrap}.nx-autocomplete-option.nx-active,.nx-autocomplete-option:hover{color:#007ab3}@media screen and (-ms-high-contrast:active){.nx-autocomplete-option.nx-active,.nx-autocomplete-option:hover{color:highlightText}}.nx-autocomplete-option__label{overflow:hidden;text-overflow:ellipsis;padding:0 12px;margin:0 -12px}:host-context([data-whatinput=keyboard]) .nx-autocomplete-option.nx-active .nx-autocomplete-option__label{border-radius:4px;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}\"]\n            }] }\n];\n/** @nocollapse */\nNxAutocompleteOptionComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNxAutocompleteOptionComponent.propDecorators = {\n    disabled: [{ type: Input }],\n    value: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass NxAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nclass NxAutocompleteComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     */\n    constructor(_changeDetectorRef, _elementRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        this._items = null;\n        this._hasItems = false;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `nx-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // As autocomplete option can hold any value, we might need a converter\n        // to get a string representation, which can be stored in input. Default value ? value.toString() : null.\n        /**\n         * Value to string converter.\n         */\n        this.valueFormatter = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => value ? value.toString() : null);\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Items observable. If given, autocomplete takes care of the options and ng-content is discarderd\n     * @param {?} val\n     * @return {?}\n     */\n    set items(val) {\n        this._hasItems = true;\n        if (Array.isArray(val)) {\n            this._items = val;\n        }\n        else if (val instanceof Observable) {\n            if (this._itemsSubscription) {\n                this._itemsSubscription.unsubscribe();\n            }\n            this._itemsSubscription = val.subscribe((/**\n             * @param {?} itms\n             * @return {?}\n             */\n            (itms) => {\n                this._items = itms;\n                this._changeDetectorRef.markForCheck();\n                // and check visibility in next cycle, when options are set\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._setVisibility()));\n            }));\n        }\n        else if (val === null) {\n            this._items = val;\n        }\n        else {\n            throw new Error('Invalid argument for autocomplete items. It has to be Array<string> or Observable<Array<string>>');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get items() {\n        return this._items;\n    }\n    /**\n     * \\@docs-private\n     * Is items observable set\n     * @return {?}\n     */\n    get hasItems() {\n        return this._hasItems;\n    }\n    /**\n     * Autocomplete options\n     * @return {?}\n     */\n    get options() {\n        return this.hasItems ? this._vOptions : this._cOptions;\n    }\n    /**\n     * Takes classes set on the host nx-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            value.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            className => this._classList[className.trim()] = true));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._itemsSubscription) {\n            this._itemsSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!(this.options && this.options.length);\n        this._classList['nx-autocomplete-visible'] = this.showPanel;\n        this._classList['nx-autocomplete-hidden'] = !this.showPanel;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new NxAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n}\nNxAutocompleteComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"nx-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-container *ngIf=\\\"hasItems\\\">\\n      <nx-autocomplete-option *ngFor=\\\"let item of items\\\" [value]=\\\"item\\\">\\n        {{item}}\\n      </nx-autocomplete-option>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"!hasItems\\\">\\n      <ng-content></ng-content>\\n    </ng-container>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'nxAutocomplete',\n                host: {\n                    'class': 'nx-autocomplete'\n                },\n                styles: [\":host ::ng-deep .c-input::-ms-clear{width:0;height:0}.nx-autocomplete-panel{background-color:#fff;box-shadow:0 2px 4px rgba(65,65,65,.5);padding:24px;overflow-y:auto;overflow-x:hidden;max-height:336px;width:100%;border-radius:4px}.nx-autocomplete-panel.nx-autocomplete-visible{visibility:visible}.nx-autocomplete-panel.nx-autocomplete-hidden{visibility:hidden}@media screen and (-ms-high-contrast:active){.nx-autocomplete-panel{box-shadow:0 0 0 1px windowText}}\"]\n            }] }\n];\n/** @nocollapse */\nNxAutocompleteComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\nNxAutocompleteComponent.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef,] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    items: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    _vOptions: [{ type: ViewChildren, args: [NxAutocompleteOptionComponent,] }],\n    _cOptions: [{ type: ContentChildren, args: [NxAutocompleteOptionComponent, { descendants: true },] }],\n    classList: [{ type: Input, args: ['class',] }],\n    valueFormatter: [{ type: Input, args: ['nxValueFormatter',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst NX_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NxAutocompleteTriggerDirective)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @return {?}\n */\nfunction getNxAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `nx-autocomplete`. ' +\n        'Make sure that the id passed to the `nxAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass NxAutocompleteTriggerDirective {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _nxFormField\n     * @param {?} _nxWordField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, _dir, _nxFormField, _nxWordField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._nxFormField = _nxFormField;\n        this._nxWordField = _nxWordField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Value changes\n         */\n        this._valueChanges = new Subject();\n        this._itemsCb = null;\n        this._debounce = 400;\n        this._autocompleteDisabled = false;\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }));\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @param {?} val\n         * @return {?}\n         */\n        (val) => {\n            this._valueChanges.next(val);\n        });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * The items callback. Called with input value, must return Observable of Array of strings\n     * @param {?} val\n     * @return {?}\n     */\n    set itemsCb(val) {\n        if (typeof val === 'function') {\n            this._itemsCb = val;\n        }\n        else {\n            throw new Error('Wrong value type for nxAutocompleteItems');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get itemsCb() {\n        return this._itemsCb;\n    }\n    /**\n     * Debounce in ms before items callback is triggered. Defaults to 400\n     * @param {?} val\n     * @return {?}\n     */\n    set debounce(val) {\n        this._debounce = coerceNumberProperty(val);\n    }\n    /**\n     * Whether autocomplete functionality is disabled.\n     * @param {?} val\n     * @return {?}\n     */\n    set autocompleteDisabled(val) {\n        this._autocompleteDisabled = val;\n        this._bindAutocompleteItems();\n    }\n    /**\n     * @return {?}\n     */\n    get autocompleteDisabled() {\n        return this._autocompleteDisabled;\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * The currently active option, coerced to NxAutocompleteOptionComponent type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    get _outsideClickStream() {\n        if (!this._document) {\n            return of(null);\n        }\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ (event.target));\n            /** @type {?} */\n            const formField = this._formField ?\n                this._formField.elementRef.nativeElement : null;\n            return this._overlayAttached &&\n                clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get _formField() {\n        if (this._nxFormField) {\n            return this._nxFormField;\n        }\n        else if (this._nxWordField) {\n            return this._nxWordField;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n        if (this._controlValueChangesSubscription) {\n            this._controlValueChangesSubscription.unsubscribe();\n        }\n        if (this._itemsSubscription) {\n            this._itemsSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._bindAutocompleteItems();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._bindAutocompleteItems();\n    }\n    /**\n     * Binds or rebinds the autocomplete items. Prerequisites:\n     * - items callback has to be defined\n     * - autocomplete panel has to be bound\n     * @private\n     * @return {?}\n     */\n    _bindAutocompleteItems() {\n        if (this._controlValueChangesSubscription) {\n            this._controlValueChangesSubscription.unsubscribe();\n        }\n        if (typeof this._itemsCb === 'function' && this.autocomplete && !this.autocompleteDisabled) {\n            /** @type {?} */\n            const itemsSubject = new Subject();\n            this.autocomplete.items = itemsSubject;\n            /** @type {?} */\n            const valueChanges = this._formField &&\n                this._formField._control &&\n                this._formField._control.ngControl &&\n                this._formField._control.ngControl.valueChanges ?\n                this._formField._control.ngControl.valueChanges : this._valueChanges;\n            this._controlValueChangesSubscription = valueChanges.pipe(debounceTime(this._debounce))\n                .subscribe((/**\n             * @param {?} input\n             * @return {?}\n             */\n            (input) => {\n                if (this._itemsSubscription) {\n                    this._itemsSubscription.unsubscribe();\n                }\n                this._itemsSubscription = this._itemsCb(input).pipe(first()).subscribe((/**\n                 * @param {?} result\n                 * @return {?}\n                 */\n                (result) => {\n                    itemsSubject.next(result);\n                }), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    // On error reset\n                    // TODO: Log error?\n                    itemsSubject.next([]);\n                }));\n            }));\n        }\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        if (!this.autocompleteDisabled) {\n            this._attachOverlay();\n            this._floatLabel();\n        }\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._outsideClickStream, this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of());\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n        // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n        if (this.panelOpen && (keyCode === ESCAPE || (keyCode === UP_ARROW && event.altKey))) {\n            this._resetActiveItem();\n            this._closeKeyEventStream.next();\n            event.stopPropagation();\n        }\n        else if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._isFieldEnabled()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value === '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._isFieldEnabled() && this._previousValue !== value &&\n            document.activeElement === event.target) {\n            this._previousValue = value;\n            this._onChange(value);\n            this.openPanel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (this._isFieldEnabled()) {\n            this._previousValue = this._element.nativeElement.value;\n            this.openPanel();\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @return {?}\n     */\n    _floatLabel() {\n        if (this._nxFormField && this._nxFormField.floatLabel === 'auto') {\n            this._nxFormField.floatLabel = 'always';\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._nxFormField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        if (this.autocomplete.options.length === 0) {\n            return;\n        }\n        /** @type {?} */\n        let optionOffset = 0;\n        /** @type {?} */\n        const optionHeight = this.autocomplete.options.first.elementRef.nativeElement.offsetHeight;\n        if (this.autocomplete._keyManager.activeItem) {\n            optionOffset = this.autocomplete._keyManager.activeItem.elementRef.nativeElement.offsetTop;\n        }\n        /** @type {?} */\n        const newScrollPosition = _getOptionScrollPosition(optionOffset, optionHeight, this.autocomplete._getScrollTop(), this.autocomplete.panel.nativeElement.offsetHeight);\n        this.autocomplete._setScrollTop(newScrollPosition);\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.valueFormatter ?\n            this.autocomplete.valueFormatter(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `NxFormField` or `NxWord`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getNxAutocompleteMissingPanelError();\n        }\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            this._overlayRef = this._overlay.create(this._getOverlayConfig());\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && this._overlayRef) {\n                        this._overlayRef.updateSize({ minWidth: this._getHostWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            /** Update the panel width, in case the host width has changed */\n            this._overlayRef.updateSize({ minWidth: this._getHostWidth() });\n        }\n        if (this._overlayRef && !this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            minWidth: this._getHostWidth(),\n            direction: this._dir ? this._dir.value : 'ltr'\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        this._positionStrategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withViewportMargin(16)\n            .withPush(false)\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            }\n        ]);\n        return this._positionStrategy;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _scrollStrategy() {\n        return this._overlay.scrollStrategies.reposition();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * Returns the width of the input element, so the panel min-width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _isFieldEnabled() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled;\n    }\n}\nNxAutocompleteTriggerDirective.decorators = [\n    { type: Directive, args: [{\n                selector: `input[nxAutocomplete], textarea[nxAutocomplete]`,\n                host: {\n                    'role': 'combobox',\n                    'autocomplete': 'off',\n                    'aria-autocomplete': 'list',\n                    '[attr.aria-activedescendant]': 'activeOption?.id',\n                    '[attr.aria-expanded]': 'panelOpen.toString()',\n                    '[attr.aria-owns]': 'autocomplete?.id',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                },\n                exportAs: 'nxAutocompleteTrigger',\n                providers: [NX_AUTOCOMPLETE_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nNxAutocompleteTriggerDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NxFormfieldComponent, decorators: [{ type: Optional }, { type: Host }] },\n    { type: NxWordComponent, decorators: [{ type: Optional }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nNxAutocompleteTriggerDirective.propDecorators = {\n    autocomplete: [{ type: Input, args: ['nxAutocomplete',] }],\n    itemsCb: [{ type: Input, args: ['nxAutocompleteItems',] }],\n    debounce: [{ type: Input, args: ['nxAutocompleteDebounce',] }],\n    autocompleteDisabled: [{ type: Input, args: ['nxAutocompleteDisabled',] }]\n};\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionOffset Option offset\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxAutocompleteModule$1 {\n}\nNxAutocompleteModule$1.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n                exports: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n                imports: [CommonModule, OverlayModule, A11yModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxWordComponent$1 {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _renderer\n     * @param {?} _overlay\n     */\n    constructor(elementRef, _changeDetectorRef, _renderer, _overlay) {\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._renderer = _renderer;\n        this._overlay = _overlay;\n        this.subscription = Subscription.EMPTY;\n        this.subscriptionValues = Subscription.EMPTY;\n        /**\n         * \\@docs-private\n         */\n        this.hasErrors = false;\n        /**\n         * \\@docs-private\n         */\n        this.inputChanges = new Subject();\n        /**\n         * \\@docs-private\n         */\n        this.currentTextWidth = 0;\n        // this will apply different min-widths to our component through our styles\n        /**\n         * Provide a hint for a minimal width. The actual size will be determined for inputs for each change.\n         */\n        this.size = 'regular';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        this.subscription = this._control.stateChanges.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.hasErrors = this._control.errorState;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // if we have a ngcontrol available stick to its valueChanges subject\n        if (this._control.ngControl) {\n            this.subscriptionValues = this._control.ngControl.valueChanges.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => {\n                this.updateCurrentTextWidth();\n                this.inputChanges.next();\n            }));\n            // in any other case it is a bre input and input changes are signaled through simple state changes\n        }\n        else {\n            this.subscriptionValues = this._control.stateChanges.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => {\n                this.updateCurrentTextWidth();\n                this.inputChanges.next();\n            }));\n        }\n        this._control.setAriaLabel(this.label);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    /**\n     * \\@docs-private\n     * Calculate the width of the full text given by the input,\n     * that value is bound to this component so it can grow.\n     * The involved input is known to have a width of 100% an will fit the additional space given\n     * which completes the auto growing behavior.\n     * @return {?}\n     */\n    updateCurrentTextWidth() {\n        // provide the canvas only lazy\n        if (!this.measureCanvas) {\n            this.measureCanvas = this._renderer.createElement('canvas');\n        }\n        /** @type {?} */\n        const ctx = this.measureCanvas.getContext('2d');\n        /** @type {?} */\n        const inputRef = this._control.elementRef;\n        /** @type {?} */\n        const styles = window.getComputedStyle(inputRef.nativeElement);\n        ctx.font = getFontShorthand(styles);\n        /** @type {?} */\n        const metrics = ctx.measureText(this._control.value);\n        // add 1px (cursor width) to prevent jumping of the text on blur.\n        /** @type {?} */\n        const newWidth = metrics.width + parseInt(styles.paddingRight, 10) + parseInt(styles.paddingLeft, 10) + 1;\n        // This should be injected via @Host to get an exact reference to NxNaturalLanguageFormComponent\n        // Works as promised as long as there is not other tag around the word. Not expected but possible.\n        /** @type {?} */\n        const parent = this.elementRef.nativeElement.parentElement;\n        /** @type {?} */\n        const parentMeasurement = parent.getBoundingClientRect();\n        // Limit to own given minimal width\n        this.currentTextWidth = Math.max(parseInt(styles.minWidth, 10), newWidth);\n        // Limit to container width\n        this.currentTextWidth = Math.min(this.currentTextWidth, parentMeasurement.width);\n        this._popover.updatePosition();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    repositionError() {\n        if (this._popover) {\n            this._popover.updatePosition();\n        }\n    }\n    // Fail if the required control is missing.\n    /**\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw new Error('NxWordComponent requires an NxFormfieldControl compatible input.');\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this.elementRef;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get isFocused() {\n        return this._control.focused;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get isFilled() {\n        return !this._control.empty;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get hasDropdown() {\n        return Boolean(this._dropdown);\n    }\n}\nNxWordComponent$1.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-word',\n                template: \"<div\\n  class=\\\"nx-word__input-wrapper\\\"\\n  [nxPopoverTriggerFor]=\\\"popoverHover\\\"\\n  nxPopoverTrigger='manual'\\n  nxPopoverCloseable=\\\"false\\\"\\n  nxPopoverDirection=\\\"top\\\"\\n  [nxPopoverShow]=\\\"hasErrors && _errorChildren.length > 0\\\">\\n\\n  <!-- We only allow formfield controls here -->\\n  <div *ngIf=\\\"!hasDropdown\\\" class=\\\"nx-word__inner-wrapper\\\">\\n    <ng-content select=\\\"[nxInput]\\\"></ng-content>\\n  </div>\\n  <ng-content select=\\\"nx-dropdown\\\"></ng-content>\\n</div>\\n\\n<nx-popover #popoverHover>\\n  <ng-content select=\\\"[nxError]\\\"></ng-content>\\n</nx-popover>\\n\",\n                host: {\n                    '[class.size-short]': 'size == \"short\"',\n                    '[class.size-regular]': 'size == \"regular\"',\n                    '[class.size-long]': 'size == \"long\"',\n                    '[class.has-error]': 'hasErrors',\n                    '[class.is-focused]': 'isFocused',\n                    '[class.is-filled]': 'isFilled',\n                    '[class.has-dropdown]': 'hasDropdown',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:inline-block;position:relative;font-weight:400;text-align:center;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none;width:100%}:host .nx-word__inner-wrapper{border-bottom:2px solid #d9d9d9}:host.size-short{min-width:80px}:host.size-regular{min-width:152px}:host.size-long{min-width:360px}@media (max-width:991px){:host.size-long{min-width:280px}}@media (max-width:703px){:host.size-long{min-width:248px}}:host ::ng-deep .c-input{display:inline-block;text-align:inherit;font-size:inherit;line-height:inherit;background:0 0;color:inherit;border:none;outline:0;margin:0;width:100%;max-width:100%;height:auto;box-shadow:none;padding:0 8px}:host ::ng-deep .c-input.is-focused{outline:0;box-shadow:none;border-bottom-width:2px}:host ::ng-deep .c-input.is-filled,:host ::ng-deep .c-input.is-focused{color:#006192;font-weight:400}:host ::ng-deep .c-input.is-disabled{cursor:not-allowed}:host ::ng-deep .c-input::-ms-clear{display:none}:host ::ng-deep nx-dropdown{position:relative;border-bottom:2px solid #d9d9d9}:host ::ng-deep nx-dropdown .nx-dropdown__container{font-size:inherit;margin-bottom:-2px}:host ::ng-deep nx-dropdown.is-filled{border-color:#007ab3;color:#006192}:host ::ng-deep nx-dropdown .nx-dropdown__icon{line-height:inherit}:host ::ng-deep .nx-word__input-wrapper{width:100%}:host(.is-filled) .nx-word__inner-wrapper,:host(.is-focused) .nx-word__inner-wrapper{border-color:#007ab3}:host(.has-error) .nx-word__inner-wrapper{border-color:#dc3149}:host.has-error ::ng-deep nx-dropdown{color:#dc3149;border-color:#dc3149}:host.has-error ::ng-deep .c-input.has-error{color:#dc3149}:host-context(.is-negative) ::ng-deep .nx-dropdown,:host-context(.is-negative) ::ng-deep nx-dropdown,:host-context(.is-negative) ::ng-deep nx-dropdown.is-filled{border-color:#fff;color:#fff}:host-context(.is-negative) ::ng-deep .c-input{color:#fff}:host-context(.is-negative) .nx-word__inner-wrapper{border-color:#fff}.nx-word__inner-wrapper{height:52px}@media (max-width:991px){:host ::ng-deep nx-dropdown .nx-dropdown__container{font-size:26px}.nx-word__inner-wrapper{height:36px}}:host-context(.nx-natural-language-form--small) .nx-word__inner-wrapper{height:36px}:host-context(.nx-natural-language-form--small) ::ng-deep nx-dropdown .nx-dropdown__container{margin-bottom:2px}\"]\n            }] }\n];\n/** @nocollapse */\nNxWordComponent$1.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: Overlay }\n];\nNxWordComponent$1.propDecorators = {\n    _control: [{ type: ContentChild, args: [NxFormfieldControl,] }],\n    _errorChildren: [{ type: ContentChildren, args: [NxFormfieldErrorDirective,] }],\n    _popover: [{ type: ViewChild, args: [NxPopoverTriggerDirective,] }],\n    _dropdown: [{ type: ContentChild, args: [NxDropdownComponent,] }],\n    currentTextWidth: [{ type: HostBinding, args: ['style.width.px',] }],\n    size: [{ type: Input, args: ['nxSize',] }],\n    label: [{ type: Input, args: ['nxLabel',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_SIZE$3 = 'large';\nclass NxNaturalLanguageFormComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._negative = false;\n        /**\n         * \\@docs-private\n         */\n        this.resizeEvent$ = new Subject();\n        /**\n         * \\@docs-private\n         */\n        this.updatePopoversSubscription = Subscription.EMPTY;\n        /**\n         * \\@docs-private\n         */\n        this._size = DEFAULT_SIZE$3;\n    }\n    /**\n     * Whether the negative set of stylings should be used.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Sets the size of the NLF. Default value: large\n     * @param {?} value\n     * @return {?}\n     */\n    set size(value) {\n        this._size = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onResize(event) {\n        this.resizeEvent$.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Collect all words and listen for changes so we can update any open error popover\n        // which would otherwise get wrongly positioned.\n        /** @type {?} */\n        const subjects = this._words.map((/**\n         * @param {?} word\n         * @return {?}\n         */\n        (word) => word.inputChanges));\n        /** @type {?} */\n        const source = merge(...subjects);\n        this.updatePopoversSubscription = source.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updatePositionPopovers();\n        }));\n        this.resizeObservable = this.resizeEvent$.pipe(throttleTime(500), delay(100));\n        this.resizeObservable.subscribe((/**\n         * @return {?}\n         */\n        () => this.resizeWords()));\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    resizeWords() {\n        this._words.forEach((/**\n         * @param {?} word\n         * @return {?}\n         */\n        (word) => {\n            word.updateCurrentTextWidth();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.updatePopoversSubscription.unsubscribe();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    updatePositionPopovers() {\n        if (this._words) {\n            this._words.forEach((/**\n             * @param {?} word\n             * @return {?}\n             */\n            (word) => {\n                word.repositionError();\n            }));\n        }\n    }\n}\nNxNaturalLanguageFormComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-natural-language-form',\n                template: \"<div class=\\\"nx-natural-language-form__wrapper\\\">\\n    <ng-content></ng-content>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.is-negative]': 'negative',\n                    '[class.nx-natural-language-form--small]': 'size === \"small\"',\n                    '[class.nx-natural-language-form--large]': 'size === \"large\"',\n                },\n                styles: [\":host{display:block;padding-top:72px;padding-bottom:80px;color:#414141;font-weight:300;font-size:40px;line-height:52px}:host ::ng-deep .c-input{font-size:inherit;line-height:inherit}:host ::ng-deep nx-word+nx-word{margin-left:2px}:host.is-negative{color:#fff}@media (max-width:991px){:host{font-size:26px;line-height:36px}}@media (max-width:703px){:host{font-size:26px}}.nx-natural-language-form__wrapper{display:flex;flex-wrap:wrap}.nx-natural-language-form__wrapper>::ng-deep *{margin-bottom:8px}:host(.nx-natural-language-form--small){font-size:26px;line-height:32px;letter-spacing:.3px}:host(.nx-natural-language-form--small) ::ng-deep .c-input{font-size:inherit;line-height:inherit}\"]\n            }] }\n];\n/** @nocollapse */\nNxNaturalLanguageFormComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxNaturalLanguageFormComponent.propDecorators = {\n    _words: [{ type: ContentChildren, args: [NxWordComponent$1,] }],\n    negative: [{ type: Input, args: ['nxNegative',] }],\n    size: [{ type: Input }],\n    onResize: [{ type: HostListener, args: ['window:orientationchange', ['$event'],] }, { type: HostListener, args: ['window:resize', ['$event'],] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxNaturalLanguageFormModule {\n}\nNxNaturalLanguageFormModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxInputModule,\n                    NxPopoverModule\n                ],\n                declarations: [\n                    NxNaturalLanguageFormComponent,\n                    NxWordComponent$1\n                ],\n                exports: [\n                    NxNaturalLanguageFormComponent,\n                    NxWordComponent$1\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ICONS = {\n    info: 'info-circle',\n    error: 'exclamation-circle',\n    success: 'check-circle',\n    warning: 'exclamation-triangle'\n};\nclass NxMessageComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._context = 'regular';\n        this._showIcon = false;\n        this._closable = false;\n        this._closeButtonLabel = 'Close dialog';\n        /**\n         * Event emitted when the close icon of the message has been clicked.\n         */\n        this.closeEvent = new EventEmitter();\n    }\n    /**\n     * Sets the context of the message.\n     * The message box will color accordingly. Default: 'regular'\n     * @param {?} value\n     * @return {?}\n     */\n    set context(value) {\n        if (value !== this._context) {\n            this._context = value;\n            this._icon = this.getIconName();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get context() {\n        return this._context;\n    }\n    /**\n     * Whether an icon that belongs to the context of the message should be displayed.\n     * @deprecated The `showIcon` attribute should be always true in future. Messages without an icon are deprecated.\n     * \\@deletion-target 9.0.0\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    set showIcon(value) {\n        this._showIcon = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get showIcon() {\n        return this._showIcon;\n    }\n    /**\n     * Whether a message should have a close icon in order to be dismissed.\n     * @param {?} value\n     * @return {?}\n     */\n    set closable(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._closable) {\n            this._closable = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get closable() {\n        return this._closable;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get icon() {\n        return this._icon;\n    }\n    /**\n     * Sets the label of the close button of the message.\n     * @param {?} value\n     * @return {?}\n     */\n    set closeButtonLabel(value) {\n        if (value !== this._closeButtonLabel) {\n            this._closeButtonLabel = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get closeButtonLabel() {\n        return this._closeButtonLabel;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    _emitCloseEvent() {\n        this.closeEvent.emit();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getIconName() {\n        if (this._context === 'info') {\n            return ICONS.info;\n        }\n        else if (this._context === 'error') {\n            return ICONS.error;\n        }\n        else if (this._context === 'success') {\n            return ICONS.success;\n        }\n        else if (this._context === 'warning') {\n            return ICONS.warning;\n        }\n        return '';\n    }\n}\nNxMessageComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-message',\n                template: \"<nx-icon *ngIf=\\\"showIcon && context !== 'regular'\\\"\\n         class=\\\"nx-message__icon\\\"\\n         [name]=\\\"icon\\\"\\n         size=\\\"s\\\">\\n</nx-icon>\\n<button\\n  *ngIf=\\\"closable\\\"\\n  (click)=\\\"_emitCloseEvent()\\\"\\n  [attr.aria-label]=\\\"closeButtonLabel\\\"\\n  tabindex=\\\"0\\\"\\n  class=\\\"nx-message__close-icon\\\">\\n    <nx-icon\\n      name=\\\"close\\\"\\n      size=\\\"s\\\"\\n      aria-hidden=\\\"true\\\">\\n    </nx-icon>\\n</button>\\n\\n\\n<div class=\\\"nx-message__content-wrapper\\\">\\n  <div class=\\\"nx-message__content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'nxMessage',\n                host: {\n                    '[class.context-info]': 'context === \"info\"',\n                    '[class.context-error]': 'context === \"error\"',\n                    '[class.context-success]': 'context === \"success\"',\n                    '[class.context-warning]': 'context === \"warning\"',\n                    '[class.nx-message--closable]': 'closable'\n                },\n                styles: [\":host{width:100%;color:#414141;display:flex;align-items:flex-start;position:relative;background-color:#fff;border:1px solid;border-radius:4px;box-shadow:0 2px 4px rgba(65,65,65,.5);padding:23px;margin:12px 0;font-size:16px;line-height:24px}.nx-message__content-wrapper{max-width:100%}:host,:host(.context-regular){border-color:#414141}:host(.context-info){border-color:#496ebd}:host(.context-info) .nx-message__icon{color:#496ebd}:host(.context-error){border-color:#dc3149}:host(.context-error) .nx-message__icon{color:#dc3149}:host(.context-success){border-color:#1e8927}:host(.context-success) .nx-message__icon{color:#1e8927}:host(.context-warning){border-color:#efbe25}:host(.context-warning) .nx-message__icon{color:#efbe25}.nx-message__icon{margin-right:16px}@media (max-width:703px){:host{padding:31px;display:block}:host(.context-error) .nx-message__icon~.nx-message__content-wrapper .nx-message__content,:host(.context-info) .nx-message__icon~.nx-message__content-wrapper .nx-message__content,:host(.context-success) .nx-message__icon~.nx-message__content-wrapper .nx-message__content,:host(.context-warning) .nx-message__icon~.nx-message__content-wrapper .nx-message__content{display:inline;margin-left:31px}.nx-message__icon{position:absolute}}:host(.nx-message--closable){padding-right:39px}@media (max-width:703px){:host(.nx-message--closable){padding-right:31px}}.nx-message__close-icon{position:absolute;top:16px;right:16px;cursor:pointer;background-color:transparent;border:none;outline:0;padding:0;display:flex;align-items:center}.nx-message__close-icon nx-icon{font-size:16px;color:nx-colors(grey-tones,grey-tone-1)}:host-context([data-whatinput=keyboard]) .nx-message__close-icon:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}\"]\n            }] }\n];\n/** @nocollapse */\nNxMessageComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxMessageComponent.propDecorators = {\n    context: [{ type: Input, args: ['nxContext',] }],\n    showIcon: [{ type: Input }],\n    closable: [{ type: Input }],\n    closeButtonLabel: [{ type: Input }],\n    closeEvent: [{ type: Output, args: ['close',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxMessageModule {\n}\nNxMessageModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxIconModule\n                ],\n                declarations: [\n                    NxMessageComponent\n                ],\n                exports: [\n                    NxMessageComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxPageSearchComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * An event emitted when the user clicks the search button.\n         */\n        this.buttonClick = new EventEmitter();\n        this._buttonLabel = null;\n        this._hideSearchButton = false;\n        this._buttonLayout = '12,12,12,2';\n        this._contentLayout = null;\n    }\n    /**\n     * Sets the text label of the button.\n     * @param {?} value\n     * @return {?}\n     */\n    set buttonLabel(value) {\n        if (this._buttonLabel !== value) {\n            this._buttonLabel = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get buttonLabel() {\n        return this._buttonLabel;\n    }\n    /**\n     * Whether the search button should be hidden.\n     * @param {?} value\n     * @return {?}\n     */\n    set hideSearchButton(value) {\n        this._hideSearchButton = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get hideSearchButton() {\n        return this._hideSearchButton;\n    }\n    /**\n     * Layout of the search button inside of a NxGrid. Default: 12,12,12,2.\n     * @param {?} value\n     * @return {?}\n     */\n    set buttonLayout(value) {\n        if (this._buttonLayout !== value) {\n            this._buttonLayout = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get buttonLayout() {\n        return this._buttonLayout;\n    }\n    /**\n     * Layout of the content area inside of a NxGrid. Default: 12,12,12,10 | 12 (if search button is hidden).\n     * @param {?} value\n     * @return {?}\n     */\n    set contentLayout(value) {\n        if (this._contentLayout !== value) {\n            this._contentLayout = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get contentLayout() {\n        if (this._contentLayout) {\n            return this._contentLayout;\n        }\n        return !this.hideSearchButton ? '12,12,12,10' : '12';\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    onButtonClick() {\n        this.buttonClick.emit();\n    }\n}\nNxPageSearchComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-page-search',\n                template: \"<div class=\\\"nx-pagesearch\\\">\\n  <div nxLayout=\\\"grid\\\">\\n    <div nxRow>\\n      <div [nxCol]=\\\"contentLayout\\\" class=\\\"nx-pagesearch--content\\\">\\n        <ng-content></ng-content>\\n      </div>\\n      <div [nxCol]=\\\"buttonLayout\\\" *ngIf=\\\"!hideSearchButton\\\" class=\\\"nx-pagesearch__actions\\\">\\n        <button nxButton=\\\"primary medium\\\" (click)=\\\"onButtonClick()\\\">{{buttonLabel}}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".nx-pagesearch{padding:32px 0;background-color:#fff;box-shadow:0 2px 4px rgba(65,65,65,.5)}.nx-pagesearch ::ng-deep .nx-formfield__wrapper{padding-bottom:0}.nx-pagesearch ::ng-deep .c-input{font-size:30px;font-weight:300;line-height:32px;height:auto}.nx-pagesearch ::ng-deep .nx-formfield__prefix{color:#007ab3}.nx-pagesearch ::ng-deep button{margin:0}.nx-pagesearch ::ng-deep .nx-icon--auto{font-size:24px}.nx-pagesearch .nx-pagesearch__actions{display:flex;align-items:center}\"]\n            }] }\n];\n/** @nocollapse */\nNxPageSearchComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxPageSearchComponent.propDecorators = {\n    buttonClick: [{ type: Output, args: ['nxButtonClick',] }],\n    buttonLabel: [{ type: Input, args: ['nxButtonLabel',] }],\n    hideSearchButton: [{ type: Input, args: ['nxHideSearchButton',] }],\n    buttonLayout: [{ type: Input, args: ['nxButtonLayout',] }],\n    contentLayout: [{ type: Input, args: ['nxContentLayout',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxPageSearchModule {\n}\nNxPageSearchModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxAutocompleteModule,\n                    NxFormfieldModule,\n                    NxButtonModule,\n                    NxGridModule\n                ],\n                declarations: [\n                    NxPageSearchComponent\n                ],\n                exports: [\n                    NxPageSearchComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxRatingComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._value = 0;\n        this._disabled = false;\n        this._negative = false;\n        this._startLabel = null;\n        this._endLabel = null;\n        this._ariaLabel = ['1/5', '2/5', '3/5', '4/5', '5/5'];\n        /**\n         * An event is dispatched each time when the rating changes.\n         */\n        this.valueChange = new EventEmitter();\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n        this.onChangeCallback = (/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => { });\n    }\n    /**\n     * Sets the selected rating 1 - 5.\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = coerceNumberProperty(newValue);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * Whether the rating component should be disabled.\n     * @param {?} newValue\n     * @return {?}\n     */\n    set disabled(newValue) {\n        if (this._disabled === newValue) {\n            return;\n        }\n        this._disabled = coerceBooleanProperty(newValue);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * Whether the negative colors be used.\n     * @param {?} newValue\n     * @return {?}\n     */\n    set negative(newValue) {\n        if (this._negative === newValue) {\n            return;\n        }\n        this._negative = coerceBooleanProperty(newValue);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Sets the label painted at the start of the rating component.\n     * @param {?} newValue\n     * @return {?}\n     */\n    set startLabel(newValue) {\n        this._startLabel = newValue;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get startLabel() {\n        return this._startLabel;\n    }\n    /**\n     * Sets the label painted at the end of the rating component.\n     * @param {?} newValue\n     * @return {?}\n     */\n    set endLabel(newValue) {\n        this._endLabel = newValue;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get endLabel() {\n        return this._endLabel;\n    }\n    /**\n     * @param {?} newAriaLabels\n     * @return {?}\n     */\n    set ariaLabel(newAriaLabels) {\n        this._ariaLabel = newAriaLabels;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get ariaLabel() {\n        return this._ariaLabel;\n    }\n    /**\n     * Whether the given rating is selected.\n     * @param {?} index\n     * @return {?}\n     */\n    isSelected(index) {\n        return index <= this.value;\n    }\n    /**\n     * Allows to set the rating.\n     * @param {?} value\n     * @return {?}\n     */\n    setSelection(value) {\n        if (!this.disabled) {\n            this.value = value;\n            this.valueChange.emit(value);\n            this.onTouchedCallback();\n            this.onChangeCallback(this.value);\n        }\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @param {?} rating\n     * @return {?}\n     */\n    handleKeyUp(event, rating) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        event.preventDefault();\n        event.stopPropagation();\n        if (keyCode === ENTER) {\n            this.setSelection(rating);\n        }\n        if (keyCode === RIGHT_ARROW) {\n            this.value = Math.min(this.value + 1, 5);\n            /** @type {?} */\n            const elementRef = this.icons.toArray()[this.value - 1];\n            elementRef.nativeElement.focus();\n        }\n        if (keyCode === LEFT_ARROW) {\n            this.value = Math.max(this.value - 1, 1);\n            /** @type {?} */\n            const elementRef = this.icons.toArray()[this.value - 1];\n            elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    registerOnChange(callback) {\n        this.onChangeCallback = callback;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    registerOnTouched(callback) {\n        this.onTouchedCallback = callback;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} rating\n     * @return {?}\n     */\n    getAriaLabel(rating) {\n        return this.ariaLabel[rating - 1];\n    }\n    /**\n     * \\@docs-private\n     * @param {?} rating\n     * @return {?}\n     */\n    getIconName(rating) {\n        return 'star' + ((!this.isSelected(rating)) ? '-o' : '');\n    }\n}\nNxRatingComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-rating',\n                template: \"  <div class=\\\"nx-rating__container\\\" role=\\\"radiogroup\\\">\\n    <nx-icon *ngFor=\\\"let rating of [1,2,3,4,5]\\\"\\n      (click)=\\\"setSelection(rating)\\\"\\n      (keyup)=\\\"handleKeyUp($event, rating)\\\"\\n      role=\\\"radio\\\"\\n      [attr.aria-label]=\\\"getAriaLabel(rating)\\\"\\n      [attr.aria-checked]=\\\"isSelected(rating)\\\"\\n      [tabindex]=\\\"disabled ? -1 : 0\\\"\\n      class=\\\"nx-rating__icon\\\"\\n      [name]=\\\"getIconName(rating)\\\"\\n      size=\\\"m\\\">\\n    </nx-icon>\\n  </div>\\n  <div class=\\\"nx-rating__label\\\" *ngIf=\\\"startLabel || endLabel\\\">\\n    <span class=\\\"nx-rating__label--start\\\">{{startLabel}}</span>\\n    <span class=\\\"nx-rating__label--end\\\">{{endLabel}}</span>\\n  </div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NxRatingComponent)),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.nx-rating--negative]': 'negative',\n                    '[class.nx-rating--disabled]': 'disabled',\n                },\n                styles: [\":host{display:inline-block}:host(.nx-rating--negative){color:#fff}:host(.nx-rating--disabled){cursor:not-allowed;color:#c2c2c2;outline:0}:host(.nx-rating--disabled) .nx-rating__label{color:#c2c2c2}:host(.nx-rating--disabled) .nx-rating__icon{cursor:not-allowed}.nx-rating__container{display:flex}.nx-rating__label{display:flex;font-size:16px}.nx-rating__label--end{margin-left:auto}.nx-rating__icon{font-size:40px;width:auto;height:40px;background:0 0;border:none;margin-right:16px;cursor:pointer;outline:0}.nx-rating__icon:last-child{margin-right:0}:host-context([data-whatinput=keyboard]) .nx-rating__icon:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}\"]\n            }] }\n];\n/** @nocollapse */\nNxRatingComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxRatingComponent.propDecorators = {\n    value: [{ type: Input, args: ['nxValue',] }],\n    disabled: [{ type: Input, args: ['nxDisabled',] }],\n    negative: [{ type: Input, args: ['nxNegative',] }],\n    startLabel: [{ type: Input, args: ['nxStartLabel',] }],\n    endLabel: [{ type: Input, args: ['nxEndLabel',] }],\n    ariaLabel: [{ type: Input, args: ['nxAriaLabel',] }],\n    valueChange: [{ type: Output, args: ['nxValueChange',] }],\n    icons: [{ type: ViewChildren, args: [NxIconComponent, { read: ElementRef },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxRatingModule {\n}\nNxRatingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    NxIconModule\n                ],\n                declarations: [\n                    NxRatingComponent\n                ],\n                exports: [\n                    NxRatingComponent\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxNumberStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * The aria label for the decrement '-' button\n         */\n        this.decrementAriaLabel = 'Decrement';\n        /**\n         * The aria label for the increment '+' button\n         */\n        this.incrementAriaLabel = 'Increment';\n    }\n}\nNxNumberStepperIntl.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxAutoResizeDirective {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _cdr\n     */\n    constructor(_element, _renderer, _cdr) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._cdr = _cdr;\n        this._resize = true;\n        this.updateInputWidth = this.updateInputWidth.bind(this);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set resize(value) {\n        this._resize = coerceBooleanProperty(value);\n        if (this._resize) {\n            this._addEventListener();\n            this.updateInputWidth();\n        }\n        else {\n            this._removeEventListener();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get resize() {\n        return this._resize;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this.resize) {\n            this._addEventListener();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeEventListener();\n    }\n    /**\n     * @return {?}\n     */\n    updateInputWidth() {\n        /** @type {?} */\n        const measureCanvas = this._renderer.createElement('canvas');\n        /** @type {?} */\n        const ctx = measureCanvas.getContext('2d');\n        /** @type {?} */\n        const styles = window.getComputedStyle(this._element.nativeElement);\n        ctx.font = getFontShorthand(styles);\n        /** @type {?} */\n        const metrics = ctx.measureText(this._element.nativeElement.value);\n        /** @type {?} */\n        const padding = this.sumStyles(styles.paddingLeft, styles.paddingRight);\n        /** @type {?} */\n        const border = this.sumStyles(styles.borderLeftWidth, styles.borderRightWidth);\n        // the pixels are needed, because despite the correct calculation the last pixels of a number are always cut\n        /** @type {?} */\n        const newWidth = metrics.width + padding + border + 16;\n        // Limit to own given minimal width\n        /** @type {?} */\n        const parsed = parseFloat(styles.minWidth);\n        this.width = Math.max(Number.isNaN(parsed) ? 0 : parsed, newWidth);\n        // needed when the outer component is onPush\n        this._cdr.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    _addEventListener() {\n        this._element.nativeElement.addEventListener('input', this.updateInputWidth, true);\n        this._element.nativeElement.addEventListener('change', this.updateInputWidth, true);\n    }\n    /**\n     * @return {?}\n     */\n    _removeEventListener() {\n        this._element.nativeElement.removeEventListener('input', this.updateInputWidth, true);\n        this._element.nativeElement.removeEventListener('change', this.updateInputWidth, true);\n    }\n    /**\n     * @param {?} left\n     * @param {?} right\n     * @return {?}\n     */\n    sumStyles(left, right) {\n        left = parseInt(left, 10);\n        right = parseInt(right, 10);\n        left = Number.isNaN(left) ? 0 : left;\n        right = Number.isNaN(right) ? 0 : right;\n        return left + right;\n    }\n}\nNxAutoResizeDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[nxAutoResize]'\n            },] }\n];\n/** @nocollapse */\nNxAutoResizeDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\nNxAutoResizeDirective.propDecorators = {\n    width: [{ type: HostBinding, args: ['style.width.px',] }],\n    resize: [{ type: Input, args: ['nxAutoResize',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SIZE_MAPPING = {\n    big: 'nx-stepper--big',\n    normal: ''\n};\n/** @type {?} */\nconst STYLE_MAPPING = {\n    regular: '',\n    bold: 'nx-stepper__input--bold',\n    light: 'nx-stepper__input--light'\n};\n/** @type {?} */\nconst DEFAULT_CLASSES$1 = ['nx-stepper'];\n/** @type {?} */\nconst INPUT_CLASSES = ['nx-stepper__input'];\n/** @type {?} */\nconst ALLOWED_CHARACTERS = new RegExp(/^-?[0-9]\\d*(\\.\\d+)?$/g);\n/** @type {?} */\nconst CUSTOM_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NxNumberStepperComponent)),\n    multi: true\n};\n/** @type {?} */\nconst CUSTOM_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NxNumberStepperComponent)),\n    multi: true\n};\n/** @type {?} */\nlet nextUniqueId = 0;\nclass NxNumberStepperComponent extends MappedStyles {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _intl\n     */\n    constructor(_changeDetectorRef, _renderer, _elementRef, _intl) {\n        super(SIZE_MAPPING, DEFAULT_CLASSES$1, _elementRef, _renderer);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._intl = _intl;\n        this._step = 1;\n        this._min = 0;\n        this._max = 100;\n        this._value = 0;\n        this._label = null;\n        this._resize = false;\n        this._negative = false;\n        this._leadingZero = true;\n        /**\n         * \\@docs-private\n         */\n        this.inputClassNames = mapClassNames('regular', INPUT_CLASSES, STYLE_MAPPING);\n        /**\n         * \\@docs-private\n         */\n        this.inputId = `nx-number-stepper-${nextUniqueId++}`;\n        /**\n         * \\@docs-private\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * An event emitted on value change.\n         */\n        this.valueChange = new EventEmitter();\n        this.onChangeCallback = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouchedCallback = (/**\n         * @return {?}\n         */\n        () => { });\n        this._intlSubscription = this._intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Whether the input should be resized. Default: false\n     * @param {?} value\n     * @return {?}\n     */\n    set resize(value) {\n        this._resize = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get resize() {\n        return this._resize;\n    }\n    /**\n     * @return {?}\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * Defines the the label shown above the stepper input.\n     * @param {?} value\n     * @return {?}\n     */\n    set label(value) {\n        if (this._label !== value) {\n            this._label = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get style() {\n        return this._style;\n    }\n    /**\n     * Defines the font weight of the input.\n     *\n     * Possible values: regular, bold, light. Default value: regular\n     *\n     * @deprecated The style input is not available anymore, only default font-weight should be used.\n     * \\@deletion-target 8.0.0\n     * @param {?} value\n     * @return {?}\n     */\n    set style(value) {\n        if (this._style === value) {\n            return;\n        }\n        this._style = value;\n        this.inputClassNames = mapClassNames(value, INPUT_CLASSES, STYLE_MAPPING);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sets the step size. Default: 1\n     * @param {?} value\n     * @return {?}\n     */\n    set step(value) {\n        // only internal changes no need to call markForCheck\n        this._step = Number(value);\n    }\n    /**\n     * @return {?}\n     */\n    get step() {\n        return this._step;\n    }\n    /**\n     * Sets the minimum accepted number. Default: 0\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = Number(value);\n    }\n    /**\n     * @return {?}\n     */\n    get min() {\n        return this._min;\n    }\n    /**\n     * Sets the maximum accepted number. Default: 100\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = Number(value);\n    }\n    /**\n     * @return {?}\n     */\n    get max() {\n        return this._max;\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * Sets the value of the number-stepper.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._value = value;\n        if (this._value !== null) {\n            this.setInputValue(this._value);\n        }\n        else {\n            this.setInputValue(0);\n        }\n        this.triggerResize();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the negative set of styling should be used.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        if (this._negative !== value) {\n            this._negative = coerceBooleanProperty(value);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Whether the number stepper value should have a leading zero.\n     *\n     * Default value is true.\n     * @param {?} value\n     * @return {?}\n     */\n    set leadingZero(value) {\n        if (this._leadingZero !== value) {\n            this._leadingZero = coerceBooleanProperty(value);\n            this.setInputValue(this.value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get leadingZero() {\n        return this._leadingZero;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setInputValue(this._value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // defer to prevent checked after change errors\n        if (this.resize) {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => this.triggerResize()));\n        }\n        if (this.ngContentWrapper) {\n            this.ariaDescribedBy = this.ngContentWrapper.nativeElement.children.length > 0 ? `label-for-${this.inputId}` : null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    setInputValue(value) {\n        if (this.leadingZero) {\n            this.numberInput.nativeElement.value = pad(value.toString(), 2);\n        }\n        else {\n            this.numberInput.nativeElement.value = value.toString();\n        }\n    }\n    /* ControlValueAccessor Implementations */\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @param {?} onChange\n     * @return {?}\n     */\n    registerOnChange(onChange) {\n        this.onChangeCallback = onChange;\n    }\n    /**\n     * @param {?} onTouched\n     * @return {?}\n     */\n    registerOnTouched(onTouched) {\n        this.onTouchedCallback = onTouched;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onInputChange(event) {\n        if (!this.validateUserInput(event.target.value)) {\n            this._value = null;\n        }\n        else {\n            this._value = Number(event.target.value);\n        }\n        this.valueChange.emit(this._value);\n        this.onChangeCallback(this._value);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} input\n     * @return {?}\n     */\n    validateUserInput(input) {\n        return !!input.match(ALLOWED_CHARACTERS);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    increment() {\n        /** @type {?} */\n        let newValue;\n        if (this.isBetweenLimits(this._value)) {\n            newValue = this.getNextGreaterValue(this._value);\n        }\n        else {\n            newValue = this.enforceLimits(this._value);\n        }\n        this.value = newValue;\n        this.valueChange.emit(this._value);\n        this.onChangeCallback(this._value);\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    triggerResize() {\n        if (this.resize) {\n            this.autoResize.updateInputWidth();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    decrement() {\n        /** @type {?} */\n        let newValue;\n        if (this.isBetweenLimits(this._value)) {\n            newValue = this.getNextLowerValue(this._value);\n        }\n        else {\n            newValue = this.enforceLimits(this._value);\n        }\n        this.value = newValue;\n        this.valueChange.emit(this._value);\n        this.onChangeCallback(this._value);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    enforceLimits(value) {\n        if (value > this._max) {\n            return this._max;\n        }\n        else if (value < this._min) {\n            return this._min;\n        }\n        return value;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} start\n     * @return {?}\n     */\n    getNextLowerValue(start) {\n        // if there is an invalid input start is null\n        if (!start) {\n            start = 0;\n        }\n        /** @type {?} */\n        let next;\n        if (this.isValidStep(start)) {\n            next = (new Decimal(start).minus(new Decimal(this._step))).toNumber();\n        }\n        else {\n            next = new Decimal(start).toNearest(this._step, Decimal.ROUND_DOWN).toNumber();\n        }\n        return this.enforceLimits(next);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} start\n     * @return {?}\n     */\n    getNextGreaterValue(start) {\n        /** @type {?} */\n        let next;\n        if (!start) {\n            start = 0;\n        }\n        if (this.isValidStep(start)) {\n            next = (new Decimal(start).plus(new Decimal(this._step))).toNumber();\n        }\n        else {\n            next = new Decimal(start).toNearest(this._step, Decimal.ROUND_UP).toNumber();\n        }\n        return this.enforceLimits(next);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    isBetweenLimits(value) {\n        return value <= this._max && value >= this._min;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    isMinimum() {\n        return this._value === this._min;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    isMaximum() {\n        return this._value === this._max;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    isValidStep(value) {\n        if (value === null) {\n            value = new Decimal(0);\n        }\n        /** @type {?} */\n        const min = new Decimal(this._min);\n        /** @type {?} */\n        const valueDec = new Decimal(value);\n        /** @type {?} */\n        const checkValue = (min.minus(valueDec)).mod(new Decimal(this._step)).toNumber();\n        if (this.isBetweenLimits(value) && ((this.isMinimum() || this.isMaximum()) ||\n            checkValue === 0)) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} value\n     * @return {?}\n     */\n    userInputToNumber(value) {\n        /** @type {?} */\n        const current = value === '' ? 0 : value;\n        return parseInt(current, 10);\n    }\n    /**\n     * @return {?}\n     */\n    _validateFn() {\n        // the manual user input must match min + n * step, e.g. minimum 1 step 2: 1, 3, 5, 7 etc.\n        if (!this.isValidStep(this._value)) {\n            return { nxNumberStepperStepError: 'Value is not a valid step' };\n        }\n        else if (this._value === null) {\n            return { nxNumberStepperFormatError: 'Not a valid number' };\n        }\n        return null;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validateFn();\n    }\n    /**\n     * @return {?}\n     */\n    get _buttonType() {\n        return 'secondary' + (this.negative ? ' negative' : '');\n    }\n}\nNxNumberStepperComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-number-stepper',\n                template: \"<div *ngIf=\\\"label\\\" class=\\\"nx-stepper__label\\\">\\n  <label [for]=\\\"inputId\\\">\\n    {{label}}\\n  </label>\\n</div>\\n<div #customLabel *ngIf=\\\"!label\\\" [id]=\\\"ariaDescribedBy\\\">\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"nx-stepper__input-container\\\">\\n  <button\\n    [attr.aria-label]=\\\"_intl.decrementAriaLabel\\\"\\n    [nxButton]=\\\"_buttonType\\\"\\n    class=\\\"nx-stepper__down nx-stepper__control\\\"\\n    (click)=\\\"decrement()\\\"\\n    [disabled]=\\\"value <= min\\\">\\n    <nx-icon name=\\\"minus\\\" size=\\\"s\\\"></nx-icon>\\n  </button>\\n  <div class=\\\"nx-stepper__input-wrapper\\\">\\n    <div class=\\\"nx-stepper__inner-wrapper\\\">\\n        <ng-content select=\\\"nx-number-stepper-prefix\\\"></ng-content>\\n\\n        <input #numberInput [nxAutoResize]=\\\"resize\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedBy\\\"\\n        [id]=\\\"inputId\\\" [ngClass]=\\\"inputClassNames\\\"\\n        (input)=\\\"onInputChange($event)\\\"\\n        (keydown.arrowup)=\\\"increment()\\\"\\n        (keydown.arrowdown)=\\\"decrement()\\\"/>\\n\\n        <ng-content select=\\\"nx-number-stepper-suffix\\\"></ng-content>\\n    </div>\\n    <div class=\\\"nx-stepper__input-underline\\\"></div>\\n  </div>\\n\\n  <button\\n    [attr.aria-label]=\\\"_intl.incrementAriaLabel\\\"\\n    [nxButton]=\\\"_buttonType\\\"\\n    class=\\\"nx-stepper__up nx-stepper__control\\\"\\n    (click)=\\\"increment()\\\"\\n    [disabled]=\\\"value >= max\\\">\\n    <nx-icon name=\\\"plus\\\" size=\\\"s\\\"></nx-icon>\\n  </button>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['classNames: nxSize'],\n                host: {\n                    '[class.is-negative]': 'negative'\n                },\n                providers: [CUSTOM_VALUE_ACCESSOR, CUSTOM_VALIDATOR],\n                styles: [\":host{display:block}:host input{padding:0}.nx-stepper__input-container{align-items:flex-end;display:flex;margin-top:12px}.nx-stepper__label{display:flex;font-size:20px;line-height:28px}.nx-stepper__control{width:32px;height:32px;min-height:32px;font-size:24px;margin:0;padding:0}.nx-stepper__control:disabled{background-color:rgba(255,255,255,.4);border-color:#006192;color:#006192;opacity:.4}.nx-stepper__input{width:56px;min-width:56px}.nx-stepper__input,::ng-deep .nx-stepper__prefix,::ng-deep .nx-stepper__suffix{background:0 0;outline:0;border:0;text-align:center;color:#414141;font-size:20px;line-height:28px;height:28px}::ng-deep .nx-stepper__suffix{margin-left:4px}::ng-deep .nx-stepper__prefix{margin-right:4px}.nx-stepper__input-wrapper{display:flex;align-items:center;flex-direction:column;margin:0 16px}.nx-stepper__inner-wrapper{height:28px;display:flex;align-items:baseline}.nx-stepper__input-underline{width:100%;margin-top:2px;height:2px;background:#414141}:host.nx-stepper--big .nx-stepper__control{width:72px;min-height:48px;margin-bottom:0}:host.nx-stepper--big .nx-stepper__input{width:72px;min-width:72px}:host.nx-stepper--big .nx-stepper__input,:host.nx-stepper--big ::ng-deep .nx-stepper__prefix,:host.nx-stepper--big ::ng-deep .nx-stepper__suffix{color:#414141;font-size:40px;line-height:48px;height:48px;letter-spacing:.3px;padding:0;margin-bottom:0}:host.nx-stepper--big .nx-stepper__input-wrapper{margin:0 24px}:host.nx-stepper--big .nx-stepper__input-underline{margin-top:-2px}:host.nx-stepper--big .nx-stepper__inner-wrapper{height:48px}:host.is-negative .nx-stepper__label{color:#fff}:host.is-negative .nx-stepper__input{color:#fff}:host.is-negative .nx-stepper__input-underline{background:#fff}\"]\n            }] }\n];\n/** @nocollapse */\nNxNumberStepperComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: NxNumberStepperIntl }\n];\nNxNumberStepperComponent.propDecorators = {\n    numberInput: [{ type: ViewChild, args: ['numberInput',] }],\n    ngContentWrapper: [{ type: ViewChild, args: ['customLabel',] }],\n    autoResize: [{ type: ViewChild, args: [NxAutoResizeDirective,] }],\n    valueChange: [{ type: Output, args: ['nxValueChange',] }],\n    resize: [{ type: Input, args: ['nxResize',] }],\n    label: [{ type: Input, args: ['nxLabel',] }],\n    style: [{ type: Input, args: ['nxStyle',] }],\n    step: [{ type: Input, args: ['nxStep',] }],\n    min: [{ type: Input, args: ['nxMin',] }],\n    max: [{ type: Input, args: ['nxMax',] }],\n    value: [{ type: Input, args: ['nxValue',] }],\n    negative: [{ type: Input }],\n    leadingZero: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive used to pass a suffix to the number stepper.\n */\nclass NxNumberStepperPrefixDirective {\n}\nNxNumberStepperPrefixDirective.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-number-stepper-prefix',\n                host: {\n                    'class': 'nx-stepper__prefix'\n                }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive used to pass a suffix to the number stepper.\n */\nclass NxNumberStepperSuffixDirective {\n}\nNxNumberStepperSuffixDirective.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-number-stepper-suffix',\n                host: {\n                    'class': 'nx-stepper__suffix'\n                }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxNumberStepperModule {\n}\nNxNumberStepperModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    NxInputModule,\n                    FormsModule,\n                    NxIconModule,\n                    NxButtonModule,\n                    CommonModule\n                ],\n                exports: [\n                    NxNumberStepperComponent,\n                    NxAutoResizeDirective,\n                    NxNumberStepperPrefixDirective,\n                    NxNumberStepperSuffixDirective\n                ],\n                declarations: [\n                    NxNumberStepperComponent,\n                    NxAutoResizeDirective,\n                    NxNumberStepperPrefixDirective,\n                    NxNumberStepperSuffixDirective\n                ],\n                providers: [NxNumberStepperIntl],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DefaultPaginationTexts = {\n    previous: 'Previous',\n    next: 'Next',\n    first: 'First',\n    last: 'Last',\n    ofLabel: 'of',\n    ariaLabel: 'Please select your page'\n};\n/**\n * InjectionToken for pagination that can be used to override default locale code.\n * @type {?}\n */\nconst NX_PAGINATION_TEXTS = new InjectionToken('nx-pagination-texts');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxPaginationUtils {\n    constructor() {\n        this._pagesToShow = 3;\n        this._elipsisText = '...';\n        this._classExpanded = 'expanded-view';\n    }\n    /**\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getPages(currentPage, totalPages) {\n        /** @type {?} */\n        let pages = [];\n        /** @type {?} */\n        let start = [];\n        /** @type {?} */\n        let middle = [];\n        /** @type {?} */\n        let end = [];\n        // First array -> start\n        start = this.getStartArray(currentPage, totalPages);\n        // Second array -> middle\n        middle = this.getMiddleArray(currentPage, totalPages);\n        // Third array -> end\n        end = this.getEndArray(currentPage, totalPages);\n        pages = [...start, ...middle, ...end];\n        return pages;\n    }\n    /**\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getMiddleArray(currentPage, totalPages) {\n        /** @type {?} */\n        let pageNumber = currentPage < 6 ? 4 : currentPage - 1;\n        /** @type {?} */\n        const middle = [];\n        while (middle.length < 3 &&\n            pageNumber >= 2 &&\n            pageNumber <= totalPages - 3 &&\n            (pageNumber <= currentPage + 1 && pageNumber >= currentPage - 1)) {\n            middle.push(this.createPaginationItem(pageNumber, pageNumber));\n            pageNumber++;\n        }\n        return middle;\n    }\n    /**\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getEndArray(currentPage, totalPages) {\n        /** @type {?} */\n        const end = [];\n        /** @type {?} */\n        let currentItemToShow = totalPages <= 3 ? totalPages + 1 :\n            totalPages <= 6 ? totalPages - (totalPages - 4) : totalPages - 2;\n        /** @type {?} */\n        const showEllipsis = currentPage < totalPages - 4;\n        while (currentItemToShow <= totalPages) {\n            /** @type {?} */\n            const endItem = end.length === 0 && showEllipsis ?\n                this.createPaginationItem(this._elipsisText, currentItemToShow, true) :\n                this.createPaginationItem(currentItemToShow, currentItemToShow, true);\n            end.push(endItem);\n            currentItemToShow++;\n        }\n        return end;\n    }\n    /**\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getStartArray(currentPage, totalPages) {\n        /** @type {?} */\n        let counterPages = 0;\n        /** @type {?} */\n        const start = [];\n        /** @type {?} */\n        const maxSizeArray = 3;\n        while (counterPages < maxSizeArray && counterPages < totalPages) {\n            /** @type {?} */\n            const startItem = counterPages === 2 && currentPage > 5 ?\n                this.createPaginationItem(this._elipsisText, counterPages, true) :\n                this.createPaginationItem(counterPages + 1, counterPages + 1, true);\n            start.push(startItem);\n            counterPages++;\n        }\n        return start;\n    }\n    /**\n     * @private\n     * @param {?} label\n     * @param {?} value\n     * @param {?=} classExpanded\n     * @return {?}\n     */\n    createPaginationItem(label, value, classExpanded) {\n        return { label: label, value: value, class: classExpanded ? this._classExpanded : '' };\n    }\n}\nNxPaginationUtils.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxPaginationComponent {\n    /**\n     * @param {?} paginationTexts\n     * @param {?} paginationUtilsService\n     * @param {?} _changeDetectorRef\n     */\n    constructor(paginationTexts, paginationUtilsService, _changeDetectorRef) {\n        this.paginationUtilsService = paginationUtilsService;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._type = 'simple';\n        /**\n         * \\@docs-private\n         */\n        this.totalNumberPages = 0;\n        /**\n         * An event emitted when the previous page button is clicked.\n         */\n        this.nxGoPrev = new EventEmitter();\n        /**\n         * An event emitted when the next page button is clicked\n         */\n        this.nxGoNext = new EventEmitter();\n        /**\n         * An event emitted when a page number is clicked.\n         * Provides the number of the page as parameter.\n         */\n        this.nxGoPage = new EventEmitter();\n        this.paginationTexts = paginationTexts || DefaultPaginationTexts;\n    }\n    /**\n     * @return {?}\n     */\n    get page() { return this._page; }\n    /**\n     * Sets the current page.\n     * @param {?} value\n     * @return {?}\n     */\n    set page(value) {\n        this._page = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get count() { return this._count; }\n    /**\n     * Number of total items over all pages.\n     * @param {?} value\n     * @return {?}\n     */\n    set count(value) {\n        this._count = value;\n        this.totalNumberPages = this.calculateTotalPages();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get perPage() { return this._perPage; }\n    /**\n     * Sets the number of items you want to show per page.\n     * @param {?} value\n     * @return {?}\n     */\n    set perPage(value) {\n        this._perPage = value;\n        this.totalNumberPages = this.calculateTotalPages();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * Determines the type of pagination.\n     *\n     * Values: simple | advanced, default: simple.\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.totalNumberPages = this.calculateTotalPages();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.type === 'advanced' && (!this.paginationTexts.last || !this.paginationTexts.first)) {\n            console.warn('Please define aria labels for the last and first arrows.');\n        }\n    }\n    /**\n     * Returns the number of the first page.\n     * @return {?}\n     */\n    getMin() {\n        return ((this._perPage * this._page) - this._perPage) + 1;\n    }\n    /**\n     * Returns the number of the last page.\n     * @return {?}\n     */\n    getMax() {\n        /** @type {?} */\n        let max = this._perPage * this._page;\n        if (max > this._count) {\n            max = this._count;\n        }\n        return max;\n    }\n    /**\n     * Returns the total number of pages\n     * @return {?}\n     */\n    calculateTotalPages() {\n        return Math.ceil(this._count / this._perPage) || 0;\n    }\n    /**\n     * Directs to the page with number n.\n     * @param {?} n\n     * @return {?}\n     */\n    onPage(n) {\n        this.nxGoPage.emit(n);\n    }\n    /**\n     * Directs to the previous page.\n     * @return {?}\n     */\n    onPrev() {\n        if (!this._isPaginationPreviousDisabled()) {\n            this.nxGoPrev.emit();\n        }\n    }\n    /**\n     * Directs to the next page.\n     * @return {?}\n     */\n    onNext() {\n        if (!this._isPaginationNextDisabled()) {\n            this.nxGoNext.emit();\n        }\n    }\n    /**\n     * Directs to the first page.\n     * @return {?}\n     */\n    onFirst() {\n        if (!this._isPaginationPreviousDisabled()) {\n            this.onPage(1);\n        }\n    }\n    /**\n     * Directs to the last page.\n     * @return {?}\n     */\n    onLast() {\n        if (!this._isPaginationNextDisabled()) {\n            this.onPage(this.totalNumberPages);\n        }\n    }\n    /**\n     * Returns if the current page is the last page.\n     * @return {?}\n     */\n    lastPage() {\n        return this._perPage * this._page >= this._count;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getPages() {\n        return this.paginationUtilsService.getPages(this._page, this.totalNumberPages);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} page\n     * @return {?}\n     */\n    getPaginationItemClasses(page) {\n        /** @type {?} */\n        const classes = {\n            'is-ellipsis': page.label === '...',\n            'nx-pagination__item--expanded-view': page.class === 'expanded-view'\n        };\n        return classes;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} page\n     * @return {?}\n     */\n    getPaginationNumberClasses(page) {\n        /** @type {?} */\n        const classes = {\n            'is-active': page.value === this.page,\n            'nx-pagination__ellipsis': page.label === '...',\n            'nx-pagination__link': page.label !== '...'\n        };\n        return classes;\n    }\n    /**\n     * Returns true, if `nxCount` is greater than 0, else false.\n     * @return {?}\n     */\n    isPaginationVisible() {\n        return this.count > 0;\n    }\n    /**\n     * Returns true, if `nxCount` is greater than 0 and the type of pagination is 'simple', else false.\n     * @return {?}\n     */\n    isPaginationCompactVisible() {\n        return this.type.includes('simple') && this.count > 0;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    isPaginationContainerVisible() {\n        return this.type.includes('advanced');\n    }\n    /**\n     * @return {?}\n     */\n    _isPaginationPreviousDisabled() {\n        return this.page === this.getMin();\n    }\n    /**\n     * @return {?}\n     */\n    _isPaginationNextDisabled() {\n        return this.page === this.totalNumberPages;\n    }\n}\nNxPaginationComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-pagination',\n                template: \"<nav *ngIf=\\\"isPaginationVisible()\\\"  aria-label=\\\"Page navigation\\\" class=\\\"nx-pagination\\\" >\\n  <ul *ngIf=\\\"isPaginationContainerVisible()\\\"  [attr.aria-label]=\\\"paginationTexts.ariaLabel\\\" class=\\\"nx-pagination__container\\\">\\n    <li class=\\\"nx-pagination__item\\\">\\n      <button\\n        [attr.aria-label]=\\\"paginationTexts.first\\\"\\n        [class.is-disabled]=\\\"_isPaginationPreviousDisabled()\\\"\\n        [tabindex]=\\\"_isPaginationPreviousDisabled() ? -1 : 0\\\"\\n        class=\\\"nx-pagination__link nx-pagination__link--first\\\"\\n        (click)=\\\"onFirst()\\\">\\n        <nx-icon class=\\\"nx-pagination__arrow\\\" name=\\\"arrow-first\\\"></nx-icon>\\n      </button>\\n    </li>\\n    <li class=\\\"nx-pagination__item nx-pagination__item-previous\\\">\\n      <button\\n        [attr.aria-label]=\\\"paginationTexts.previous\\\"\\n        [class.is-disabled]=\\\"_isPaginationPreviousDisabled()\\\"\\n        [tabindex]=\\\"_isPaginationPreviousDisabled() ? -1 : 0\\\"\\n        class=\\\"nx-pagination__link nx-pagination__link--previous\\\"\\n        (click)=\\\"onPrev()\\\">\\n        <nx-icon class=\\\"nx-pagination__arrow\\\" name=\\\"arrow-left\\\"></nx-icon>\\n      </button>\\n    </li>\\n    <li *ngFor=\\\"let pageNum of getPages()\\\" class=\\\"nx-pagination__item\\\" [ngClass]=\\\"getPaginationItemClasses(pageNum)\\\">\\n      <button class=\\\"nx-pagination--number\\\"\\n        *ngIf=\\\"pageNum.label !== '...'\\\"\\n        (click)=\\\"onPage(pageNum.value)\\\"\\n        [attr.aria-curent]=\\\"pageNum.value === page\\\"\\n        [ngClass]=\\\"getPaginationNumberClasses(pageNum)\\\">\\n        {{ pageNum.label }}\\n      </button>\\n      <span *ngIf=\\\"pageNum.label === '...'\\\">\\n        {{ pageNum.label }}\\n      </span>\\n    </li>\\n    <li class=\\\"nx-pagination__item nx-pagination__item-next\\\">\\n      <button\\n        [attr.aria-label]=\\\"paginationTexts.next\\\"\\n        [class.is-disabled]=\\\"_isPaginationNextDisabled()\\\"\\n        [tabindex]=\\\"_isPaginationNextDisabled() ? -1 : 0\\\"\\n        class=\\\"nx-pagination__link nx-pagination__link--next\\\"\\n        (click)=\\\"onNext()\\\">\\n        <nx-icon class=\\\"nx-pagination__arrow\\\" name=\\\"arrow-right\\\"></nx-icon>\\n      </button>\\n    </li>\\n    <li class=\\\"nx-pagination__item\\\">\\n      <button\\n        [attr.aria-label]=\\\"paginationTexts.last\\\"\\n        [class.is-disabled]=\\\"_isPaginationNextDisabled()\\\"\\n        [tabindex]=\\\"_isPaginationNextDisabled() ? -1 : 0\\\"\\n        class=\\\"nx-pagination__link nx-pagination__link--last\\\"\\n        (click)=\\\"onLast()\\\">\\n        <nx-icon class=\\\"nx-pagination__arrow\\\" name=\\\"arrow-last\\\"></nx-icon>\\n      </button>\\n    </li>\\n  </ul>\\n</nav>\\n<nav *ngIf=\\\"isPaginationCompactVisible()\\\" [attr.aria-label]=\\\"paginationTexts.ariaLabel\\\" class=\\\"nx-pagination-compact\\\" >\\n  <button [attr.aria-label]=\\\"paginationTexts.previous\\\"\\n    class=\\\"nx-pagination-compact__previous\\\"\\n    [class.is-disabled]=\\\"_isPaginationPreviousDisabled()\\\"\\n    [tabindex]=\\\"_isPaginationPreviousDisabled() ? -1 : 0\\\"\\n\\n    (click)=\\\"onPrev()\\\">\\n    <nx-icon class=\\\"nx-pagination__arrow\\\" name=\\\"arrow-left\\\"></nx-icon>\\n    <span class=\\\"nx-pagination-compact__direction-label\\\">\\n      {{ paginationTexts.previous }}\\n    </span>\\n  </button>\\n  <div class=\\\"nx-pagination-compact__display\\\">\\n      <span class=\\\"nx-pagination-compact__current-page\\\">{{ page }}</span>\\n      <span class=\\\"nx-pagination-compact__page-separator\\\"> {{ paginationTexts.ofLabel }} </span>\\n      <span class=\\\"nx-pagination-compact__total-pages\\\">{{ totalNumberPages }}</span>\\n  </div>\\n  <button\\n    class=\\\"nx-pagination-compact__next\\\"\\n    [class.is-disabled]=\\\"_isPaginationNextDisabled()\\\"\\n    [tabindex]=\\\"_isPaginationNextDisabled() ? -1 : 0\\\"\\n    [attr.aria-label]=\\\"paginationTexts.next\\\"\\n    (click)=\\\"onNext()\\\">\\n    <span class=\\\"nx-pagination-compact__direction-label\\\"> {{ paginationTexts.next }} </span>\\n    <nx-icon class=\\\"nx-pagination__arrow\\\" name=\\\"arrow-right\\\"></nx-icon>\\n  </button>\\n</nav>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host button:focus{outline:0}:host button::-moz-focus-inner{border:0}.nx-pagination__container{display:flex;font-size:16px;margin:8px 0;padding:0}@media (min-width:704px){.nx-pagination__container{margin:8px 0 40px}}.nx-pagination__item{margin:0 16px;list-style:none}.nx-pagination__item:first-child,.nx-pagination__item:last-child{margin:0}.nx-pagination__item.is-ellipsis{font-weight:700}.nx-pagination__item--expanded-view{display:block}.nx-pagination__link{color:#006192;font-weight:600;padding:0;text-decoration:none;background-color:#fff;border:0;cursor:pointer}.nx-pagination__link.is-active{color:#414141;font-weight:700;cursor:default}nx-icon.nx-pagination__arrow{font-size:24px}.nx-pagination-compact{display:flex;font-size:16px;margin:16px 0;padding:0}@media (min-width:704px){.nx-pagination-compact{margin:40px 0}}.nx-pagination-compact__display{color:#414141;display:flex;line-height:24px}.nx-pagination-compact__current-page{font-weight:700;margin-right:8px}.nx-pagination-compact__total-pages{margin-left:8px}.nx-pagination-compact__next,.nx-pagination-compact__previous,.nx-pagination__arrow-first,.nx-pagination__arrow-last{color:#006192;font-weight:600;text-decoration:none;text-transform:uppercase;display:flex;align-items:center;padding:0;background-color:#fff;cursor:pointer;border:0}.nx-pagination-compact__previous{margin-right:32px}.nx-pagination-compact__next{margin-left:32px}.nx-pagination-compact__direction-label{display:block;letter-spacing:1px}.nx-pagination-compact__direction-label:first-child{margin-right:8px}.nx-pagination-compact__direction-label:last-child{margin-left:8px}.nx-pagination-compact__next.is-disabled,.nx-pagination-compact__previous.is-disabled,.nx-pagination__link.is-disabled{color:rgba(0,97,146,.4);cursor:not-allowed}:host-context([data-whatinput=keyboard]) .nx-pagination--number:focus,:host-context([data-whatinput=keyboard]) .nx-pagination-compact__next:focus,:host-context([data-whatinput=keyboard]) .nx-pagination-compact__previous:focus,:host-context([data-whatinput=keyboard]) .nx-pagination__link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}.nx-pagination__link--first,.nx-pagination__link--last,.nx-pagination__link--next,.nx-pagination__link--previous{display:flex;align-items:center}.nx-pagination__item-next{margin-right:8px}.nx-pagination__item-previous{margin-left:8px}\"]\n            }] }\n];\n/** @nocollapse */\nNxPaginationComponent.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NX_PAGINATION_TEXTS,] }] },\n    { type: NxPaginationUtils },\n    { type: ChangeDetectorRef }\n];\nNxPaginationComponent.propDecorators = {\n    page: [{ type: Input, args: ['nxPage',] }],\n    count: [{ type: Input, args: ['nxCount',] }],\n    perPage: [{ type: Input, args: ['nxPerPage',] }],\n    type: [{ type: Input, args: ['nxType',] }],\n    nxGoPrev: [{ type: Output }],\n    nxGoNext: [{ type: Output }],\n    nxGoPage: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxPaginationModule {\n}\nNxPaginationModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule, NxIconModule\n                ],\n                declarations: [\n                    NxPaginationComponent\n                ],\n                exports: [\n                    NxPaginationComponent\n                ],\n                providers: [\n                    NxPaginationUtils\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TableDataSource extends DataSource {\n    /**\n     * @param {?} _datachange\n     */\n    constructor(_datachange) {\n        super();\n        this._datachange = _datachange;\n    }\n    /**\n     * \\@docs-private Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        return this._datachange;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAPPING$2 = {\n    light: 'nx-table--light',\n    border: 'nx-table--light nx-table--with-border'\n};\n/** @type {?} */\nconst DEFAULT_CLASSES$2 = ['nx-table '];\nclass NxDynamicTableComponent {\n    /**\n     * @param {?} el\n     * @param {?} _changeDetectorRef\n     */\n    constructor(el, _changeDetectorRef) {\n        this.el = el;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._tableStyles = '';\n        this._dataChange = new BehaviorSubject([]);\n        this._classNames = mapClassNames('', DEFAULT_CLASSES$2, MAPPING$2);\n        /**\n         * An event is dispatched when a row is clicked.\n         */\n        this.nxRowClick = new EventEmitter();\n    }\n    /**\n     * Sets the data that it will show in the table.\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        this._data = value\n            .filter((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => element));\n        // If user dont pass displayedColumns the table will show all data and the name of columns will be the key of data\n        if (!this._displayedColumns) {\n            /** @type {?} */\n            const keys = [];\n            /** @type {?} */\n            const cArray = [];\n            // For catch keys of data Objects and assing title, key and type string by default to displayedColumns\n            this._data\n                .forEach((/**\n             * @param {?} element\n             * @return {?}\n             */\n            element => {\n                for (const key in element) {\n                    if (keys.indexOf(key) === -1) {\n                        keys.push(key);\n                        cArray.push({ title: key, key: key, type: 'string' });\n                    }\n                }\n            }));\n            this._columnKeys = keys;\n            this._displayedColumns = cArray;\n            // need to call markForCheck as the setter changes displayedColumns here\n            // sidenote: isn't needed for the data itself as it gets passed to the cdk-table\n            // by the datasource observable\n            this._changeDetectorRef.markForCheck();\n        }\n        this._dataChange.next(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    get data() {\n        return this._data;\n    }\n    /**\n     * Sets the name order and type of columns.\n     * @param {?} value\n     * @return {?}\n     */\n    set displayedColumns(value) {\n        this._displayedColumns = value;\n        this._columnKeys = value.map((/**\n         * @param {?} column\n         * @return {?}\n         */\n        column => column.key));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get displayedColumns() {\n        return this._displayedColumns;\n    }\n    /**\n     * @deprecated The default and light header styling will be removed.\n     * \\@deletion-target 8.0.0\n     * @param {?} value\n     * @return {?}\n     */\n    set styles(value) {\n        if (this._tableStyles === value) {\n            return;\n        }\n        this._classNames = mapClassNames(value, DEFAULT_CLASSES$2, MAPPING$2);\n        this._tableStyles = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get columnKeys() {\n        return this._columnKeys;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._data) {\n            this._data = [];\n            this._dataChange.next(this._data);\n        }\n        this._dataSource = new TableDataSource(this._dataChange);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} row\n     * @return {?}\n     */\n    handleRowClick(row) {\n        this.nxRowClick.emit(row);\n    }\n    /**\n     * \\@docs-private\n     * @param {?} element\n     * @return {?}\n     */\n    isNumeric(element) {\n        if (element.type === 'numeric') {\n            return true;\n        }\n        return false;\n    }\n}\nNxDynamicTableComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-dynamic-table',\n                template: \"<div class=\\\"nx-table__container\\\" *ngIf=\\\"data && data.length > 0\\\">\\n  <div class=\\\"nx-table__scroll\\\">\\n    <cdk-table [dataSource]=\\\"dataSource\\\" [ngClass]=\\\"classNames\\\">\\n      <!-- Column Definition -->\\n      <ng-container *ngFor=\\\"let element of displayedColumns\\\" cdkColumnDef=\\\"{{element.key}}\\\">\\n        <cdk-header-cell *cdkHeaderCellDef class=\\\"nx-table__header-cell\\\"\\n                         [ngClass]=\\\"{'nx-table__header-cell--number': isNumeric(element) }\\\">\\n          <div class=\\\"nx-table__header-title--block\\\">\\n            <span class=\\\"nx-table__header-title\\\"> {{element.title}}</span>\\n          </div>\\n        </cdk-header-cell>\\n        <cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"nx-table__cell\\\"\\n                  [ngClass]=\\\"{'nx-table__cell--number': isNumeric(element) }\\\" [innerHTML]=\\\"row[element.key]\\\"></cdk-cell>\\n      </ng-container>\\n\\n      <!-- Header and Row Declarations -->\\n      <cdk-header-row *cdkHeaderRowDef=\\\"columnKeys\\\" class=\\\"nx-table__header-row\\\"></cdk-header-row>\\n      <cdk-row *cdkRowDef=\\\"let row; columns: columnKeys\\\" class=\\\"nx-table__row\\\"\\n               (dblclick)=\\\"handleRowClick(row)\\\"></cdk-row>\\n\\n    </cdk-table>\\n  </div>\\n</div>\\n<div class=\\\"nx-table__appendix\\\" *ngIf=\\\"data.length === 0\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".nx-table{border-top:2px solid #d9d9d9;border-bottom:2px solid #414141;font-size:16px;text-align:left;width:100%;line-height:24px;color:#414141;display:table}.nx-table--light.nx-table{border-top:1px solid #d9d9d9}.nx-table__container{margin:32px 0}.nx-table__scroll{max-width:100%;overflow:hidden;overflow-x:auto}.nx-table__header-cell{background-color:#d9d9d9;border:1px solid #fff;border-right:none;color:#414141;padding:21px 16px 23px;position:relative;font-size:16px;line-height:24px;font-weight:700}.nx-table__header-row .nx-table__header-cell:last-child{border-right:1px solid #fff}.nx-table__header-row{background-color:#d9d9d9;border-spacing:1px none}.nx-table--light .nx-table__header-row{background-color:#fff;border-bottom:2px solid #414141;border-top:1px solid #d9d9d9}.nx-table__header-cell--number{display:flex;position:relative}.nx-table__header-cell--number .nx-table__header-title--block{justify-content:flex-end}.nx-table__cell{padding:24px 16px;vertical-align:top}.nx-table__cell--number,.nx-table__header-cell--number{text-align:right}.nx-table__row{background-color:#fff}.nx-table__header-row,.nx-table__row{display:table-row;vertical-align:inherit;border-color:inherit}.nx-table__row:nth-child(2n+1){background-color:#ececec}.nx-table--light.nx-table--with-border .nx-table__row{background-color:#fff}.nx-table--light .nx-table__header-cell{background-color:#fff;border:none;border-bottom:2px solid #414141;padding-top:23px;padding-bottom:22px}.nx-table--light.nx-table--with-border .nx-table__cell{padding-bottom:23px;border-bottom:1px solid #d9d9d9}.nx-table__row:last-child .nx-table__cell{padding-bottom:22px;border-bottom:none}.nx-table__cell,.nx-table__header-cell{display:table-cell;vertical-align:inherit}\"]\n            }] }\n];\n/** @nocollapse */\nNxDynamicTableComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNxDynamicTableComponent.propDecorators = {\n    data: [{ type: Input, args: ['nxData',] }],\n    displayedColumns: [{ type: Input, args: ['nxDisplayedColumns',] }],\n    styles: [{ type: Input, args: ['nxType',] }],\n    nxRowClick: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxDynamicTableModule {\n}\nNxDynamicTableModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxDynamicTableComponent],\n                exports: [NxDynamicTableComponent],\n                imports: [CommonModule, CdkTableModule, ScrollDispatchModule]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_TYPE$4 = 'regular';\nclass NxAccordionDirective$1 extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        this._style = 'regular';\n        this._negative = null;\n    }\n    /**\n     * Value for the styling that should be chosen.\n     * Default value: 'regular'\n     * @param {?} value\n     * @return {?}\n     */\n    set style(value) {\n        value = value ? value : DEFAULT_TYPE$4;\n        const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE$4];\n        this._style = (/** @type {?} */ (newValue));\n    }\n    /**\n     * @return {?}\n     */\n    get style() {\n        return this._style;\n    }\n    /**\n     * Whether the negative set of styles should be used.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n}\nNxAccordionDirective$1.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-accordion',\n                host: {\n                    '[class.nx-accordion]': 'true',\n                    'role': 'presentation'\n                }\n            },] }\n];\nNxAccordionDirective$1.propDecorators = {\n    style: [{ type: Input, args: ['nxStyle',] }],\n    negative: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst nxAccordionAnimations = {\n    bodyExpansion: trigger('bodyExpansion', [\n        state('closed', style({ height: '0px', visibility: 'hidden' })),\n        state('open', style({ height: '*', visibility: 'visible' })),\n        transition('open <=> closed', animate('.5s cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    indicatorRotate: trigger('indicatorRotate', [\n        state('closed', style({ transform: 'rotate(0deg)' })),\n        state('open', style({ transform: 'rotate(180deg)' })),\n        transition('open <=> closed', animate('.3s ease')),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxExpansionPanelBodyDirective {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nNxExpansionPanelBodyDirective.decorators = [\n    { type: Directive, args: [{ selector: '[nxExpansionPanelBody]' },] }\n];\n/** @nocollapse */\nNxExpansionPanelBodyDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$c = 0;\n/** @type {?} */\nconst DEFAULT_TYPE$5 = 'regular';\nconst ɵ0 = undefined;\nclass NxExpansionPanelComponent$1 extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     * @param {?} _viewContainerRef\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher, _viewContainerRef) {\n        super(accordion, _changeDetectorRef, _expansionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._negative = null;\n        this._accordionStyle = DEFAULT_TYPE$5;\n        this._style = null;\n        this._headerId = `nx-expansion-panel-header-${nextId$c++}`;\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        this.accordion = accordion;\n    }\n    /**\n     * Whether the negative set of styles should be used.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        this._negative = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * Value for the styling that should be chosen.\n     * Default value: 'regular'.\n     * @param {?} value\n     * @return {?}\n     */\n    set style(value) {\n        value = value ? value : DEFAULT_TYPE$5;\n        const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE$5];\n        this._style = (/** @type {?} */ (newValue));\n        this._accordionStyle = (/** @type {?} */ (newValue));\n    }\n    /**\n     * @return {?}\n     */\n    get style() {\n        return this._style;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get portal() {\n        return this._portal;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this.lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this.lazyContent._template, this._viewContainerRef);\n            }));\n        }\n        // Inherit appearance given by the accordion (if any).\n        if (Boolean(this.accordion)) {\n            if (this.style === null && this.accordion.style !== null) {\n                this.style = this.accordion.style;\n            }\n            if (this.negative === null && this.accordion.negative !== null) {\n                this.negative = this.accordion.negative;\n            }\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getOpenState() {\n        return this.expanded ? 'open' : 'closed';\n    }\n}\nNxExpansionPanelComponent$1.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-expansion-panel',\n                exportAs: 'NxExpansionPanelComponent',\n                template: \"<ng-content select=\\\"nx-expansion-panel-header\\\"></ng-content>\\n\\n<div class=\\\"nx-expansion-panel__content\\\" role=\\\"region\\\" [@bodyExpansion]=\\\"getOpenState()\\\"\\n  [attr.aria-labelledby]=\\\"_headerId\\\" [id]=\\\"id\\\">\\n  <div class=\\\"nx-expansion-panel__body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"portal\\\"></ng-template>\\n  </div>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [nxAccordionAnimations.bodyExpansion],\n                host: {\n                    '[class.nx-expanded]': 'expanded',\n                    '[class.nx-expansion-panel--light]': '_accordionStyle === \"light\"',\n                    '[class.nx-expansion-panel--regular]': '_accordionStyle === \"regular\"',\n                    '[class.nx-expansion-panel--negative]': 'negative'\n                },\n                providers: [\n                    // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: NxAccordionDirective$1, useValue: ɵ0 },\n                ],\n                styles: [\":host{display:block}:host(.nx-expansion-panel--negative) ::ng-deep div.nx-expansion-panel__body *{color:#fff}.nx-expansion-panel__content{overflow:hidden;display:block}.nx-expansion-panel__body{font-size:16px;line-height:24px;padding:24px 88px 32px 32px}@media (max-width:703px){.nx-expansion-panel__body{padding:24px 16px 32px}:host:last-child ::ng-deep .nx-expansion-panel__header-content,:host:only-child ::ng-deep .nx-expansion-panel__header-content{border-bottom:1px solid #d9d9d9}}:host(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-content{border-top:1px solid #d9d9d9;border-bottom:none}:host(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__body{padding-top:0}:host(.nx-expansion-panel--light):first-child ::ng-deep .nx-expansion-panel__header-content{border-top:none}\"]\n            }] }\n];\n/** @nocollapse */\nNxExpansionPanelComponent$1.ctorParameters = () => [\n    { type: NxAccordionDirective$1, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef }\n];\nNxExpansionPanelComponent$1.propDecorators = {\n    negative: [{ type: Input }],\n    style: [{ type: Input, args: ['nxStyle',] }],\n    lazyContent: [{ type: ContentChild, args: [NxExpansionPanelBodyDirective,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxExpansionPanelHeaderComponent {\n    /**\n     * @param {?} panel\n     * @param {?} _changeDetectorRef\n     */\n    constructor(panel, _changeDetectorRef) {\n        this.panel = panel;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter((/**\n         * @param {?} changes\n         * @return {?}\n         */\n        changes => !!(changes.hideToggle || changes.disabled)))))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    getOpenState() {\n        return this.panel.getOpenState();\n    }\n    /**\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Toggle the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.panel.toggle();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    keydown(event) {\n        switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this.toggle();\n                break;\n            default:\n                return;\n        }\n    }\n}\nNxExpansionPanelHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-expansion-panel-header',\n                template: \"<div class=\\\"nx-expansion-panel__header-content\\\">\\n  <ng-content select=\\\"nx-expansion-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"nx-expansion-panel-description\\\"></ng-content>\\n  <nx-icon\\n    [@indicatorRotate]=\\\"getOpenState()\\\"\\n    class=\\\"nx-expansion-panel__chevron\\\"\\n    name=\\\"chevron-down\\\">\\n  </nx-icon>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [nxAccordionAnimations.indicatorRotate],\n                host: {\n                    '[class.nx-expanded]': 'isExpanded()',\n                    'class': 'nx-expansion-panel__header',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': 'isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '(keydown)': 'keydown($event)',\n                    '(click)': 'toggle()'\n                },\n                styles: [\":host:focus{outline:0}.nx-expansion-panel__header-content{width:100%;cursor:pointer;align-items:center;color:#414141;display:flex;justify-content:space-between;position:relative;padding:24px 32px;margin-top:16px;background:#f5f5f5;outline:0;border:none}::ng-deep .nx-expansion-panel__header-title{font-size:26px;font-weight:300;line-height:32px;letter-spacing:.3px;text-align:left;margin-right:32px}:host-context(.nx-expansion-panel--negative) .nx-expansion-panel__header-content{background-color:#fff}.nx-expansion-panel__chevron{color:#006192;pointer-events:none;font-size:24px}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{margin-top:0;background:0 0}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{color:#006192;letter-spacing:.2px;font-weight:400;font-size:20px;line-height:28px}@media (max-width:703px){.nx-expansion-panel__header-content{padding:16px;margin-top:0;border-top:1px solid #d9d9d9}::ng-deep .nx-expansion-panel__header-title{font-size:20px;line-height:28px;margin-right:16px;font-weight:400}:host(.nx-expanded) .nx-expansion-panel__header-content{border-bottom:1px solid #d9d9d9}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{line-height:24px;font-size:16px}:host-context(.nx-expansion-panel--light.nx-expanded) .nx-expansion-panel__header-content{border-bottom:none}}:host[aria-disabled=true] .nx-expansion-panel__header-content{cursor:not-allowed}:host[aria-disabled=true] ::ng-deep .nx-expansion-panel__chevron,:host[aria-disabled=true] ::ng-deep .nx-expansion-panel__header-title{color:#c2c2c2}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{border-color:#fff}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-title{color:#fff}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__chevron{color:#fff}:host-context([data-whatinput=keyboard]):focus .nx-expansion-panel__header-content{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-top-color:transparent;z-index:1}\"]\n            }] }\n];\n/** @nocollapse */\nNxExpansionPanelHeaderComponent.ctorParameters = () => [\n    { type: NxExpansionPanelComponent$1, decorators: [{ type: Host }] },\n    { type: ChangeDetectorRef }\n];\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\nclass NxExpansionPanelDescriptionDirective {\n}\nNxExpansionPanelDescriptionDirective.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-expansion-panel-description',\n                host: {\n                    class: 'nx-expansion-panel__header-description'\n                }\n            },] }\n];\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\nclass NxExpansionPanelTitleDirective {\n}\nNxExpansionPanelTitleDirective.decorators = [\n    { type: Directive, args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'nx-expansion-panel-title',\n                host: {\n                    class: 'nx-expansion-panel__header-title'\n                }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxAccordionModule$1 {\n}\nNxAccordionModule$1.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    PortalModule,\n                    NxIconModule\n                ],\n                exports: [\n                    NxAccordionDirective$1,\n                    NxExpansionPanelComponent$1,\n                    NxExpansionPanelHeaderComponent,\n                    NxExpansionPanelDescriptionDirective,\n                    NxExpansionPanelTitleDirective,\n                    NxExpansionPanelBodyDirective\n                ],\n                declarations: [\n                    NxAccordionDirective$1,\n                    NxExpansionPanelComponent$1,\n                    NxExpansionPanelHeaderComponent,\n                    NxExpansionPanelDescriptionDirective,\n                    NxExpansionPanelTitleDirective,\n                    NxExpansionPanelBodyDirective\n                ],\n                providers: [],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @abstract\n */\nclass NxTabGroupBase {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTabComponent {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _tabGroup\n     */\n    constructor(_viewContainerRef, _tabGroup) {\n        this._viewContainerRef = _viewContainerRef;\n        this._tabGroup = _tabGroup;\n        /**\n         * The portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n        if (!this._tabGroup) {\n            throw Error(`The nx-tab element has to be wrapped in a nx-tab-group to work.\n      Please provide a nx-tab-group element and place your tabs inside it.`);\n        }\n    }\n    /**\n     * Sets the label of the tab shown in the tablist.\n     * @return {?}\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set label(value) {\n        if (this._label !== value) {\n            this._label = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('label')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nNxTabComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab',\n                exportAs: 'nxTab',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nNxTabComponent.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: NxTabGroupBase, decorators: [{ type: Inject, args: [NxTabGroupBase,] }, { type: Optional }, { type: Host }] }\n];\nNxTabComponent.propDecorators = {\n    label: [{ type: Input }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxTabBodyComponent {\n    constructor() {\n        this._active = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        this._active = coerceBooleanProperty(value);\n        if (this._active) {\n            this.attach();\n        }\n        else {\n            this.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @return {?}\n     */\n    attach() {\n        if (!this.portalOutlet.hasAttached()) {\n            this.portalOutlet.attach(this.content);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        if (this.portalOutlet.hasAttached()) {\n            this.portalOutlet.detach();\n        }\n    }\n}\nNxTabBodyComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab-body',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:block}\"]\n            }] }\n];\nNxTabBodyComponent.propDecorators = {\n    content: [{ type: Input }],\n    active: [{ type: Input }],\n    portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxTabLabelDirective {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n}\nNxTabLabelDirective.decorators = [\n    { type: Directive, args: [{ selector: '[nxTabLabel]' },] }\n];\n/** @nocollapse */\nNxTabLabelDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass NxTabHeaderComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selectedIndex = 0;\n        this._autoselect = true;\n        this.selectFocusedIndex = new EventEmitter();\n        this.indexFocused = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._selectedIndex = value;\n        if (this._keyManager) {\n            this._keyManager.updateActiveItemIndex(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * @return {?}\n     */\n    get autoselect() {\n        return this._autoselect;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoselect(value) {\n        this._autoselect = value;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.labels).withHorizontalOrientation('ltr').withWrap();\n        this._keyManager.updateActiveItemIndex(0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} idx\n     * @return {?}\n     */\n    _isValidIndex(idx) {\n        if (!this.labels) {\n            return true;\n        }\n        return !!this.labels.toArray()[idx];\n    }\n    /**\n     * Handles keyboard inputs on the labels\n     * If autoselect is enabled the tab gets changed immediately\n     * If autoselect is disabled only the focus changes but the user still has to select the item\n     * by himself\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeydown(event) {\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n        if (this.autoselect) {\n            this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n        }\n        else if (event.keyCode !== ENTER && event.keyCode !== SPACE) {\n            this.indexFocused.emit(this._keyManager.activeItemIndex);\n        }\n    }\n}\nNxTabHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab-header',\n                template: \"<div class=\\\"nx-tab-header\\\" (keydown)=\\\"handleKeydown($event)\\\" role=\\\"tablist\\\">\\n  <ng-content></ng-content>\\n</div>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:block}.nx-tab-header{display:flex;align-items:flex-end;justify-content:center;padding:60px 0}\"]\n            }] }\n];\n/** @nocollapse */\nNxTabHeaderComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxTabHeaderComponent.propDecorators = {\n    selectedIndex: [{ type: Input }],\n    autoselect: [{ type: Input }],\n    selectFocusedIndex: [{ type: Output }],\n    indexFocused: [{ type: Output }],\n    labels: [{ type: ContentChildren, args: [NxTabLabelDirective,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTabChangeEvent {\n}\n/** @type {?} */\nlet nextId$d = 0;\n/** @type {?} */\nconst MOBILE_BREAKPOINT = 480;\nclass NxTabGroupComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selectedIndex = null;\n        this._negative = false;\n        this._indexToSelect = 0;\n        this._autoselect = true;\n        this._mobileAccordion = true;\n        this._showAccordion = false;\n        /**\n         * An event emitted when the selected tab has changed.\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * An event emitted when the selected tab has changed.\n         */\n        this.selectedTabChange = new EventEmitter();\n        /**\n         * An event emitted when focus has changed within a tab group.\n         *\n         * **Note:** is not supported in mobile view.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._groupId = nextId$d++;\n    }\n    /**\n     * Sets the selected tab.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Whether the negative set of styling should be used.\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        if (value !== this._negative) {\n            this._negative = coerceBooleanProperty(value);\n        }\n    }\n    /**\n     * Whether the tab should be immediately selected on focus.\n     * @return {?}\n     */\n    get autoselect() {\n        return this._autoselect;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoselect(value) {\n        this._autoselect = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the tabs should to accordion on mobile viewports.\n     * @return {?}\n     */\n    get mobileAccordion() {\n        return this._mobileAccordion;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mobileAccordion(value) {\n        this._mobileAccordion = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._switchAppearance(window.innerWidth);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this.tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this.tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the NxTab component, whereas the data binding is inside the NxTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this.tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * \\@docs-private\n     * @param {?} index\n     * @return {?}\n     */\n    focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new NxTabChangeEvent;\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} index\n     * @return {?}\n     */\n    handleClick(index) {\n        this.selectedIndex = this.tabHeader.focusIndex = index;\n    }\n    /**\n     * \\@docs-private\n     * Returns the tabindex for a tab label\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    getTabIndex(tab, idx) {\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `nx-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `nx-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onResize(event) {\n        this._switchAppearance(event.target.innerWidth);\n    }\n    /**\n     * @private\n     * @param {?} viewPortWidth\n     * @return {?}\n     */\n    _switchAppearance(viewPortWidth) {\n        if (!this._mobileAccordion) {\n            return;\n        }\n        if (viewPortWidth <= MOBILE_BREAKPOINT && !this._showAccordion) {\n            this._showMobileVersion();\n        }\n        else if (viewPortWidth > MOBILE_BREAKPOINT && this._showAccordion) {\n            this._showDesktopVersion();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _showMobileVersion() {\n        this._showAccordion = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _showDesktopVersion() {\n        this._showAccordion = false;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emulate the tab change event when an accordion panel is opened in\n     * mobile viewports.\n     * @param {?} index\n     * @return {?}\n     */\n    _panelOpened(index) {\n        this.selectedIndex = index;\n    }\n}\nNxTabGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab-group',\n                template: \"\\n  <nx-tab-header *ngIf=\\\"!_showAccordion\\\"\\n      #tabHeader\\n      [selectedIndex]=\\\"selectedIndex\\\"\\n      (selectFocusedIndex)=\\\"selectedIndex = $event\\\"\\n      (indexFocused)=\\\"focusChanged($event)\\\"\\n      [autoselect]=\\\"autoselect\\\">\\n    <button\\n      type=\\\"button\\\"\\n      nxTabLabel\\n      *ngFor=\\\"let tab of tabs; let i = index\\\"\\n      role=\\\"tab\\\"\\n      (click)=\\\"handleClick(i)\\\"\\n      class=\\\"nx-tab-header__item\\\"\\n      [id]=\\\"_getTabLabelId(i)\\\"\\n      [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n      [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n      [attr.tabindex]=\\\"getTabIndex(tab, i)\\\"\\n      [class.nx-tab-header__item--active]=\\\"selectedIndex == i\\\">\\n      {{tab.label}}\\n    </button>\\n  </nx-tab-header>\\n\\n  <div class=\\\"nx-tab-body__container\\\">\\n    <nx-tab-body\\n      *ngFor=\\\"let tab of tabs; let i = index\\\"\\n      [id]=\\\"_getTabContentId(i)\\\"\\n      role=\\\"tabpanel\\\"\\n      [attr.tabindex]=\\\"(!_showAccordion && selectedIndex == i) ? 0 : -1\\\"\\n      class=\\\"nx-tab__body\\\"\\n      [attr.aria-labelledby]=\\\"_getTabContentId(i)\\\"\\n      [class.nx-tab__body--active]=\\\"selectedIndex == i\\\"\\n      [content]=\\\"tab.content\\\"\\n      [active]=\\\"!_showAccordion && selectedIndex == i\\\"\\n    ></nx-tab-body>\\n  </div>\\n\\n  <nx-accordion *ngIf=\\\"_showAccordion\\\" [negative]=\\\"negative\\\">\\n    <nx-expansion-panel *ngFor=\\\"let tab of tabs; let i = index\\\" [expanded]=\\\"selectedIndex === i\\\" (opened)=\\\"_panelOpened(i)\\\">\\n      <nx-expansion-panel-header>\\n        <nx-expansion-panel-title>{{tab.label}}</nx-expansion-panel-title>\\n      </nx-expansion-panel-header>\\n      <ng-template [cdkPortalOutlet]=\\\"tab.content\\\"></ng-template>\\n    </nx-expansion-panel>\\n  </nx-accordion>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.is-negative]': 'negative'\n                },\n                providers: [{ provide: NxTabGroupBase, useExisting: NxTabGroupComponent }],\n                styles: [\":host{display:block}.nx-tab-header__item{text-decoration:none;border:none;background:0 0;color:#006192;border-bottom:2px solid #007ab3;padding:0 16px 6px;font-weight:400;font-size:18px;line-height:24px;outline:0}.nx-tab-header__item::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]) .nx-tab-header__item:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}.nx-tab-header__item--active{border-width:4px;font-weight:700;transition:font-weight .3s;padding-bottom:4px}:host(.is-negative){color:#fff}:host(.is-negative) .nx-tab-header__item{color:#fff;border-bottom-color:#fff}\"]\n            }] }\n];\n/** @nocollapse */\nNxTabGroupComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxTabGroupComponent.propDecorators = {\n    tabs: [{ type: ContentChildren, args: [NxTabComponent,] }],\n    tabBodyChildren: [{ type: ViewChildren, args: [NxTabBodyComponent,] }],\n    tabHeader: [{ type: ViewChild, args: ['tabHeader',] }],\n    panels: [{ type: ViewChildren, args: [NxExpansionPanelComponent,] }],\n    accordion: [{ type: ViewChild, args: [NxAccordionDirective,] }],\n    selectedIndex: [{ type: Input }],\n    negative: [{ type: Input }],\n    autoselect: [{ type: Input }],\n    mobileAccordion: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    selectedTabChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTabNavBarComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._negative = false;\n    }\n    /**\n     * Whether the tab nav bar has negative styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set negative(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.negative) {\n            this._negative = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get negative() {\n        return this._negative;\n    }\n}\nNxTabNavBarComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'nx-tab-nav-bar',\n                template: \"<ng-content></ng-content>\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.is-negative]': 'negative',\n                    'role': 'navigation',\n                },\n                styles: [\":host{display:flex;align-items:flex-end;justify-content:center}:host ::ng-deep a.nx-tab-link{text-decoration:none;border:none;background:0 0;color:#006192;border-bottom:2px solid #007ab3;padding:0 16px 6px;font-weight:400;font-size:18px;line-height:24px}:host ::ng-deep a.nx-tab-link.is-active{border-width:4px;font-weight:700;transition:font-weight .3s;padding-bottom:4px}:host(.is-negative){color:#fff}:host(.is-negative) ::ng-deep a.nx-tab-link{color:#fff;border-bottom-color:#fff}:host-context([data-whatinput=keyboard]) nx-tab-link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;border-radius:4px}\"]\n            }] }\n];\n/** @nocollapse */\nNxTabNavBarComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNxTabNavBarComponent.propDecorators = {\n    negative: [{ type: Input }]\n};\nclass NxTabLinkDirective {\n    /**\n     * @param {?} _tabNavBar\n     */\n    constructor(_tabNavBar) {\n        this._tabNavBar = _tabNavBar;\n        this._active = false;\n        if (!this._tabNavBar) {\n            throw Error(`The nx-tab-link element has to be wrapped in a nx-tab-nav-bar to work.`);\n        }\n    }\n    /**\n     * Whether the tab link is active and has the active styling.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._active) {\n            this._active = value;\n        }\n    }\n}\nNxTabLinkDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[nxTabLink]',\n                host: {\n                    '[class.nx-tab-link]': 'true',\n                    '[class.is-active]': 'active',\n                    '[attr.aria-current]': 'active',\n                }\n            },] }\n];\n/** @nocollapse */\nNxTabLinkDirective.ctorParameters = () => [\n    { type: NxTabNavBarComponent, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\nNxTabLinkDirective.propDecorators = {\n    active: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxTabsModule {\n}\nNxTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    PortalModule,\n                    NxAccordionModule\n                ],\n                exports: [\n                    NxTabComponent,\n                    NxTabGroupComponent,\n                    NxTabLabelDirective,\n                    NxTabHeaderComponent,\n                    NxTabBodyComponent,\n                    NxTabNavBarComponent,\n                    NxTabLinkDirective\n                ],\n                declarations: [\n                    NxTabComponent,\n                    NxTabGroupComponent,\n                    NxTabLabelDirective,\n                    NxTabHeaderComponent,\n                    NxTabBodyComponent,\n                    NxTabNavBarComponent,\n                    NxTabLinkDirective\n                ],\n                providers: [],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst BREAKPOINT_MOBILE = '(max-width: 703px)';\n/** @type {?} */\nconst BREAKPOINT_TABLET = '(min-width: 704px) and (max-width: 992px)';\n/** @type {?} */\nconst BREAKPOINT_DESKTOP = '(min-width: 993px)';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MappedStyles$1 {\n    /**\n     * @param {?} mapping\n     * @param {?=} baseClasses\n     * @param {?=} _elementRef\n     * @param {?=} _renderer\n     */\n    constructor(mapping, baseClasses = [], _elementRef, _renderer) {\n        this.mapping = mapping;\n        this.baseClasses = baseClasses;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.classNames = '';\n    }\n    /**\n     * @return {?}\n     */\n    get classNames() {\n        return this._classNames;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set classNames(value) {\n        if (this._classNames === value) {\n            return;\n        }\n        removeClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n        this._classNamesSanitized = mapClassNames(value, this.baseClasses, this.mapping);\n        this._classNames = value;\n        appendClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxCardComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} tabindex\n     */\n    constructor(_changeDetectorRef, tabindex) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._disabled = false;\n        /**\n         * Event emitted when the selected value has changed.\n         */\n        this.selectedChange = new EventEmitter();\n        this._tabindex = tabindex;\n    }\n    /**\n     * Whether this card is selectable or not.\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    /**\n     * Whether this card is selected or not.\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get selected() {\n        return this._selected;\n    }\n    /**\n     * Whether the card is disabled.\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @return {?}\n     */\n    _toggleSelected() {\n        if (this.selectable && !this.disabled) {\n            this.selected = !this.selected;\n            this.selectedChange.emit(this.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getTabindex() {\n        if (this.disabled) {\n            return '-1';\n        }\n        if (this.selectable) {\n            return this._tabindex || '0';\n        }\n        return this._tabindex || '';\n    }\n}\nNxCardComponent.decorators = [\n    { type: Component, args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'nx-card',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'nx-card',\n                    '[class.is-selectable]': 'selectable',\n                    '[class.is-selected]': 'selected',\n                    '[class.is-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled',\n                    '(click)': '_toggleSelected()',\n                    '(keydown.enter)': '_toggleSelected()',\n                    '[attr.tabindex]': '_getTabindex()'\n                },\n                styles: [\":host{background:#fff;border:1px solid #d9d9d9;border-radius:4px;box-shadow:none;display:inline-block;margin-bottom:24px;padding:24px;transition:background-color .2s,box-shadow .2s}:host.is-selectable{cursor:pointer}:host.is-selectable:hover{background-color:#f5f5f5}:host.is-selectable:focus,:host.is-selectable:hover{outline:0}:host.is-selected{box-shadow:0 8px 24px rgba(65,65,65,.35);background-color:#f5f5f5}:host.is-disabled{cursor:not-allowed;opacity:.4}:host.is-disabled:hover{background-color:#fff}:host.is-disabled:focus{outline:0}:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6}@media screen and (-ms-high-contrast:active){:host.is-selectable:focus,:host.is-selectable:hover{border-color:highlight}:host.is-selected{box-shadow:0 0 0 2px windowText}:host.is-selected:focus,:host.is-selected:hover{box-shadow:0 0 0 2px highlight}}\"]\n            }] }\n];\n/** @nocollapse */\nNxCardComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nNxCardComponent.propDecorators = {\n    selectable: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selectedChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NxCardModule {\n}\nNxCardModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NxCardComponent],\n                exports: [NxCardComponent],\n                imports: [\n                    CommonModule\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NdbxModule, NxButtonModule$1 as NxButtonModule, NxButtonComponent, NxIconButtonComponent, NxCheckboxModule$1 as NxCheckboxModule, NxCheckboxChangeEvent, NxCheckboxGroupComponent, NxCheckboxComponent, NxRadioModule, NxRadioGroupComponent, NxRadioComponent, NxCopytextModule, NxCopytextComponent, NxHeadlineModule, NxHeadlineComponent, NxLinkModule, NxLinkComponent, NxCircleToggleModule, NxMobileToggleButtonComponent, ToggleChangeEvent, NxCircleToggleComponent, NxIconToggleButtonComponent, NxCircleToggleGroupComponent, NxListModule, NxListComponent, NxRadioToggleModule, NxRadioToggleComponent, NxCheckboxCircleModule, NxCheckboxCircleComponent, NxSpinnerComponent, NxSpinnerModule, NxModalModule, NxModalActionsDirective, NxModalContentDirective, NxModalComponent, NxOpenModalOnClickDirective, NxModalService, NxSwitcherModule, NxSwitcherComponent, NxPopoverModule$1 as NxPopoverModule, NxPopoverComponent, NxPopoverTriggerDirective$1 as NxPopoverTriggerDirective, NxPopoverContentDirective, NxTaglistModule, NxTaglistComponent, NxImageModule, NxFigureComponent, NxImageDirective, NxRadioCircleModule, NxRadioCircleComponent, NxRadioCircleSvgButtonComponent, NxRadioCircleIconButtonComponent, NxVideoModule, NxVideoComponent, NxDropdownModule, NxDropdownSelectChange, SELECT_PANEL_MAX_HEIGHT, NxDropdownComponent$1 as NxDropdownComponent, NxDropdownItemChange, NxDropdownItemComponent, NxDropdownGroupComponent, NxAutocompleteModule$1 as NxAutocompleteModule, NxAutocompleteOptionSelected, NxAutocompleteOptionComponent, NxAutocompleteSelectedEvent, NxAutocompleteComponent, getNxAutocompleteMissingPanelError, NX_AUTOCOMPLETE_VALUE_ACCESSOR, NxAutocompleteTriggerDirective, NxNaturalLanguageFormModule, NxNaturalLanguageFormComponent, NxWordComponent$1 as NxWordComponent, NxMessageModule, NxMessageComponent, NxPageSearchModule, NxPageSearchComponent, NxRatingModule, NxRatingComponent, NxNumberStepperModule, NxNumberStepperComponent, NxNumberStepperPrefixDirective, NxNumberStepperSuffixDirective, NxNumberStepperIntl, NxPaginationModule, NxPaginationComponent, DefaultPaginationTexts, NX_PAGINATION_TEXTS, NxPaginationUtils, NxDynamicTableModule, NxDynamicTableComponent, NxExpansionPanelComponent$1 as NxExpansionPanelComponent, NxAccordionDirective$1 as NxAccordionDirective, NxAccordionModule$1 as NxAccordionModule, NxTabsModule, NxTabComponent, NxTabChangeEvent, NxTabGroupComponent, NxTabHeaderComponent, NxTabBodyComponent, NxTabLabelDirective, NxTabNavBarComponent, NxTabLinkDirective, BREAKPOINT_MOBILE, BREAKPOINT_TABLET, BREAKPOINT_DESKTOP, MappedStyles$1 as MappedStyles, NxCardComponent, NxCardModule, nxAccordionAnimations as ɵp, NxExpansionPanelBodyDirective as ɵq, NxExpansionPanelDescriptionDirective as ɵs, NxExpansionPanelHeaderComponent as ɵr, NxExpansionPanelTitleDirective as ɵt, NX_BUTTON_HOST_BINDINGS as ɵa, NxButtonBase as ɵb, ToggleButton as ɵc, NxDropdownClosedLabelDirective as ɵn, NxDropdownControl as ɵm, NxListIconComponent as ɵd, fadeIn as ɵg, fadeOut as ɵh, scaleDown as ɵj, scaleUp as ɵi, NxAutoResizeDirective as ɵo, NxRadioCircleButton as ɵl, NxRadioToggleButtonBaseComponent as ɵe, NxRadioToggleButtonComponent as ɵf, NxTabGroupBase as ɵu, NxTagComponent as ɵk };\n\n//# sourceMappingURL=allianz-ngx-ndbx.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, Input, Output, EventEmitter, Optional, ChangeDetectorRef, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n            },] },\n];\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ],\n            },] },\n];\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CdkAccordionItem, CdkAccordion, CdkAccordionModule };\n//# sourceMappingURL=accordion.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ngInjectableDef = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.decorators = [\n    { type: Directive, args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir',\n            },] },\n];\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [Dir],\n                declarations: [Dir],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n//# sourceMappingURL=bidi.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Observable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n * @template T\n */\nclass DataSource {\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return this._data instanceof Observable ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        /**\n         * Event emitted when the value has changed.\n         * @deprecated Use `changed` instead.\n         * \\@breaking-change 8.0.0 To be changed to `changed`\n         */\n        this.onChange = this.changed;\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ UniqueSelectionDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UniqueSelectionDispatcher, ArrayDataSource, isDataSource, DataSource, getMultipleValuesInSingleSelectionError, SelectionModel };\n//# sourceMappingURL=collections.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ScrollDispatcher, ViewportRuler, ScrollingModule, VIEWPORT_RULER_PROVIDER } from '@angular/cdk/scrolling';\nexport { ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkScrollable, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Inject, Injectable, NgZone, Optional, NgModule, SkipSelf, ApplicationRef, ComponentFactoryResolver, Injector, ElementRef, Directive, EventEmitter, InjectionToken, Input, Output, TemplateRef, ViewContainerRef, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Observable, Subject, merge, Subscription } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        /** @type {?} */\n        const previousContainers = this._document.getElementsByClassName(containerClass);\n        // Remove any old containers. This can happen when transitioning from the server to the client.\n        for (let i = 0; i < previousContainers.length; i++) {\n            (/** @type {?} */ (previousContainers[i].parentNode)).removeChild(previousContainers[i]);\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayContainer.ngInjectableDef = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT)); }, token: OverlayContainer, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in DOM the can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign({}, this._config, sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign({}, this._config, { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = this._overlayRef.getConfig().minHeight;\n            /** @type {?} */\n            const minWidth = this._overlayRef.getConfig().minWidth;\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        if (this._hasFlexibleDimensions && this._overlayRef.getConfig().maxHeight) {\n            styles.maxHeight = '';\n        }\n        if (this._hasFlexibleDimensions && this._overlayRef.getConfig().maxWidth) {\n            styles.maxWidth = '';\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: null, bottom: null }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: null, right: null }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        if (origin instanceof HTMLElement) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        styles.position = this._cssPosition;\n        styles.marginLeft = config.width === '100%' ? '0' : this._leftOffset;\n        styles.marginTop = config.height === '100%' ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (config.width === '100%') {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = config.height === '100%' ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ngInjectableDef = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because the ComponentFactoryResolver\n// it needs is different based on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector);\n    }\n}\nOverlay.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin',\n            },] },\n];\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position = this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            },] },\n];\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ],\n            },] },\n];\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    VIEWPORT_RULER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        super(_document);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ngInjectableDef = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Overlay, OverlayContainer, CdkOverlayOrigin, CdkConnectedOverlay, FullscreenOverlayContainer, OverlayRef, OverlayKeyboardDispatcher, OverlayPositionBuilder, GlobalPositionStrategy, ConnectedPositionStrategy, FlexibleConnectedPositionStrategy, OverlayConfig, validateVerticalPosition, validateHorizontalPosition, ConnectionPositionPair, ScrollingVisibility, ConnectedOverlayPositionChange, ScrollStrategyOptions, RepositionScrollStrategy, CloseScrollStrategy, NoopScrollStrategy, BlockScrollStrategy, OverlayModule, OVERLAY_PROVIDERS, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵg, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵf, OVERLAY_CONTAINER_PROVIDER as ɵb, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵa, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵc, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵe, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵd };\n//# sourceMappingURL=overlay.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ComponentFactoryResolver, Directive, EventEmitter, NgModule, Output, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal',\n            },] },\n];\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            },] },\n];\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n}\nCdkPortalOutlet.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            },] },\n];\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            },] },\n];\nclass PortalModule {\n}\nPortalModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Portal, ComponentPortal, TemplatePortal, BasePortalOutlet, BasePortalHost, DomPortalOutlet, DomPortalHost, CdkPortal, TemplatePortalDirective, CdkPortalOutlet, PortalHostDirective, PortalModule, PortalInjector };\n//# sourceMappingURL=portal.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, SkipSelf, ElementRef, NgModule, IterableDiffers, TemplateRef, ViewContainerRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Output, ViewChild, ViewEncapsulation, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, fromEvent, of, Observable, animationFrameScheduler, asapScheduler, merge } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, shareReplay, switchMap } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { ArrayDataSource, isDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef((/**\n                             * @return {?}\n                             */\n                            () => CdkFixedSizeVirtualScroll))],\n                    }],\n            },] },\n];\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ ScrollDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n        options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            },] },\n];\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return super.measureScrollOffset(from ? from : this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.decorators = [\n    { type: Component, args: [{selector: 'cdk-virtual-scroll-viewport',\n                template: \"<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\"><ng-content></ng-content></div><div class=\\\"cdk-virtual-scroll-spacer\\\" [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\",\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\"],\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport,\n                    }]\n            },] },\n];\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        /** @type {?} */\n        const ds = isDataSource(value) ? value :\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            new ArrayDataSource(value instanceof Observable ? value : Array.prototype.slice.call(value || []));\n        this._dataSourceChanges.next(ds);\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\n            },] },\n];\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n            },] },\n];\n/**\n * @deprecated ScrollDispatchModule has been renamed to ScrollingModule.\n * \\@breaking-change 8.0.0 delete this alias\n */\nclass ScrollDispatchModule {\n}\nScrollDispatchModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [ScrollingModule],\n                exports: [ScrollingModule],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     */\n    constructor(_platform, ngZone) {\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ ViewportRuler.ngInjectableDef = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentRuler\n * @param {?} platform\n * @param {?} ngZone\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, platform, ngZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { _fixedSizeVirtualScrollStrategyFactory, FixedSizeVirtualScrollStrategy, CdkFixedSizeVirtualScroll, SCROLL_DISPATCHER_PROVIDER_FACTORY, DEFAULT_SCROLL_TIME, ScrollDispatcher, SCROLL_DISPATCHER_PROVIDER, CdkScrollable, ScrollingModule, ScrollDispatchModule, VIEWPORT_RULER_PROVIDER_FACTORY, DEFAULT_RESIZE_TIME, ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkVirtualForOf, VIRTUAL_SCROLL_STRATEGY, CdkVirtualScrollViewport };\n//# sourceMappingURL=scrolling.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ContentChild, Directive, ElementRef, Input, TemplateRef, ChangeDetectionStrategy, Component, IterableDiffers, ViewContainerRef, ViewEncapsulation, Attribute, ChangeDetectorRef, ContentChildren, Inject, isDevMode, Optional, ViewChild, InjectionToken, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { isDataSource } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.decorators = [\n    { type: Directive, args: [{ selector: '[cdkCellDef]' },] },\n];\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.decorators = [\n    { type: Directive, args: [{ selector: '[cdkHeaderCellDef]' },] },\n];\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.decorators = [\n    { type: Directive, args: [{ selector: '[cdkFooterCellDef]' },] },\n];\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor() {\n        super(...arguments);\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (!name) {\n            return;\n        }\n        this._name = name;\n        this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n            },] },\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef, { static: false },] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef, { static: false },] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef, { static: false },] }]\n};\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader',\n                },\n            },] },\n];\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell',\n                },\n            },] },\n];\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell',\n                },\n            },] },\n];\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n            },] },\n];\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n            },] },\n];\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n}\nCdkRowDef.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n            },] },\n];\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[cdkCellOutlet]' },] },\n];\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.decorators = [\n    { type: Component, args: [{selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.decorators = [\n    { type: Component, args: [{selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.decorators = [\n    { type: Component, args: [{selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row',\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[rowOutlet]' },] },\n];\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[headerRowOutlet]' },] },\n];\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[footerRowOutlet]' },] },\n];\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs =\n            mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n        this._footerRowDefs =\n            mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n        this._rowDefs = mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (this.dataSource instanceof Observable) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n}\nCdkTable.decorators = [\n    { type: Component, args: [{selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table',\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n            },] },\n];\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef,] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef,] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef,] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef,] }]\n};\n/**\n * Utility function that gets a merged list of the entries in a QueryList and values of a Set.\n * @template T\n * @param {?} queryList\n * @param {?} set\n * @return {?}\n */\nfunction mergeQueryListAndSet(queryList, set) {\n    return queryList.toArray().concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.decorators = [\n    { type: Component, args: [{selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n            },] },\n];\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CDK_TABLE_TEMPLATE, CdkTable, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, BaseCdkCell, CdkHeaderCell, CdkFooterCell, CdkCell, CDK_ROW_TEMPLATE, BaseRowDef, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkCellOutlet, CdkHeaderRow, CdkFooterRow, CdkRow, CdkTableModule, STICKY_DIRECTIONS, StickyStyler, mixinHasStickyInput, TEXT_COLUMN_OPTIONS, CdkTextColumn };\n//# sourceMappingURL=table.js.map\n",";(function (globalScope) {\n  'use strict';\n\n\n  /*\n   *  decimal.js v10.2.0\n   *  An arbitrary-precision Decimal type for JavaScript.\n   *  https://github.com/MikeMcl/decimal.js\n   *  Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\n   *  MIT Licence\n   */\n\n\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\n\n\n    // The maximum exponent magnitude.\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\n\n    // The limit on the value of `precision`, and on the value of the first argument to\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\n\n    // Base conversion alphabet.\n    NUMERALS = '0123456789abcdef',\n\n    // The natural logarithm of 10 (1025 digits).\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\n\n    // Pi (1025 digits).\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\n\n\n    // The initial configuration properties of the Decimal constructor.\n    DEFAULTS = {\n\n      // These values must be integers within the stated ranges (inclusive).\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\n\n      // The maximum number of significant digits of the result of a calculation or base conversion.\n      // E.g. `Decimal.config({ precision: 20 });`\n      precision: 20,                         // 1 to MAX_DIGITS\n\n      // The rounding mode used when rounding to `precision`.\n      //\n      // ROUND_UP         0 Away from zero.\n      // ROUND_DOWN       1 Towards zero.\n      // ROUND_CEIL       2 Towards +Infinity.\n      // ROUND_FLOOR      3 Towards -Infinity.\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n      //\n      // E.g.\n      // `Decimal.rounding = 4;`\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\n      rounding: 4,                           // 0 to 8\n\n      // The modulo mode used when calculating the modulus: a mod n.\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\n      // The remainder (r) is calculated as: r = a - n * q.\n      //\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\n      // HALF_EVEN  6 The IEEE 754 remainder function.\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\n      //\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\n      // be used, but they may not give useful results.\n      modulo: 1,                             // 0 to 9\n\n      // The exponent value at and beneath which `toString` returns exponential notation.\n      // JavaScript numbers: -7\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\n\n      // The exponent value at and above which `toString` returns exponential notation.\n      // JavaScript numbers: 21\n      toExpPos:  21,                         // 0 to EXP_LIMIT\n\n      // The minimum exponent value, beneath which underflow to zero occurs.\n      // JavaScript numbers: -324  (5e-324)\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\n\n      // The maximum exponent value, above which overflow to Infinity occurs.\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\n\n      // Whether to use cryptographically-secure random number generation, if available.\n      crypto: false                          // true/false\n    },\n\n\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\n\n\n    Decimal, inexact, noConflict, quadrant,\n    external = true,\n\n    decimalError = '[DecimalError] ',\n    invalidArgument = decimalError + 'Invalid argument: ',\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\n    cryptoUnavailable = decimalError + 'crypto unavailable',\n\n    mathfloor = Math.floor,\n    mathpow = Math.pow,\n\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n\n    BASE = 1e7,\n    LOG_BASE = 7,\n    MAX_SAFE_INTEGER = 9007199254740991,\n\n    LN10_PRECISION = LN10.length - 1,\n    PI_PRECISION = PI.length - 1,\n\n    // Decimal.prototype object\n    P = { name: '[object Decimal]' };\n\n\n  // Decimal prototype methods\n\n\n  /*\n   *  absoluteValue             abs\n   *  ceil\n   *  comparedTo                cmp\n   *  cosine                    cos\n   *  cubeRoot                  cbrt\n   *  decimalPlaces             dp\n   *  dividedBy                 div\n   *  dividedToIntegerBy        divToInt\n   *  equals                    eq\n   *  floor\n   *  greaterThan               gt\n   *  greaterThanOrEqualTo      gte\n   *  hyperbolicCosine          cosh\n   *  hyperbolicSine            sinh\n   *  hyperbolicTangent         tanh\n   *  inverseCosine             acos\n   *  inverseHyperbolicCosine   acosh\n   *  inverseHyperbolicSine     asinh\n   *  inverseHyperbolicTangent  atanh\n   *  inverseSine               asin\n   *  inverseTangent            atan\n   *  isFinite\n   *  isInteger                 isInt\n   *  isNaN\n   *  isNegative                isNeg\n   *  isPositive                isPos\n   *  isZero\n   *  lessThan                  lt\n   *  lessThanOrEqualTo         lte\n   *  logarithm                 log\n   *  [maximum]                 [max]\n   *  [minimum]                 [min]\n   *  minus                     sub\n   *  modulo                    mod\n   *  naturalExponential        exp\n   *  naturalLogarithm          ln\n   *  negated                   neg\n   *  plus                      add\n   *  precision                 sd\n   *  round\n   *  sine                      sin\n   *  squareRoot                sqrt\n   *  tangent                   tan\n   *  times                     mul\n   *  toBinary\n   *  toDecimalPlaces           toDP\n   *  toExponential\n   *  toFixed\n   *  toFraction\n   *  toHexadecimal             toHex\n   *  toNearest\n   *  toNumber\n   *  toOctal\n   *  toPower                   pow\n   *  toPrecision\n   *  toSignificantDigits       toSD\n   *  toString\n   *  truncated                 trunc\n   *  valueOf                   toJSON\n   */\n\n\n  /*\n   * Return a new Decimal whose value is the absolute value of this Decimal.\n   *\n   */\n  P.absoluteValue = P.abs = function () {\n    var x = new this.constructor(this);\n    if (x.s < 0) x.s = 1;\n    return finalise(x);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\n   * direction of positive Infinity.\n   *\n   */\n  P.ceil = function () {\n    return finalise(new this.constructor(this), this.e + 1, 2);\n  };\n\n\n  /*\n   * Return\n   *   1    if the value of this Decimal is greater than the value of `y`,\n   *  -1    if the value of this Decimal is less than the value of `y`,\n   *   0    if they have the same value,\n   *   NaN  if the value of either Decimal is NaN.\n   *\n   */\n  P.comparedTo = P.cmp = function (y) {\n    var i, j, xdL, ydL,\n      x = this,\n      xd = x.d,\n      yd = (y = new x.constructor(y)).d,\n      xs = x.s,\n      ys = y.s;\n\n    // Either NaN or ±Infinity?\n    if (!xd || !yd) {\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\n    }\n\n    // Either zero?\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\n\n    // Signs differ?\n    if (xs !== ys) return xs;\n\n    // Compare exponents.\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\n\n    xdL = xd.length;\n    ydL = yd.length;\n\n    // Compare digit by digit.\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\n    }\n\n    // Compare lengths.\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-1, 1]\n   *\n   * cos(0)         = 1\n   * cos(-0)        = 1\n   * cos(Infinity)  = NaN\n   * cos(-Infinity) = NaN\n   * cos(NaN)       = NaN\n   *\n   */\n  P.cosine = P.cos = function () {\n    var pr, rm,\n      x = this,\n      Ctor = x.constructor;\n\n    if (!x.d) return new Ctor(NaN);\n\n    // cos(0) = cos(-0) = 1\n    if (!x.d[0]) return new Ctor(1);\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n    Ctor.rounding = 1;\n\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\n\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\n  };\n\n\n  /*\n   *\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\n   * `precision` significant digits using rounding mode `rounding`.\n   *\n   *  cbrt(0)  =  0\n   *  cbrt(-0) = -0\n   *  cbrt(1)  =  1\n   *  cbrt(-1) = -1\n   *  cbrt(N)  =  N\n   *  cbrt(-I) = -I\n   *  cbrt(I)  =  I\n   *\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\n   *\n   */\n  P.cubeRoot = P.cbrt = function () {\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\n      x = this,\n      Ctor = x.constructor;\n\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\n    external = false;\n\n    // Initial estimate.\n    s = x.s * mathpow(x.s * x, 1 / 3);\n\n     // Math.cbrt underflow/overflow?\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\n    if (!s || Math.abs(s) == 1 / 0) {\n      n = digitsToString(x.d);\n      e = x.e;\n\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\n      s = mathpow(n, 1 / 3);\n\n      // Rarely, e may be one less than the result exponent value.\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\n\n      if (s == 1 / 0) {\n        n = '5e' + e;\n      } else {\n        n = s.toExponential();\n        n = n.slice(0, n.indexOf('e') + 1) + e;\n      }\n\n      r = new Ctor(n);\n      r.s = x.s;\n    } else {\n      r = new Ctor(s.toString());\n    }\n\n    sd = (e = Ctor.precision) + 3;\n\n    // Halley's method.\n    // TODO? Compare Newton's method.\n    for (;;) {\n      t = r;\n      t3 = t.times(t).times(t);\n      t3plusx = t3.plus(x);\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\n\n      // TODO? Replace with for-loop and checkRoundingDigits.\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n        n = n.slice(sd - 3, sd + 1);\n\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\n        // , i.e. approaching a rounding boundary, continue the iteration.\n        if (n == '9999' || !rep && n == '4999') {\n\n          // On the first iteration only, check to see if rounding up gives the exact result as the\n          // nines may infinitely repeat.\n          if (!rep) {\n            finalise(t, e + 1, 0);\n\n            if (t.times(t).times(t).eq(x)) {\n              r = t;\n              break;\n            }\n          }\n\n          sd += 4;\n          rep = 1;\n        } else {\n\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\n          // If not, then there are further digits and m will be truthy.\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n\n            // Truncate to the first rounding digit.\n            finalise(r, e + 1, 1);\n            m = !r.times(r).times(r).eq(x);\n          }\n\n          break;\n        }\n      }\n    }\n\n    external = true;\n\n    return finalise(r, e, Ctor.rounding, m);\n  };\n\n\n  /*\n   * Return the number of decimal places of the value of this Decimal.\n   *\n   */\n  P.decimalPlaces = P.dp = function () {\n    var w,\n      d = this.d,\n      n = NaN;\n\n    if (d) {\n      w = d.length - 1;\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\n\n      // Subtract the number of trailing zeros of the last word.\n      w = d[w];\n      if (w) for (; w % 10 == 0; w /= 10) n--;\n      if (n < 0) n = 0;\n    }\n\n    return n;\n  };\n\n\n  /*\n   *  n / 0 = I\n   *  n / N = N\n   *  n / I = 0\n   *  0 / n = 0\n   *  0 / 0 = N\n   *  0 / N = N\n   *  0 / I = 0\n   *  N / n = N\n   *  N / 0 = N\n   *  N / N = N\n   *  N / I = N\n   *  I / n = I\n   *  I / 0 = I\n   *  I / N = N\n   *  I / I = N\n   *\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\n   * `precision` significant digits using rounding mode `rounding`.\n   *\n   */\n  P.dividedBy = P.div = function (y) {\n    return divide(this, new this.constructor(y));\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\n   *\n   */\n  P.dividedToIntegerBy = P.divToInt = function (y) {\n    var x = this,\n      Ctor = x.constructor;\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\n   *\n   */\n  P.equals = P.eq = function (y) {\n    return this.cmp(y) === 0;\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\n   * direction of negative Infinity.\n   *\n   */\n  P.floor = function () {\n    return finalise(new this.constructor(this), this.e + 1, 3);\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\n   * false.\n   *\n   */\n  P.greaterThan = P.gt = function (y) {\n    return this.cmp(y) > 0;\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\n   * otherwise return false.\n   *\n   */\n  P.greaterThanOrEqualTo = P.gte = function (y) {\n    var k = this.cmp(y);\n    return k == 1 || k === 0;\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\n   * Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [1, Infinity]\n   *\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\n   *\n   * cosh(0)         = 1\n   * cosh(-0)        = 1\n   * cosh(Infinity)  = Infinity\n   * cosh(-Infinity) = Infinity\n   * cosh(NaN)       = NaN\n   *\n   *  x        time taken (ms)   result\n   * 1000      9                 9.8503555700852349694e+433\n   * 10000     25                4.4034091128314607936e+4342\n   * 100000    171               1.4033316802130615897e+43429\n   * 1000000   3817              1.5166076984010437725e+434294\n   * 10000000  abandoned after 2 minute wait\n   *\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\n   *\n   */\n  P.hyperbolicCosine = P.cosh = function () {\n    var k, n, pr, rm, len,\n      x = this,\n      Ctor = x.constructor,\n      one = new Ctor(1);\n\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\n    if (x.isZero()) return one;\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n    Ctor.rounding = 1;\n    len = x.d.length;\n\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\n\n    // Estimate the optimum number of times to use the argument reduction.\n    // TODO? Estimation reused from cosine() and may not be optimal here.\n    if (len < 32) {\n      k = Math.ceil(len / 3);\n      n = (1 / tinyPow(4, k)).toString();\n    } else {\n      k = 16;\n      n = '2.3283064365386962890625e-10';\n    }\n\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\n\n    // Reverse argument reduction\n    var cosh2_x,\n      i = k,\n      d8 = new Ctor(8);\n    for (; i--;) {\n      cosh2_x = x.times(x);\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\n    }\n\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\n   * Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-Infinity, Infinity]\n   *\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\n   *\n   * sinh(0)         = 0\n   * sinh(-0)        = -0\n   * sinh(Infinity)  = Infinity\n   * sinh(-Infinity) = -Infinity\n   * sinh(NaN)       = NaN\n   *\n   * x        time taken (ms)\n   * 10       2 ms\n   * 100      5 ms\n   * 1000     14 ms\n   * 10000    82 ms\n   * 100000   886 ms            1.4033316802130615897e+43429\n   * 200000   2613 ms\n   * 300000   5407 ms\n   * 400000   8824 ms\n   * 500000   13026 ms          8.7080643612718084129e+217146\n   * 1000000  48543 ms\n   *\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\n   *\n   */\n  P.hyperbolicSine = P.sinh = function () {\n    var k, pr, rm, len,\n      x = this,\n      Ctor = x.constructor;\n\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n    Ctor.rounding = 1;\n    len = x.d.length;\n\n    if (len < 3) {\n      x = taylorSeries(Ctor, 2, x, x, true);\n    } else {\n\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\n      // 3 multiplications and 1 addition\n\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\n      // 4 multiplications and 2 additions\n\n      // Estimate the optimum number of times to use the argument reduction.\n      k = 1.4 * Math.sqrt(len);\n      k = k > 16 ? 16 : k | 0;\n\n      x = x.times(1 / tinyPow(5, k));\n      x = taylorSeries(Ctor, 2, x, x, true);\n\n      // Reverse argument reduction\n      var sinh2_x,\n        d5 = new Ctor(5),\n        d16 = new Ctor(16),\n        d20 = new Ctor(20);\n      for (; k--;) {\n        sinh2_x = x.times(x);\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\n      }\n    }\n\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return finalise(x, pr, rm, true);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\n   * Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-1, 1]\n   *\n   * tanh(x) = sinh(x) / cosh(x)\n   *\n   * tanh(0)         = 0\n   * tanh(-0)        = -0\n   * tanh(Infinity)  = 1\n   * tanh(-Infinity) = -1\n   * tanh(NaN)       = NaN\n   *\n   */\n  P.hyperbolicTangent = P.tanh = function () {\n    var pr, rm,\n      x = this,\n      Ctor = x.constructor;\n\n    if (!x.isFinite()) return new Ctor(x.s);\n    if (x.isZero()) return new Ctor(x);\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + 7;\n    Ctor.rounding = 1;\n\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\n   * this Decimal.\n   *\n   * Domain: [-1, 1]\n   * Range: [0, pi]\n   *\n   * acos(x) = pi/2 - asin(x)\n   *\n   * acos(0)       = pi/2\n   * acos(-0)      = pi/2\n   * acos(1)       = 0\n   * acos(-1)      = pi\n   * acos(1/2)     = pi/3\n   * acos(-1/2)    = 2*pi/3\n   * acos(|x| > 1) = NaN\n   * acos(NaN)     = NaN\n   *\n   */\n  P.inverseCosine = P.acos = function () {\n    var halfPi,\n      x = this,\n      Ctor = x.constructor,\n      k = x.abs().cmp(1),\n      pr = Ctor.precision,\n      rm = Ctor.rounding;\n\n    if (k !== -1) {\n      return k === 0\n        // |x| is 1\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\n        // |x| > 1 or x is NaN\n        : new Ctor(NaN);\n    }\n\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\n\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\n\n    Ctor.precision = pr + 6;\n    Ctor.rounding = 1;\n\n    x = x.asin();\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return halfPi.minus(x);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\n   * value of this Decimal.\n   *\n   * Domain: [1, Infinity]\n   * Range: [0, Infinity]\n   *\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\n   *\n   * acosh(x < 1)     = NaN\n   * acosh(NaN)       = NaN\n   * acosh(Infinity)  = Infinity\n   * acosh(-Infinity) = NaN\n   * acosh(0)         = NaN\n   * acosh(-0)        = NaN\n   * acosh(1)         = 0\n   * acosh(-1)        = NaN\n   *\n   */\n  P.inverseHyperbolicCosine = P.acosh = function () {\n    var pr, rm,\n      x = this,\n      Ctor = x.constructor;\n\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\n    if (!x.isFinite()) return new Ctor(x);\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\n    Ctor.rounding = 1;\n    external = false;\n\n    x = x.times(x).minus(1).sqrt().plus(x);\n\n    external = true;\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return x.ln();\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\n   * of this Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-Infinity, Infinity]\n   *\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\n   *\n   * asinh(NaN)       = NaN\n   * asinh(Infinity)  = Infinity\n   * asinh(-Infinity) = -Infinity\n   * asinh(0)         = 0\n   * asinh(-0)        = -0\n   *\n   */\n  P.inverseHyperbolicSine = P.asinh = function () {\n    var pr, rm,\n      x = this,\n      Ctor = x.constructor;\n\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\n    Ctor.rounding = 1;\n    external = false;\n\n    x = x.times(x).plus(1).sqrt().plus(x);\n\n    external = true;\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return x.ln();\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\n   * value of this Decimal.\n   *\n   * Domain: [-1, 1]\n   * Range: [-Infinity, Infinity]\n   *\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\n   *\n   * atanh(|x| > 1)   = NaN\n   * atanh(NaN)       = NaN\n   * atanh(Infinity)  = NaN\n   * atanh(-Infinity) = NaN\n   * atanh(0)         = 0\n   * atanh(-0)        = -0\n   * atanh(1)         = Infinity\n   * atanh(-1)        = -Infinity\n   *\n   */\n  P.inverseHyperbolicTangent = P.atanh = function () {\n    var pr, rm, wpr, xsd,\n      x = this,\n      Ctor = x.constructor;\n\n    if (!x.isFinite()) return new Ctor(NaN);\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    xsd = x.sd();\n\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\n\n    Ctor.precision = wpr = xsd - x.e;\n\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\n\n    Ctor.precision = pr + 4;\n    Ctor.rounding = 1;\n\n    x = x.ln();\n\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return x.times(0.5);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\n   * Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-pi/2, pi/2]\n   *\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\n   *\n   * asin(0)       = 0\n   * asin(-0)      = -0\n   * asin(1/2)     = pi/6\n   * asin(-1/2)    = -pi/6\n   * asin(1)       = pi/2\n   * asin(-1)      = -pi/2\n   * asin(|x| > 1) = NaN\n   * asin(NaN)     = NaN\n   *\n   * TODO? Compare performance of Taylor series.\n   *\n   */\n  P.inverseSine = P.asin = function () {\n    var halfPi, k,\n      pr, rm,\n      x = this,\n      Ctor = x.constructor;\n\n    if (x.isZero()) return new Ctor(x);\n\n    k = x.abs().cmp(1);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n\n    if (k !== -1) {\n\n      // |x| is 1\n      if (k === 0) {\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n        halfPi.s = x.s;\n        return halfPi;\n      }\n\n      // |x| > 1 or x is NaN\n      return new Ctor(NaN);\n    }\n\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\n\n    Ctor.precision = pr + 6;\n    Ctor.rounding = 1;\n\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\n\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return x.times(2);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\n   * of this Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-pi/2, pi/2]\n   *\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\n   *\n   * atan(0)         = 0\n   * atan(-0)        = -0\n   * atan(1)         = pi/4\n   * atan(-1)        = -pi/4\n   * atan(Infinity)  = pi/2\n   * atan(-Infinity) = -pi/2\n   * atan(NaN)       = NaN\n   *\n   */\n  P.inverseTangent = P.atan = function () {\n    var i, j, k, n, px, t, r, wpr, x2,\n      x = this,\n      Ctor = x.constructor,\n      pr = Ctor.precision,\n      rm = Ctor.rounding;\n\n    if (!x.isFinite()) {\n      if (!x.s) return new Ctor(NaN);\n      if (pr + 4 <= PI_PRECISION) {\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\n        r.s = x.s;\n        return r;\n      }\n    } else if (x.isZero()) {\n      return new Ctor(x);\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\n      r.s = x.s;\n      return r;\n    }\n\n    Ctor.precision = wpr = pr + 10;\n    Ctor.rounding = 1;\n\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\n\n    // Argument reduction\n    // Ensure |x| < 0.42\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\n\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\n\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\n\n    external = false;\n\n    j = Math.ceil(wpr / LOG_BASE);\n    n = 1;\n    x2 = x.times(x);\n    r = new Ctor(x);\n    px = x;\n\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\n    for (; i !== -1;) {\n      px = px.times(x2);\n      t = r.minus(px.div(n += 2));\n\n      px = px.times(x2);\n      r = t.plus(px.div(n += 2));\n\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\n    }\n\n    if (k) r = r.times(2 << (k - 1));\n\n    external = true;\n\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\n   *\n   */\n  P.isFinite = function () {\n    return !!this.d;\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is an integer, otherwise return false.\n   *\n   */\n  P.isInteger = P.isInt = function () {\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is NaN, otherwise return false.\n   *\n   */\n  P.isNaN = function () {\n    return !this.s;\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is negative, otherwise return false.\n   *\n   */\n  P.isNegative = P.isNeg = function () {\n    return this.s < 0;\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is positive, otherwise return false.\n   *\n   */\n  P.isPositive = P.isPos = function () {\n    return this.s > 0;\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\n   *\n   */\n  P.isZero = function () {\n    return !!this.d && this.d[0] === 0;\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\n   *\n   */\n  P.lessThan = P.lt = function (y) {\n    return this.cmp(y) < 0;\n  };\n\n\n  /*\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\n   *\n   */\n  P.lessThanOrEqualTo = P.lte = function (y) {\n    return this.cmp(y) < 1;\n  };\n\n\n  /*\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * If no base is specified, return log[10](arg).\n   *\n   * log[base](arg) = ln(arg) / ln(base)\n   *\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\n   * otherwise:\n   *\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\n   *\n   * log[-b](a)       = NaN\n   * log[0](a)        = NaN\n   * log[1](a)        = NaN\n   * log[NaN](a)      = NaN\n   * log[Infinity](a) = NaN\n   * log[b](0)        = -Infinity\n   * log[b](-0)       = -Infinity\n   * log[b](-a)       = NaN\n   * log[b](1)        = 0\n   * log[b](Infinity) = Infinity\n   * log[b](NaN)      = NaN\n   *\n   * [base] {number|string|Decimal} The base of the logarithm.\n   *\n   */\n  P.logarithm = P.log = function (base) {\n    var isBase10, d, denominator, k, inf, num, sd, r,\n      arg = this,\n      Ctor = arg.constructor,\n      pr = Ctor.precision,\n      rm = Ctor.rounding,\n      guard = 5;\n\n    // Default base is 10.\n    if (base == null) {\n      base = new Ctor(10);\n      isBase10 = true;\n    } else {\n      base = new Ctor(base);\n      d = base.d;\n\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\n\n      isBase10 = base.eq(10);\n    }\n\n    d = arg.d;\n\n    // Is arg negative, non-finite, 0 or 1?\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\n    }\n\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\n    // integer power of 10.\n    if (isBase10) {\n      if (d.length > 1) {\n        inf = true;\n      } else {\n        for (k = d[0]; k % 10 === 0;) k /= 10;\n        inf = k !== 1;\n      }\n    }\n\n    external = false;\n    sd = pr + guard;\n    num = naturalLogarithm(arg, sd);\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n\n    // The result will have 5 rounding digits.\n    r = divide(num, denominator, sd, 1);\n\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\n    // calculate 10 further digits.\n    //\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\n    // further digits, the last 14 are nines, round up and assume the result is exact.\n    // Also assume the result is exact if the last 14 are zero.\n    //\n    // Example of a result that will be incorrectly rounded:\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\n    // place is still 2.6.\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\n\n      do {\n        sd += 10;\n        num = naturalLogarithm(arg, sd);\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n        r = divide(num, denominator, sd, 1);\n\n        if (!inf) {\n\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\n            r = finalise(r, pr + 1, 0);\n          }\n\n          break;\n        }\n      } while (checkRoundingDigits(r.d, k += 10, rm));\n    }\n\n    external = true;\n\n    return finalise(r, pr, rm);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\n   *\n   * arguments {number|string|Decimal}\n   *\n  P.max = function () {\n    Array.prototype.push.call(arguments, this);\n    return maxOrMin(this.constructor, arguments, 'lt');\n  };\n   */\n\n\n  /*\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\n   *\n   * arguments {number|string|Decimal}\n   *\n  P.min = function () {\n    Array.prototype.push.call(arguments, this);\n    return maxOrMin(this.constructor, arguments, 'gt');\n  };\n   */\n\n\n  /*\n   *  n - 0 = n\n   *  n - N = N\n   *  n - I = -I\n   *  0 - n = -n\n   *  0 - 0 = 0\n   *  0 - N = N\n   *  0 - I = -I\n   *  N - n = N\n   *  N - 0 = N\n   *  N - N = N\n   *  N - I = N\n   *  I - n = I\n   *  I - 0 = I\n   *  I - N = N\n   *  I - I = N\n   *\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   */\n  P.minus = P.sub = function (y) {\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\n      x = this,\n      Ctor = x.constructor;\n\n    y = new Ctor(y);\n\n    // If either is not finite...\n    if (!x.d || !y.d) {\n\n      // Return NaN if either is NaN.\n      if (!x.s || !y.s) y = new Ctor(NaN);\n\n      // Return y negated if x is finite and y is ±Infinity.\n      else if (x.d) y.s = -y.s;\n\n      // Return x if y is finite and x is ±Infinity.\n      // Return x if both are ±Infinity with different signs.\n      // Return NaN if both are ±Infinity with the same sign.\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\n\n      return y;\n    }\n\n    // If signs differ...\n    if (x.s != y.s) {\n      y.s = -y.s;\n      return x.plus(y);\n    }\n\n    xd = x.d;\n    yd = y.d;\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n\n    // If either is zero...\n    if (!xd[0] || !yd[0]) {\n\n      // Return y negated if x is zero and y is non-zero.\n      if (yd[0]) y.s = -y.s;\n\n      // Return x if y is zero and x is non-zero.\n      else if (xd[0]) y = new Ctor(x);\n\n      // Return zero if both are zero.\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\n      else return new Ctor(rm === 3 ? -0 : 0);\n\n      return external ? finalise(y, pr, rm) : y;\n    }\n\n    // x and y are finite, non-zero numbers with the same sign.\n\n    // Calculate base 1e7 exponents.\n    e = mathfloor(y.e / LOG_BASE);\n    xe = mathfloor(x.e / LOG_BASE);\n\n    xd = xd.slice();\n    k = xe - e;\n\n    // If base 1e7 exponents differ...\n    if (k) {\n      xLTy = k < 0;\n\n      if (xLTy) {\n        d = xd;\n        k = -k;\n        len = yd.length;\n      } else {\n        d = yd;\n        e = xe;\n        len = xd.length;\n      }\n\n      // Numbers with massively different exponents would result in a very high number of\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\n\n      if (k > i) {\n        k = i;\n        d.length = 1;\n      }\n\n      // Prepend zeros to equalise exponents.\n      d.reverse();\n      for (i = k; i--;) d.push(0);\n      d.reverse();\n\n    // Base 1e7 exponents equal.\n    } else {\n\n      // Check digits to determine which is the bigger number.\n\n      i = xd.length;\n      len = yd.length;\n      xLTy = i < len;\n      if (xLTy) len = i;\n\n      for (i = 0; i < len; i++) {\n        if (xd[i] != yd[i]) {\n          xLTy = xd[i] < yd[i];\n          break;\n        }\n      }\n\n      k = 0;\n    }\n\n    if (xLTy) {\n      d = xd;\n      xd = yd;\n      yd = d;\n      y.s = -y.s;\n    }\n\n    len = xd.length;\n\n    // Append zeros to `xd` if shorter.\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\n\n    // Subtract yd from xd.\n    for (i = yd.length; i > k;) {\n\n      if (xd[--i] < yd[i]) {\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\n        --xd[j];\n        xd[i] += BASE;\n      }\n\n      xd[i] -= yd[i];\n    }\n\n    // Remove trailing zeros.\n    for (; xd[--len] === 0;) xd.pop();\n\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xd[0] === 0; xd.shift()) --e;\n\n    // Zero?\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\n\n    y.d = xd;\n    y.e = getBase10Exponent(xd, e);\n\n    return external ? finalise(y, pr, rm) : y;\n  };\n\n\n  /*\n   *   n % 0 =  N\n   *   n % N =  N\n   *   n % I =  n\n   *   0 % n =  0\n   *  -0 % n = -0\n   *   0 % 0 =  N\n   *   0 % N =  N\n   *   0 % I =  0\n   *   N % n =  N\n   *   N % 0 =  N\n   *   N % N =  N\n   *   N % I =  N\n   *   I % n =  N\n   *   I % 0 =  N\n   *   I % N =  N\n   *   I % I =  N\n   *\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\n   * `precision` significant digits using rounding mode `rounding`.\n   *\n   * The result depends on the modulo mode.\n   *\n   */\n  P.modulo = P.mod = function (y) {\n    var q,\n      x = this,\n      Ctor = x.constructor;\n\n    y = new Ctor(y);\n\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\n\n    // Return x if y is ±Infinity or x is ±0.\n    if (!y.d || x.d && !x.d[0]) {\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\n    }\n\n    // Prevent rounding of intermediate calculations.\n    external = false;\n\n    if (Ctor.modulo == 9) {\n\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\n      // result = x - q * y    where  0 <= result < abs(y)\n      q = divide(x, y.abs(), 0, 3, 1);\n      q.s *= y.s;\n    } else {\n      q = divide(x, y, 0, Ctor.modulo, 1);\n    }\n\n    q = q.times(y);\n\n    external = true;\n\n    return x.minus(q);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   */\n  P.naturalExponential = P.exp = function () {\n    return naturalExponential(this);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\n   * rounded to `precision` significant digits using rounding mode `rounding`.\n   *\n   */\n  P.naturalLogarithm = P.ln = function () {\n    return naturalLogarithm(this);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\n   * -1.\n   *\n   */\n  P.negated = P.neg = function () {\n    var x = new this.constructor(this);\n    x.s = -x.s;\n    return finalise(x);\n  };\n\n\n  /*\n   *  n + 0 = n\n   *  n + N = N\n   *  n + I = I\n   *  0 + n = n\n   *  0 + 0 = 0\n   *  0 + N = N\n   *  0 + I = I\n   *  N + n = N\n   *  N + 0 = N\n   *  N + N = N\n   *  N + I = N\n   *  I + n = I\n   *  I + 0 = I\n   *  I + N = N\n   *  I + I = I\n   *\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   */\n  P.plus = P.add = function (y) {\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\n      x = this,\n      Ctor = x.constructor;\n\n    y = new Ctor(y);\n\n    // If either is not finite...\n    if (!x.d || !y.d) {\n\n      // Return NaN if either is NaN.\n      if (!x.s || !y.s) y = new Ctor(NaN);\n\n      // Return x if y is finite and x is ±Infinity.\n      // Return x if both are ±Infinity with the same sign.\n      // Return NaN if both are ±Infinity with different signs.\n      // Return y if x is finite and y is ±Infinity.\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\n\n      return y;\n    }\n\n     // If signs differ...\n    if (x.s != y.s) {\n      y.s = -y.s;\n      return x.minus(y);\n    }\n\n    xd = x.d;\n    yd = y.d;\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n\n    // If either is zero...\n    if (!xd[0] || !yd[0]) {\n\n      // Return x if y is zero.\n      // Return y if y is non-zero.\n      if (!yd[0]) y = new Ctor(x);\n\n      return external ? finalise(y, pr, rm) : y;\n    }\n\n    // x and y are finite, non-zero numbers with the same sign.\n\n    // Calculate base 1e7 exponents.\n    k = mathfloor(x.e / LOG_BASE);\n    e = mathfloor(y.e / LOG_BASE);\n\n    xd = xd.slice();\n    i = k - e;\n\n    // If base 1e7 exponents differ...\n    if (i) {\n\n      if (i < 0) {\n        d = xd;\n        i = -i;\n        len = yd.length;\n      } else {\n        d = yd;\n        e = k;\n        len = xd.length;\n      }\n\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\n      k = Math.ceil(pr / LOG_BASE);\n      len = k > len ? k + 1 : len + 1;\n\n      if (i > len) {\n        i = len;\n        d.length = 1;\n      }\n\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\n      d.reverse();\n      for (; i--;) d.push(0);\n      d.reverse();\n    }\n\n    len = xd.length;\n    i = yd.length;\n\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\n    if (len - i < 0) {\n      i = len;\n      d = yd;\n      yd = xd;\n      xd = d;\n    }\n\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\n    for (carry = 0; i;) {\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\n      xd[i] %= BASE;\n    }\n\n    if (carry) {\n      xd.unshift(carry);\n      ++e;\n    }\n\n    // Remove trailing zeros.\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\n\n    y.d = xd;\n    y.e = getBase10Exponent(xd, e);\n\n    return external ? finalise(y, pr, rm) : y;\n  };\n\n\n  /*\n   * Return the number of significant digits of the value of this Decimal.\n   *\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\n   *\n   */\n  P.precision = P.sd = function (z) {\n    var k,\n      x = this;\n\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\n\n    if (x.d) {\n      k = getPrecision(x.d);\n      if (z && x.e + 1 > k) k = x.e + 1;\n    } else {\n      k = NaN;\n    }\n\n    return k;\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\n   * rounding mode `rounding`.\n   *\n   */\n  P.round = function () {\n    var x = this,\n      Ctor = x.constructor;\n\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-1, 1]\n   *\n   * sin(x) = x - x^3/3! + x^5/5! - ...\n   *\n   * sin(0)         = 0\n   * sin(-0)        = -0\n   * sin(Infinity)  = NaN\n   * sin(-Infinity) = NaN\n   * sin(NaN)       = NaN\n   *\n   */\n  P.sine = P.sin = function () {\n    var pr, rm,\n      x = this,\n      Ctor = x.constructor;\n\n    if (!x.isFinite()) return new Ctor(NaN);\n    if (x.isZero()) return new Ctor(x);\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n    Ctor.rounding = 1;\n\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\n\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   *  sqrt(-n) =  N\n   *  sqrt(N)  =  N\n   *  sqrt(-I) =  N\n   *  sqrt(I)  =  I\n   *  sqrt(0)  =  0\n   *  sqrt(-0) = -0\n   *\n   */\n  P.squareRoot = P.sqrt = function () {\n    var m, n, sd, r, rep, t,\n      x = this,\n      d = x.d,\n      e = x.e,\n      s = x.s,\n      Ctor = x.constructor;\n\n    // Negative/NaN/Infinity/zero?\n    if (s !== 1 || !d || !d[0]) {\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\n    }\n\n    external = false;\n\n    // Initial estimate.\n    s = Math.sqrt(+x);\n\n    // Math.sqrt underflow/overflow?\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\n    if (s == 0 || s == 1 / 0) {\n      n = digitsToString(d);\n\n      if ((n.length + e) % 2 == 0) n += '0';\n      s = Math.sqrt(n);\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\n\n      if (s == 1 / 0) {\n        n = '1e' + e;\n      } else {\n        n = s.toExponential();\n        n = n.slice(0, n.indexOf('e') + 1) + e;\n      }\n\n      r = new Ctor(n);\n    } else {\n      r = new Ctor(s.toString());\n    }\n\n    sd = (e = Ctor.precision) + 3;\n\n    // Newton-Raphson iteration.\n    for (;;) {\n      t = r;\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\n\n      // TODO? Replace with for-loop and checkRoundingDigits.\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n        n = n.slice(sd - 3, sd + 1);\n\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\n        if (n == '9999' || !rep && n == '4999') {\n\n          // On the first iteration only, check to see if rounding up gives the exact result as the\n          // nines may infinitely repeat.\n          if (!rep) {\n            finalise(t, e + 1, 0);\n\n            if (t.times(t).eq(x)) {\n              r = t;\n              break;\n            }\n          }\n\n          sd += 4;\n          rep = 1;\n        } else {\n\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\n          // If not, then there are further digits and m will be truthy.\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n\n            // Truncate to the first rounding digit.\n            finalise(r, e + 1, 1);\n            m = !r.times(r).eq(x);\n          }\n\n          break;\n        }\n      }\n    }\n\n    external = true;\n\n    return finalise(r, e, Ctor.rounding, m);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-Infinity, Infinity]\n   *\n   * tan(0)         = 0\n   * tan(-0)        = -0\n   * tan(Infinity)  = NaN\n   * tan(-Infinity) = NaN\n   * tan(NaN)       = NaN\n   *\n   */\n  P.tangent = P.tan = function () {\n    var pr, rm,\n      x = this,\n      Ctor = x.constructor;\n\n    if (!x.isFinite()) return new Ctor(NaN);\n    if (x.isZero()) return new Ctor(x);\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + 10;\n    Ctor.rounding = 1;\n\n    x = x.sin();\n    x.s = 1;\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\n\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\n  };\n\n\n  /*\n   *  n * 0 = 0\n   *  n * N = N\n   *  n * I = I\n   *  0 * n = 0\n   *  0 * 0 = 0\n   *  0 * N = N\n   *  0 * I = N\n   *  N * n = N\n   *  N * 0 = N\n   *  N * N = N\n   *  N * I = N\n   *  I * n = I\n   *  I * 0 = N\n   *  I * N = N\n   *  I * I = I\n   *\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\n   * digits using rounding mode `rounding`.\n   *\n   */\n  P.times = P.mul = function (y) {\n    var carry, e, i, k, r, rL, t, xdL, ydL,\n      x = this,\n      Ctor = x.constructor,\n      xd = x.d,\n      yd = (y = new Ctor(y)).d;\n\n    y.s *= x.s;\n\n     // If either is NaN, ±Infinity or ±0...\n    if (!xd || !xd[0] || !yd || !yd[0]) {\n\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\n\n        // Return NaN if either is NaN.\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\n        ? NaN\n\n        // Return ±Infinity if either is ±Infinity.\n        // Return ±0 if either is ±0.\n        : !xd || !yd ? y.s / 0 : y.s * 0);\n    }\n\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\n    xdL = xd.length;\n    ydL = yd.length;\n\n    // Ensure xd points to the longer array.\n    if (xdL < ydL) {\n      r = xd;\n      xd = yd;\n      yd = r;\n      rL = xdL;\n      xdL = ydL;\n      ydL = rL;\n    }\n\n    // Initialise the result array with zeros.\n    r = [];\n    rL = xdL + ydL;\n    for (i = rL; i--;) r.push(0);\n\n    // Multiply!\n    for (i = ydL; --i >= 0;) {\n      carry = 0;\n      for (k = xdL + i; k > i;) {\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\n        r[k--] = t % BASE | 0;\n        carry = t / BASE | 0;\n      }\n\n      r[k] = (r[k] + carry) % BASE | 0;\n    }\n\n    // Remove trailing zeros.\n    for (; !r[--rL];) r.pop();\n\n    if (carry) ++e;\n    else r.shift();\n\n    y.d = r;\n    y.e = getBase10Exponent(r, e);\n\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\n  };\n\n\n  /*\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\n   * digits using rounding mode `rm`.\n   *\n   * If the optional `sd` argument is present then return binary exponential notation.\n   *\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   */\n  P.toBinary = function (sd, rm) {\n    return toStringBinary(this, 2, sd, rm);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\n   *\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\n   *\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   */\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\n    var x = this,\n      Ctor = x.constructor;\n\n    x = new Ctor(x);\n    if (dp === void 0) return x;\n\n    checkInt32(dp, 0, MAX_DIGITS);\n\n    if (rm === void 0) rm = Ctor.rounding;\n    else checkInt32(rm, 0, 8);\n\n    return finalise(x, dp + x.e + 1, rm);\n  };\n\n\n  /*\n   * Return a string representing the value of this Decimal in exponential notation rounded to\n   * `dp` fixed decimal places using rounding mode `rounding`.\n   *\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   */\n  P.toExponential = function (dp, rm) {\n    var str,\n      x = this,\n      Ctor = x.constructor;\n\n    if (dp === void 0) {\n      str = finiteToString(x, true);\n    } else {\n      checkInt32(dp, 0, MAX_DIGITS);\n\n      if (rm === void 0) rm = Ctor.rounding;\n      else checkInt32(rm, 0, 8);\n\n      x = finalise(new Ctor(x), dp + 1, rm);\n      str = finiteToString(x, true, dp + 1);\n    }\n\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\n  };\n\n\n  /*\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\n   * omitted.\n   *\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\n   *\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n   * (-0).toFixed(3) is '0.000'.\n   * (-0.5).toFixed(0) is '-0'.\n   *\n   */\n  P.toFixed = function (dp, rm) {\n    var str, y,\n      x = this,\n      Ctor = x.constructor;\n\n    if (dp === void 0) {\n      str = finiteToString(x);\n    } else {\n      checkInt32(dp, 0, MAX_DIGITS);\n\n      if (rm === void 0) rm = Ctor.rounding;\n      else checkInt32(rm, 0, 8);\n\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\n      str = finiteToString(y, false, dp + y.e + 1);\n    }\n\n    // To determine whether to add the minus sign look at the value before it was rounded,\n    // i.e. look at `x` rather than `y`.\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\n  };\n\n\n  /*\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\n   * numerator and an integer denominator.\n   *\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\n   * value necessary to represent the number exactly.\n   *\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\n   *\n   */\n  P.toFraction = function (maxD) {\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\n      x = this,\n      xd = x.d,\n      Ctor = x.constructor;\n\n    if (!xd) return new Ctor(x);\n\n    n1 = d0 = new Ctor(1);\n    d1 = n0 = new Ctor(0);\n\n    d = new Ctor(d1);\n    e = d.e = getPrecision(xd) - x.e - 1;\n    k = e % LOG_BASE;\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\n\n    if (maxD == null) {\n\n      // d is 10**e, the minimum max-denominator needed.\n      maxD = e > 0 ? d : n1;\n    } else {\n      n = new Ctor(maxD);\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\n    }\n\n    external = false;\n    n = new Ctor(digitsToString(xd));\n    pr = Ctor.precision;\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\n\n    for (;;)  {\n      q = divide(n, d, 0, 1, 1);\n      d2 = d0.plus(q.times(d1));\n      if (d2.cmp(maxD) == 1) break;\n      d0 = d1;\n      d1 = d2;\n      d2 = n1;\n      n1 = n0.plus(q.times(d2));\n      n0 = d2;\n      d2 = d;\n      d = n.minus(q.times(d2));\n      n = d2;\n    }\n\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\n    n0 = n0.plus(d2.times(n1));\n    d0 = d0.plus(d2.times(d1));\n    n0.s = n1.s = x.s;\n\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\n        ? [n1, d1] : [n0, d0];\n\n    Ctor.precision = pr;\n    external = true;\n\n    return r;\n  };\n\n\n  /*\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\n   * digits using rounding mode `rm`.\n   *\n   * If the optional `sd` argument is present then return binary exponential notation.\n   *\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   */\n  P.toHexadecimal = P.toHex = function (sd, rm) {\n    return toStringBinary(this, 16, sd, rm);\n  };\n\n\n  /*\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\n   *\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\n   * or `y` is NaN, in which case the return value will be also be NaN.\n   *\n   * The return value is not affected by the value of `precision`.\n   *\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   * 'toNearest() rounding mode not an integer: {rm}'\n   * 'toNearest() rounding mode out of range: {rm}'\n   *\n   */\n  P.toNearest = function (y, rm) {\n    var x = this,\n      Ctor = x.constructor;\n\n    x = new Ctor(x);\n\n    if (y == null) {\n\n      // If x is not finite, return x.\n      if (!x.d) return x;\n\n      y = new Ctor(1);\n      rm = Ctor.rounding;\n    } else {\n      y = new Ctor(y);\n      if (rm === void 0) {\n        rm = Ctor.rounding;\n      } else {\n        checkInt32(rm, 0, 8);\n      }\n\n      // If x is not finite, return x if y is not NaN, else NaN.\n      if (!x.d) return y.s ? x : y;\n\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\n      if (!y.d) {\n        if (y.s) y.s = x.s;\n        return y;\n      }\n    }\n\n    // If y is not zero, calculate the nearest multiple of y to x.\n    if (y.d[0]) {\n      external = false;\n      x = divide(x, y, 0, rm, 1).times(y);\n      external = true;\n      finalise(x);\n\n    // If y is zero, return zero with the sign of x.\n    } else {\n      y.s = x.s;\n      x = y;\n    }\n\n    return x;\n  };\n\n\n  /*\n   * Return the value of this Decimal converted to a number primitive.\n   * Zero keeps its sign.\n   *\n   */\n  P.toNumber = function () {\n    return +this;\n  };\n\n\n  /*\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\n   * digits using rounding mode `rm`.\n   *\n   * If the optional `sd` argument is present then return binary exponential notation.\n   *\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   */\n  P.toOctal = function (sd, rm) {\n    return toStringBinary(this, 8, sd, rm);\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\n   * to `precision` significant digits using rounding mode `rounding`.\n   *\n   * ECMAScript compliant.\n   *\n   *   pow(x, NaN)                           = NaN\n   *   pow(x, ±0)                            = 1\n\n   *   pow(NaN, non-zero)                    = NaN\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\n   *   pow(abs(x) > 1, -Infinity)            = +0\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\n   *   pow(abs(x) < 1, +Infinity)            = +0\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\n   *   pow(+Infinity, y > 0)                 = +Infinity\n   *   pow(+Infinity, y < 0)                 = +0\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\n   *   pow(-Infinity, even integer > 0)      = +Infinity\n   *   pow(-Infinity, odd integer < 0)       = -0\n   *   pow(-Infinity, even integer < 0)      = +0\n   *   pow(+0, y > 0)                        = +0\n   *   pow(+0, y < 0)                        = +Infinity\n   *   pow(-0, odd integer > 0)              = -0\n   *   pow(-0, even integer > 0)             = +0\n   *   pow(-0, odd integer < 0)              = -Infinity\n   *   pow(-0, even integer < 0)             = +Infinity\n   *   pow(finite x < 0, finite non-integer) = NaN\n   *\n   * For non-integer or very large exponents pow(x, y) is calculated using\n   *\n   *   x^y = exp(y*ln(x))\n   *\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\n   * probability of an incorrectly rounded result\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\n   * i.e. 1 in 250,000,000,000,000\n   *\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\n   *\n   * y {number|string|Decimal} The power to which to raise this Decimal.\n   *\n   */\n  P.toPower = P.pow = function (y) {\n    var e, k, pr, r, rm, s,\n      x = this,\n      Ctor = x.constructor,\n      yn = +(y = new Ctor(y));\n\n    // Either ±Infinity, NaN or ±0?\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\n\n    x = new Ctor(x);\n\n    if (x.eq(1)) return x;\n\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n\n    if (y.eq(1)) return finalise(x, pr, rm);\n\n    // y exponent\n    e = mathfloor(y.e / LOG_BASE);\n\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\n      r = intPow(Ctor, x, k, pr);\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\n    }\n\n    s = x.s;\n\n    // if x is negative\n    if (s < 0) {\n\n      // if y is not an integer\n      if (e < y.d.length - 1) return new Ctor(NaN);\n\n      // Result is positive if x is negative and the last digit of integer y is even.\n      if ((y.d[e] & 1) == 0) s = 1;\n\n      // if x.eq(-1)\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\n        x.s = s;\n        return x;\n      }\n    }\n\n    // Estimate result exponent.\n    // x^y = 10^e,  where e = y * log10(x)\n    // log10(x) = log10(x_significand) + x_exponent\n    // log10(x_significand) = ln(x_significand) / ln(10)\n    k = mathpow(+x, yn);\n    e = k == 0 || !isFinite(k)\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\n      : new Ctor(k + '').e;\n\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\n\n    // Overflow/underflow?\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\n\n    external = false;\n    Ctor.rounding = x.s = 1;\n\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\n    // new Decimal(2.32456).pow('2087987436534566.46411')\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\n    k = Math.min(12, (e + '').length);\n\n    // r = x^y = exp(y*ln(x))\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\n\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\n    if (r.d) {\n\n      // Truncate to the required precision plus five rounding digits.\n      r = finalise(r, pr + 5, 1);\n\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\n      // the result.\n      if (checkRoundingDigits(r.d, pr, rm)) {\n        e = pr + 10;\n\n        // Truncate to the increased precision plus five rounding digits.\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\n\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\n          r = finalise(r, pr + 1, 0);\n        }\n      }\n    }\n\n    r.s = s;\n    external = true;\n    Ctor.rounding = rm;\n\n    return finalise(r, pr, rm);\n  };\n\n\n  /*\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\n   * using rounding mode `rounding`.\n   *\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\n   * the integer part of the value in normal notation.\n   *\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   */\n  P.toPrecision = function (sd, rm) {\n    var str,\n      x = this,\n      Ctor = x.constructor;\n\n    if (sd === void 0) {\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n    } else {\n      checkInt32(sd, 1, MAX_DIGITS);\n\n      if (rm === void 0) rm = Ctor.rounding;\n      else checkInt32(rm, 0, 8);\n\n      x = finalise(new Ctor(x), sd, rm);\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\n    }\n\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\n   * omitted.\n   *\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n   *\n   * 'toSD() digits out of range: {sd}'\n   * 'toSD() digits not an integer: {sd}'\n   * 'toSD() rounding mode not an integer: {rm}'\n   * 'toSD() rounding mode out of range: {rm}'\n   *\n   */\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\n    var x = this,\n      Ctor = x.constructor;\n\n    if (sd === void 0) {\n      sd = Ctor.precision;\n      rm = Ctor.rounding;\n    } else {\n      checkInt32(sd, 1, MAX_DIGITS);\n\n      if (rm === void 0) rm = Ctor.rounding;\n      else checkInt32(rm, 0, 8);\n    }\n\n    return finalise(new Ctor(x), sd, rm);\n  };\n\n\n  /*\n   * Return a string representing the value of this Decimal.\n   *\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\n   *\n   */\n  P.toString = function () {\n    var x = this,\n      Ctor = x.constructor,\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\n  };\n\n\n  /*\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\n   *\n   */\n  P.truncated = P.trunc = function () {\n    return finalise(new this.constructor(this), this.e + 1, 1);\n  };\n\n\n  /*\n   * Return a string representing the value of this Decimal.\n   * Unlike `toString`, negative zero will include the minus sign.\n   *\n   */\n  P.valueOf = P.toJSON = function () {\n    var x = this,\n      Ctor = x.constructor,\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n\n    return x.isNeg() ? '-' + str : str;\n  };\n\n\n  /*\n  // Add aliases to match BigDecimal method names.\n  // P.add = P.plus;\n  P.subtract = P.minus;\n  P.multiply = P.times;\n  P.divide = P.div;\n  P.remainder = P.mod;\n  P.compareTo = P.cmp;\n  P.negate = P.neg;\n   */\n\n\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\n\n\n  /*\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\n   *                           finiteToString, naturalExponential, naturalLogarithm\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\n   *  convertBase              toStringBinary, parseOther\n   *  cos                      P.cos\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\n   *                           taylorSeries, atan2, parseOther\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\n   *                           naturalLogarithm, ceil, floor, round, trunc\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\n   *                           toStringBinary\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\n   *  getLn10                  P.logarithm, naturalLogarithm\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\n   *  getPrecision             P.precision, P.toFraction\n   *  getZeroString            digitsToString, finiteToString\n   *  intPow                   P.toPower, parseOther\n   *  isOdd                    toLessThanHalfPi\n   *  maxOrMin                 max, min\n   *  naturalExponential       P.naturalExponential, P.toPower\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\n   *                           P.toPower, naturalExponential\n   *  nonFiniteToString        finiteToString, toStringBinary\n   *  parseDecimal             Decimal\n   *  parseOther               Decimal\n   *  sin                      P.sin\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\n   *  toLessThanHalfPi         P.cos, P.sin\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\n   *  truncate                 intPow\n   *\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\n   *                           naturalLogarithm, config, parseOther, random, Decimal\n   */\n\n\n  function digitsToString(d) {\n    var i, k, ws,\n      indexOfLastWord = d.length - 1,\n      str = '',\n      w = d[0];\n\n    if (indexOfLastWord > 0) {\n      str += w;\n      for (i = 1; i < indexOfLastWord; i++) {\n        ws = d[i] + '';\n        k = LOG_BASE - ws.length;\n        if (k) str += getZeroString(k);\n        str += ws;\n      }\n\n      w = d[i];\n      ws = w + '';\n      k = LOG_BASE - ws.length;\n      if (k) str += getZeroString(k);\n    } else if (w === 0) {\n      return '0';\n    }\n\n    // Remove trailing zeros of last w.\n    for (; w % 10 === 0;) w /= 10;\n\n    return str + w;\n  }\n\n\n  function checkInt32(i, min, max) {\n    if (i !== ~~i || i < min || i > max) {\n      throw Error(invalidArgument + i);\n    }\n  }\n\n\n  /*\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\n   * `repeating == null` if caller is `log` or `pow`,\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\n   */\n  function checkRoundingDigits(d, i, rm, repeating) {\n    var di, k, r, rd;\n\n    // Get the length of the first word of the array d.\n    for (k = d[0]; k >= 10; k /= 10) --i;\n\n    // Is the rounding digit in the first word of d?\n    if (--i < 0) {\n      i += LOG_BASE;\n      di = 0;\n    } else {\n      di = Math.ceil((i + 1) / LOG_BASE);\n      i %= LOG_BASE;\n    }\n\n    // i is the index (0 - 6) of the rounding digit.\n    // E.g. if within the word 3487563 the first rounding digit is 5,\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\n    k = mathpow(10, LOG_BASE - i);\n    rd = d[di] % k | 0;\n\n    if (repeating == null) {\n      if (i < 3) {\n        if (i == 0) rd = rd / 100 | 0;\n        else if (i == 1) rd = rd / 10 | 0;\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\n      } else {\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\n      }\n    } else {\n      if (i < 4) {\n        if (i == 0) rd = rd / 1000 | 0;\n        else if (i == 1) rd = rd / 100 | 0;\n        else if (i == 2) rd = rd / 10 | 0;\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\n      } else {\n        r = ((repeating || rm < 4) && rd + 1 == k ||\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\n      }\n    }\n\n    return r;\n  }\n\n\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\n  function convertBase(str, baseIn, baseOut) {\n    var j,\n      arr = [0],\n      arrL,\n      i = 0,\n      strL = str.length;\n\n    for (; i < strL;) {\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\n      for (j = 0; j < arr.length; j++) {\n        if (arr[j] > baseOut - 1) {\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\n          arr[j + 1] += arr[j] / baseOut | 0;\n          arr[j] %= baseOut;\n        }\n      }\n    }\n\n    return arr.reverse();\n  }\n\n\n  /*\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\n   * |x| < pi/2\n   *\n   */\n  function cosine(Ctor, x) {\n    var k, y,\n      len = x.d.length;\n\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\n\n    // Estimate the optimum number of times to use the argument reduction.\n    if (len < 32) {\n      k = Math.ceil(len / 3);\n      y = (1 / tinyPow(4, k)).toString();\n    } else {\n      k = 16;\n      y = '2.3283064365386962890625e-10';\n    }\n\n    Ctor.precision += k;\n\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\n\n    // Reverse argument reduction\n    for (var i = k; i--;) {\n      var cos2x = x.times(x);\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\n    }\n\n    Ctor.precision -= k;\n\n    return x;\n  }\n\n\n  /*\n   * Perform division in the specified base.\n   */\n  var divide = (function () {\n\n    // Assumes non-zero x and k, and hence non-zero result.\n    function multiplyInteger(x, k, base) {\n      var temp,\n        carry = 0,\n        i = x.length;\n\n      for (x = x.slice(); i--;) {\n        temp = x[i] * k + carry;\n        x[i] = temp % base | 0;\n        carry = temp / base | 0;\n      }\n\n      if (carry) x.unshift(carry);\n\n      return x;\n    }\n\n    function compare(a, b, aL, bL) {\n      var i, r;\n\n      if (aL != bL) {\n        r = aL > bL ? 1 : -1;\n      } else {\n        for (i = r = 0; i < aL; i++) {\n          if (a[i] != b[i]) {\n            r = a[i] > b[i] ? 1 : -1;\n            break;\n          }\n        }\n      }\n\n      return r;\n    }\n\n    function subtract(a, b, aL, base) {\n      var i = 0;\n\n      // Subtract b from a.\n      for (; aL--;) {\n        a[aL] -= i;\n        i = a[aL] < b[aL] ? 1 : 0;\n        a[aL] = i * base + a[aL] - b[aL];\n      }\n\n      // Remove leading zeros.\n      for (; !a[0] && a.length > 1;) a.shift();\n    }\n\n    return function (x, y, pr, rm, dp, base) {\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\n        yL, yz,\n        Ctor = x.constructor,\n        sign = x.s == y.s ? 1 : -1,\n        xd = x.d,\n        yd = y.d;\n\n      // Either NaN, Infinity or 0?\n      if (!xd || !xd[0] || !yd || !yd[0]) {\n\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\n\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\n      }\n\n      if (base) {\n        logBase = 1;\n        e = x.e - y.e;\n      } else {\n        base = BASE;\n        logBase = LOG_BASE;\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\n      }\n\n      yL = yd.length;\n      xL = xd.length;\n      q = new Ctor(sign);\n      qd = q.d = [];\n\n      // Result exponent may be one less than e.\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\n\n      if (yd[i] > (xd[i] || 0)) e--;\n\n      if (pr == null) {\n        sd = pr = Ctor.precision;\n        rm = Ctor.rounding;\n      } else if (dp) {\n        sd = pr + (x.e - y.e) + 1;\n      } else {\n        sd = pr;\n      }\n\n      if (sd < 0) {\n        qd.push(1);\n        more = true;\n      } else {\n\n        // Convert precision in number of base 10 digits to base 1e7 digits.\n        sd = sd / logBase + 2 | 0;\n        i = 0;\n\n        // divisor < 1e7\n        if (yL == 1) {\n          k = 0;\n          yd = yd[0];\n          sd++;\n\n          // k is the carry.\n          for (; (i < xL || k) && sd--; i++) {\n            t = k * base + (xd[i] || 0);\n            qd[i] = t / yd | 0;\n            k = t % yd | 0;\n          }\n\n          more = k || i < xL;\n\n        // divisor >= 1e7\n        } else {\n\n          // Normalise xd and yd so highest order digit of yd is >= base/2\n          k = base / (yd[0] + 1) | 0;\n\n          if (k > 1) {\n            yd = multiplyInteger(yd, k, base);\n            xd = multiplyInteger(xd, k, base);\n            yL = yd.length;\n            xL = xd.length;\n          }\n\n          xi = yL;\n          rem = xd.slice(0, yL);\n          remL = rem.length;\n\n          // Add zeros to make remainder as long as divisor.\n          for (; remL < yL;) rem[remL++] = 0;\n\n          yz = yd.slice();\n          yz.unshift(0);\n          yd0 = yd[0];\n\n          if (yd[1] >= base / 2) ++yd0;\n\n          do {\n            k = 0;\n\n            // Compare divisor and remainder.\n            cmp = compare(yd, rem, yL, remL);\n\n            // If divisor < remainder.\n            if (cmp < 0) {\n\n              // Calculate trial digit, k.\n              rem0 = rem[0];\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\n\n              // k will be how many times the divisor goes into the current remainder.\n              k = rem0 / yd0 | 0;\n\n              //  Algorithm:\n              //  1. product = divisor * trial digit (k)\n              //  2. if product > remainder: product -= divisor, k--\n              //  3. remainder -= product\n              //  4. if product was < remainder at 2:\n              //    5. compare new remainder and divisor\n              //    6. If remainder > divisor: remainder -= divisor, k++\n\n              if (k > 1) {\n                if (k >= base) k = base - 1;\n\n                // product = divisor * trial digit.\n                prod = multiplyInteger(yd, k, base);\n                prodL = prod.length;\n                remL = rem.length;\n\n                // Compare product and remainder.\n                cmp = compare(prod, rem, prodL, remL);\n\n                // product > remainder.\n                if (cmp == 1) {\n                  k--;\n\n                  // Subtract divisor from product.\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\n                }\n              } else {\n\n                // cmp is -1.\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\n                if (k == 0) cmp = k = 1;\n                prod = yd.slice();\n              }\n\n              prodL = prod.length;\n              if (prodL < remL) prod.unshift(0);\n\n              // Subtract product from remainder.\n              subtract(rem, prod, remL, base);\n\n              // If product was < previous remainder.\n              if (cmp == -1) {\n                remL = rem.length;\n\n                // Compare divisor and new remainder.\n                cmp = compare(yd, rem, yL, remL);\n\n                // If divisor < new remainder, subtract divisor from remainder.\n                if (cmp < 1) {\n                  k++;\n\n                  // Subtract divisor from remainder.\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\n                }\n              }\n\n              remL = rem.length;\n            } else if (cmp === 0) {\n              k++;\n              rem = [0];\n            }    // if cmp === 1, k will be 0\n\n            // Add the next digit, k, to the result array.\n            qd[i++] = k;\n\n            // Update the remainder.\n            if (cmp && rem[0]) {\n              rem[remL++] = xd[xi] || 0;\n            } else {\n              rem = [xd[xi]];\n              remL = 1;\n            }\n\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\n\n          more = rem[0] !== void 0;\n        }\n\n        // Leading zero?\n        if (!qd[0]) qd.shift();\n      }\n\n      // logBase is 1 when divide is being used for base conversion.\n      if (logBase == 1) {\n        q.e = e;\n        inexact = more;\n      } else {\n\n        // To calculate q.e, first get the number of digits of qd[0].\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\n        q.e = i + e * logBase - 1;\n\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\n      }\n\n      return q;\n    };\n  })();\n\n\n  /*\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\n   * Check for over/under-flow.\n   */\n   function finalise(x, sd, rm, isTruncated) {\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\n      Ctor = x.constructor;\n\n    // Don't round if sd is null or undefined.\n    out: if (sd != null) {\n      xd = x.d;\n\n      // Infinity/NaN.\n      if (!xd) return x;\n\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\n      // w: the word of xd containing rd, a base 1e7 number.\n      // xdi: the index of w within xd.\n      // digits: the number of digits of w.\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\n      // they had leading zeros)\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\n\n      // Get the length of the first word of the digits array xd.\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\n      i = sd - digits;\n\n      // Is the rounding digit in the first word of xd?\n      if (i < 0) {\n        i += LOG_BASE;\n        j = sd;\n        w = xd[xdi = 0];\n\n        // Get the rounding digit at index j of w.\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\n      } else {\n        xdi = Math.ceil((i + 1) / LOG_BASE);\n        k = xd.length;\n        if (xdi >= k) {\n          if (isTruncated) {\n\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\n            for (; k++ <= xdi;) xd.push(0);\n            w = rd = 0;\n            digits = 1;\n            i %= LOG_BASE;\n            j = i - LOG_BASE + 1;\n          } else {\n            break out;\n          }\n        } else {\n          w = k = xd[xdi];\n\n          // Get the number of digits of w.\n          for (digits = 1; k >= 10; k /= 10) digits++;\n\n          // Get the index of rd within w.\n          i %= LOG_BASE;\n\n          // Get the index of rd within w, adjusted for leading zeros.\n          // The number of leading zeros of w is given by LOG_BASE - digits.\n          j = i - LOG_BASE + digits;\n\n          // Get the rounding digit at index j of w.\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\n        }\n      }\n\n      // Are there any non-zero digits after the rounding digit?\n      isTruncated = isTruncated || sd < 0 ||\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\n\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\n      // will give 714.\n\n      roundUp = rm < 4\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\n\n          // Check whether the digit to the left of the rounding digit is odd.\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\n            rm == (x.s < 0 ? 8 : 7));\n\n      if (sd < 1 || !xd[0]) {\n        xd.length = 0;\n        if (roundUp) {\n\n          // Convert sd to decimal places.\n          sd -= x.e + 1;\n\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\n          x.e = -sd || 0;\n        } else {\n\n          // Zero.\n          xd[0] = x.e = 0;\n        }\n\n        return x;\n      }\n\n      // Remove excess digits.\n      if (i == 0) {\n        xd.length = xdi;\n        k = 1;\n        xdi--;\n      } else {\n        xd.length = xdi + 1;\n        k = mathpow(10, LOG_BASE - i);\n\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\n        // j > 0 means i > number of leading zeros of w.\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\n      }\n\n      if (roundUp) {\n        for (;;) {\n\n          // Is the digit to be rounded up in the first word of xd?\n          if (xdi == 0) {\n\n            // i will be the length of xd[0] before k is added.\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\n            j = xd[0] += k;\n            for (k = 1; j >= 10; j /= 10) k++;\n\n            // if i != k the length has increased.\n            if (i != k) {\n              x.e++;\n              if (xd[0] == BASE) xd[0] = 1;\n            }\n\n            break;\n          } else {\n            xd[xdi] += k;\n            if (xd[xdi] != BASE) break;\n            xd[xdi--] = 0;\n            k = 1;\n          }\n        }\n      }\n\n      // Remove trailing zeros.\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\n    }\n\n    if (external) {\n\n      // Overflow?\n      if (x.e > Ctor.maxE) {\n\n        // Infinity.\n        x.d = null;\n        x.e = NaN;\n\n      // Underflow?\n      } else if (x.e < Ctor.minE) {\n\n        // Zero.\n        x.e = 0;\n        x.d = [0];\n        // Ctor.underflow = true;\n      } // else Ctor.underflow = false;\n    }\n\n    return x;\n  }\n\n\n  function finiteToString(x, isExp, sd) {\n    if (!x.isFinite()) return nonFiniteToString(x);\n    var k,\n      e = x.e,\n      str = digitsToString(x.d),\n      len = str.length;\n\n    if (isExp) {\n      if (sd && (k = sd - len) > 0) {\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\n      } else if (len > 1) {\n        str = str.charAt(0) + '.' + str.slice(1);\n      }\n\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\n    } else if (e < 0) {\n      str = '0.' + getZeroString(-e - 1) + str;\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\n    } else if (e >= len) {\n      str += getZeroString(e + 1 - len);\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\n    } else {\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\n      if (sd && (k = sd - len) > 0) {\n        if (e + 1 === len) str += '.';\n        str += getZeroString(k);\n      }\n    }\n\n    return str;\n  }\n\n\n  // Calculate the base 10 exponent from the base 1e7 exponent.\n  function getBase10Exponent(digits, e) {\n    var w = digits[0];\n\n    // Add the number of digits of the first word of the digits array.\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\n    return e;\n  }\n\n\n  function getLn10(Ctor, sd, pr) {\n    if (sd > LN10_PRECISION) {\n\n      // Reset global state in case the exception is caught.\n      external = true;\n      if (pr) Ctor.precision = pr;\n      throw Error(precisionLimitExceeded);\n    }\n    return finalise(new Ctor(LN10), sd, 1, true);\n  }\n\n\n  function getPi(Ctor, sd, rm) {\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\n    return finalise(new Ctor(PI), sd, rm, true);\n  }\n\n\n  function getPrecision(digits) {\n    var w = digits.length - 1,\n      len = w * LOG_BASE + 1;\n\n    w = digits[w];\n\n    // If non-zero...\n    if (w) {\n\n      // Subtract the number of trailing zeros of the last word.\n      for (; w % 10 == 0; w /= 10) len--;\n\n      // Add the number of digits of the first word.\n      for (w = digits[0]; w >= 10; w /= 10) len++;\n    }\n\n    return len;\n  }\n\n\n  function getZeroString(k) {\n    var zs = '';\n    for (; k--;) zs += '0';\n    return zs;\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\n   * integer of type number.\n   *\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\n   *\n   */\n  function intPow(Ctor, x, n, pr) {\n    var isTruncated,\n      r = new Ctor(1),\n\n      // Max n of 9007199254740991 takes 53 loop iterations.\n      // Maximum digits array length; leaves [28, 34] guard digits.\n      k = Math.ceil(pr / LOG_BASE + 4);\n\n    external = false;\n\n    for (;;) {\n      if (n % 2) {\n        r = r.times(x);\n        if (truncate(r.d, k)) isTruncated = true;\n      }\n\n      n = mathfloor(n / 2);\n      if (n === 0) {\n\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\n        n = r.d.length - 1;\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\n        break;\n      }\n\n      x = x.times(x);\n      truncate(x.d, k);\n    }\n\n    external = true;\n\n    return r;\n  }\n\n\n  function isOdd(n) {\n    return n.d[n.d.length - 1] & 1;\n  }\n\n\n  /*\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\n   */\n  function maxOrMin(Ctor, args, ltgt) {\n    var y,\n      x = new Ctor(args[0]),\n      i = 0;\n\n    for (; ++i < args.length;) {\n      y = new Ctor(args[i]);\n      if (!y.s) {\n        x = y;\n        break;\n      } else if (x[ltgt](y)) {\n        x = y;\n      }\n    }\n\n    return x;\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\n   * digits.\n   *\n   * Taylor/Maclaurin series.\n   *\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\n   *\n   * Argument reduction:\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\n   *   exp(x) = exp(x / 2^k)^(2^k)\n   *\n   * Previously, the argument was initially reduced by\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\n   * found to be slower than just dividing repeatedly by 32 as above.\n   *\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\n   *\n   *  exp(Infinity)  = Infinity\n   *  exp(-Infinity) = 0\n   *  exp(NaN)       = NaN\n   *  exp(±0)        = 1\n   *\n   *  exp(x) is non-terminating for any finite, non-zero x.\n   *\n   *  The result will always be correctly rounded.\n   *\n   */\n  function naturalExponential(x, sd) {\n    var denominator, guard, j, pow, sum, t, wpr,\n      rep = 0,\n      i = 0,\n      k = 0,\n      Ctor = x.constructor,\n      rm = Ctor.rounding,\n      pr = Ctor.precision;\n\n    // 0/NaN/Infinity?\n    if (!x.d || !x.d[0] || x.e > 17) {\n\n      return new Ctor(x.d\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\n    }\n\n    if (sd == null) {\n      external = false;\n      wpr = pr;\n    } else {\n      wpr = sd;\n    }\n\n    t = new Ctor(0.03125);\n\n    // while abs(x) >= 0.1\n    while (x.e > -2) {\n\n      // x = x / 2^5\n      x = x.times(t);\n      k += 5;\n    }\n\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\n    // necessary to ensure the first 4 rounding digits are correct.\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\n    wpr += guard;\n    denominator = pow = sum = new Ctor(1);\n    Ctor.precision = wpr;\n\n    for (;;) {\n      pow = finalise(pow.times(x), wpr, 1);\n      denominator = denominator.times(++i);\n      t = sum.plus(divide(pow, denominator, wpr, 1));\n\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n        j = k;\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\n\n        // Check to see if the first 4 rounding digits are [49]999.\n        // If so, repeat the summation with a higher precision, otherwise\n        // e.g. with precision: 18, rounding: 1\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\n        // `wpr - guard` is the index of first rounding digit.\n        if (sd == null) {\n\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n            Ctor.precision = wpr += 10;\n            denominator = pow = t = new Ctor(1);\n            i = 0;\n            rep++;\n          } else {\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\n          }\n        } else {\n          Ctor.precision = pr;\n          return sum;\n        }\n      }\n\n      sum = t;\n    }\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\n   * digits.\n   *\n   *  ln(-n)        = NaN\n   *  ln(0)         = -Infinity\n   *  ln(-0)        = -Infinity\n   *  ln(1)         = 0\n   *  ln(Infinity)  = Infinity\n   *  ln(-Infinity) = NaN\n   *  ln(NaN)       = NaN\n   *\n   *  ln(n) (n != 1) is non-terminating.\n   *\n   */\n  function naturalLogarithm(y, sd) {\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\n      n = 1,\n      guard = 10,\n      x = y,\n      xd = x.d,\n      Ctor = x.constructor,\n      rm = Ctor.rounding,\n      pr = Ctor.precision;\n\n    // Is x negative or Infinity, NaN, 0 or 1?\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\n    }\n\n    if (sd == null) {\n      external = false;\n      wpr = pr;\n    } else {\n      wpr = sd;\n    }\n\n    Ctor.precision = wpr += guard;\n    c = digitsToString(xd);\n    c0 = c.charAt(0);\n\n    if (Math.abs(e = x.e) < 1.5e15) {\n\n      // Argument reduction.\n      // The series converges faster the closer the argument is to 1, so using\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\n      // later be divided by this number, then separate out the power of 10 using\n      // ln(a*10^b) = ln(a) + b*ln(10).\n\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\n      // max n is 6 (gives 0.7 - 1.3)\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\n        x = x.times(y);\n        c = digitsToString(x.d);\n        c0 = c.charAt(0);\n        n++;\n      }\n\n      e = x.e;\n\n      if (c0 > 1) {\n        x = new Ctor('0.' + c);\n        e++;\n      } else {\n        x = new Ctor(c0 + '.' + c.slice(1));\n      }\n    } else {\n\n      // The argument reduction method above may result in overflow if the argument y is a massive\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\n      Ctor.precision = pr;\n\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\n    }\n\n    // x1 is x reduced to a value near 1.\n    x1 = x;\n\n    // Taylor series.\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\n    x2 = finalise(x.times(x), wpr, 1);\n    denominator = 3;\n\n    for (;;) {\n      numerator = finalise(numerator.times(x2), wpr, 1);\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\n\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n        sum = sum.times(2);\n\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\n        sum = divide(sum, new Ctor(n), wpr, 1);\n\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\n        // been repeated previously) and the first 4 rounding digits 9999?\n        // If so, restart the summation with a higher precision, otherwise\n        // e.g. with precision: 12, rounding: 1\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\n        // `wpr - guard` is the index of first rounding digit.\n        if (sd == null) {\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n            Ctor.precision = wpr += guard;\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\n            x2 = finalise(x.times(x), wpr, 1);\n            denominator = rep = 1;\n          } else {\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\n          }\n        } else {\n          Ctor.precision = pr;\n          return sum;\n        }\n      }\n\n      sum = t;\n      denominator += 2;\n    }\n  }\n\n\n  // ±Infinity, NaN.\n  function nonFiniteToString(x) {\n    // Unsigned.\n    return String(x.s * x.s / 0);\n  }\n\n\n  /*\n   * Parse the value of a new Decimal `x` from string `str`.\n   */\n  function parseDecimal(x, str) {\n    var e, i, len;\n\n    // Decimal point?\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\n\n    // Exponential form?\n    if ((i = str.search(/e/i)) > 0) {\n\n      // Determine exponent.\n      if (e < 0) e = i;\n      e += +str.slice(i + 1);\n      str = str.substring(0, i);\n    } else if (e < 0) {\n\n      // Integer.\n      e = str.length;\n    }\n\n    // Determine leading zeros.\n    for (i = 0; str.charCodeAt(i) === 48; i++);\n\n    // Determine trailing zeros.\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\n    str = str.slice(i, len);\n\n    if (str) {\n      len -= i;\n      x.e = e = e - i - 1;\n      x.d = [];\n\n      // Transform base\n\n      // e is the base 10 exponent.\n      // i is where to slice str to get the first word of the digits array.\n      i = (e + 1) % LOG_BASE;\n      if (e < 0) i += LOG_BASE;\n\n      if (i < len) {\n        if (i) x.d.push(+str.slice(0, i));\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\n        str = str.slice(i);\n        i = LOG_BASE - str.length;\n      } else {\n        i -= len;\n      }\n\n      for (; i--;) str += '0';\n      x.d.push(+str);\n\n      if (external) {\n\n        // Overflow?\n        if (x.e > x.constructor.maxE) {\n\n          // Infinity.\n          x.d = null;\n          x.e = NaN;\n\n        // Underflow?\n        } else if (x.e < x.constructor.minE) {\n\n          // Zero.\n          x.e = 0;\n          x.d = [0];\n          // x.constructor.underflow = true;\n        } // else x.constructor.underflow = false;\n      }\n    } else {\n\n      // Zero.\n      x.e = 0;\n      x.d = [0];\n    }\n\n    return x;\n  }\n\n\n  /*\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\n   */\n  function parseOther(x, str) {\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\n\n    if (str === 'Infinity' || str === 'NaN') {\n      if (!+str) x.s = NaN;\n      x.e = NaN;\n      x.d = null;\n      return x;\n    }\n\n    if (isHex.test(str))  {\n      base = 16;\n      str = str.toLowerCase();\n    } else if (isBinary.test(str))  {\n      base = 2;\n    } else if (isOctal.test(str))  {\n      base = 8;\n    } else {\n      throw Error(invalidArgument + str);\n    }\n\n    // Is there a binary exponent part?\n    i = str.search(/p/i);\n\n    if (i > 0) {\n      p = +str.slice(i + 1);\n      str = str.substring(2, i);\n    } else {\n      str = str.slice(2);\n    }\n\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\n    // fraction part will be restored.\n    i = str.indexOf('.');\n    isFloat = i >= 0;\n    Ctor = x.constructor;\n\n    if (isFloat) {\n      str = str.replace('.', '');\n      len = str.length;\n      i = len - i;\n\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\n    }\n\n    xd = convertBase(str, base, BASE);\n    xe = xd.length - 1;\n\n    // Remove trailing zeros.\n    for (i = xe; xd[i] === 0; --i) xd.pop();\n    if (i < 0) return new Ctor(x.s * 0);\n    x.e = getBase10Exponent(xd, xe);\n    x.d = xd;\n    external = false;\n\n    // At what precision to perform the division to ensure exact conversion?\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\n    // Therefore using 4 * the number of digits of str will always be enough.\n    if (isFloat) x = divide(x, divisor, len * 4);\n\n    // Multiply by the binary exponent part if present.\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\n    external = true;\n\n    return x;\n  }\n\n\n  /*\n   * sin(x) = x - x^3/3! + x^5/5! - ...\n   * |x| < pi/2\n   *\n   */\n  function sine(Ctor, x) {\n    var k,\n      len = x.d.length;\n\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\n\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\n\n    // Estimate the optimum number of times to use the argument reduction.\n    k = 1.4 * Math.sqrt(len);\n    k = k > 16 ? 16 : k | 0;\n\n    x = x.times(1 / tinyPow(5, k));\n    x = taylorSeries(Ctor, 2, x, x);\n\n    // Reverse argument reduction\n    var sin2_x,\n      d5 = new Ctor(5),\n      d16 = new Ctor(16),\n      d20 = new Ctor(20);\n    for (; k--;) {\n      sin2_x = x.times(x);\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\n    }\n\n    return x;\n  }\n\n\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\n    var j, t, u, x2,\n      i = 1,\n      pr = Ctor.precision,\n      k = Math.ceil(pr / LOG_BASE);\n\n    external = false;\n    x2 = x.times(x);\n    u = new Ctor(y);\n\n    for (;;) {\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\n      t = u.plus(y);\n\n      if (t.d[k] !== void 0) {\n        for (j = k; t.d[j] === u.d[j] && j--;);\n        if (j == -1) break;\n      }\n\n      j = u;\n      u = y;\n      y = t;\n      t = j;\n      i++;\n    }\n\n    external = true;\n    t.d.length = k + 1;\n\n    return t;\n  }\n\n\n  // Exponent e must be positive and non-zero.\n  function tinyPow(b, e) {\n    var n = b;\n    while (--e) n *= b;\n    return n;\n  }\n\n\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\n  function toLessThanHalfPi(Ctor, x) {\n    var t,\n      isNeg = x.s < 0,\n      pi = getPi(Ctor, Ctor.precision, 1),\n      halfPi = pi.times(0.5);\n\n    x = x.abs();\n\n    if (x.lte(halfPi)) {\n      quadrant = isNeg ? 4 : 1;\n      return x;\n    }\n\n    t = x.divToInt(pi);\n\n    if (t.isZero()) {\n      quadrant = isNeg ? 3 : 2;\n    } else {\n      x = x.minus(t.times(pi));\n\n      // 0 <= x < pi\n      if (x.lte(halfPi)) {\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\n        return x;\n      }\n\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\n    }\n\n    return x.minus(pi).abs();\n  }\n\n\n  /*\n   * Return the value of Decimal `x` as a string in base `baseOut`.\n   *\n   * If the optional `sd` argument is present include a binary exponent suffix.\n   */\n  function toStringBinary(x, baseOut, sd, rm) {\n    var base, e, i, k, len, roundUp, str, xd, y,\n      Ctor = x.constructor,\n      isExp = sd !== void 0;\n\n    if (isExp) {\n      checkInt32(sd, 1, MAX_DIGITS);\n      if (rm === void 0) rm = Ctor.rounding;\n      else checkInt32(rm, 0, 8);\n    } else {\n      sd = Ctor.precision;\n      rm = Ctor.rounding;\n    }\n\n    if (!x.isFinite()) {\n      str = nonFiniteToString(x);\n    } else {\n      str = finiteToString(x);\n      i = str.indexOf('.');\n\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\n      // log[2](10) = 3.321928094887362347870319429489390175864\n\n      if (isExp) {\n        base = 2;\n        if (baseOut == 16) {\n          sd = sd * 4 - 3;\n        } else if (baseOut == 8) {\n          sd = sd * 3 - 2;\n        }\n      } else {\n        base = baseOut;\n      }\n\n      // Convert the number as an integer then divide the result by its base raised to a power such\n      // that the fraction part will be restored.\n\n      // Non-integer.\n      if (i >= 0) {\n        str = str.replace('.', '');\n        y = new Ctor(1);\n        y.e = str.length - i;\n        y.d = convertBase(finiteToString(y), 10, base);\n        y.e = y.d.length;\n      }\n\n      xd = convertBase(str, 10, base);\n      e = len = xd.length;\n\n      // Remove trailing zeros.\n      for (; xd[--len] == 0;) xd.pop();\n\n      if (!xd[0]) {\n        str = isExp ? '0p+0' : '0';\n      } else {\n        if (i < 0) {\n          e--;\n        } else {\n          x = new Ctor(x);\n          x.d = xd;\n          x.e = e;\n          x = divide(x, y, sd, rm, 0, base);\n          xd = x.d;\n          e = x.e;\n          roundUp = inexact;\n        }\n\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\n        i = xd[sd];\n        k = base / 2;\n        roundUp = roundUp || xd[sd + 1] !== void 0;\n\n        roundUp = rm < 4\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\n            rm === (x.s < 0 ? 8 : 7));\n\n        xd.length = sd;\n\n        if (roundUp) {\n\n          // Rounding up may mean the previous digit has to be rounded up and so on.\n          for (; ++xd[--sd] > base - 1;) {\n            xd[sd] = 0;\n            if (!sd) {\n              ++e;\n              xd.unshift(1);\n            }\n          }\n        }\n\n        // Determine trailing zeros.\n        for (len = xd.length; !xd[len - 1]; --len);\n\n        // E.g. [4, 11, 15] becomes 4bf.\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\n\n        // Add binary exponent suffix?\n        if (isExp) {\n          if (len > 1) {\n            if (baseOut == 16 || baseOut == 8) {\n              i = baseOut == 16 ? 4 : 3;\n              for (--len; len % i; len++) str += '0';\n              xd = convertBase(str, base, baseOut);\n              for (len = xd.length; !xd[len - 1]; --len);\n\n              // xd[0] will always be be 1\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\n            } else {\n              str = str.charAt(0) + '.' + str.slice(1);\n            }\n          }\n\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\n        } else if (e < 0) {\n          for (; ++e;) str = '0' + str;\n          str = '0.' + str;\n        } else {\n          if (++e > len) for (e -= len; e-- ;) str += '0';\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\n        }\n      }\n\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\n    }\n\n    return x.s < 0 ? '-' + str : str;\n  }\n\n\n  // Does not strip trailing zeros.\n  function truncate(arr, len) {\n    if (arr.length > len) {\n      arr.length = len;\n      return true;\n    }\n  }\n\n\n  // Decimal methods\n\n\n  /*\n   *  abs\n   *  acos\n   *  acosh\n   *  add\n   *  asin\n   *  asinh\n   *  atan\n   *  atanh\n   *  atan2\n   *  cbrt\n   *  ceil\n   *  clone\n   *  config\n   *  cos\n   *  cosh\n   *  div\n   *  exp\n   *  floor\n   *  hypot\n   *  ln\n   *  log\n   *  log2\n   *  log10\n   *  max\n   *  min\n   *  mod\n   *  mul\n   *  pow\n   *  random\n   *  round\n   *  set\n   *  sign\n   *  sin\n   *  sinh\n   *  sqrt\n   *  sub\n   *  tan\n   *  tanh\n   *  trunc\n   */\n\n\n  /*\n   * Return a new Decimal whose value is the absolute value of `x`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function abs(x) {\n    return new this(x).abs();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function acos(x) {\n    return new this(x).acos();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\n   * `precision` significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function acosh(x) {\n    return new this(x).acosh();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\n   * digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   * y {number|string|Decimal}\n   *\n   */\n  function add(x, y) {\n    return new this(x).plus(y);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function asin(x) {\n    return new this(x).asin();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\n   * `precision` significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function asinh(x) {\n    return new this(x).asinh();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function atan(x) {\n    return new this(x).atan();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\n   * `precision` significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function atanh(x) {\n    return new this(x).atanh();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\n   *\n   * Domain: [-Infinity, Infinity]\n   * Range: [-pi, pi]\n   *\n   * y {number|string|Decimal} The y-coordinate.\n   * x {number|string|Decimal} The x-coordinate.\n   *\n   * atan2(±0, -0)               = ±pi\n   * atan2(±0, +0)               = ±0\n   * atan2(±0, -x)               = ±pi for x > 0\n   * atan2(±0, x)                = ±0 for x > 0\n   * atan2(-y, ±0)               = -pi/2 for y > 0\n   * atan2(y, ±0)                = pi/2 for y > 0\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\n   * atan2(±Infinity, +Infinity) = ±pi/4\n   * atan2(NaN, x) = NaN\n   * atan2(y, NaN) = NaN\n   *\n   */\n  function atan2(y, x) {\n    y = new this(y);\n    x = new this(x);\n    var r,\n      pr = this.precision,\n      rm = this.rounding,\n      wpr = pr + 4;\n\n    // Either NaN\n    if (!y.s || !x.s) {\n      r = new this(NaN);\n\n    // Both ±Infinity\n    } else if (!y.d && !x.d) {\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\n      r.s = y.s;\n\n    // x is ±Infinity or y is ±0\n    } else if (!x.d || y.isZero()) {\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\n      r.s = y.s;\n\n    // y is ±Infinity or x is ±0\n    } else if (!y.d || x.isZero()) {\n      r = getPi(this, wpr, 1).times(0.5);\n      r.s = y.s;\n\n    // Both non-zero and finite\n    } else if (x.s < 0) {\n      this.precision = wpr;\n      this.rounding = 1;\n      r = this.atan(divide(y, x, wpr, 1));\n      x = getPi(this, wpr, 1);\n      this.precision = pr;\n      this.rounding = rm;\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\n    } else {\n      r = this.atan(divide(y, x, wpr, 1));\n    }\n\n    return r;\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\n   * digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function cbrt(x) {\n    return new this(x).cbrt();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function ceil(x) {\n    return finalise(x = new this(x), x.e + 1, 2);\n  }\n\n\n  /*\n   * Configure global settings for a Decimal constructor.\n   *\n   * `obj` is an object with one or more of the following properties,\n   *\n   *   precision  {number}\n   *   rounding   {number}\n   *   toExpNeg   {number}\n   *   toExpPos   {number}\n   *   maxE       {number}\n   *   minE       {number}\n   *   modulo     {number}\n   *   crypto     {boolean|number}\n   *   defaults   {true}\n   *\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\n   *\n   */\n  function config(obj) {\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\n    var i, p, v,\n      useDefaults = obj.defaults === true,\n      ps = [\n        'precision', 1, MAX_DIGITS,\n        'rounding', 0, 8,\n        'toExpNeg', -EXP_LIMIT, 0,\n        'toExpPos', 0, EXP_LIMIT,\n        'maxE', 0, EXP_LIMIT,\n        'minE', -EXP_LIMIT, 0,\n        'modulo', 0, 9\n      ];\n\n    for (i = 0; i < ps.length; i += 3) {\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\n      if ((v = obj[p]) !== void 0) {\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\n        else throw Error(invalidArgument + p + ': ' + v);\n      }\n    }\n\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\n    if ((v = obj[p]) !== void 0) {\n      if (v === true || v === false || v === 0 || v === 1) {\n        if (v) {\n          if (typeof crypto != 'undefined' && crypto &&\n            (crypto.getRandomValues || crypto.randomBytes)) {\n            this[p] = true;\n          } else {\n            throw Error(cryptoUnavailable);\n          }\n        } else {\n          this[p] = false;\n        }\n      } else {\n        throw Error(invalidArgument + p + ': ' + v);\n      }\n    }\n\n    return this;\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\n   * digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function cos(x) {\n    return new this(x).cos();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function cosh(x) {\n    return new this(x).cosh();\n  }\n\n\n  /*\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\n   * constructor.\n   *\n   */\n  function clone(obj) {\n    var i, p, ps;\n\n    /*\n     * The Decimal constructor and exported function.\n     * Return a new Decimal instance.\n     *\n     * v {number|string|Decimal} A numeric value.\n     *\n     */\n    function Decimal(v) {\n      var e, i, t,\n        x = this;\n\n      // Decimal called without new.\n      if (!(x instanceof Decimal)) return new Decimal(v);\n\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\n      // which points to Object.\n      x.constructor = Decimal;\n\n      // Duplicate.\n      if (v instanceof Decimal) {\n        x.s = v.s;\n\n        if (external) {\n          if (!v.d || v.e > Decimal.maxE) {\n\n            // Infinity.\n            x.e = NaN;\n            x.d = null;\n          } else if (v.e < Decimal.minE) {\n\n            // Zero.\n            x.e = 0;\n            x.d = [0];\n          } else {\n            x.e = v.e;\n            x.d = v.d.slice();\n          }\n        } else {\n          x.e = v.e;\n          x.d = v.d ? v.d.slice() : v.d;\n        }\n\n        return;\n      }\n\n      t = typeof v;\n\n      if (t === 'number') {\n        if (v === 0) {\n          x.s = 1 / v < 0 ? -1 : 1;\n          x.e = 0;\n          x.d = [0];\n          return;\n        }\n\n        if (v < 0) {\n          v = -v;\n          x.s = -1;\n        } else {\n          x.s = 1;\n        }\n\n        // Fast path for small integers.\n        if (v === ~~v && v < 1e7) {\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\n\n          if (external) {\n            if (e > Decimal.maxE) {\n              x.e = NaN;\n              x.d = null;\n            } else if (e < Decimal.minE) {\n              x.e = 0;\n              x.d = [0];\n            } else {\n              x.e = e;\n              x.d = [v];\n            }\n          } else {\n            x.e = e;\n            x.d = [v];\n          }\n\n          return;\n\n        // Infinity, NaN.\n        } else if (v * 0 !== 0) {\n          if (!v) x.s = NaN;\n          x.e = NaN;\n          x.d = null;\n          return;\n        }\n\n        return parseDecimal(x, v.toString());\n\n      } else if (t !== 'string') {\n        throw Error(invalidArgument + v);\n      }\n\n      // Minus sign?\n      if ((i = v.charCodeAt(0)) === 45) {\n        v = v.slice(1);\n        x.s = -1;\n      } else {\n        // Plus sign?\n        if (i === 43) v = v.slice(1);\n        x.s = 1;\n      }\n\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\n    }\n\n    Decimal.prototype = P;\n\n    Decimal.ROUND_UP = 0;\n    Decimal.ROUND_DOWN = 1;\n    Decimal.ROUND_CEIL = 2;\n    Decimal.ROUND_FLOOR = 3;\n    Decimal.ROUND_HALF_UP = 4;\n    Decimal.ROUND_HALF_DOWN = 5;\n    Decimal.ROUND_HALF_EVEN = 6;\n    Decimal.ROUND_HALF_CEIL = 7;\n    Decimal.ROUND_HALF_FLOOR = 8;\n    Decimal.EUCLID = 9;\n\n    Decimal.config = Decimal.set = config;\n    Decimal.clone = clone;\n    Decimal.isDecimal = isDecimalInstance;\n\n    Decimal.abs = abs;\n    Decimal.acos = acos;\n    Decimal.acosh = acosh;        // ES6\n    Decimal.add = add;\n    Decimal.asin = asin;\n    Decimal.asinh = asinh;        // ES6\n    Decimal.atan = atan;\n    Decimal.atanh = atanh;        // ES6\n    Decimal.atan2 = atan2;\n    Decimal.cbrt = cbrt;          // ES6\n    Decimal.ceil = ceil;\n    Decimal.cos = cos;\n    Decimal.cosh = cosh;          // ES6\n    Decimal.div = div;\n    Decimal.exp = exp;\n    Decimal.floor = floor;\n    Decimal.hypot = hypot;        // ES6\n    Decimal.ln = ln;\n    Decimal.log = log;\n    Decimal.log10 = log10;        // ES6\n    Decimal.log2 = log2;          // ES6\n    Decimal.max = max;\n    Decimal.min = min;\n    Decimal.mod = mod;\n    Decimal.mul = mul;\n    Decimal.pow = pow;\n    Decimal.random = random;\n    Decimal.round = round;\n    Decimal.sign = sign;          // ES6\n    Decimal.sin = sin;\n    Decimal.sinh = sinh;          // ES6\n    Decimal.sqrt = sqrt;\n    Decimal.sub = sub;\n    Decimal.tan = tan;\n    Decimal.tanh = tanh;          // ES6\n    Decimal.trunc = trunc;        // ES6\n\n    if (obj === void 0) obj = {};\n    if (obj) {\n      if (obj.defaults !== true) {\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\n      }\n    }\n\n    Decimal.config(obj);\n\n    return Decimal;\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\n   * digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   * y {number|string|Decimal}\n   *\n   */\n  function div(x, y) {\n    return new this(x).div(y);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\n   *\n   */\n  function exp(x) {\n    return new this(x).exp();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function floor(x) {\n    return finalise(x = new this(x), x.e + 1, 3);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\n   * rounded to `precision` significant digits using rounding mode `rounding`.\n   *\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\n   *\n   * arguments {number|string|Decimal}\n   *\n   */\n  function hypot() {\n    var i, n,\n      t = new this(0);\n\n    external = false;\n\n    for (i = 0; i < arguments.length;) {\n      n = new this(arguments[i++]);\n      if (!n.d) {\n        if (n.s) {\n          external = true;\n          return new this(1 / 0);\n        }\n        t = n;\n      } else if (t.d) {\n        t = t.plus(n.times(n));\n      }\n    }\n\n    external = true;\n\n    return t.sqrt();\n  }\n\n\n  /*\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\n   * otherwise return false.\n   *\n   */\n  function isDecimalInstance(obj) {\n    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function ln(x) {\n    return new this(x).ln();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\n   *\n   * log[y](x)\n   *\n   * x {number|string|Decimal} The argument of the logarithm.\n   * y {number|string|Decimal} The base of the logarithm.\n   *\n   */\n  function log(x, y) {\n    return new this(x).log(y);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function log2(x) {\n    return new this(x).log(2);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function log10(x) {\n    return new this(x).log(10);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the maximum of the arguments.\n   *\n   * arguments {number|string|Decimal}\n   *\n   */\n  function max() {\n    return maxOrMin(this, arguments, 'lt');\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the minimum of the arguments.\n   *\n   * arguments {number|string|Decimal}\n   *\n   */\n  function min() {\n    return maxOrMin(this, arguments, 'gt');\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\n   * using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   * y {number|string|Decimal}\n   *\n   */\n  function mod(x, y) {\n    return new this(x).mod(y);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\n   * digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   * y {number|string|Decimal}\n   *\n   */\n  function mul(x, y) {\n    return new this(x).mul(y);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} The base.\n   * y {number|string|Decimal} The exponent.\n   *\n   */\n  function pow(x, y) {\n    return new this(x).pow(y);\n  }\n\n\n  /*\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\n   * are produced).\n   *\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\n   *\n   */\n  function random(sd) {\n    var d, e, k, n,\n      i = 0,\n      r = new this(1),\n      rd = [];\n\n    if (sd === void 0) sd = this.precision;\n    else checkInt32(sd, 1, MAX_DIGITS);\n\n    k = Math.ceil(sd / LOG_BASE);\n\n    if (!this.crypto) {\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\n\n    // Browsers supporting crypto.getRandomValues.\n    } else if (crypto.getRandomValues) {\n      d = crypto.getRandomValues(new Uint32Array(k));\n\n      for (; i < k;) {\n        n = d[i];\n\n        // 0 <= n < 4294967296\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\n        if (n >= 4.29e9) {\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\n        } else {\n\n          // 0 <= n <= 4289999999\n          // 0 <= (n % 1e7) <= 9999999\n          rd[i++] = n % 1e7;\n        }\n      }\n\n    // Node.js supporting crypto.randomBytes.\n    } else if (crypto.randomBytes) {\n\n      // buffer\n      d = crypto.randomBytes(k *= 4);\n\n      for (; i < k;) {\n\n        // 0 <= n < 2147483648\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\n\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\n        if (n >= 2.14e9) {\n          crypto.randomBytes(4).copy(d, i);\n        } else {\n\n          // 0 <= n <= 2139999999\n          // 0 <= (n % 1e7) <= 9999999\n          rd.push(n % 1e7);\n          i += 4;\n        }\n      }\n\n      i = k / 4;\n    } else {\n      throw Error(cryptoUnavailable);\n    }\n\n    k = rd[--i];\n    sd %= LOG_BASE;\n\n    // Convert trailing digits to zeros according to sd.\n    if (k && sd) {\n      n = mathpow(10, LOG_BASE - sd);\n      rd[i] = (k / n | 0) * n;\n    }\n\n    // Remove trailing words which are zero.\n    for (; rd[i] === 0; i--) rd.pop();\n\n    // Zero?\n    if (i < 0) {\n      e = 0;\n      rd = [0];\n    } else {\n      e = -1;\n\n      // Remove leading words which are zero and adjust exponent accordingly.\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\n\n      // Count the digits of the first word of rd to determine leading zeros.\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\n\n      // Adjust the exponent for leading zeros of the first word of rd.\n      if (k < LOG_BASE) e -= LOG_BASE - k;\n    }\n\n    r.e = e;\n    r.d = rd;\n\n    return r;\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\n   *\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function round(x) {\n    return finalise(x = new this(x), x.e + 1, this.rounding);\n  }\n\n\n  /*\n   * Return\n   *   1    if x > 0,\n   *  -1    if x < 0,\n   *   0    if x is 0,\n   *  -0    if x is -0,\n   *   NaN  otherwise\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function sign(x) {\n    x = new this(x);\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\n   * using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function sin(x) {\n    return new this(x).sin();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function sinh(x) {\n    return new this(x).sinh();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\n   * digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function sqrt(x) {\n    return new this(x).sqrt();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\n   * using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal}\n   * y {number|string|Decimal}\n   *\n   */\n  function sub(x, y) {\n    return new this(x).sub(y);\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\n   * digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function tan(x) {\n    return new this(x).tan();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\n   * significant digits using rounding mode `rounding`.\n   *\n   * x {number|string|Decimal} A value in radians.\n   *\n   */\n  function tanh(x) {\n    return new this(x).tanh();\n  }\n\n\n  /*\n   * Return a new Decimal whose value is `x` truncated to an integer.\n   *\n   * x {number|string|Decimal}\n   *\n   */\n  function trunc(x) {\n    return finalise(x = new this(x), x.e + 1, 1);\n  }\n\n\n  // Create and configure initial Decimal constructor.\n  Decimal = clone(DEFAULTS);\n\n  Decimal['default'] = Decimal.Decimal = Decimal;\n\n  // Create the internal constants from their string values.\n  LN10 = new Decimal(LN10);\n  PI = new Decimal(PI);\n\n\n  // Export.\n\n\n  // AMD.\n  if (typeof define == 'function' && define.amd) {\n    define(function () {\n      return Decimal;\n    });\n\n  // Node and other environments that support module.exports.\n  } else if (typeof module != 'undefined' && module.exports) {\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\n      P[Symbol.toStringTag] = 'Decimal';\n    }\n\n    module.exports = Decimal;\n\n  // Browser.\n  } else {\n    if (!globalScope) {\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\n    }\n\n    noConflict = globalScope.Decimal;\n    Decimal.noConflict = function () {\n      globalScope.Decimal = noConflict;\n      return Decimal;\n    };\n\n    globalScope.Decimal = Decimal;\n  }\n})(this);\n"],"sourceRoot":"webpack:///"}